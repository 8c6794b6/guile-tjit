@page
@node Translation
@chapter Support for Translating Other Languages

[Describe translation framework.]

@menu
* Emacs Lisp Support::          Helper primitives for Emacs Lisp.
@end menu


@node Emacs Lisp Support
@section Emacs Lisp Support

@c docstring begin (texi-doc-string "guile" "nil-car")
@deffn primitive nil-car x
Return the car of @var{x}, but convert it to LISP nil if it
is Scheme's end-of-list.
@end deffn

@c docstring begin (texi-doc-string "guile" "nil-cdr")
@deffn primitive nil-cdr x
Return the cdr of @var{x}, but convert it to LISP nil if it
is Scheme's end-of-list.
@end deffn

@c docstring begin (texi-doc-string "guile" "nil-cons")
@deffn primitive nil-cons x y
Create a new cons cell with @var{x} as the car and @var{y} as
the cdr, but convert @var{y} to Scheme's end-of-list if it is
a LISP nil.
@end deffn

@c docstring begin (texi-doc-string "guile" "nil-eq")
@deffn primitive nil-eq x y
Compare @var{x} and @var{y} and return LISP's t if they are
@code{eq?}, return LISP's nil otherwise.
@end deffn

@c docstring begin (texi-doc-string "guile" "null")
@deffn primitive null x
Return LISP's @code{t} if @var{x} is nil in the LISP sense,
return LISP's nil otherwise.
@end deffn


@c Local Variables:
@c TeX-master: "guile.texi"
@c End:
