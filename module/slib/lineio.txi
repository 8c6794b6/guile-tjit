
@defun read-line


@defunx read-line port
Returns a string of the characters up to, but not including a
newline or end of file, updating @var{port} to point to the
character following the newline.  If no characters are available, an
end of file object is returned.  The @var{port} argument may be
omitted, in which case it defaults to the value returned by
@code{current-input-port}.
@end defun

@defun read-line! string


@defunx read-line! string port
Fills @var{string} with characters up to, but not including a newline or end
of file, updating the @var{port} to point to the last character read
or following the newline if it was read.  If no characters are
available, an end of file object is returned.  If a newline or end
of file was found, the number of characters read is returned.
Otherwise, @code{#f} is returned.  The @var{port} argument may be
omitted, in which case it defaults to the value returned by
@code{current-input-port}.
@end defun

@defun write-line string


@defunx write-line string port
Writes @var{string} followed by a newline to the given @var{port} and returns
an unspecified value.  The @var{Port} argument may be omitted, in
which case it defaults to the value returned by
@code{current-input-port}.@refill
@end defun

@defun display-file path


@defunx display-file path port
Displays the contents of the file named by @var{path} to @var{port}.  The
@var{port} argument may be ommited, in which case it defaults to the
value returned by @code{current-output-port}.
@end defun
