(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 9214}#
           (lambda (#{f\ 9276}# #{first\ 9277}# . #{rest\ 9278}#)
             (let ((#{t\ 9284}# (null? #{first\ 9277}#)))
               (if #{t\ 9284}#
                 #{t\ 9284}#
                 (if (null? #{rest\ 9278}#)
                   (letrec ((#{andmap\ 9288}#
                              (lambda (#{first\ 9289}#)
                                (let ((#{x\ 9292}# (car #{first\ 9289}#))
                                      (#{first\ 9293}# (cdr #{first\ 9289}#)))
                                  (if (null? #{first\ 9293}#)
                                    (#{f\ 9276}# #{x\ 9292}#)
                                    (if (#{f\ 9276}# #{x\ 9292}#)
                                      (#{andmap\ 9288}# #{first\ 9293}#)
                                      #f))))))
                     (#{andmap\ 9288}# #{first\ 9277}#))
                   (letrec ((#{andmap\ 9299}#
                              (lambda (#{first\ 9300}# #{rest\ 9301}#)
                                (let ((#{x\ 9306}# (car #{first\ 9300}#))
                                      (#{xr\ 9307}# (map car #{rest\ 9301}#))
                                      (#{first\ 9308}# (cdr #{first\ 9300}#))
                                      (#{rest\ 9309}#
                                        (map cdr #{rest\ 9301}#)))
                                  (if (null? #{first\ 9308}#)
                                    (apply #{f\ 9276}#
                                           (cons #{x\ 9306}# #{xr\ 9307}#))
                                    (if (apply #{f\ 9276}#
                                               (cons #{x\ 9306}# #{xr\ 9307}#))
                                      (#{andmap\ 9299}#
                                        #{first\ 9308}#
                                        #{rest\ 9309}#)
                                      #f))))))
                     (#{andmap\ 9299}# #{first\ 9277}# #{rest\ 9278}#))))))))
  (letrec ((#{lambda-var-list\ 9529}#
             (lambda (#{vars\ 9744}#)
               (letrec ((#{lvl\ 9750}#
                          (lambda (#{vars\ 9751}# #{ls\ 9752}# #{w\ 9753}#)
                            (if (pair? #{vars\ 9751}#)
                              (#{lvl\ 9750}#
                                (cdr #{vars\ 9751}#)
                                (cons (#{wrap\ 9483}#
                                        (car #{vars\ 9751}#)
                                        #{w\ 9753}#
                                        #f)
                                      #{ls\ 9752}#)
                                #{w\ 9753}#)
                              (if (#{id?\ 9414}# #{vars\ 9751}#)
                                (cons (#{wrap\ 9483}#
                                        #{vars\ 9751}#
                                        #{w\ 9753}#
                                        #f)
                                      #{ls\ 9752}#)
                                (if (null? #{vars\ 9751}#)
                                  #{ls\ 9752}#
                                  (if (#{syntax-object?\ 9378}# #{vars\ 9751}#)
                                    (#{lvl\ 9750}#
                                      (#{syntax-object-expression\ 9380}#
                                        #{vars\ 9751}#)
                                      #{ls\ 9752}#
                                      (#{join-wraps\ 9465}#
                                        #{w\ 9753}#
                                        (#{syntax-object-wrap\ 9382}#
                                          #{vars\ 9751}#)))
                                    (cons #{vars\ 9751}# #{ls\ 9752}#))))))))
                 (#{lvl\ 9750}#
                   #{vars\ 9744}#
                   '()
                   '(())))))
           (#{gen-var\ 9527}#
             (lambda (#{id\ 9764}#)
               (let ((#{id\ 9767}#
                       (if (#{syntax-object?\ 9378}# #{id\ 9764}#)
                         (#{syntax-object-expression\ 9380}# #{id\ 9764}#)
                         #{id\ 9764}#)))
                 (gensym
                   (string-append (symbol->string #{id\ 9767}#) " ")))))
           (#{strip\ 9525}#
             (lambda (#{x\ 9769}# #{w\ 9770}#)
               (if (memq 'top
                         (#{wrap-marks\ 9421}# #{w\ 9770}#))
                 #{x\ 9769}#
                 (letrec ((#{f\ 9776}#
                            (lambda (#{x\ 9777}#)
                              (if (#{syntax-object?\ 9378}# #{x\ 9777}#)
                                (#{strip\ 9525}#
                                  (#{syntax-object-expression\ 9380}#
                                    #{x\ 9777}#)
                                  (#{syntax-object-wrap\ 9382}# #{x\ 9777}#))
                                (if (pair? #{x\ 9777}#)
                                  (let ((#{a\ 9784}#
                                          (#{f\ 9776}# (car #{x\ 9777}#)))
                                        (#{d\ 9785}#
                                          (#{f\ 9776}# (cdr #{x\ 9777}#))))
                                    (if (if (eq? #{a\ 9784}# (car #{x\ 9777}#))
                                          (eq? #{d\ 9785}# (cdr #{x\ 9777}#))
                                          #f)
                                      #{x\ 9777}#
                                      (cons #{a\ 9784}# #{d\ 9785}#)))
                                  (if (vector? #{x\ 9777}#)
                                    (let ((#{old\ 9791}#
                                            (vector->list #{x\ 9777}#)))
                                      (let ((#{new\ 9793}#
                                              (map #{f\ 9776}# #{old\ 9791}#)))
                                        (if (#{and-map*\ 9214}#
                                              eq?
                                              #{old\ 9791}#
                                              #{new\ 9793}#)
                                          #{x\ 9777}#
                                          (list->vector #{new\ 9793}#))))
                                    #{x\ 9777}#))))))
                   (#{f\ 9776}# #{x\ 9769}#)))))
           (#{chi-lambda-case\ 9523}#
             (lambda (#{e\ 9795}#
                      #{r\ 9796}#
                      #{w\ 9797}#
                      #{s\ 9798}#
                      #{mod\ 9799}#
                      #{get-formals\ 9800}#
                      #{clauses\ 9801}#)
               (letrec ((#{expand-body\ 9816}#
                          (lambda (#{req\ 9817}#
                                   #{opt\ 9818}#
                                   #{rest\ 9819}#
                                   #{kw\ 9820}#
                                   #{body\ 9821}#
                                   #{vars\ 9822}#
                                   #{r*\ 9823}#
                                   #{w*\ 9824}#
                                   #{inits\ 9825}#)
                            ((lambda (#{tmp\ 9835}#)
                               ((lambda (#{tmp\ 9836}#)
                                  (if (if #{tmp\ 9836}#
                                        (apply (lambda (#{docstring\ 9840}#
                                                        #{e1\ 9841}#
                                                        #{e2\ 9842}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 9840}#)))
                                               #{tmp\ 9836}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 9846}#
                                                    #{e1\ 9847}#
                                                    #{e2\ 9848}#)
                                             (values
                                               (syntax->datum
                                                 #{docstring\ 9846}#)
                                               #{req\ 9817}#
                                               #{opt\ 9818}#
                                               #{rest\ 9819}#
                                               #{kw\ 9820}#
                                               #{inits\ 9825}#
                                               #{vars\ 9822}#
                                               (#{chi-body\ 9507}#
                                                 (cons #{e1\ 9847}#
                                                       #{e2\ 9848}#)
                                                 (#{source-wrap\ 9485}#
                                                   #{e\ 9795}#
                                                   #{w\ 9797}#
                                                   #{s\ 9798}#
                                                   #{mod\ 9799}#)
                                                 #{r*\ 9823}#
                                                 #{w*\ 9824}#
                                                 #{mod\ 9799}#)))
                                           #{tmp\ 9836}#)
                                    ((lambda (#{tmp\ 9850}#)
                                       (if #{tmp\ 9850}#
                                         (apply (lambda (#{e1\ 9853}#
                                                         #{e2\ 9854}#)
                                                  (values
                                                    #f
                                                    #{req\ 9817}#
                                                    #{opt\ 9818}#
                                                    #{rest\ 9819}#
                                                    #{kw\ 9820}#
                                                    #{inits\ 9825}#
                                                    #{vars\ 9822}#
                                                    (#{chi-body\ 9507}#
                                                      (cons #{e1\ 9853}#
                                                            #{e2\ 9854}#)
                                                      (#{source-wrap\ 9485}#
                                                        #{e\ 9795}#
                                                        #{w\ 9797}#
                                                        #{s\ 9798}#
                                                        #{mod\ 9799}#)
                                                      #{r*\ 9823}#
                                                      #{w*\ 9824}#
                                                      #{mod\ 9799}#)))
                                                #{tmp\ 9850}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 9835}#)))
                                     ($sc-dispatch
                                       #{tmp\ 9835}#
                                       '(any . each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 9835}#
                                  '(any any . each-any))))
                             #{body\ 9821}#)))
                        (#{expand-kw\ 9814}#
                          (lambda (#{req\ 9856}#
                                   #{opt\ 9857}#
                                   #{rest\ 9858}#
                                   #{kw\ 9859}#
                                   #{body\ 9860}#
                                   #{vars\ 9861}#
                                   #{r*\ 9862}#
                                   #{w*\ 9863}#
                                   #{aok\ 9864}#
                                   #{out\ 9865}#
                                   #{inits\ 9866}#)
                            (if (pair? #{kw\ 9859}#)
                              ((lambda (#{tmp\ 9880}#)
                                 ((lambda (#{tmp\ 9881}#)
                                    (if #{tmp\ 9881}#
                                      (apply (lambda (#{k\ 9885}#
                                                      #{id\ 9886}#
                                                      #{i\ 9887}#)
                                               (let ((#{v\ 9890}#
                                                       (#{gen-var\ 9527}#
                                                         #{id\ 9886}#)))
                                                 (let ((#{l\ 9892}#
                                                         (#{gen-labels\ 9432}#
                                                           (list #{v\ 9890}#))))
                                                   (let ((#{r**\ 9894}#
                                                           (#{extend-var-env\ 9404}#
                                                             #{l\ 9892}#
                                                             (list #{v\ 9890}#)
                                                             #{r*\ 9862}#)))
                                                     (let ((#{w**\ 9896}#
                                                             (#{make-binding-wrap\ 9461}#
                                                               (list #{id\ 9886}#)
                                                               #{l\ 9892}#
                                                               #{w*\ 9863}#)))
                                                       (#{expand-kw\ 9814}#
                                                         #{req\ 9856}#
                                                         #{opt\ 9857}#
                                                         #{rest\ 9858}#
                                                         (cdr #{kw\ 9859}#)
                                                         #{body\ 9860}#
                                                         (cons #{v\ 9890}#
                                                               #{vars\ 9861}#)
                                                         #{r**\ 9894}#
                                                         #{w**\ 9896}#
                                                         #{aok\ 9864}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 9885}#)
                                                                     (syntax->datum
                                                                       #{id\ 9886}#)
                                                                     #{v\ 9890}#)
                                                               #{out\ 9865}#)
                                                         (cons (#{chi\ 9499}#
                                                                 #{i\ 9887}#
                                                                 #{r*\ 9862}#
                                                                 #{w*\ 9863}#
                                                                 #{mod\ 9799}#)
                                                               #{inits\ 9866}#)))))))
                                             #{tmp\ 9881}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 9880}#)))
                                  ($sc-dispatch
                                    #{tmp\ 9880}#
                                    '(any any any))))
                               (car #{kw\ 9859}#))
                              (#{expand-body\ 9816}#
                                #{req\ 9856}#
                                #{opt\ 9857}#
                                #{rest\ 9858}#
                                (if (let ((#{t\ 9900}# #{aok\ 9864}#))
                                      (if #{t\ 9900}#
                                        #{t\ 9900}#
                                        (pair? #{out\ 9865}#)))
                                  (cons #{aok\ 9864}# (reverse #{out\ 9865}#))
                                  #f)
                                #{body\ 9860}#
                                (reverse #{vars\ 9861}#)
                                #{r*\ 9862}#
                                #{w*\ 9863}#
                                (reverse #{inits\ 9866}#)))))
                        (#{expand-opt\ 9812}#
                          (lambda (#{req\ 9902}#
                                   #{opt\ 9903}#
                                   #{rest\ 9904}#
                                   #{kw\ 9905}#
                                   #{body\ 9906}#
                                   #{vars\ 9907}#
                                   #{r*\ 9908}#
                                   #{w*\ 9909}#
                                   #{out\ 9910}#
                                   #{inits\ 9911}#)
                            (if (pair? #{opt\ 9903}#)
                              ((lambda (#{tmp\ 9924}#)
                                 ((lambda (#{tmp\ 9925}#)
                                    (if #{tmp\ 9925}#
                                      (apply (lambda (#{id\ 9928}# #{i\ 9929}#)
                                               (let ((#{v\ 9932}#
                                                       (#{gen-var\ 9527}#
                                                         #{id\ 9928}#)))
                                                 (let ((#{l\ 9934}#
                                                         (#{gen-labels\ 9432}#
                                                           (list #{v\ 9932}#))))
                                                   (let ((#{r**\ 9936}#
                                                           (#{extend-var-env\ 9404}#
                                                             #{l\ 9934}#
                                                             (list #{v\ 9932}#)
                                                             #{r*\ 9908}#)))
                                                     (let ((#{w**\ 9938}#
                                                             (#{make-binding-wrap\ 9461}#
                                                               (list #{id\ 9928}#)
                                                               #{l\ 9934}#
                                                               #{w*\ 9909}#)))
                                                       (#{expand-opt\ 9812}#
                                                         #{req\ 9902}#
                                                         (cdr #{opt\ 9903}#)
                                                         #{rest\ 9904}#
                                                         #{kw\ 9905}#
                                                         #{body\ 9906}#
                                                         (cons #{v\ 9932}#
                                                               #{vars\ 9907}#)
                                                         #{r**\ 9936}#
                                                         #{w**\ 9938}#
                                                         (cons (syntax->datum
                                                                 #{id\ 9928}#)
                                                               #{out\ 9910}#)
                                                         (cons (#{chi\ 9499}#
                                                                 #{i\ 9929}#
                                                                 #{r*\ 9908}#
                                                                 #{w*\ 9909}#
                                                                 #{mod\ 9799}#)
                                                               #{inits\ 9911}#)))))))
                                             #{tmp\ 9925}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 9924}#)))
                                  ($sc-dispatch
                                    #{tmp\ 9924}#
                                    '(any any))))
                               (car #{opt\ 9903}#))
                              (if #{rest\ 9904}#
                                (let ((#{v\ 9943}#
                                        (#{gen-var\ 9527}# #{rest\ 9904}#)))
                                  (let ((#{l\ 9945}#
                                          (#{gen-labels\ 9432}#
                                            (list #{v\ 9943}#))))
                                    (let ((#{r*\ 9947}#
                                            (#{extend-var-env\ 9404}#
                                              #{l\ 9945}#
                                              (list #{v\ 9943}#)
                                              #{r*\ 9908}#)))
                                      (let ((#{w*\ 9949}#
                                              (#{make-binding-wrap\ 9461}#
                                                (list #{rest\ 9904}#)
                                                #{l\ 9945}#
                                                #{w*\ 9909}#)))
                                        (#{expand-kw\ 9814}#
                                          #{req\ 9902}#
                                          (if (pair? #{out\ 9910}#)
                                            (reverse #{out\ 9910}#)
                                            #f)
                                          (syntax->datum #{rest\ 9904}#)
                                          (if (pair? #{kw\ 9905}#)
                                            (cdr #{kw\ 9905}#)
                                            #{kw\ 9905}#)
                                          #{body\ 9906}#
                                          (cons #{v\ 9943}# #{vars\ 9907}#)
                                          #{r*\ 9947}#
                                          #{w*\ 9949}#
                                          (if (pair? #{kw\ 9905}#)
                                            (car #{kw\ 9905}#)
                                            #f)
                                          '()
                                          #{inits\ 9911}#)))))
                                (#{expand-kw\ 9814}#
                                  #{req\ 9902}#
                                  (if (pair? #{out\ 9910}#)
                                    (reverse #{out\ 9910}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 9905}#)
                                    (cdr #{kw\ 9905}#)
                                    #{kw\ 9905}#)
                                  #{body\ 9906}#
                                  #{vars\ 9907}#
                                  #{r*\ 9908}#
                                  #{w*\ 9909}#
                                  (if (pair? #{kw\ 9905}#)
                                    (car #{kw\ 9905}#)
                                    #f)
                                  '()
                                  #{inits\ 9911}#)))))
                        (#{expand-req\ 9810}#
                          (lambda (#{req\ 9951}#
                                   #{opt\ 9952}#
                                   #{rest\ 9953}#
                                   #{kw\ 9954}#
                                   #{body\ 9955}#)
                            (let ((#{vars\ 9963}#
                                    (map #{gen-var\ 9527}# #{req\ 9951}#))
                                  (#{labels\ 9964}#
                                    (#{gen-labels\ 9432}# #{req\ 9951}#)))
                              (let ((#{r*\ 9967}#
                                      (#{extend-var-env\ 9404}#
                                        #{labels\ 9964}#
                                        #{vars\ 9963}#
                                        #{r\ 9796}#))
                                    (#{w*\ 9968}#
                                      (#{make-binding-wrap\ 9461}#
                                        #{req\ 9951}#
                                        #{labels\ 9964}#
                                        #{w\ 9797}#)))
                                (#{expand-opt\ 9812}#
                                  (map syntax->datum #{req\ 9951}#)
                                  #{opt\ 9952}#
                                  #{rest\ 9953}#
                                  #{kw\ 9954}#
                                  #{body\ 9955}#
                                  (reverse #{vars\ 9963}#)
                                  #{r*\ 9967}#
                                  #{w*\ 9968}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 9969}#)
                    ((lambda (#{tmp\ 9970}#)
                       (if #{tmp\ 9970}#
                         (apply (lambda () (values #f #f)) #{tmp\ 9970}#)
                         ((lambda (#{tmp\ 9971}#)
                            (if #{tmp\ 9971}#
                              (apply (lambda (#{args\ 9978}#
                                              #{e1\ 9979}#
                                              #{e2\ 9980}#
                                              #{args*\ 9981}#
                                              #{e1*\ 9982}#
                                              #{e2*\ 9983}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 9800}#
                                             #{args\ 9978}#))
                                         (lambda (#{req\ 9984}#
                                                  #{opt\ 9985}#
                                                  #{rest\ 9986}#
                                                  #{kw\ 9987}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 9810}#
                                                 #{req\ 9984}#
                                                 #{opt\ 9985}#
                                                 #{rest\ 9986}#
                                                 #{kw\ 9987}#
                                                 (cons #{e1\ 9979}#
                                                       #{e2\ 9980}#)))
                                             (lambda (#{docstring\ 9993}#
                                                      #{req\ 9994}#
                                                      #{opt\ 9995}#
                                                      #{rest\ 9996}#
                                                      #{kw\ 9997}#
                                                      #{inits\ 9998}#
                                                      #{vars\ 9999}#
                                                      #{body\ 10000}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 9523}#
                                                     #{e\ 9795}#
                                                     #{r\ 9796}#
                                                     #{w\ 9797}#
                                                     #{s\ 9798}#
                                                     #{mod\ 9799}#
                                                     #{get-formals\ 9800}#
                                                     (map (lambda (#{tmp\ 10011}#
                                                                   #{tmp\ 10010}#
                                                                   #{tmp\ 10009}#)
                                                            (cons #{tmp\ 10009}#
                                                                  (cons #{tmp\ 10010}#
                                                                        #{tmp\ 10011}#)))
                                                          #{e2*\ 9983}#
                                                          #{e1*\ 9982}#
                                                          #{args*\ 9981}#)))
                                                 (lambda (#{docstring*\ 10013}#
                                                          #{else*\ 10014}#)
                                                   (values
                                                     (let ((#{t\ 10019}#
                                                             #{docstring\ 9993}#))
                                                       (if #{t\ 10019}#
                                                         #{t\ 10019}#
                                                         #{docstring*\ 10013}#))
                                                     (#{build-lambda-case\ 9360}#
                                                       #{s\ 9798}#
                                                       #{req\ 9994}#
                                                       #{opt\ 9995}#
                                                       #{rest\ 9996}#
                                                       #{kw\ 9997}#
                                                       #{inits\ 9998}#
                                                       #{vars\ 9999}#
                                                       #{body\ 10000}#
                                                       #{else*\ 10014}#)))))))))
                                     #{tmp\ 9971}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 9969}#)))
                          ($sc-dispatch
                            #{tmp\ 9969}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 9969}# (quote ()))))
                  #{clauses\ 9801}#))))
           (#{lambda*-formals\ 9521}#
             (lambda (#{orig-args\ 10021}#)
               (letrec ((#{check\ 10032}#
                          (lambda (#{req\ 10033}#
                                   #{opt\ 10034}#
                                   #{rest\ 10035}#
                                   #{kw\ 10036}#)
                            (if (#{distinct-bound-ids?\ 9479}#
                                  (append
                                    #{req\ 10033}#
                                    (map car #{opt\ 10034}#)
                                    (if #{rest\ 10035}#
                                      (list #{rest\ 10035}#)
                                      '())
                                    (if (pair? #{kw\ 10036}#)
                                      (map cadr (cdr #{kw\ 10036}#))
                                      '())))
                              (values
                                #{req\ 10033}#
                                #{opt\ 10034}#
                                #{rest\ 10035}#
                                #{kw\ 10036}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 10021}#))))
                        (#{rest\ 10030}#
                          (lambda (#{args\ 10044}#
                                   #{req\ 10045}#
                                   #{opt\ 10046}#
                                   #{kw\ 10047}#)
                            ((lambda (#{tmp\ 10052}#)
                               ((lambda (#{tmp\ 10053}#)
                                  (if (if #{tmp\ 10053}#
                                        (apply (lambda (#{r\ 10055}#)
                                                 (#{id?\ 9414}# #{r\ 10055}#))
                                               #{tmp\ 10053}#)
                                        #f)
                                    (apply (lambda (#{r\ 10057}#)
                                             (#{check\ 10032}#
                                               #{req\ 10045}#
                                               #{opt\ 10046}#
                                               #{r\ 10057}#
                                               #{kw\ 10047}#))
                                           #{tmp\ 10053}#)
                                    ((lambda (#{else\ 10059}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 10021}#
                                         #{args\ 10044}#))
                                     #{tmp\ 10052}#)))
                                (list #{tmp\ 10052}#)))
                             #{args\ 10044}#)))
                        (#{key\ 10028}#
                          (lambda (#{args\ 10060}#
                                   #{req\ 10061}#
                                   #{opt\ 10062}#
                                   #{rkey\ 10063}#)
                            ((lambda (#{tmp\ 10068}#)
                               ((lambda (#{tmp\ 10069}#)
                                  (if #{tmp\ 10069}#
                                    (apply (lambda ()
                                             (#{check\ 10032}#
                                               #{req\ 10061}#
                                               #{opt\ 10062}#
                                               #f
                                               (cons #f
                                                     (reverse
                                                       #{rkey\ 10063}#))))
                                           #{tmp\ 10069}#)
                                    ((lambda (#{tmp\ 10070}#)
                                       (if (if #{tmp\ 10070}#
                                             (apply (lambda (#{a\ 10073}#
                                                             #{b\ 10074}#)
                                                      (#{id?\ 9414}#
                                                        #{a\ 10073}#))
                                                    #{tmp\ 10070}#)
                                             #f)
                                         (apply (lambda (#{a\ 10077}#
                                                         #{b\ 10078}#)
                                                  ((lambda (#{tmp\ 10080}#)
                                                     ((lambda (#{k\ 10082}#)
                                                        (#{key\ 10028}#
                                                          #{b\ 10078}#
                                                          #{req\ 10061}#
                                                          #{opt\ 10062}#
                                                          (cons (cons #{k\ 10082}#
                                                                      (cons #{a\ 10077}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i10081"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i10075"
                                                                                     "i10076"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i10064"
                                                                                     "i10065"
                                                                                     "i10066"
                                                                                     "i10067"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i10031"
                                                                                    "i10029"
                                                                                    "i10027"
                                                                                    "i10025"
                                                                                    "i10023"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i10022"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*
                                                                                     noexpand)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i9528"
                                                                                    "i9526"
                                                                                    "i9524"
                                                                                    "i9522"
                                                                                    "i9520"
                                                                                    "i9518"
                                                                                    "i9516"
                                                                                    "i9514"
                                                                                    "i9512"
                                                                                    "i9510"
                                                                                    "i9508"
                                                                                    "i9506"
                                                                                    "i9504"
                                                                                    "i9502"
                                                                                    "i9500"
                                                                                    "i9498"
                                                                                    "i9496"
                                                                                    "i9494"
                                                                                    "i9492"
                                                                                    "i9490"
                                                                                    "i9488"
                                                                                    "i9486"
                                                                                    "i9484"
                                                                                    "i9482"
                                                                                    "i9480"
                                                                                    "i9478"
                                                                                    "i9476"
                                                                                    "i9474"
                                                                                    "i9472"
                                                                                    "i9470"
                                                                                    "i9468"
                                                                                    "i9466"
                                                                                    "i9464"
                                                                                    "i9462"
                                                                                    "i9460"
                                                                                    "i9458"
                                                                                    "i9457"
                                                                                    "i9456"
                                                                                    "i9454"
                                                                                    "i9453"
                                                                                    "i9452"
                                                                                    "i9451"
                                                                                    "i9450"
                                                                                    "i9448"
                                                                                    "i9446"
                                                                                    "i9444"
                                                                                    "i9442"
                                                                                    "i9440"
                                                                                    "i9438"
                                                                                    "i9436"
                                                                                    "i9434"
                                                                                    "i9431"
                                                                                    "i9429"
                                                                                    "i9428"
                                                                                    "i9427"
                                                                                    "i9426"
                                                                                    "i9425"
                                                                                    "i9424"
                                                                                    "i9422"
                                                                                    "i9420"
                                                                                    "i9418"
                                                                                    "i9416"
                                                                                    "i9415"
                                                                                    "i9413"
                                                                                    "i9411"
                                                                                    "i9409"
                                                                                    "i9407"
                                                                                    "i9405"
                                                                                    "i9403"
                                                                                    "i9401"
                                                                                    "i9400"
                                                                                    "i9398"
                                                                                    "i9396"
                                                                                    "i9395"
                                                                                    "i9394"
                                                                                    "i9392"
                                                                                    "i9391"
                                                                                    "i9389"
                                                                                    "i9387"
                                                                                    "i9385"
                                                                                    "i9383"
                                                                                    "i9381"
                                                                                    "i9379"
                                                                                    "i9377"
                                                                                    "i9375"
                                                                                    "i9373"
                                                                                    "i9371"
                                                                                    "i9369"
                                                                                    "i9367"
                                                                                    "i9365"
                                                                                    "i9363"
                                                                                    "i9361"
                                                                                    "i9359"
                                                                                    "i9357"
                                                                                    "i9355"
                                                                                    "i9353"
                                                                                    "i9351"
                                                                                    "i9349"
                                                                                    "i9347"
                                                                                    "i9345"
                                                                                    "i9343"
                                                                                    "i9341"
                                                                                    "i9339"
                                                                                    "i9337"
                                                                                    "i9335"
                                                                                    "i9333"
                                                                                    "i9331"
                                                                                    "i9329"
                                                                                    "i9328"
                                                                                    "i9326"
                                                                                    "i9324"
                                                                                    "i9322"
                                                                                    "i9320"
                                                                                    "i9318"
                                                                                    "i9316"
                                                                                    "i9314"
                                                                                    "i9312"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i9215"
                                                                                    "i9213")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 10063}#)))
                                                      #{tmp\ 10080}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 10077}#))))
                                                #{tmp\ 10070}#)
                                         ((lambda (#{tmp\ 10083}#)
                                            (if (if #{tmp\ 10083}#
                                                  (apply (lambda (#{a\ 10087}#
                                                                  #{init\ 10088}#
                                                                  #{b\ 10089}#)
                                                           (#{id?\ 9414}#
                                                             #{a\ 10087}#))
                                                         #{tmp\ 10083}#)
                                                  #f)
                                              (apply (lambda (#{a\ 10093}#
                                                              #{init\ 10094}#
                                                              #{b\ 10095}#)
                                                       ((lambda (#{tmp\ 10097}#)
                                                          ((lambda (#{k\ 10099}#)
                                                             (#{key\ 10028}#
                                                               #{b\ 10095}#
                                                               #{req\ 10061}#
                                                               #{opt\ 10062}#
                                                               (cons (list #{k\ 10099}#
                                                                           #{a\ 10093}#
                                                                           #{init\ 10094}#)
                                                                     #{rkey\ 10063}#)))
                                                           #{tmp\ 10097}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 10093}#))))
                                                     #{tmp\ 10083}#)
                                              ((lambda (#{tmp\ 10100}#)
                                                 (if (if #{tmp\ 10100}#
                                                       (apply (lambda (#{a\ 10105}#
                                                                       #{init\ 10106}#
                                                                       #{k\ 10107}#
                                                                       #{b\ 10108}#)
                                                                (if (#{id?\ 9414}#
                                                                      #{a\ 10105}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 10107}#))
                                                                  #f))
                                                              #{tmp\ 10100}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 10115}#
                                                                   #{init\ 10116}#
                                                                   #{k\ 10117}#
                                                                   #{b\ 10118}#)
                                                            (#{key\ 10028}#
                                                              #{b\ 10118}#
                                                              #{req\ 10061}#
                                                              #{opt\ 10062}#
                                                              (cons (list #{k\ 10117}#
                                                                          #{a\ 10115}#
                                                                          #{init\ 10116}#)
                                                                    #{rkey\ 10063}#)))
                                                          #{tmp\ 10100}#)
                                                   ((lambda (#{tmp\ 10119}#)
                                                      (if (if #{tmp\ 10119}#
                                                            (apply (lambda (#{aok\ 10121}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 10121}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 10119}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 10123}#)
                                                                 (#{check\ 10032}#
                                                                   #{req\ 10061}#
                                                                   #{opt\ 10062}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 10063}#))))
                                                               #{tmp\ 10119}#)
                                                        ((lambda (#{tmp\ 10124}#)
                                                           (if (if #{tmp\ 10124}#
                                                                 (apply (lambda (#{aok\ 10128}#
                                                                                 #{a\ 10129}#
                                                                                 #{b\ 10130}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 10128}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 10129}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 10124}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 10136}#
                                                                             #{a\ 10137}#
                                                                             #{b\ 10138}#)
                                                                      (#{rest\ 10030}#
                                                                        #{b\ 10138}#
                                                                        #{req\ 10061}#
                                                                        #{opt\ 10062}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 10063}#))))
                                                                    #{tmp\ 10124}#)
                                                             ((lambda (#{tmp\ 10139}#)
                                                                (if (if #{tmp\ 10139}#
                                                                      (apply (lambda (#{aok\ 10142}#
                                                                                      #{r\ 10143}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 10142}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 9414}#
                                                                                   #{r\ 10143}#)
                                                                                 #f))
                                                                             #{tmp\ 10139}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 10148}#
                                                                                  #{r\ 10149}#)
                                                                           (#{rest\ 10030}#
                                                                             #{r\ 10149}#
                                                                             #{req\ 10061}#
                                                                             #{opt\ 10062}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 10063}#))))
                                                                         #{tmp\ 10139}#)
                                                                  ((lambda (#{tmp\ 10150}#)
                                                                     (if (if #{tmp\ 10150}#
                                                                           (apply (lambda (#{a\ 10153}#
                                                                                           #{b\ 10154}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 10153}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 10150}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 10157}#
                                                                                       #{b\ 10158}#)
                                                                                (#{rest\ 10030}#
                                                                                  #{b\ 10158}#
                                                                                  #{req\ 10061}#
                                                                                  #{opt\ 10062}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 10063}#))))
                                                                              #{tmp\ 10150}#)
                                                                       ((lambda (#{tmp\ 10159}#)
                                                                          (if (if #{tmp\ 10159}#
                                                                                (apply (lambda (#{r\ 10161}#)
                                                                                         (#{id?\ 9414}#
                                                                                           #{r\ 10161}#))
                                                                                       #{tmp\ 10159}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 10163}#)
                                                                                     (#{rest\ 10030}#
                                                                                       #{r\ 10163}#
                                                                                       #{req\ 10061}#
                                                                                       #{opt\ 10062}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 10063}#))))
                                                                                   #{tmp\ 10159}#)
                                                                            ((lambda (#{else\ 10165}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 10021}#
                                                                                 #{args\ 10060}#))
                                                                             #{tmp\ 10068}#)))
                                                                        (list #{tmp\ 10068}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 10068}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 10068}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 10068}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 10068}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 10068}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 10068}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 10068}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 10068}# (quote ()))))
                             #{args\ 10060}#)))
                        (#{opt\ 10026}#
                          (lambda (#{args\ 10166}#
                                   #{req\ 10167}#
                                   #{ropt\ 10168}#)
                            ((lambda (#{tmp\ 10172}#)
                               ((lambda (#{tmp\ 10173}#)
                                  (if #{tmp\ 10173}#
                                    (apply (lambda ()
                                             (#{check\ 10032}#
                                               #{req\ 10167}#
                                               (reverse #{ropt\ 10168}#)
                                               #f
                                               '()))
                                           #{tmp\ 10173}#)
                                    ((lambda (#{tmp\ 10174}#)
                                       (if (if #{tmp\ 10174}#
                                             (apply (lambda (#{a\ 10177}#
                                                             #{b\ 10178}#)
                                                      (#{id?\ 9414}#
                                                        #{a\ 10177}#))
                                                    #{tmp\ 10174}#)
                                             #f)
                                         (apply (lambda (#{a\ 10181}#
                                                         #{b\ 10182}#)
                                                  (#{opt\ 10026}#
                                                    #{b\ 10182}#
                                                    #{req\ 10167}#
                                                    (cons (cons #{a\ 10181}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i10179"
                                                                         "i10180"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i10169"
                                                                         "i10170"
                                                                         "i10171"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i10031"
                                                                        "i10029"
                                                                        "i10027"
                                                                        "i10025"
                                                                        "i10023"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i10022"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*
                                                                         noexpand)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i9528"
                                                                        "i9526"
                                                                        "i9524"
                                                                        "i9522"
                                                                        "i9520"
                                                                        "i9518"
                                                                        "i9516"
                                                                        "i9514"
                                                                        "i9512"
                                                                        "i9510"
                                                                        "i9508"
                                                                        "i9506"
                                                                        "i9504"
                                                                        "i9502"
                                                                        "i9500"
                                                                        "i9498"
                                                                        "i9496"
                                                                        "i9494"
                                                                        "i9492"
                                                                        "i9490"
                                                                        "i9488"
                                                                        "i9486"
                                                                        "i9484"
                                                                        "i9482"
                                                                        "i9480"
                                                                        "i9478"
                                                                        "i9476"
                                                                        "i9474"
                                                                        "i9472"
                                                                        "i9470"
                                                                        "i9468"
                                                                        "i9466"
                                                                        "i9464"
                                                                        "i9462"
                                                                        "i9460"
                                                                        "i9458"
                                                                        "i9457"
                                                                        "i9456"
                                                                        "i9454"
                                                                        "i9453"
                                                                        "i9452"
                                                                        "i9451"
                                                                        "i9450"
                                                                        "i9448"
                                                                        "i9446"
                                                                        "i9444"
                                                                        "i9442"
                                                                        "i9440"
                                                                        "i9438"
                                                                        "i9436"
                                                                        "i9434"
                                                                        "i9431"
                                                                        "i9429"
                                                                        "i9428"
                                                                        "i9427"
                                                                        "i9426"
                                                                        "i9425"
                                                                        "i9424"
                                                                        "i9422"
                                                                        "i9420"
                                                                        "i9418"
                                                                        "i9416"
                                                                        "i9415"
                                                                        "i9413"
                                                                        "i9411"
                                                                        "i9409"
                                                                        "i9407"
                                                                        "i9405"
                                                                        "i9403"
                                                                        "i9401"
                                                                        "i9400"
                                                                        "i9398"
                                                                        "i9396"
                                                                        "i9395"
                                                                        "i9394"
                                                                        "i9392"
                                                                        "i9391"
                                                                        "i9389"
                                                                        "i9387"
                                                                        "i9385"
                                                                        "i9383"
                                                                        "i9381"
                                                                        "i9379"
                                                                        "i9377"
                                                                        "i9375"
                                                                        "i9373"
                                                                        "i9371"
                                                                        "i9369"
                                                                        "i9367"
                                                                        "i9365"
                                                                        "i9363"
                                                                        "i9361"
                                                                        "i9359"
                                                                        "i9357"
                                                                        "i9355"
                                                                        "i9353"
                                                                        "i9351"
                                                                        "i9349"
                                                                        "i9347"
                                                                        "i9345"
                                                                        "i9343"
                                                                        "i9341"
                                                                        "i9339"
                                                                        "i9337"
                                                                        "i9335"
                                                                        "i9333"
                                                                        "i9331"
                                                                        "i9329"
                                                                        "i9328"
                                                                        "i9326"
                                                                        "i9324"
                                                                        "i9322"
                                                                        "i9320"
                                                                        "i9318"
                                                                        "i9316"
                                                                        "i9314"
                                                                        "i9312"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i9215"
                                                                        "i9213")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 10168}#)))
                                                #{tmp\ 10174}#)
                                         ((lambda (#{tmp\ 10183}#)
                                            (if (if #{tmp\ 10183}#
                                                  (apply (lambda (#{a\ 10187}#
                                                                  #{init\ 10188}#
                                                                  #{b\ 10189}#)
                                                           (#{id?\ 9414}#
                                                             #{a\ 10187}#))
                                                         #{tmp\ 10183}#)
                                                  #f)
                                              (apply (lambda (#{a\ 10193}#
                                                              #{init\ 10194}#
                                                              #{b\ 10195}#)
                                                       (#{opt\ 10026}#
                                                         #{b\ 10195}#
                                                         #{req\ 10167}#
                                                         (cons (list #{a\ 10193}#
                                                                     #{init\ 10194}#)
                                                               #{ropt\ 10168}#)))
                                                     #{tmp\ 10183}#)
                                              ((lambda (#{tmp\ 10196}#)
                                                 (if (if #{tmp\ 10196}#
                                                       (apply (lambda (#{a\ 10199}#
                                                                       #{b\ 10200}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 10199}#)
                                                                     #:key))
                                                              #{tmp\ 10196}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 10203}#
                                                                   #{b\ 10204}#)
                                                            (#{key\ 10028}#
                                                              #{b\ 10204}#
                                                              #{req\ 10167}#
                                                              (reverse
                                                                #{ropt\ 10168}#)
                                                              '()))
                                                          #{tmp\ 10196}#)
                                                   ((lambda (#{tmp\ 10205}#)
                                                      (if (if #{tmp\ 10205}#
                                                            (apply (lambda (#{a\ 10208}#
                                                                            #{b\ 10209}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 10208}#)
                                                                          #:rest))
                                                                   #{tmp\ 10205}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 10212}#
                                                                        #{b\ 10213}#)
                                                                 (#{rest\ 10030}#
                                                                   #{b\ 10213}#
                                                                   #{req\ 10167}#
                                                                   (reverse
                                                                     #{ropt\ 10168}#)
                                                                   '()))
                                                               #{tmp\ 10205}#)
                                                        ((lambda (#{tmp\ 10214}#)
                                                           (if (if #{tmp\ 10214}#
                                                                 (apply (lambda (#{r\ 10216}#)
                                                                          (#{id?\ 9414}#
                                                                            #{r\ 10216}#))
                                                                        #{tmp\ 10214}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 10218}#)
                                                                      (#{rest\ 10030}#
                                                                        #{r\ 10218}#
                                                                        #{req\ 10167}#
                                                                        (reverse
                                                                          #{ropt\ 10168}#)
                                                                        '()))
                                                                    #{tmp\ 10214}#)
                                                             ((lambda (#{else\ 10220}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 10021}#
                                                                  #{args\ 10166}#))
                                                              #{tmp\ 10172}#)))
                                                         (list #{tmp\ 10172}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 10172}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 10172}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 10172}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 10172}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 10172}# (quote ()))))
                             #{args\ 10166}#)))
                        (#{req\ 10024}#
                          (lambda (#{args\ 10221}# #{rreq\ 10222}#)
                            ((lambda (#{tmp\ 10225}#)
                               ((lambda (#{tmp\ 10226}#)
                                  (if #{tmp\ 10226}#
                                    (apply (lambda ()
                                             (#{check\ 10032}#
                                               (reverse #{rreq\ 10222}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 10226}#)
                                    ((lambda (#{tmp\ 10227}#)
                                       (if (if #{tmp\ 10227}#
                                             (apply (lambda (#{a\ 10230}#
                                                             #{b\ 10231}#)
                                                      (#{id?\ 9414}#
                                                        #{a\ 10230}#))
                                                    #{tmp\ 10227}#)
                                             #f)
                                         (apply (lambda (#{a\ 10234}#
                                                         #{b\ 10235}#)
                                                  (#{req\ 10024}#
                                                    #{b\ 10235}#
                                                    (cons #{a\ 10234}#
                                                          #{rreq\ 10222}#)))
                                                #{tmp\ 10227}#)
                                         ((lambda (#{tmp\ 10236}#)
                                            (if (if #{tmp\ 10236}#
                                                  (apply (lambda (#{a\ 10239}#
                                                                  #{b\ 10240}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 10239}#)
                                                                #:optional))
                                                         #{tmp\ 10236}#)
                                                  #f)
                                              (apply (lambda (#{a\ 10243}#
                                                              #{b\ 10244}#)
                                                       (#{opt\ 10026}#
                                                         #{b\ 10244}#
                                                         (reverse
                                                           #{rreq\ 10222}#)
                                                         '()))
                                                     #{tmp\ 10236}#)
                                              ((lambda (#{tmp\ 10245}#)
                                                 (if (if #{tmp\ 10245}#
                                                       (apply (lambda (#{a\ 10248}#
                                                                       #{b\ 10249}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 10248}#)
                                                                     #:key))
                                                              #{tmp\ 10245}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 10252}#
                                                                   #{b\ 10253}#)
                                                            (#{key\ 10028}#
                                                              #{b\ 10253}#
                                                              (reverse
                                                                #{rreq\ 10222}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 10245}#)
                                                   ((lambda (#{tmp\ 10254}#)
                                                      (if (if #{tmp\ 10254}#
                                                            (apply (lambda (#{a\ 10257}#
                                                                            #{b\ 10258}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 10257}#)
                                                                          #:rest))
                                                                   #{tmp\ 10254}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 10261}#
                                                                        #{b\ 10262}#)
                                                                 (#{rest\ 10030}#
                                                                   #{b\ 10262}#
                                                                   (reverse
                                                                     #{rreq\ 10222}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 10254}#)
                                                        ((lambda (#{tmp\ 10263}#)
                                                           (if (if #{tmp\ 10263}#
                                                                 (apply (lambda (#{r\ 10265}#)
                                                                          (#{id?\ 9414}#
                                                                            #{r\ 10265}#))
                                                                        #{tmp\ 10263}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 10267}#)
                                                                      (#{rest\ 10030}#
                                                                        #{r\ 10267}#
                                                                        (reverse
                                                                          #{rreq\ 10222}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 10263}#)
                                                             ((lambda (#{else\ 10269}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 10021}#
                                                                  #{args\ 10221}#))
                                                              #{tmp\ 10225}#)))
                                                         (list #{tmp\ 10225}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 10225}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 10225}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 10225}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 10225}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 10225}# (quote ()))))
                             #{args\ 10221}#))))
                 (#{req\ 10024}# #{orig-args\ 10021}# (quote ())))))
           (#{chi-simple-lambda\ 9519}#
             (lambda (#{e\ 10270}#
                      #{r\ 10271}#
                      #{w\ 10272}#
                      #{s\ 10273}#
                      #{mod\ 10274}#
                      #{req\ 10275}#
                      #{rest\ 10276}#
                      #{docstring\ 10277}#
                      #{body\ 10278}#)
               (let ((#{ids\ 10290}#
                       (if #{rest\ 10276}#
                         (append #{req\ 10275}# (list #{rest\ 10276}#))
                         #{req\ 10275}#)))
                 (let ((#{vars\ 10292}#
                         (map #{gen-var\ 9527}# #{ids\ 10290}#)))
                   (let ((#{labels\ 10294}#
                           (#{gen-labels\ 9432}# #{ids\ 10290}#)))
                     (#{build-simple-lambda\ 9356}#
                       #{s\ 10273}#
                       (map syntax->datum #{req\ 10275}#)
                       (if #{rest\ 10276}#
                         (syntax->datum #{rest\ 10276}#)
                         #f)
                       #{vars\ 10292}#
                       #{docstring\ 10277}#
                       (#{chi-body\ 9507}#
                         #{body\ 10278}#
                         (#{source-wrap\ 9485}#
                           #{e\ 10270}#
                           #{w\ 10272}#
                           #{s\ 10273}#
                           #{mod\ 10274}#)
                         (#{extend-var-env\ 9404}#
                           #{labels\ 10294}#
                           #{vars\ 10292}#
                           #{r\ 10271}#)
                         (#{make-binding-wrap\ 9461}#
                           #{ids\ 10290}#
                           #{labels\ 10294}#
                           #{w\ 10272}#)
                         #{mod\ 10274}#)))))))
           (#{lambda-formals\ 9517}#
             (lambda (#{orig-args\ 10297}#)
               (letrec ((#{check\ 10302}#
                          (lambda (#{req\ 10303}# #{rest\ 10304}#)
                            (if (#{distinct-bound-ids?\ 9479}#
                                  (if #{rest\ 10304}#
                                    (cons #{rest\ 10304}# #{req\ 10303}#)
                                    #{req\ 10303}#))
                              (values #{req\ 10303}# #f #{rest\ 10304}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 10297}#))))
                        (#{req\ 10300}#
                          (lambda (#{args\ 10310}# #{rreq\ 10311}#)
                            ((lambda (#{tmp\ 10314}#)
                               ((lambda (#{tmp\ 10315}#)
                                  (if #{tmp\ 10315}#
                                    (apply (lambda ()
                                             (#{check\ 10302}#
                                               (reverse #{rreq\ 10311}#)
                                               #f))
                                           #{tmp\ 10315}#)
                                    ((lambda (#{tmp\ 10316}#)
                                       (if (if #{tmp\ 10316}#
                                             (apply (lambda (#{a\ 10319}#
                                                             #{b\ 10320}#)
                                                      (#{id?\ 9414}#
                                                        #{a\ 10319}#))
                                                    #{tmp\ 10316}#)
                                             #f)
                                         (apply (lambda (#{a\ 10323}#
                                                         #{b\ 10324}#)
                                                  (#{req\ 10300}#
                                                    #{b\ 10324}#
                                                    (cons #{a\ 10323}#
                                                          #{rreq\ 10311}#)))
                                                #{tmp\ 10316}#)
                                         ((lambda (#{tmp\ 10325}#)
                                            (if (if #{tmp\ 10325}#
                                                  (apply (lambda (#{r\ 10327}#)
                                                           (#{id?\ 9414}#
                                                             #{r\ 10327}#))
                                                         #{tmp\ 10325}#)
                                                  #f)
                                              (apply (lambda (#{r\ 10329}#)
                                                       (#{check\ 10302}#
                                                         (reverse
                                                           #{rreq\ 10311}#)
                                                         #{r\ 10329}#))
                                                     #{tmp\ 10325}#)
                                              ((lambda (#{else\ 10331}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 10297}#
                                                   #{args\ 10310}#))
                                               #{tmp\ 10314}#)))
                                          (list #{tmp\ 10314}#))))
                                     ($sc-dispatch
                                       #{tmp\ 10314}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 10314}# (quote ()))))
                             #{args\ 10310}#))))
                 (#{req\ 10300}# #{orig-args\ 10297}# (quote ())))))
           (#{ellipsis?\ 9515}#
             (lambda (#{x\ 10332}#)
               (if (#{nonsymbol-id?\ 9412}# #{x\ 10332}#)
                 (#{free-id=?\ 9473}#
                   #{x\ 10332}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i10333"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*
                           noexpand)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i9528"
                          "i9526"
                          "i9524"
                          "i9522"
                          "i9520"
                          "i9518"
                          "i9516"
                          "i9514"
                          "i9512"
                          "i9510"
                          "i9508"
                          "i9506"
                          "i9504"
                          "i9502"
                          "i9500"
                          "i9498"
                          "i9496"
                          "i9494"
                          "i9492"
                          "i9490"
                          "i9488"
                          "i9486"
                          "i9484"
                          "i9482"
                          "i9480"
                          "i9478"
                          "i9476"
                          "i9474"
                          "i9472"
                          "i9470"
                          "i9468"
                          "i9466"
                          "i9464"
                          "i9462"
                          "i9460"
                          "i9458"
                          "i9457"
                          "i9456"
                          "i9454"
                          "i9453"
                          "i9452"
                          "i9451"
                          "i9450"
                          "i9448"
                          "i9446"
                          "i9444"
                          "i9442"
                          "i9440"
                          "i9438"
                          "i9436"
                          "i9434"
                          "i9431"
                          "i9429"
                          "i9428"
                          "i9427"
                          "i9426"
                          "i9425"
                          "i9424"
                          "i9422"
                          "i9420"
                          "i9418"
                          "i9416"
                          "i9415"
                          "i9413"
                          "i9411"
                          "i9409"
                          "i9407"
                          "i9405"
                          "i9403"
                          "i9401"
                          "i9400"
                          "i9398"
                          "i9396"
                          "i9395"
                          "i9394"
                          "i9392"
                          "i9391"
                          "i9389"
                          "i9387"
                          "i9385"
                          "i9383"
                          "i9381"
                          "i9379"
                          "i9377"
                          "i9375"
                          "i9373"
                          "i9371"
                          "i9369"
                          "i9367"
                          "i9365"
                          "i9363"
                          "i9361"
                          "i9359"
                          "i9357"
                          "i9355"
                          "i9353"
                          "i9351"
                          "i9349"
                          "i9347"
                          "i9345"
                          "i9343"
                          "i9341"
                          "i9339"
                          "i9337"
                          "i9335"
                          "i9333"
                          "i9331"
                          "i9329"
                          "i9328"
                          "i9326"
                          "i9324"
                          "i9322"
                          "i9320"
                          "i9318"
                          "i9316"
                          "i9314"
                          "i9312"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i9215" "i9213")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 9513}#
             (lambda () (#{build-void\ 9336}# #f)))
           (#{eval-local-transformer\ 9511}#
             (lambda (#{expanded\ 10337}# #{mod\ 10338}#)
               (let ((#{p\ 10342}#
                       (#{local-eval-hook\ 9327}#
                         #{expanded\ 10337}#
                         #{mod\ 10338}#)))
                 (if (procedure? #{p\ 10342}#)
                   (cons #{p\ 10342}#
                         (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 10342}#)))))
           (#{chi-local-syntax\ 9509}#
             (lambda (#{rec?\ 10343}#
                      #{e\ 10344}#
                      #{r\ 10345}#
                      #{w\ 10346}#
                      #{s\ 10347}#
                      #{mod\ 10348}#
                      #{k\ 10349}#)
               ((lambda (#{tmp\ 10357}#)
                  ((lambda (#{tmp\ 10358}#)
                     (if #{tmp\ 10358}#
                       (apply (lambda (#{_\ 10364}#
                                       #{id\ 10365}#
                                       #{val\ 10366}#
                                       #{e1\ 10367}#
                                       #{e2\ 10368}#)
                                (let ((#{ids\ 10370}# #{id\ 10365}#))
                                  (if (not (#{valid-bound-ids?\ 9477}#
                                             #{ids\ 10370}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 10344}#)
                                    (let ((#{labels\ 10373}#
                                            (#{gen-labels\ 9432}#
                                              #{ids\ 10370}#)))
                                      (let ((#{new-w\ 10375}#
                                              (#{make-binding-wrap\ 9461}#
                                                #{ids\ 10370}#
                                                #{labels\ 10373}#
                                                #{w\ 10346}#)))
                                        (#{k\ 10349}#
                                          (cons #{e1\ 10367}# #{e2\ 10368}#)
                                          (#{extend-env\ 9402}#
                                            #{labels\ 10373}#
                                            (let ((#{w\ 10379}#
                                                    (if #{rec?\ 10343}#
                                                      #{new-w\ 10375}#
                                                      #{w\ 10346}#))
                                                  (#{trans-r\ 10380}#
                                                    (#{macros-only-env\ 9406}#
                                                      #{r\ 10345}#)))
                                              (map (lambda (#{x\ 10381}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 9511}#
                                                             (#{chi\ 9499}#
                                                               #{x\ 10381}#
                                                               #{trans-r\ 10380}#
                                                               #{w\ 10379}#
                                                               #{mod\ 10348}#)
                                                             #{mod\ 10348}#)))
                                                   #{val\ 10366}#))
                                            #{r\ 10345}#)
                                          #{new-w\ 10375}#
                                          #{s\ 10347}#
                                          #{mod\ 10348}#))))))
                              #{tmp\ 10358}#)
                       ((lambda (#{_\ 10386}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 9485}#
                              #{e\ 10344}#
                              #{w\ 10346}#
                              #{s\ 10347}#
                              #{mod\ 10348}#)))
                        #{tmp\ 10357}#)))
                   ($sc-dispatch
                     #{tmp\ 10357}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 10344}#)))
           (#{chi-body\ 9507}#
             (lambda (#{body\ 10387}#
                      #{outer-form\ 10388}#
                      #{r\ 10389}#
                      #{w\ 10390}#
                      #{mod\ 10391}#)
               (let ((#{r\ 10399}#
                       (cons '("placeholder" placeholder)
                             #{r\ 10389}#)))
                 (let ((#{ribcage\ 10401}#
                         (#{make-ribcage\ 9435}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 10404}#
                           (#{make-wrap\ 9419}#
                             (#{wrap-marks\ 9421}# #{w\ 10390}#)
                             (cons #{ribcage\ 10401}#
                                   (#{wrap-subst\ 9423}# #{w\ 10390}#)))))
                     (letrec ((#{parse\ 10413}#
                                (lambda (#{body\ 10414}#
                                         #{ids\ 10415}#
                                         #{labels\ 10416}#
                                         #{var-ids\ 10417}#
                                         #{vars\ 10418}#
                                         #{vals\ 10419}#
                                         #{bindings\ 10420}#)
                                  (if (null? #{body\ 10414}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 10388}#)
                                    (let ((#{e\ 10425}# (cdar #{body\ 10414}#))
                                          (#{er\ 10426}#
                                            (caar #{body\ 10414}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 9495}#
                                            #{e\ 10425}#
                                            #{er\ 10426}#
                                            '(())
                                            (#{source-annotation\ 9393}#
                                              #{er\ 10426}#)
                                            #{ribcage\ 10401}#
                                            #{mod\ 10391}#
                                            #f))
                                        (lambda (#{type\ 10428}#
                                                 #{value\ 10429}#
                                                 #{e\ 10430}#
                                                 #{w\ 10431}#
                                                 #{s\ 10432}#
                                                 #{mod\ 10433}#)
                                          (if (memv #{type\ 10428}#
                                                    '(define-form))
                                            (let ((#{id\ 10443}#
                                                    (#{wrap\ 9483}#
                                                      #{value\ 10429}#
                                                      #{w\ 10431}#
                                                      #{mod\ 10433}#))
                                                  (#{label\ 10444}#
                                                    (#{gen-label\ 9430}#)))
                                              (let ((#{var\ 10446}#
                                                      (#{gen-var\ 9527}#
                                                        #{id\ 10443}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 9459}#
                                                    #{ribcage\ 10401}#
                                                    #{id\ 10443}#
                                                    #{label\ 10444}#)
                                                  (#{parse\ 10413}#
                                                    (cdr #{body\ 10414}#)
                                                    (cons #{id\ 10443}#
                                                          #{ids\ 10415}#)
                                                    (cons #{label\ 10444}#
                                                          #{labels\ 10416}#)
                                                    (cons #{id\ 10443}#
                                                          #{var-ids\ 10417}#)
                                                    (cons #{var\ 10446}#
                                                          #{vars\ 10418}#)
                                                    (cons (cons #{er\ 10426}#
                                                                (#{wrap\ 9483}#
                                                                  #{e\ 10430}#
                                                                  #{w\ 10431}#
                                                                  #{mod\ 10433}#))
                                                          #{vals\ 10419}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 10446}#)
                                                          #{bindings\ 10420}#)))))
                                            (if (memv #{type\ 10428}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 10451}#
                                                      (#{wrap\ 9483}#
                                                        #{value\ 10429}#
                                                        #{w\ 10431}#
                                                        #{mod\ 10433}#))
                                                    (#{label\ 10452}#
                                                      (#{gen-label\ 9430}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 9459}#
                                                    #{ribcage\ 10401}#
                                                    #{id\ 10451}#
                                                    #{label\ 10452}#)
                                                  (#{parse\ 10413}#
                                                    (cdr #{body\ 10414}#)
                                                    (cons #{id\ 10451}#
                                                          #{ids\ 10415}#)
                                                    (cons #{label\ 10452}#
                                                          #{labels\ 10416}#)
                                                    #{var-ids\ 10417}#
                                                    #{vars\ 10418}#
                                                    #{vals\ 10419}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 10426}#
                                                                      (#{wrap\ 9483}#
                                                                        #{e\ 10430}#
                                                                        #{w\ 10431}#
                                                                        #{mod\ 10433}#)))
                                                          #{bindings\ 10420}#))))
                                              (if (memv #{type\ 10428}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 10455}#)
                                                   ((lambda (#{tmp\ 10456}#)
                                                      (if #{tmp\ 10456}#
                                                        (apply (lambda (#{_\ 10459}#
                                                                        #{e1\ 10460}#)
                                                                 (#{parse\ 10413}#
                                                                   (letrec ((#{f\ 10463}#
                                                                              (lambda (#{forms\ 10464}#)
                                                                                (if (null? #{forms\ 10464}#)
                                                                                  (cdr #{body\ 10414}#)
                                                                                  (cons (cons #{er\ 10426}#
                                                                                              (#{wrap\ 9483}#
                                                                                                (car #{forms\ 10464}#)
                                                                                                #{w\ 10431}#
                                                                                                #{mod\ 10433}#))
                                                                                        (#{f\ 10463}#
                                                                                          (cdr #{forms\ 10464}#)))))))
                                                                     (#{f\ 10463}#
                                                                       #{e1\ 10460}#))
                                                                   #{ids\ 10415}#
                                                                   #{labels\ 10416}#
                                                                   #{var-ids\ 10417}#
                                                                   #{vars\ 10418}#
                                                                   #{vals\ 10419}#
                                                                   #{bindings\ 10420}#))
                                                               #{tmp\ 10456}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 10455}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 10455}#
                                                      '(any . each-any))))
                                                 #{e\ 10430}#)
                                                (if (memv #{type\ 10428}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 9509}#
                                                    #{value\ 10429}#
                                                    #{e\ 10430}#
                                                    #{er\ 10426}#
                                                    #{w\ 10431}#
                                                    #{s\ 10432}#
                                                    #{mod\ 10433}#
                                                    (lambda (#{forms\ 10467}#
                                                             #{er\ 10468}#
                                                             #{w\ 10469}#
                                                             #{s\ 10470}#
                                                             #{mod\ 10471}#)
                                                      (#{parse\ 10413}#
                                                        (letrec ((#{f\ 10479}#
                                                                   (lambda (#{forms\ 10480}#)
                                                                     (if (null? #{forms\ 10480}#)
                                                                       (cdr #{body\ 10414}#)
                                                                       (cons (cons #{er\ 10468}#
                                                                                   (#{wrap\ 9483}#
                                                                                     (car #{forms\ 10480}#)
                                                                                     #{w\ 10469}#
                                                                                     #{mod\ 10471}#))
                                                                             (#{f\ 10479}#
                                                                               (cdr #{forms\ 10480}#)))))))
                                                          (#{f\ 10479}#
                                                            #{forms\ 10467}#))
                                                        #{ids\ 10415}#
                                                        #{labels\ 10416}#
                                                        #{var-ids\ 10417}#
                                                        #{vars\ 10418}#
                                                        #{vals\ 10419}#
                                                        #{bindings\ 10420}#)))
                                                  (if (null? #{ids\ 10415}#)
                                                    (#{build-sequence\ 9366}#
                                                      #f
                                                      (map (lambda (#{x\ 10483}#)
                                                             (#{chi\ 9499}#
                                                               (cdr #{x\ 10483}#)
                                                               (car #{x\ 10483}#)
                                                               '(())
                                                               #{mod\ 10433}#))
                                                           (cons (cons #{er\ 10426}#
                                                                       (#{source-wrap\ 9485}#
                                                                         #{e\ 10430}#
                                                                         #{w\ 10431}#
                                                                         #{s\ 10432}#
                                                                         #{mod\ 10433}#))
                                                                 (cdr #{body\ 10414}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 9477}#
                                                                 #{ids\ 10415}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 10388}#))
                                                      (letrec ((#{loop\ 10490}#
                                                                 (lambda (#{bs\ 10491}#
                                                                          #{er-cache\ 10492}#
                                                                          #{r-cache\ 10493}#)
                                                                   (if (not (null? #{bs\ 10491}#))
                                                                     (let ((#{b\ 10496}#
                                                                             (car #{bs\ 10491}#)))
                                                                       (if (eq? (car #{b\ 10496}#)
                                                                                'macro)
                                                                         (let ((#{er\ 10499}#
                                                                                 (cadr #{b\ 10496}#)))
                                                                           (let ((#{r-cache\ 10501}#
                                                                                   (if (eq? #{er\ 10499}#
                                                                                            #{er-cache\ 10492}#)
                                                                                     #{r-cache\ 10493}#
                                                                                     (#{macros-only-env\ 9406}#
                                                                                       #{er\ 10499}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 10496}#
                                                                                 (#{eval-local-transformer\ 9511}#
                                                                                   (#{chi\ 9499}#
                                                                                     (cddr #{b\ 10496}#)
                                                                                     #{r-cache\ 10501}#
                                                                                     '(())
                                                                                     #{mod\ 10433}#)
                                                                                   #{mod\ 10433}#))
                                                                               (#{loop\ 10490}#
                                                                                 (cdr #{bs\ 10491}#)
                                                                                 #{er\ 10499}#
                                                                                 #{r-cache\ 10501}#))))
                                                                         (#{loop\ 10490}#
                                                                           (cdr #{bs\ 10491}#)
                                                                           #{er-cache\ 10492}#
                                                                           #{r-cache\ 10493}#)))))))
                                                        (#{loop\ 10490}#
                                                          #{bindings\ 10420}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 10399}#
                                                        (#{extend-env\ 9402}#
                                                          #{labels\ 10416}#
                                                          #{bindings\ 10420}#
                                                          (cdr #{r\ 10399}#)))
                                                      (#{build-letrec\ 9372}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 10417}#)
                                                        #{vars\ 10418}#
                                                        (map (lambda (#{x\ 10504}#)
                                                               (#{chi\ 9499}#
                                                                 (cdr #{x\ 10504}#)
                                                                 (car #{x\ 10504}#)
                                                                 '(())
                                                                 #{mod\ 10433}#))
                                                             #{vals\ 10419}#)
                                                        (#{build-sequence\ 9366}#
                                                          #f
                                                          (map (lambda (#{x\ 10508}#)
                                                                 (#{chi\ 9499}#
                                                                   (cdr #{x\ 10508}#)
                                                                   (car #{x\ 10508}#)
                                                                   '(())
                                                                   #{mod\ 10433}#))
                                                               (cons (cons #{er\ 10426}#
                                                                           (#{source-wrap\ 9485}#
                                                                             #{e\ 10430}#
                                                                             #{w\ 10431}#
                                                                             #{s\ 10432}#
                                                                             #{mod\ 10433}#))
                                                                     (cdr #{body\ 10414}#))))))))))))))))))
                       (#{parse\ 10413}#
                         (map (lambda (#{x\ 10421}#)
                                (cons #{r\ 10399}#
                                      (#{wrap\ 9483}#
                                        #{x\ 10421}#
                                        #{w\ 10404}#
                                        #{mod\ 10391}#)))
                              #{body\ 10387}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 9505}#
             (lambda (#{p\ 10511}#
                      #{e\ 10512}#
                      #{r\ 10513}#
                      #{w\ 10514}#
                      #{rib\ 10515}#
                      #{mod\ 10516}#)
               (letrec ((#{rebuild-macro-output\ 10524}#
                          (lambda (#{x\ 10525}# #{m\ 10526}#)
                            (if (pair? #{x\ 10525}#)
                              (cons (#{rebuild-macro-output\ 10524}#
                                      (car #{x\ 10525}#)
                                      #{m\ 10526}#)
                                    (#{rebuild-macro-output\ 10524}#
                                      (cdr #{x\ 10525}#)
                                      #{m\ 10526}#))
                              (if (#{syntax-object?\ 9378}# #{x\ 10525}#)
                                (let ((#{w\ 10534}#
                                        (#{syntax-object-wrap\ 9382}#
                                          #{x\ 10525}#)))
                                  (let ((#{ms\ 10537}#
                                          (#{wrap-marks\ 9421}# #{w\ 10534}#))
                                        (#{s\ 10538}#
                                          (#{wrap-subst\ 9423}# #{w\ 10534}#)))
                                    (if (if (pair? #{ms\ 10537}#)
                                          (eq? (car #{ms\ 10537}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 9376}#
                                        (#{syntax-object-expression\ 9380}#
                                          #{x\ 10525}#)
                                        (#{make-wrap\ 9419}#
                                          (cdr #{ms\ 10537}#)
                                          (if #{rib\ 10515}#
                                            (cons #{rib\ 10515}#
                                                  (cdr #{s\ 10538}#))
                                            (cdr #{s\ 10538}#)))
                                        (#{syntax-object-module\ 9384}#
                                          #{x\ 10525}#))
                                      (#{make-syntax-object\ 9376}#
                                        (#{syntax-object-expression\ 9380}#
                                          #{x\ 10525}#)
                                        (#{make-wrap\ 9419}#
                                          (cons #{m\ 10526}# #{ms\ 10537}#)
                                          (if #{rib\ 10515}#
                                            (cons #{rib\ 10515}#
                                                  (cons 'shift
                                                        #{s\ 10538}#))
                                            (cons (quote shift) #{s\ 10538}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 10511}#))))))
                                (if (vector? #{x\ 10525}#)
                                  (let ((#{n\ 10546}#
                                          (vector-length #{x\ 10525}#)))
                                    (let ((#{v\ 10548}#
                                            (make-vector #{n\ 10546}#)))
                                      (letrec ((#{loop\ 10551}#
                                                 (lambda (#{i\ 10552}#)
                                                   (if (#{fx=\ 9321}#
                                                         #{i\ 10552}#
                                                         #{n\ 10546}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 10548}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 10548}#
                                                         #{i\ 10552}#
                                                         (#{rebuild-macro-output\ 10524}#
                                                           (vector-ref
                                                             #{x\ 10525}#
                                                             #{i\ 10552}#)
                                                           #{m\ 10526}#))
                                                       (#{loop\ 10551}#
                                                         (#{fx+\ 9317}#
                                                           #{i\ 10552}#
                                                           1)))))))
                                        (#{loop\ 10551}# 0))))
                                  (if (symbol? #{x\ 10525}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 9485}#
                                        #{e\ 10512}#
                                        #{w\ 10514}#
                                        (#{wrap-subst\ 9423}# #{w\ 10514}#)
                                        #{mod\ 10516}#)
                                      #{x\ 10525}#)
                                    #{x\ 10525}#)))))))
                 (#{rebuild-macro-output\ 10524}#
                   ((car #{p\ 10511}#)
                    (#{wrap\ 9483}#
                      #{e\ 10512}#
                      (#{anti-mark\ 9455}# #{w\ 10514}#)
                      #{mod\ 10516}#))
                   (gensym "m")))))
           (#{chi-application\ 9503}#
             (lambda (#{x\ 10559}#
                      #{e\ 10560}#
                      #{r\ 10561}#
                      #{w\ 10562}#
                      #{s\ 10563}#
                      #{mod\ 10564}#)
               ((lambda (#{tmp\ 10571}#)
                  ((lambda (#{tmp\ 10572}#)
                     (if #{tmp\ 10572}#
                       (apply (lambda (#{e0\ 10575}# #{e1\ 10576}#)
                                (#{build-application\ 9338}#
                                  #{s\ 10563}#
                                  #{x\ 10559}#
                                  (map (lambda (#{e\ 10577}#)
                                         (#{chi\ 9499}#
                                           #{e\ 10577}#
                                           #{r\ 10561}#
                                           #{w\ 10562}#
                                           #{mod\ 10564}#))
                                       #{e1\ 10576}#)))
                              #{tmp\ 10572}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 10571}#)))
                   ($sc-dispatch
                     #{tmp\ 10571}#
                     '(any . each-any))))
                #{e\ 10560}#)))
           (#{chi-expr\ 9501}#
             (lambda (#{type\ 10580}#
                      #{value\ 10581}#
                      #{e\ 10582}#
                      #{r\ 10583}#
                      #{w\ 10584}#
                      #{s\ 10585}#
                      #{mod\ 10586}#)
               (if (memv #{type\ 10580}# (quote (lexical)))
                 (#{build-lexical-reference\ 9342}#
                   'value
                   #{s\ 10585}#
                   #{e\ 10582}#
                   #{value\ 10581}#)
                 (if (memv #{type\ 10580}# (quote (core core-form)))
                   (#{value\ 10581}#
                     #{e\ 10582}#
                     #{r\ 10583}#
                     #{w\ 10584}#
                     #{s\ 10585}#
                     #{mod\ 10586}#)
                   (if (memv #{type\ 10580}# (quote (module-ref)))
                     (call-with-values
                       (lambda () (#{value\ 10581}# #{e\ 10582}#))
                       (lambda (#{id\ 10597}# #{mod\ 10598}#)
                         (#{build-global-reference\ 9348}#
                           #{s\ 10585}#
                           #{id\ 10597}#
                           #{mod\ 10598}#)))
                     (if (memv #{type\ 10580}# (quote (lexical-call)))
                       (#{chi-application\ 9503}#
                         (#{build-lexical-reference\ 9342}#
                           'fun
                           (#{source-annotation\ 9393}# (car #{e\ 10582}#))
                           (car #{e\ 10582}#)
                           #{value\ 10581}#)
                         #{e\ 10582}#
                         #{r\ 10583}#
                         #{w\ 10584}#
                         #{s\ 10585}#
                         #{mod\ 10586}#)
                       (if (memv #{type\ 10580}# (quote (global-call)))
                         (#{chi-application\ 9503}#
                           (#{build-global-reference\ 9348}#
                             (#{source-annotation\ 9393}# (car #{e\ 10582}#))
                             (if (#{syntax-object?\ 9378}# #{value\ 10581}#)
                               (#{syntax-object-expression\ 9380}#
                                 #{value\ 10581}#)
                               #{value\ 10581}#)
                             (if (#{syntax-object?\ 9378}# #{value\ 10581}#)
                               (#{syntax-object-module\ 9384}#
                                 #{value\ 10581}#)
                               #{mod\ 10586}#))
                           #{e\ 10582}#
                           #{r\ 10583}#
                           #{w\ 10584}#
                           #{s\ 10585}#
                           #{mod\ 10586}#)
                         (if (memv #{type\ 10580}# (quote (constant)))
                           (#{build-data\ 9364}#
                             #{s\ 10585}#
                             (#{strip\ 9525}#
                               (#{source-wrap\ 9485}#
                                 #{e\ 10582}#
                                 #{w\ 10584}#
                                 #{s\ 10585}#
                                 #{mod\ 10586}#)
                               '(())))
                           (if (memv #{type\ 10580}# (quote (global)))
                             (#{build-global-reference\ 9348}#
                               #{s\ 10585}#
                               #{value\ 10581}#
                               #{mod\ 10586}#)
                             (if (memv #{type\ 10580}# (quote (call)))
                               (#{chi-application\ 9503}#
                                 (#{chi\ 9499}#
                                   (car #{e\ 10582}#)
                                   #{r\ 10583}#
                                   #{w\ 10584}#
                                   #{mod\ 10586}#)
                                 #{e\ 10582}#
                                 #{r\ 10583}#
                                 #{w\ 10584}#
                                 #{s\ 10585}#
                                 #{mod\ 10586}#)
                               (if (memv #{type\ 10580}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 10608}#)
                                    ((lambda (#{tmp\ 10609}#)
                                       (if #{tmp\ 10609}#
                                         (apply (lambda (#{_\ 10613}#
                                                         #{e1\ 10614}#
                                                         #{e2\ 10615}#)
                                                  (#{chi-sequence\ 9487}#
                                                    (cons #{e1\ 10614}#
                                                          #{e2\ 10615}#)
                                                    #{r\ 10583}#
                                                    #{w\ 10584}#
                                                    #{s\ 10585}#
                                                    #{mod\ 10586}#))
                                                #{tmp\ 10609}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 10608}#)))
                                     ($sc-dispatch
                                       #{tmp\ 10608}#
                                       '(any any . each-any))))
                                  #{e\ 10582}#)
                                 (if (memv #{type\ 10580}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 9509}#
                                     #{value\ 10581}#
                                     #{e\ 10582}#
                                     #{r\ 10583}#
                                     #{w\ 10584}#
                                     #{s\ 10585}#
                                     #{mod\ 10586}#
                                     #{chi-sequence\ 9487}#)
                                   (if (memv #{type\ 10580}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 10619}#)
                                        ((lambda (#{tmp\ 10620}#)
                                           (if #{tmp\ 10620}#
                                             (apply (lambda (#{_\ 10625}#
                                                             #{x\ 10626}#
                                                             #{e1\ 10627}#
                                                             #{e2\ 10628}#)
                                                      (let ((#{when-list\ 10630}#
                                                              (#{chi-when-list\ 9493}#
                                                                #{e\ 10582}#
                                                                #{x\ 10626}#
                                                                #{w\ 10584}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 10630}#)
                                                          (#{chi-sequence\ 9487}#
                                                            (cons #{e1\ 10627}#
                                                                  #{e2\ 10628}#)
                                                            #{r\ 10583}#
                                                            #{w\ 10584}#
                                                            #{s\ 10585}#
                                                            #{mod\ 10586}#)
                                                          (#{chi-void\ 9513}#))))
                                                    #{tmp\ 10620}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 10619}#)))
                                         ($sc-dispatch
                                           #{tmp\ 10619}#
                                           '(any each-any any . each-any))))
                                      #{e\ 10582}#)
                                     (if (memv #{type\ 10580}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 10582}#
                                         (#{wrap\ 9483}#
                                           #{value\ 10581}#
                                           #{w\ 10584}#
                                           #{mod\ 10586}#))
                                       (if (memv #{type\ 10580}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 9485}#
                                             #{e\ 10582}#
                                             #{w\ 10584}#
                                             #{s\ 10585}#
                                             #{mod\ 10586}#))
                                         (if (memv #{type\ 10580}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 9485}#
                                               #{e\ 10582}#
                                               #{w\ 10584}#
                                               #{s\ 10585}#
                                               #{mod\ 10586}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 9485}#
                                               #{e\ 10582}#
                                               #{w\ 10584}#
                                               #{s\ 10585}#
                                               #{mod\ 10586}#))))))))))))))))))
           (#{chi\ 9499}#
             (lambda (#{e\ 10637}#
                      #{r\ 10638}#
                      #{w\ 10639}#
                      #{mod\ 10640}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 9495}#
                     #{e\ 10637}#
                     #{r\ 10638}#
                     #{w\ 10639}#
                     (#{source-annotation\ 9393}# #{e\ 10637}#)
                     #f
                     #{mod\ 10640}#
                     #f))
                 (lambda (#{type\ 10645}#
                          #{value\ 10646}#
                          #{e\ 10647}#
                          #{w\ 10648}#
                          #{s\ 10649}#
                          #{mod\ 10650}#)
                   (#{chi-expr\ 9501}#
                     #{type\ 10645}#
                     #{value\ 10646}#
                     #{e\ 10647}#
                     #{r\ 10638}#
                     #{w\ 10648}#
                     #{s\ 10649}#
                     #{mod\ 10650}#)))))
           (#{chi-top\ 9497}#
             (lambda (#{e\ 10657}#
                      #{r\ 10658}#
                      #{w\ 10659}#
                      #{m\ 10660}#
                      #{esew\ 10661}#
                      #{mod\ 10662}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 9495}#
                     #{e\ 10657}#
                     #{r\ 10658}#
                     #{w\ 10659}#
                     (#{source-annotation\ 9393}# #{e\ 10657}#)
                     #f
                     #{mod\ 10662}#
                     #f))
                 (lambda (#{type\ 10683}#
                          #{value\ 10684}#
                          #{e\ 10685}#
                          #{w\ 10686}#
                          #{s\ 10687}#
                          #{mod\ 10688}#)
                   (if (memv #{type\ 10683}# (quote (begin-form)))
                     ((lambda (#{tmp\ 10696}#)
                        ((lambda (#{tmp\ 10697}#)
                           (if #{tmp\ 10697}#
                             (apply (lambda (#{_\ 10699}#)
                                      (#{chi-void\ 9513}#))
                                    #{tmp\ 10697}#)
                             ((lambda (#{tmp\ 10700}#)
                                (if #{tmp\ 10700}#
                                  (apply (lambda (#{_\ 10704}#
                                                  #{e1\ 10705}#
                                                  #{e2\ 10706}#)
                                           (#{chi-top-sequence\ 9489}#
                                             (cons #{e1\ 10705}# #{e2\ 10706}#)
                                             #{r\ 10658}#
                                             #{w\ 10686}#
                                             #{s\ 10687}#
                                             #{m\ 10660}#
                                             #{esew\ 10661}#
                                             #{mod\ 10688}#))
                                         #{tmp\ 10700}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 10696}#)))
                              ($sc-dispatch
                                #{tmp\ 10696}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 10696}# (quote (any)))))
                      #{e\ 10685}#)
                     (if (memv #{type\ 10683}#
                               '(local-syntax-form))
                       (#{chi-local-syntax\ 9509}#
                         #{value\ 10684}#
                         #{e\ 10685}#
                         #{r\ 10658}#
                         #{w\ 10686}#
                         #{s\ 10687}#
                         #{mod\ 10688}#
                         (lambda (#{body\ 10709}#
                                  #{r\ 10710}#
                                  #{w\ 10711}#
                                  #{s\ 10712}#
                                  #{mod\ 10713}#)
                           (#{chi-top-sequence\ 9489}#
                             #{body\ 10709}#
                             #{r\ 10710}#
                             #{w\ 10711}#
                             #{s\ 10712}#
                             #{m\ 10660}#
                             #{esew\ 10661}#
                             #{mod\ 10713}#)))
                       (if (memv #{type\ 10683}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 10720}#)
                            ((lambda (#{tmp\ 10721}#)
                               (if #{tmp\ 10721}#
                                 (apply (lambda (#{_\ 10726}#
                                                 #{x\ 10727}#
                                                 #{e1\ 10728}#
                                                 #{e2\ 10729}#)
                                          (let ((#{when-list\ 10732}#
                                                  (#{chi-when-list\ 9493}#
                                                    #{e\ 10685}#
                                                    #{x\ 10727}#
                                                    #{w\ 10686}#))
                                                (#{body\ 10733}#
                                                  (cons #{e1\ 10728}#
                                                        #{e2\ 10729}#)))
                                            (if (eq? #{m\ 10660}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 10732}#)
                                                (#{chi-top-sequence\ 9489}#
                                                  #{body\ 10733}#
                                                  #{r\ 10658}#
                                                  #{w\ 10686}#
                                                  #{s\ 10687}#
                                                  'e
                                                  '(eval)
                                                  #{mod\ 10688}#)
                                                (#{chi-void\ 9513}#))
                                              (if (memq 'load
                                                        #{when-list\ 10732}#)
                                                (if (let ((#{t\ 10742}#
                                                            (memq 'compile
                                                                  #{when-list\ 10732}#)))
                                                      (if #{t\ 10742}#
                                                        #{t\ 10742}#
                                                        (if (eq? #{m\ 10660}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 10732}#)
                                                          #f)))
                                                  (#{chi-top-sequence\ 9489}#
                                                    #{body\ 10733}#
                                                    #{r\ 10658}#
                                                    #{w\ 10686}#
                                                    #{s\ 10687}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 10688}#)
                                                  (if (memq #{m\ 10660}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 9489}#
                                                      #{body\ 10733}#
                                                      #{r\ 10658}#
                                                      #{w\ 10686}#
                                                      #{s\ 10687}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 10688}#)
                                                    (#{chi-void\ 9513}#)))
                                                (if (let ((#{t\ 10750}#
                                                            (memq 'compile
                                                                  #{when-list\ 10732}#)))
                                                      (if #{t\ 10750}#
                                                        #{t\ 10750}#
                                                        (if (eq? #{m\ 10660}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 10732}#)
                                                          #f)))
                                                  (begin
                                                    (#{top-level-eval-hook\ 9325}#
                                                      (#{chi-top-sequence\ 9489}#
                                                        #{body\ 10733}#
                                                        #{r\ 10658}#
                                                        #{w\ 10686}#
                                                        #{s\ 10687}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 10688}#)
                                                      #{mod\ 10688}#)
                                                    (#{chi-void\ 9513}#))
                                                  (#{chi-void\ 9513}#))))))
                                        #{tmp\ 10721}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 10720}#)))
                             ($sc-dispatch
                               #{tmp\ 10720}#
                               '(any each-any any . each-any))))
                          #{e\ 10685}#)
                         (if (memv #{type\ 10683}#
                                   '(define-syntax-form))
                           (let ((#{n\ 10758}#
                                   (#{id-var-name\ 9471}#
                                     #{value\ 10684}#
                                     #{w\ 10686}#))
                                 (#{r\ 10759}#
                                   (#{macros-only-env\ 9406}# #{r\ 10658}#)))
                             (if (memv #{m\ 10660}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 10661}#)
                                 (let ((#{e\ 10762}#
                                         (#{chi-install-global\ 9491}#
                                           #{n\ 10758}#
                                           (#{chi\ 9499}#
                                             #{e\ 10685}#
                                             #{r\ 10759}#
                                             #{w\ 10686}#
                                             #{mod\ 10688}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 9325}#
                                       #{e\ 10762}#
                                       #{mod\ 10688}#)
                                     (if (memq (quote load) #{esew\ 10661}#)
                                       #{e\ 10762}#
                                       (#{chi-void\ 9513}#))))
                                 (if (memq (quote load) #{esew\ 10661}#)
                                   (#{chi-install-global\ 9491}#
                                     #{n\ 10758}#
                                     (#{chi\ 9499}#
                                       #{e\ 10685}#
                                       #{r\ 10759}#
                                       #{w\ 10686}#
                                       #{mod\ 10688}#))
                                   (#{chi-void\ 9513}#)))
                               (if (memv #{m\ 10660}# (quote (c&e)))
                                 (let ((#{e\ 10765}#
                                         (#{chi-install-global\ 9491}#
                                           #{n\ 10758}#
                                           (#{chi\ 9499}#
                                             #{e\ 10685}#
                                             #{r\ 10759}#
                                             #{w\ 10686}#
                                             #{mod\ 10688}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 9325}#
                                       #{e\ 10765}#
                                       #{mod\ 10688}#)
                                     #{e\ 10765}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 10661}#)
                                     (#{top-level-eval-hook\ 9325}#
                                       (#{chi-install-global\ 9491}#
                                         #{n\ 10758}#
                                         (#{chi\ 9499}#
                                           #{e\ 10685}#
                                           #{r\ 10759}#
                                           #{w\ 10686}#
                                           #{mod\ 10688}#))
                                       #{mod\ 10688}#))
                                   (#{chi-void\ 9513}#)))))
                           (if (memv #{type\ 10683}# (quote (define-form)))
                             (let ((#{n\ 10770}#
                                     (#{id-var-name\ 9471}#
                                       #{value\ 10684}#
                                       #{w\ 10686}#)))
                               (let ((#{type\ 10772}#
                                       (#{binding-type\ 9397}#
                                         (#{lookup\ 9408}#
                                           #{n\ 10770}#
                                           #{r\ 10658}#
                                           #{mod\ 10688}#))))
                                 (if (memv #{type\ 10772}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (not (module-local-variable
                                                    (current-module)
                                                    #{n\ 10770}#))
                                           (current-module)
                                           #f)
                                       (let ((#{old\ 10777}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 10770}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 10770}#
                                           (if (variable? #{old\ 10777}#)
                                             (variable-ref #{old\ 10777}#)
                                             #f))))
                                     (let ((#{x\ 10780}#
                                             (#{build-global-definition\ 9354}#
                                               #{s\ 10687}#
                                               #{n\ 10770}#
                                               (#{chi\ 9499}#
                                                 #{e\ 10685}#
                                                 #{r\ 10658}#
                                                 #{w\ 10686}#
                                                 #{mod\ 10688}#))))
                                       (begin
                                         (if (eq? #{m\ 10660}# (quote c&e))
                                           (#{top-level-eval-hook\ 9325}#
                                             #{x\ 10780}#
                                             #{mod\ 10688}#))
                                         #{x\ 10780}#)))
                                   (if (memv #{type\ 10772}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 10685}#
                                       (#{wrap\ 9483}#
                                         #{value\ 10684}#
                                         #{w\ 10686}#
                                         #{mod\ 10688}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 10685}#
                                       (#{wrap\ 9483}#
                                         #{value\ 10684}#
                                         #{w\ 10686}#
                                         #{mod\ 10688}#))))))
                             (let ((#{x\ 10786}#
                                     (#{chi-expr\ 9501}#
                                       #{type\ 10683}#
                                       #{value\ 10684}#
                                       #{e\ 10685}#
                                       #{r\ 10658}#
                                       #{w\ 10686}#
                                       #{s\ 10687}#
                                       #{mod\ 10688}#)))
                               (begin
                                 (if (eq? #{m\ 10660}# (quote c&e))
                                   (#{top-level-eval-hook\ 9325}#
                                     #{x\ 10786}#
                                     #{mod\ 10688}#))
                                 #{x\ 10786}#)))))))))))
           (#{syntax-type\ 9495}#
             (lambda (#{e\ 10787}#
                      #{r\ 10788}#
                      #{w\ 10789}#
                      #{s\ 10790}#
                      #{rib\ 10791}#
                      #{mod\ 10792}#
                      #{for-car?\ 10793}#)
               (if (symbol? #{e\ 10787}#)
                 (let ((#{n\ 10805}#
                         (#{id-var-name\ 9471}# #{e\ 10787}# #{w\ 10789}#)))
                   (let ((#{b\ 10807}#
                           (#{lookup\ 9408}#
                             #{n\ 10805}#
                             #{r\ 10788}#
                             #{mod\ 10792}#)))
                     (let ((#{type\ 10809}#
                             (#{binding-type\ 9397}# #{b\ 10807}#)))
                       (if (memv #{type\ 10809}# (quote (lexical)))
                         (values
                           #{type\ 10809}#
                           (#{binding-value\ 9399}# #{b\ 10807}#)
                           #{e\ 10787}#
                           #{w\ 10789}#
                           #{s\ 10790}#
                           #{mod\ 10792}#)
                         (if (memv #{type\ 10809}# (quote (global)))
                           (values
                             #{type\ 10809}#
                             #{n\ 10805}#
                             #{e\ 10787}#
                             #{w\ 10789}#
                             #{s\ 10790}#
                             #{mod\ 10792}#)
                           (if (memv #{type\ 10809}# (quote (macro)))
                             (if #{for-car?\ 10793}#
                               (values
                                 #{type\ 10809}#
                                 (#{binding-value\ 9399}# #{b\ 10807}#)
                                 #{e\ 10787}#
                                 #{w\ 10789}#
                                 #{s\ 10790}#
                                 #{mod\ 10792}#)
                               (#{syntax-type\ 9495}#
                                 (#{chi-macro\ 9505}#
                                   (#{binding-value\ 9399}# #{b\ 10807}#)
                                   #{e\ 10787}#
                                   #{r\ 10788}#
                                   #{w\ 10789}#
                                   #{rib\ 10791}#
                                   #{mod\ 10792}#)
                                 #{r\ 10788}#
                                 '(())
                                 #{s\ 10790}#
                                 #{rib\ 10791}#
                                 #{mod\ 10792}#
                                 #f))
                             (values
                               #{type\ 10809}#
                               (#{binding-value\ 9399}# #{b\ 10807}#)
                               #{e\ 10787}#
                               #{w\ 10789}#
                               #{s\ 10790}#
                               #{mod\ 10792}#)))))))
                 (if (pair? #{e\ 10787}#)
                   (let ((#{first\ 10818}# (car #{e\ 10787}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 9495}#
                           #{first\ 10818}#
                           #{r\ 10788}#
                           #{w\ 10789}#
                           #{s\ 10790}#
                           #{rib\ 10791}#
                           #{mod\ 10792}#
                           #t))
                       (lambda (#{ftype\ 10819}#
                                #{fval\ 10820}#
                                #{fe\ 10821}#
                                #{fw\ 10822}#
                                #{fs\ 10823}#
                                #{fmod\ 10824}#)
                         (if (memv #{ftype\ 10819}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 10820}#
                             #{e\ 10787}#
                             #{w\ 10789}#
                             #{s\ 10790}#
                             #{mod\ 10792}#)
                           (if (memv #{ftype\ 10819}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 9376}#
                                 #{fval\ 10820}#
                                 #{w\ 10789}#
                                 #{fmod\ 10824}#)
                               #{e\ 10787}#
                               #{w\ 10789}#
                               #{s\ 10790}#
                               #{mod\ 10792}#)
                             (if (memv #{ftype\ 10819}# (quote (macro)))
                               (#{syntax-type\ 9495}#
                                 (#{chi-macro\ 9505}#
                                   #{fval\ 10820}#
                                   #{e\ 10787}#
                                   #{r\ 10788}#
                                   #{w\ 10789}#
                                   #{rib\ 10791}#
                                   #{mod\ 10792}#)
                                 #{r\ 10788}#
                                 '(())
                                 #{s\ 10790}#
                                 #{rib\ 10791}#
                                 #{mod\ 10792}#
                                 #{for-car?\ 10793}#)
                               (if (memv #{ftype\ 10819}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda () (#{fval\ 10820}# #{e\ 10787}#))
                                   (lambda (#{sym\ 10836}# #{mod\ 10837}#)
                                     (#{syntax-type\ 9495}#
                                       #{sym\ 10836}#
                                       #{r\ 10788}#
                                       #{w\ 10789}#
                                       #{s\ 10790}#
                                       #{rib\ 10791}#
                                       #{mod\ 10837}#
                                       #{for-car?\ 10793}#)))
                                 (if (memv #{ftype\ 10819}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 10820}#
                                     #{e\ 10787}#
                                     #{w\ 10789}#
                                     #{s\ 10790}#
                                     #{mod\ 10792}#)
                                   (if (memv #{ftype\ 10819}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 10820}#
                                       #{e\ 10787}#
                                       #{w\ 10789}#
                                       #{s\ 10790}#
                                       #{mod\ 10792}#)
                                     (if (memv #{ftype\ 10819}#
                                               '(begin))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 10787}#
                                         #{w\ 10789}#
                                         #{s\ 10790}#
                                         #{mod\ 10792}#)
                                       (if (memv #{ftype\ 10819}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 10787}#
                                           #{w\ 10789}#
                                           #{s\ 10790}#
                                           #{mod\ 10792}#)
                                         (if (memv #{ftype\ 10819}#
                                                   '(define))
                                           ((lambda (#{tmp\ 10845}#)
                                              ((lambda (#{tmp\ 10846}#)
                                                 (if (if #{tmp\ 10846}#
                                                       (apply (lambda (#{_\ 10850}#
                                                                       #{name\ 10851}#
                                                                       #{val\ 10852}#)
                                                                (#{id?\ 9414}#
                                                                  #{name\ 10851}#))
                                                              #{tmp\ 10846}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 10856}#
                                                                   #{name\ 10857}#
                                                                   #{val\ 10858}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 10857}#
                                                              #{val\ 10858}#
                                                              #{w\ 10789}#
                                                              #{s\ 10790}#
                                                              #{mod\ 10792}#))
                                                          #{tmp\ 10846}#)
                                                   ((lambda (#{tmp\ 10859}#)
                                                      (if (if #{tmp\ 10859}#
                                                            (apply (lambda (#{_\ 10865}#
                                                                            #{name\ 10866}#
                                                                            #{args\ 10867}#
                                                                            #{e1\ 10868}#
                                                                            #{e2\ 10869}#)
                                                                     (if (#{id?\ 9414}#
                                                                           #{name\ 10866}#)
                                                                       (#{valid-bound-ids?\ 9477}#
                                                                         (#{lambda-var-list\ 9529}#
                                                                           #{args\ 10867}#))
                                                                       #f))
                                                                   #{tmp\ 10859}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 10877}#
                                                                        #{name\ 10878}#
                                                                        #{args\ 10879}#
                                                                        #{e1\ 10880}#
                                                                        #{e2\ 10881}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 9483}#
                                                                     #{name\ 10878}#
                                                                     #{w\ 10789}#
                                                                     #{mod\ 10792}#)
                                                                   (#{decorate-source\ 9334}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i10872"
                                                                                   "i10873"
                                                                                   "i10874"
                                                                                   "i10875"
                                                                                   "i10876"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i10825"
                                                                                   "i10826"
                                                                                   "i10827"
                                                                                   "i10828"
                                                                                   "i10829"
                                                                                   "i10830"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i10817"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i10794"
                                                                                   "i10795"
                                                                                   "i10796"
                                                                                   "i10797"
                                                                                   "i10798"
                                                                                   "i10799"
                                                                                   "i10800"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*
                                                                                   noexpand)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i9528"
                                                                                  "i9526"
                                                                                  "i9524"
                                                                                  "i9522"
                                                                                  "i9520"
                                                                                  "i9518"
                                                                                  "i9516"
                                                                                  "i9514"
                                                                                  "i9512"
                                                                                  "i9510"
                                                                                  "i9508"
                                                                                  "i9506"
                                                                                  "i9504"
                                                                                  "i9502"
                                                                                  "i9500"
                                                                                  "i9498"
                                                                                  "i9496"
                                                                                  "i9494"
                                                                                  "i9492"
                                                                                  "i9490"
                                                                                  "i9488"
                                                                                  "i9486"
                                                                                  "i9484"
                                                                                  "i9482"
                                                                                  "i9480"
                                                                                  "i9478"
                                                                                  "i9476"
                                                                                  "i9474"
                                                                                  "i9472"
                                                                                  "i9470"
                                                                                  "i9468"
                                                                                  "i9466"
                                                                                  "i9464"
                                                                                  "i9462"
                                                                                  "i9460"
                                                                                  "i9458"
                                                                                  "i9457"
                                                                                  "i9456"
                                                                                  "i9454"
                                                                                  "i9453"
                                                                                  "i9452"
                                                                                  "i9451"
                                                                                  "i9450"
                                                                                  "i9448"
                                                                                  "i9446"
                                                                                  "i9444"
                                                                                  "i9442"
                                                                                  "i9440"
                                                                                  "i9438"
                                                                                  "i9436"
                                                                                  "i9434"
                                                                                  "i9431"
                                                                                  "i9429"
                                                                                  "i9428"
                                                                                  "i9427"
                                                                                  "i9426"
                                                                                  "i9425"
                                                                                  "i9424"
                                                                                  "i9422"
                                                                                  "i9420"
                                                                                  "i9418"
                                                                                  "i9416"
                                                                                  "i9415"
                                                                                  "i9413"
                                                                                  "i9411"
                                                                                  "i9409"
                                                                                  "i9407"
                                                                                  "i9405"
                                                                                  "i9403"
                                                                                  "i9401"
                                                                                  "i9400"
                                                                                  "i9398"
                                                                                  "i9396"
                                                                                  "i9395"
                                                                                  "i9394"
                                                                                  "i9392"
                                                                                  "i9391"
                                                                                  "i9389"
                                                                                  "i9387"
                                                                                  "i9385"
                                                                                  "i9383"
                                                                                  "i9381"
                                                                                  "i9379"
                                                                                  "i9377"
                                                                                  "i9375"
                                                                                  "i9373"
                                                                                  "i9371"
                                                                                  "i9369"
                                                                                  "i9367"
                                                                                  "i9365"
                                                                                  "i9363"
                                                                                  "i9361"
                                                                                  "i9359"
                                                                                  "i9357"
                                                                                  "i9355"
                                                                                  "i9353"
                                                                                  "i9351"
                                                                                  "i9349"
                                                                                  "i9347"
                                                                                  "i9345"
                                                                                  "i9343"
                                                                                  "i9341"
                                                                                  "i9339"
                                                                                  "i9337"
                                                                                  "i9335"
                                                                                  "i9333"
                                                                                  "i9331"
                                                                                  "i9329"
                                                                                  "i9328"
                                                                                  "i9326"
                                                                                  "i9324"
                                                                                  "i9322"
                                                                                  "i9320"
                                                                                  "i9318"
                                                                                  "i9316"
                                                                                  "i9314"
                                                                                  "i9312"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i9215"
                                                                                  "i9213")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 9483}#
                                                                             (cons #{args\ 10879}#
                                                                                   (cons #{e1\ 10880}#
                                                                                         #{e2\ 10881}#))
                                                                             #{w\ 10789}#
                                                                             #{mod\ 10792}#))
                                                                     #{s\ 10790}#)
                                                                   '(())
                                                                   #{s\ 10790}#
                                                                   #{mod\ 10792}#))
                                                               #{tmp\ 10859}#)
                                                        ((lambda (#{tmp\ 10884}#)
                                                           (if (if #{tmp\ 10884}#
                                                                 (apply (lambda (#{_\ 10887}#
                                                                                 #{name\ 10888}#)
                                                                          (#{id?\ 9414}#
                                                                            #{name\ 10888}#))
                                                                        #{tmp\ 10884}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 10891}#
                                                                             #{name\ 10892}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 9483}#
                                                                          #{name\ 10892}#
                                                                          #{w\ 10789}#
                                                                          #{mod\ 10792}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i10889"
                                                                                 "i10890"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10825"
                                                                                 "i10826"
                                                                                 "i10827"
                                                                                 "i10828"
                                                                                 "i10829"
                                                                                 "i10830"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i10817"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10794"
                                                                                 "i10795"
                                                                                 "i10796"
                                                                                 "i10797"
                                                                                 "i10798"
                                                                                 "i10799"
                                                                                 "i10800"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i9528"
                                                                                "i9526"
                                                                                "i9524"
                                                                                "i9522"
                                                                                "i9520"
                                                                                "i9518"
                                                                                "i9516"
                                                                                "i9514"
                                                                                "i9512"
                                                                                "i9510"
                                                                                "i9508"
                                                                                "i9506"
                                                                                "i9504"
                                                                                "i9502"
                                                                                "i9500"
                                                                                "i9498"
                                                                                "i9496"
                                                                                "i9494"
                                                                                "i9492"
                                                                                "i9490"
                                                                                "i9488"
                                                                                "i9486"
                                                                                "i9484"
                                                                                "i9482"
                                                                                "i9480"
                                                                                "i9478"
                                                                                "i9476"
                                                                                "i9474"
                                                                                "i9472"
                                                                                "i9470"
                                                                                "i9468"
                                                                                "i9466"
                                                                                "i9464"
                                                                                "i9462"
                                                                                "i9460"
                                                                                "i9458"
                                                                                "i9457"
                                                                                "i9456"
                                                                                "i9454"
                                                                                "i9453"
                                                                                "i9452"
                                                                                "i9451"
                                                                                "i9450"
                                                                                "i9448"
                                                                                "i9446"
                                                                                "i9444"
                                                                                "i9442"
                                                                                "i9440"
                                                                                "i9438"
                                                                                "i9436"
                                                                                "i9434"
                                                                                "i9431"
                                                                                "i9429"
                                                                                "i9428"
                                                                                "i9427"
                                                                                "i9426"
                                                                                "i9425"
                                                                                "i9424"
                                                                                "i9422"
                                                                                "i9420"
                                                                                "i9418"
                                                                                "i9416"
                                                                                "i9415"
                                                                                "i9413"
                                                                                "i9411"
                                                                                "i9409"
                                                                                "i9407"
                                                                                "i9405"
                                                                                "i9403"
                                                                                "i9401"
                                                                                "i9400"
                                                                                "i9398"
                                                                                "i9396"
                                                                                "i9395"
                                                                                "i9394"
                                                                                "i9392"
                                                                                "i9391"
                                                                                "i9389"
                                                                                "i9387"
                                                                                "i9385"
                                                                                "i9383"
                                                                                "i9381"
                                                                                "i9379"
                                                                                "i9377"
                                                                                "i9375"
                                                                                "i9373"
                                                                                "i9371"
                                                                                "i9369"
                                                                                "i9367"
                                                                                "i9365"
                                                                                "i9363"
                                                                                "i9361"
                                                                                "i9359"
                                                                                "i9357"
                                                                                "i9355"
                                                                                "i9353"
                                                                                "i9351"
                                                                                "i9349"
                                                                                "i9347"
                                                                                "i9345"
                                                                                "i9343"
                                                                                "i9341"
                                                                                "i9339"
                                                                                "i9337"
                                                                                "i9335"
                                                                                "i9333"
                                                                                "i9331"
                                                                                "i9329"
                                                                                "i9328"
                                                                                "i9326"
                                                                                "i9324"
                                                                                "i9322"
                                                                                "i9320"
                                                                                "i9318"
                                                                                "i9316"
                                                                                "i9314"
                                                                                "i9312"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i9215"
                                                                                "i9213")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i10889"
                                                                                 "i10890"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10825"
                                                                                 "i10826"
                                                                                 "i10827"
                                                                                 "i10828"
                                                                                 "i10829"
                                                                                 "i10830"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i10817"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10794"
                                                                                 "i10795"
                                                                                 "i10796"
                                                                                 "i10797"
                                                                                 "i10798"
                                                                                 "i10799"
                                                                                 "i10800"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i9528"
                                                                                "i9526"
                                                                                "i9524"
                                                                                "i9522"
                                                                                "i9520"
                                                                                "i9518"
                                                                                "i9516"
                                                                                "i9514"
                                                                                "i9512"
                                                                                "i9510"
                                                                                "i9508"
                                                                                "i9506"
                                                                                "i9504"
                                                                                "i9502"
                                                                                "i9500"
                                                                                "i9498"
                                                                                "i9496"
                                                                                "i9494"
                                                                                "i9492"
                                                                                "i9490"
                                                                                "i9488"
                                                                                "i9486"
                                                                                "i9484"
                                                                                "i9482"
                                                                                "i9480"
                                                                                "i9478"
                                                                                "i9476"
                                                                                "i9474"
                                                                                "i9472"
                                                                                "i9470"
                                                                                "i9468"
                                                                                "i9466"
                                                                                "i9464"
                                                                                "i9462"
                                                                                "i9460"
                                                                                "i9458"
                                                                                "i9457"
                                                                                "i9456"
                                                                                "i9454"
                                                                                "i9453"
                                                                                "i9452"
                                                                                "i9451"
                                                                                "i9450"
                                                                                "i9448"
                                                                                "i9446"
                                                                                "i9444"
                                                                                "i9442"
                                                                                "i9440"
                                                                                "i9438"
                                                                                "i9436"
                                                                                "i9434"
                                                                                "i9431"
                                                                                "i9429"
                                                                                "i9428"
                                                                                "i9427"
                                                                                "i9426"
                                                                                "i9425"
                                                                                "i9424"
                                                                                "i9422"
                                                                                "i9420"
                                                                                "i9418"
                                                                                "i9416"
                                                                                "i9415"
                                                                                "i9413"
                                                                                "i9411"
                                                                                "i9409"
                                                                                "i9407"
                                                                                "i9405"
                                                                                "i9403"
                                                                                "i9401"
                                                                                "i9400"
                                                                                "i9398"
                                                                                "i9396"
                                                                                "i9395"
                                                                                "i9394"
                                                                                "i9392"
                                                                                "i9391"
                                                                                "i9389"
                                                                                "i9387"
                                                                                "i9385"
                                                                                "i9383"
                                                                                "i9381"
                                                                                "i9379"
                                                                                "i9377"
                                                                                "i9375"
                                                                                "i9373"
                                                                                "i9371"
                                                                                "i9369"
                                                                                "i9367"
                                                                                "i9365"
                                                                                "i9363"
                                                                                "i9361"
                                                                                "i9359"
                                                                                "i9357"
                                                                                "i9355"
                                                                                "i9353"
                                                                                "i9351"
                                                                                "i9349"
                                                                                "i9347"
                                                                                "i9345"
                                                                                "i9343"
                                                                                "i9341"
                                                                                "i9339"
                                                                                "i9337"
                                                                                "i9335"
                                                                                "i9333"
                                                                                "i9331"
                                                                                "i9329"
                                                                                "i9328"
                                                                                "i9326"
                                                                                "i9324"
                                                                                "i9322"
                                                                                "i9320"
                                                                                "i9318"
                                                                                "i9316"
                                                                                "i9314"
                                                                                "i9312"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i9215"
                                                                                "i9213")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i10889"
                                                                                 "i10890"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10825"
                                                                                 "i10826"
                                                                                 "i10827"
                                                                                 "i10828"
                                                                                 "i10829"
                                                                                 "i10830"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i10817"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i10794"
                                                                                 "i10795"
                                                                                 "i10796"
                                                                                 "i10797"
                                                                                 "i10798"
                                                                                 "i10799"
                                                                                 "i10800"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i9528"
                                                                                "i9526"
                                                                                "i9524"
                                                                                "i9522"
                                                                                "i9520"
                                                                                "i9518"
                                                                                "i9516"
                                                                                "i9514"
                                                                                "i9512"
                                                                                "i9510"
                                                                                "i9508"
                                                                                "i9506"
                                                                                "i9504"
                                                                                "i9502"
                                                                                "i9500"
                                                                                "i9498"
                                                                                "i9496"
                                                                                "i9494"
                                                                                "i9492"
                                                                                "i9490"
                                                                                "i9488"
                                                                                "i9486"
                                                                                "i9484"
                                                                                "i9482"
                                                                                "i9480"
                                                                                "i9478"
                                                                                "i9476"
                                                                                "i9474"
                                                                                "i9472"
                                                                                "i9470"
                                                                                "i9468"
                                                                                "i9466"
                                                                                "i9464"
                                                                                "i9462"
                                                                                "i9460"
                                                                                "i9458"
                                                                                "i9457"
                                                                                "i9456"
                                                                                "i9454"
                                                                                "i9453"
                                                                                "i9452"
                                                                                "i9451"
                                                                                "i9450"
                                                                                "i9448"
                                                                                "i9446"
                                                                                "i9444"
                                                                                "i9442"
                                                                                "i9440"
                                                                                "i9438"
                                                                                "i9436"
                                                                                "i9434"
                                                                                "i9431"
                                                                                "i9429"
                                                                                "i9428"
                                                                                "i9427"
                                                                                "i9426"
                                                                                "i9425"
                                                                                "i9424"
                                                                                "i9422"
                                                                                "i9420"
                                                                                "i9418"
                                                                                "i9416"
                                                                                "i9415"
                                                                                "i9413"
                                                                                "i9411"
                                                                                "i9409"
                                                                                "i9407"
                                                                                "i9405"
                                                                                "i9403"
                                                                                "i9401"
                                                                                "i9400"
                                                                                "i9398"
                                                                                "i9396"
                                                                                "i9395"
                                                                                "i9394"
                                                                                "i9392"
                                                                                "i9391"
                                                                                "i9389"
                                                                                "i9387"
                                                                                "i9385"
                                                                                "i9383"
                                                                                "i9381"
                                                                                "i9379"
                                                                                "i9377"
                                                                                "i9375"
                                                                                "i9373"
                                                                                "i9371"
                                                                                "i9369"
                                                                                "i9367"
                                                                                "i9365"
                                                                                "i9363"
                                                                                "i9361"
                                                                                "i9359"
                                                                                "i9357"
                                                                                "i9355"
                                                                                "i9353"
                                                                                "i9351"
                                                                                "i9349"
                                                                                "i9347"
                                                                                "i9345"
                                                                                "i9343"
                                                                                "i9341"
                                                                                "i9339"
                                                                                "i9337"
                                                                                "i9335"
                                                                                "i9333"
                                                                                "i9331"
                                                                                "i9329"
                                                                                "i9328"
                                                                                "i9326"
                                                                                "i9324"
                                                                                "i9322"
                                                                                "i9320"
                                                                                "i9318"
                                                                                "i9316"
                                                                                "i9314"
                                                                                "i9312"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i9215"
                                                                                "i9213")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 10790}#
                                                                        #{mod\ 10792}#))
                                                                    #{tmp\ 10884}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 10845}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 10845}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 10845}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 10845}#
                                                 '(any any any))))
                                            #{e\ 10787}#)
                                           (if (memv #{ftype\ 10819}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 10895}#)
                                                ((lambda (#{tmp\ 10896}#)
                                                   (if (if #{tmp\ 10896}#
                                                         (apply (lambda (#{_\ 10900}#
                                                                         #{name\ 10901}#
                                                                         #{val\ 10902}#)
                                                                  (#{id?\ 9414}#
                                                                    #{name\ 10901}#))
                                                                #{tmp\ 10896}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 10906}#
                                                                     #{name\ 10907}#
                                                                     #{val\ 10908}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 10907}#
                                                                #{val\ 10908}#
                                                                #{w\ 10789}#
                                                                #{s\ 10790}#
                                                                #{mod\ 10792}#))
                                                            #{tmp\ 10896}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 10895}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 10895}#
                                                   '(any any any))))
                                              #{e\ 10787}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 10787}#
                                               #{w\ 10789}#
                                               #{s\ 10790}#
                                               #{mod\ 10792}#))))))))))))))
                   (if (#{syntax-object?\ 9378}# #{e\ 10787}#)
                     (#{syntax-type\ 9495}#
                       (#{syntax-object-expression\ 9380}# #{e\ 10787}#)
                       #{r\ 10788}#
                       (#{join-wraps\ 9465}#
                         #{w\ 10789}#
                         (#{syntax-object-wrap\ 9382}# #{e\ 10787}#))
                       #{s\ 10790}#
                       #{rib\ 10791}#
                       (let ((#{t\ 10914}#
                               (#{syntax-object-module\ 9384}# #{e\ 10787}#)))
                         (if #{t\ 10914}# #{t\ 10914}# #{mod\ 10792}#))
                       #{for-car?\ 10793}#)
                     (if (self-evaluating? #{e\ 10787}#)
                       (values
                         'constant
                         #f
                         #{e\ 10787}#
                         #{w\ 10789}#
                         #{s\ 10790}#
                         #{mod\ 10792}#)
                       (values
                         'other
                         #f
                         #{e\ 10787}#
                         #{w\ 10789}#
                         #{s\ 10790}#
                         #{mod\ 10792}#)))))))
           (#{chi-when-list\ 9493}#
             (lambda (#{e\ 10919}# #{when-list\ 10920}# #{w\ 10921}#)
               (letrec ((#{f\ 10928}#
                          (lambda (#{when-list\ 10929}# #{situations\ 10930}#)
                            (if (null? #{when-list\ 10929}#)
                              #{situations\ 10930}#
                              (#{f\ 10928}#
                                (cdr #{when-list\ 10929}#)
                                (cons (let ((#{x\ 10932}#
                                              (car #{when-list\ 10929}#)))
                                        (if (#{free-id=?\ 9473}#
                                              #{x\ 10932}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i10931"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i10925"
                                                      "i10926"
                                                      "i10927"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i10922"
                                                      "i10923"
                                                      "i10924"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*
                                                      noexpand)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i9528"
                                                     "i9526"
                                                     "i9524"
                                                     "i9522"
                                                     "i9520"
                                                     "i9518"
                                                     "i9516"
                                                     "i9514"
                                                     "i9512"
                                                     "i9510"
                                                     "i9508"
                                                     "i9506"
                                                     "i9504"
                                                     "i9502"
                                                     "i9500"
                                                     "i9498"
                                                     "i9496"
                                                     "i9494"
                                                     "i9492"
                                                     "i9490"
                                                     "i9488"
                                                     "i9486"
                                                     "i9484"
                                                     "i9482"
                                                     "i9480"
                                                     "i9478"
                                                     "i9476"
                                                     "i9474"
                                                     "i9472"
                                                     "i9470"
                                                     "i9468"
                                                     "i9466"
                                                     "i9464"
                                                     "i9462"
                                                     "i9460"
                                                     "i9458"
                                                     "i9457"
                                                     "i9456"
                                                     "i9454"
                                                     "i9453"
                                                     "i9452"
                                                     "i9451"
                                                     "i9450"
                                                     "i9448"
                                                     "i9446"
                                                     "i9444"
                                                     "i9442"
                                                     "i9440"
                                                     "i9438"
                                                     "i9436"
                                                     "i9434"
                                                     "i9431"
                                                     "i9429"
                                                     "i9428"
                                                     "i9427"
                                                     "i9426"
                                                     "i9425"
                                                     "i9424"
                                                     "i9422"
                                                     "i9420"
                                                     "i9418"
                                                     "i9416"
                                                     "i9415"
                                                     "i9413"
                                                     "i9411"
                                                     "i9409"
                                                     "i9407"
                                                     "i9405"
                                                     "i9403"
                                                     "i9401"
                                                     "i9400"
                                                     "i9398"
                                                     "i9396"
                                                     "i9395"
                                                     "i9394"
                                                     "i9392"
                                                     "i9391"
                                                     "i9389"
                                                     "i9387"
                                                     "i9385"
                                                     "i9383"
                                                     "i9381"
                                                     "i9379"
                                                     "i9377"
                                                     "i9375"
                                                     "i9373"
                                                     "i9371"
                                                     "i9369"
                                                     "i9367"
                                                     "i9365"
                                                     "i9363"
                                                     "i9361"
                                                     "i9359"
                                                     "i9357"
                                                     "i9355"
                                                     "i9353"
                                                     "i9351"
                                                     "i9349"
                                                     "i9347"
                                                     "i9345"
                                                     "i9343"
                                                     "i9341"
                                                     "i9339"
                                                     "i9337"
                                                     "i9335"
                                                     "i9333"
                                                     "i9331"
                                                     "i9329"
                                                     "i9328"
                                                     "i9326"
                                                     "i9324"
                                                     "i9322"
                                                     "i9320"
                                                     "i9318"
                                                     "i9316"
                                                     "i9314"
                                                     "i9312"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i9215" "i9213")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 9473}#
                                                #{x\ 10932}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i10931"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i10925"
                                                        "i10926"
                                                        "i10927"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i10922"
                                                        "i10923"
                                                        "i10924"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i9528"
                                                       "i9526"
                                                       "i9524"
                                                       "i9522"
                                                       "i9520"
                                                       "i9518"
                                                       "i9516"
                                                       "i9514"
                                                       "i9512"
                                                       "i9510"
                                                       "i9508"
                                                       "i9506"
                                                       "i9504"
                                                       "i9502"
                                                       "i9500"
                                                       "i9498"
                                                       "i9496"
                                                       "i9494"
                                                       "i9492"
                                                       "i9490"
                                                       "i9488"
                                                       "i9486"
                                                       "i9484"
                                                       "i9482"
                                                       "i9480"
                                                       "i9478"
                                                       "i9476"
                                                       "i9474"
                                                       "i9472"
                                                       "i9470"
                                                       "i9468"
                                                       "i9466"
                                                       "i9464"
                                                       "i9462"
                                                       "i9460"
                                                       "i9458"
                                                       "i9457"
                                                       "i9456"
                                                       "i9454"
                                                       "i9453"
                                                       "i9452"
                                                       "i9451"
                                                       "i9450"
                                                       "i9448"
                                                       "i9446"
                                                       "i9444"
                                                       "i9442"
                                                       "i9440"
                                                       "i9438"
                                                       "i9436"
                                                       "i9434"
                                                       "i9431"
                                                       "i9429"
                                                       "i9428"
                                                       "i9427"
                                                       "i9426"
                                                       "i9425"
                                                       "i9424"
                                                       "i9422"
                                                       "i9420"
                                                       "i9418"
                                                       "i9416"
                                                       "i9415"
                                                       "i9413"
                                                       "i9411"
                                                       "i9409"
                                                       "i9407"
                                                       "i9405"
                                                       "i9403"
                                                       "i9401"
                                                       "i9400"
                                                       "i9398"
                                                       "i9396"
                                                       "i9395"
                                                       "i9394"
                                                       "i9392"
                                                       "i9391"
                                                       "i9389"
                                                       "i9387"
                                                       "i9385"
                                                       "i9383"
                                                       "i9381"
                                                       "i9379"
                                                       "i9377"
                                                       "i9375"
                                                       "i9373"
                                                       "i9371"
                                                       "i9369"
                                                       "i9367"
                                                       "i9365"
                                                       "i9363"
                                                       "i9361"
                                                       "i9359"
                                                       "i9357"
                                                       "i9355"
                                                       "i9353"
                                                       "i9351"
                                                       "i9349"
                                                       "i9347"
                                                       "i9345"
                                                       "i9343"
                                                       "i9341"
                                                       "i9339"
                                                       "i9337"
                                                       "i9335"
                                                       "i9333"
                                                       "i9331"
                                                       "i9329"
                                                       "i9328"
                                                       "i9326"
                                                       "i9324"
                                                       "i9322"
                                                       "i9320"
                                                       "i9318"
                                                       "i9316"
                                                       "i9314"
                                                       "i9312"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i9215" "i9213")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 9473}#
                                                  #{x\ 10932}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i10931"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i10925"
                                                          "i10926"
                                                          "i10927"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i10922"
                                                          "i10923"
                                                          "i10924"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*
                                                          noexpand)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i9528"
                                                         "i9526"
                                                         "i9524"
                                                         "i9522"
                                                         "i9520"
                                                         "i9518"
                                                         "i9516"
                                                         "i9514"
                                                         "i9512"
                                                         "i9510"
                                                         "i9508"
                                                         "i9506"
                                                         "i9504"
                                                         "i9502"
                                                         "i9500"
                                                         "i9498"
                                                         "i9496"
                                                         "i9494"
                                                         "i9492"
                                                         "i9490"
                                                         "i9488"
                                                         "i9486"
                                                         "i9484"
                                                         "i9482"
                                                         "i9480"
                                                         "i9478"
                                                         "i9476"
                                                         "i9474"
                                                         "i9472"
                                                         "i9470"
                                                         "i9468"
                                                         "i9466"
                                                         "i9464"
                                                         "i9462"
                                                         "i9460"
                                                         "i9458"
                                                         "i9457"
                                                         "i9456"
                                                         "i9454"
                                                         "i9453"
                                                         "i9452"
                                                         "i9451"
                                                         "i9450"
                                                         "i9448"
                                                         "i9446"
                                                         "i9444"
                                                         "i9442"
                                                         "i9440"
                                                         "i9438"
                                                         "i9436"
                                                         "i9434"
                                                         "i9431"
                                                         "i9429"
                                                         "i9428"
                                                         "i9427"
                                                         "i9426"
                                                         "i9425"
                                                         "i9424"
                                                         "i9422"
                                                         "i9420"
                                                         "i9418"
                                                         "i9416"
                                                         "i9415"
                                                         "i9413"
                                                         "i9411"
                                                         "i9409"
                                                         "i9407"
                                                         "i9405"
                                                         "i9403"
                                                         "i9401"
                                                         "i9400"
                                                         "i9398"
                                                         "i9396"
                                                         "i9395"
                                                         "i9394"
                                                         "i9392"
                                                         "i9391"
                                                         "i9389"
                                                         "i9387"
                                                         "i9385"
                                                         "i9383"
                                                         "i9381"
                                                         "i9379"
                                                         "i9377"
                                                         "i9375"
                                                         "i9373"
                                                         "i9371"
                                                         "i9369"
                                                         "i9367"
                                                         "i9365"
                                                         "i9363"
                                                         "i9361"
                                                         "i9359"
                                                         "i9357"
                                                         "i9355"
                                                         "i9353"
                                                         "i9351"
                                                         "i9349"
                                                         "i9347"
                                                         "i9345"
                                                         "i9343"
                                                         "i9341"
                                                         "i9339"
                                                         "i9337"
                                                         "i9335"
                                                         "i9333"
                                                         "i9331"
                                                         "i9329"
                                                         "i9328"
                                                         "i9326"
                                                         "i9324"
                                                         "i9322"
                                                         "i9320"
                                                         "i9318"
                                                         "i9316"
                                                         "i9314"
                                                         "i9312"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i9215" "i9213")))
                                                     (hygiene guile)))
                                              'eval
                                              (syntax-violation
                                                'eval-when
                                                "invalid situation"
                                                #{e\ 10919}#
                                                (#{wrap\ 9483}#
                                                  #{x\ 10932}#
                                                  #{w\ 10921}#
                                                  #f))))))
                                      #{situations\ 10930}#))))))
                 (#{f\ 10928}# #{when-list\ 10920}# (quote ())))))
           (#{chi-install-global\ 9491}#
             (lambda (#{name\ 10940}# #{e\ 10941}#)
               (#{build-global-definition\ 9354}#
                 #f
                 #{name\ 10940}#
                 (#{build-application\ 9338}#
                   #f
                   (#{build-primref\ 9362}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 9364}# #f #{name\ 10940}#)
                         (#{build-data\ 9364}# #f (quote macro))
                         (#{build-application\ 9338}#
                           #f
                           (#{build-primref\ 9362}# #f (quote cons))
                           (list #{e\ 10941}#
                                 (#{build-application\ 9338}#
                                   #f
                                   (#{build-primref\ 9362}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 9338}#
                                           #f
                                           (#{build-primref\ 9362}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 9489}#
             (lambda (#{body\ 10955}#
                      #{r\ 10956}#
                      #{w\ 10957}#
                      #{s\ 10958}#
                      #{m\ 10959}#
                      #{esew\ 10960}#
                      #{mod\ 10961}#)
               (#{build-sequence\ 9366}#
                 #{s\ 10958}#
                 (letrec ((#{dobody\ 10976}#
                            (lambda (#{body\ 10977}#
                                     #{r\ 10978}#
                                     #{w\ 10979}#
                                     #{m\ 10980}#
                                     #{esew\ 10981}#
                                     #{mod\ 10982}#)
                              (if (null? #{body\ 10977}#)
                                '()
                                (let ((#{first\ 10984}#
                                        (#{chi-top\ 9497}#
                                          (car #{body\ 10977}#)
                                          #{r\ 10978}#
                                          #{w\ 10979}#
                                          #{m\ 10980}#
                                          #{esew\ 10981}#
                                          #{mod\ 10982}#)))
                                  (cons #{first\ 10984}#
                                        (#{dobody\ 10976}#
                                          (cdr #{body\ 10977}#)
                                          #{r\ 10978}#
                                          #{w\ 10979}#
                                          #{m\ 10980}#
                                          #{esew\ 10981}#
                                          #{mod\ 10982}#)))))))
                   (#{dobody\ 10976}#
                     #{body\ 10955}#
                     #{r\ 10956}#
                     #{w\ 10957}#
                     #{m\ 10959}#
                     #{esew\ 10960}#
                     #{mod\ 10961}#)))))
           (#{chi-sequence\ 9487}#
             (lambda (#{body\ 10985}#
                      #{r\ 10986}#
                      #{w\ 10987}#
                      #{s\ 10988}#
                      #{mod\ 10989}#)
               (#{build-sequence\ 9366}#
                 #{s\ 10988}#
                 (letrec ((#{dobody\ 11000}#
                            (lambda (#{body\ 11001}#
                                     #{r\ 11002}#
                                     #{w\ 11003}#
                                     #{mod\ 11004}#)
                              (if (null? #{body\ 11001}#)
                                '()
                                (let ((#{first\ 11006}#
                                        (#{chi\ 9499}#
                                          (car #{body\ 11001}#)
                                          #{r\ 11002}#
                                          #{w\ 11003}#
                                          #{mod\ 11004}#)))
                                  (cons #{first\ 11006}#
                                        (#{dobody\ 11000}#
                                          (cdr #{body\ 11001}#)
                                          #{r\ 11002}#
                                          #{w\ 11003}#
                                          #{mod\ 11004}#)))))))
                   (#{dobody\ 11000}#
                     #{body\ 10985}#
                     #{r\ 10986}#
                     #{w\ 10987}#
                     #{mod\ 10989}#)))))
           (#{source-wrap\ 9485}#
             (lambda (#{x\ 11007}#
                      #{w\ 11008}#
                      #{s\ 11009}#
                      #{defmod\ 11010}#)
               (#{wrap\ 9483}#
                 (#{decorate-source\ 9334}#
                   #{x\ 11007}#
                   #{s\ 11009}#)
                 #{w\ 11008}#
                 #{defmod\ 11010}#)))
           (#{wrap\ 9483}#
             (lambda (#{x\ 11015}# #{w\ 11016}# #{defmod\ 11017}#)
               (if (if (null? (#{wrap-marks\ 9421}# #{w\ 11016}#))
                     (null? (#{wrap-subst\ 9423}# #{w\ 11016}#))
                     #f)
                 #{x\ 11015}#
                 (if (#{syntax-object?\ 9378}# #{x\ 11015}#)
                   (#{make-syntax-object\ 9376}#
                     (#{syntax-object-expression\ 9380}# #{x\ 11015}#)
                     (#{join-wraps\ 9465}#
                       #{w\ 11016}#
                       (#{syntax-object-wrap\ 9382}# #{x\ 11015}#))
                     (#{syntax-object-module\ 9384}# #{x\ 11015}#))
                   (if (null? #{x\ 11015}#)
                     #{x\ 11015}#
                     (#{make-syntax-object\ 9376}#
                       #{x\ 11015}#
                       #{w\ 11016}#
                       #{defmod\ 11017}#))))))
           (#{bound-id-member?\ 9481}#
             (lambda (#{x\ 11030}# #{list\ 11031}#)
               (if (not (null? #{list\ 11031}#))
                 (let ((#{t\ 11038}#
                         (#{bound-id=?\ 9475}#
                           #{x\ 11030}#
                           (car #{list\ 11031}#))))
                   (if #{t\ 11038}#
                     #{t\ 11038}#
                     (#{bound-id-member?\ 9481}#
                       #{x\ 11030}#
                       (cdr #{list\ 11031}#))))
                 #f)))
           (#{distinct-bound-ids?\ 9479}#
             (lambda (#{ids\ 11040}#)
               (letrec ((#{distinct?\ 11044}#
                          (lambda (#{ids\ 11045}#)
                            (let ((#{t\ 11048}# (null? #{ids\ 11045}#)))
                              (if #{t\ 11048}#
                                #{t\ 11048}#
                                (if (not (#{bound-id-member?\ 9481}#
                                           (car #{ids\ 11045}#)
                                           (cdr #{ids\ 11045}#)))
                                  (#{distinct?\ 11044}# (cdr #{ids\ 11045}#))
                                  #f))))))
                 (#{distinct?\ 11044}# #{ids\ 11040}#))))
           (#{valid-bound-ids?\ 9477}#
             (lambda (#{ids\ 11052}#)
               (if (letrec ((#{all-ids?\ 11057}#
                              (lambda (#{ids\ 11058}#)
                                (let ((#{t\ 11061}# (null? #{ids\ 11058}#)))
                                  (if #{t\ 11061}#
                                    #{t\ 11061}#
                                    (if (#{id?\ 9414}# (car #{ids\ 11058}#))
                                      (#{all-ids?\ 11057}#
                                        (cdr #{ids\ 11058}#))
                                      #f))))))
                     (#{all-ids?\ 11057}# #{ids\ 11052}#))
                 (#{distinct-bound-ids?\ 9479}# #{ids\ 11052}#)
                 #f)))
           (#{bound-id=?\ 9475}#
             (lambda (#{i\ 11066}# #{j\ 11067}#)
               (if (if (#{syntax-object?\ 9378}# #{i\ 11066}#)
                     (#{syntax-object?\ 9378}# #{j\ 11067}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 9380}# #{i\ 11066}#)
                          (#{syntax-object-expression\ 9380}# #{j\ 11067}#))
                   (#{same-marks?\ 9469}#
                     (#{wrap-marks\ 9421}#
                       (#{syntax-object-wrap\ 9382}# #{i\ 11066}#))
                     (#{wrap-marks\ 9421}#
                       (#{syntax-object-wrap\ 9382}# #{j\ 11067}#)))
                   #f)
                 (eq? #{i\ 11066}# #{j\ 11067}#))))
           (#{free-id=?\ 9473}#
             (lambda (#{i\ 11074}# #{j\ 11075}#)
               (if (eq? (let ((#{x\ 11081}# #{i\ 11074}#))
                          (if (#{syntax-object?\ 9378}# #{x\ 11081}#)
                            (#{syntax-object-expression\ 9380}# #{x\ 11081}#)
                            #{x\ 11081}#))
                        (let ((#{x\ 11084}# #{j\ 11075}#))
                          (if (#{syntax-object?\ 9378}# #{x\ 11084}#)
                            (#{syntax-object-expression\ 9380}# #{x\ 11084}#)
                            #{x\ 11084}#)))
                 (eq? (#{id-var-name\ 9471}# #{i\ 11074}# (quote (())))
                      (#{id-var-name\ 9471}# #{j\ 11075}# (quote (()))))
                 #f)))
           (#{id-var-name\ 9471}#
             (lambda (#{id\ 11088}# #{w\ 11089}#)
               (letrec ((#{search-vector-rib\ 11098}#
                          (lambda (#{sym\ 11110}#
                                   #{subst\ 11111}#
                                   #{marks\ 11112}#
                                   #{symnames\ 11113}#
                                   #{ribcage\ 11114}#)
                            (let ((#{n\ 11121}#
                                    (vector-length #{symnames\ 11113}#)))
                              (letrec ((#{f\ 11124}#
                                         (lambda (#{i\ 11125}#)
                                           (if (#{fx=\ 9321}#
                                                 #{i\ 11125}#
                                                 #{n\ 11121}#)
                                             (#{search\ 11094}#
                                               #{sym\ 11110}#
                                               (cdr #{subst\ 11111}#)
                                               #{marks\ 11112}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 11113}#
                                                            #{i\ 11125}#)
                                                          #{sym\ 11110}#)
                                                   (#{same-marks?\ 9469}#
                                                     #{marks\ 11112}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 9441}#
                                                         #{ribcage\ 11114}#)
                                                       #{i\ 11125}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 9443}#
                                                     #{ribcage\ 11114}#)
                                                   #{i\ 11125}#)
                                                 #{marks\ 11112}#)
                                               (#{f\ 11124}#
                                                 (#{fx+\ 9317}#
                                                   #{i\ 11125}#
                                                   1)))))))
                                (#{f\ 11124}# 0)))))
                        (#{search-list-rib\ 11096}#
                          (lambda (#{sym\ 11133}#
                                   #{subst\ 11134}#
                                   #{marks\ 11135}#
                                   #{symnames\ 11136}#
                                   #{ribcage\ 11137}#)
                            (letrec ((#{f\ 11146}#
                                       (lambda (#{symnames\ 11147}#
                                                #{i\ 11148}#)
                                         (if (null? #{symnames\ 11147}#)
                                           (#{search\ 11094}#
                                             #{sym\ 11133}#
                                             (cdr #{subst\ 11134}#)
                                             #{marks\ 11135}#)
                                           (if (if (eq? (car #{symnames\ 11147}#)
                                                        #{sym\ 11133}#)
                                                 (#{same-marks?\ 9469}#
                                                   #{marks\ 11135}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 9441}#
                                                       #{ribcage\ 11137}#)
                                                     #{i\ 11148}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 9443}#
                                                   #{ribcage\ 11137}#)
                                                 #{i\ 11148}#)
                                               #{marks\ 11135}#)
                                             (#{f\ 11146}#
                                               (cdr #{symnames\ 11147}#)
                                               (#{fx+\ 9317}#
                                                 #{i\ 11148}#
                                                 1)))))))
                              (#{f\ 11146}# #{symnames\ 11136}# 0))))
                        (#{search\ 11094}#
                          (lambda (#{sym\ 11156}#
                                   #{subst\ 11157}#
                                   #{marks\ 11158}#)
                            (if (null? #{subst\ 11157}#)
                              (values #f #{marks\ 11158}#)
                              (let ((#{fst\ 11163}# (car #{subst\ 11157}#)))
                                (if (eq? #{fst\ 11163}# (quote shift))
                                  (#{search\ 11094}#
                                    #{sym\ 11156}#
                                    (cdr #{subst\ 11157}#)
                                    (cdr #{marks\ 11158}#))
                                  (let ((#{symnames\ 11165}#
                                          (#{ribcage-symnames\ 9439}#
                                            #{fst\ 11163}#)))
                                    (if (vector? #{symnames\ 11165}#)
                                      (#{search-vector-rib\ 11098}#
                                        #{sym\ 11156}#
                                        #{subst\ 11157}#
                                        #{marks\ 11158}#
                                        #{symnames\ 11165}#
                                        #{fst\ 11163}#)
                                      (#{search-list-rib\ 11096}#
                                        #{sym\ 11156}#
                                        #{subst\ 11157}#
                                        #{marks\ 11158}#
                                        #{symnames\ 11165}#
                                        #{fst\ 11163}#)))))))))
                 (if (symbol? #{id\ 11088}#)
                   (let ((#{t\ 11168}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 11094}#
                                 #{id\ 11088}#
                                 (#{wrap-subst\ 9423}# #{w\ 11089}#)
                                 (#{wrap-marks\ 9421}# #{w\ 11089}#)))
                             (lambda (#{x\ 11170}# . #{ignore\ 11171}#)
                               #{x\ 11170}#))))
                     (if #{t\ 11168}# #{t\ 11168}# #{id\ 11088}#))
                   (if (#{syntax-object?\ 9378}# #{id\ 11088}#)
                     (let ((#{id\ 11179}#
                             (#{syntax-object-expression\ 9380}#
                               #{id\ 11088}#))
                           (#{w1\ 11180}#
                             (#{syntax-object-wrap\ 9382}# #{id\ 11088}#)))
                       (let ((#{marks\ 11182}#
                               (#{join-marks\ 9467}#
                                 (#{wrap-marks\ 9421}# #{w\ 11089}#)
                                 (#{wrap-marks\ 9421}# #{w1\ 11180}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 11094}#
                               #{id\ 11179}#
                               (#{wrap-subst\ 9423}# #{w\ 11089}#)
                               #{marks\ 11182}#))
                           (lambda (#{new-id\ 11183}# #{marks\ 11184}#)
                             (let ((#{t\ 11189}# #{new-id\ 11183}#))
                               (if #{t\ 11189}#
                                 #{t\ 11189}#
                                 (let ((#{t\ 11192}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 11094}#
                                               #{id\ 11179}#
                                               (#{wrap-subst\ 9423}#
                                                 #{w1\ 11180}#)
                                               #{marks\ 11184}#))
                                           (lambda (#{x\ 11194}#
                                                    .
                                                    #{ignore\ 11195}#)
                                             #{x\ 11194}#))))
                                   (if #{t\ 11192}#
                                     #{t\ 11192}#
                                     #{id\ 11179}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 11088}#))))))
           (#{same-marks?\ 9469}#
             (lambda (#{x\ 11200}# #{y\ 11201}#)
               (let ((#{t\ 11206}# (eq? #{x\ 11200}# #{y\ 11201}#)))
                 (if #{t\ 11206}#
                   #{t\ 11206}#
                   (if (not (null? #{x\ 11200}#))
                     (if (not (null? #{y\ 11201}#))
                       (if (eq? (car #{x\ 11200}#) (car #{y\ 11201}#))
                         (#{same-marks?\ 9469}#
                           (cdr #{x\ 11200}#)
                           (cdr #{y\ 11201}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 9467}#
             (lambda (#{m1\ 11212}# #{m2\ 11213}#)
               (#{smart-append\ 9463}#
                 #{m1\ 11212}#
                 #{m2\ 11213}#)))
           (#{join-wraps\ 9465}#
             (lambda (#{w1\ 11216}# #{w2\ 11217}#)
               (let ((#{m1\ 11222}#
                       (#{wrap-marks\ 9421}# #{w1\ 11216}#))
                     (#{s1\ 11223}#
                       (#{wrap-subst\ 9423}# #{w1\ 11216}#)))
                 (if (null? #{m1\ 11222}#)
                   (if (null? #{s1\ 11223}#)
                     #{w2\ 11217}#
                     (#{make-wrap\ 9419}#
                       (#{wrap-marks\ 9421}# #{w2\ 11217}#)
                       (#{smart-append\ 9463}#
                         #{s1\ 11223}#
                         (#{wrap-subst\ 9423}# #{w2\ 11217}#))))
                   (#{make-wrap\ 9419}#
                     (#{smart-append\ 9463}#
                       #{m1\ 11222}#
                       (#{wrap-marks\ 9421}# #{w2\ 11217}#))
                     (#{smart-append\ 9463}#
                       #{s1\ 11223}#
                       (#{wrap-subst\ 9423}# #{w2\ 11217}#)))))))
           (#{smart-append\ 9463}#
             (lambda (#{m1\ 11224}# #{m2\ 11225}#)
               (if (null? #{m2\ 11225}#)
                 #{m1\ 11224}#
                 (append #{m1\ 11224}# #{m2\ 11225}#))))
           (#{make-binding-wrap\ 9461}#
             (lambda (#{ids\ 11228}# #{labels\ 11229}# #{w\ 11230}#)
               (if (null? #{ids\ 11228}#)
                 #{w\ 11230}#
                 (#{make-wrap\ 9419}#
                   (#{wrap-marks\ 9421}# #{w\ 11230}#)
                   (cons (let ((#{labelvec\ 11235}#
                                 (list->vector #{labels\ 11229}#)))
                           (let ((#{n\ 11237}#
                                   (vector-length #{labelvec\ 11235}#)))
                             (let ((#{symnamevec\ 11240}#
                                     (make-vector #{n\ 11237}#))
                                   (#{marksvec\ 11241}#
                                     (make-vector #{n\ 11237}#)))
                               (begin
                                 (letrec ((#{f\ 11245}#
                                            (lambda (#{ids\ 11246}#
                                                     #{i\ 11247}#)
                                              (if (not (null? #{ids\ 11246}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 9417}#
                                                      (car #{ids\ 11246}#)
                                                      #{w\ 11230}#))
                                                  (lambda (#{symname\ 11248}#
                                                           #{marks\ 11249}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 11240}#
                                                        #{i\ 11247}#
                                                        #{symname\ 11248}#)
                                                      (vector-set!
                                                        #{marksvec\ 11241}#
                                                        #{i\ 11247}#
                                                        #{marks\ 11249}#)
                                                      (#{f\ 11245}#
                                                        (cdr #{ids\ 11246}#)
                                                        (#{fx+\ 9317}#
                                                          #{i\ 11247}#
                                                          1)))))))))
                                   (#{f\ 11245}# #{ids\ 11228}# 0))
                                 (#{make-ribcage\ 9435}#
                                   #{symnamevec\ 11240}#
                                   #{marksvec\ 11241}#
                                   #{labelvec\ 11235}#)))))
                         (#{wrap-subst\ 9423}# #{w\ 11230}#))))))
           (#{extend-ribcage!\ 9459}#
             (lambda (#{ribcage\ 11252}#
                      #{id\ 11253}#
                      #{label\ 11254}#)
               (begin
                 (#{set-ribcage-symnames!\ 9445}#
                   #{ribcage\ 11252}#
                   (cons (#{syntax-object-expression\ 9380}#
                           #{id\ 11253}#)
                         (#{ribcage-symnames\ 9439}# #{ribcage\ 11252}#)))
                 (#{set-ribcage-marks!\ 9447}#
                   #{ribcage\ 11252}#
                   (cons (#{wrap-marks\ 9421}#
                           (#{syntax-object-wrap\ 9382}# #{id\ 11253}#))
                         (#{ribcage-marks\ 9441}# #{ribcage\ 11252}#)))
                 (#{set-ribcage-labels!\ 9449}#
                   #{ribcage\ 11252}#
                   (cons #{label\ 11254}#
                         (#{ribcage-labels\ 9443}# #{ribcage\ 11252}#))))))
           (#{anti-mark\ 9455}#
             (lambda (#{w\ 11258}#)
               (#{make-wrap\ 9419}#
                 (cons #f (#{wrap-marks\ 9421}# #{w\ 11258}#))
                 (cons 'shift
                       (#{wrap-subst\ 9423}# #{w\ 11258}#)))))
           (#{set-ribcage-labels!\ 9449}#
             (lambda (#{x\ 11261}# #{update\ 11262}#)
               (vector-set! #{x\ 11261}# 3 #{update\ 11262}#)))
           (#{set-ribcage-marks!\ 9447}#
             (lambda (#{x\ 11265}# #{update\ 11266}#)
               (vector-set! #{x\ 11265}# 2 #{update\ 11266}#)))
           (#{set-ribcage-symnames!\ 9445}#
             (lambda (#{x\ 11269}# #{update\ 11270}#)
               (vector-set! #{x\ 11269}# 1 #{update\ 11270}#)))
           (#{ribcage-labels\ 9443}#
             (lambda (#{x\ 11273}#)
               (vector-ref #{x\ 11273}# 3)))
           (#{ribcage-marks\ 9441}#
             (lambda (#{x\ 11275}#)
               (vector-ref #{x\ 11275}# 2)))
           (#{ribcage-symnames\ 9439}#
             (lambda (#{x\ 11277}#)
               (vector-ref #{x\ 11277}# 1)))
           (#{ribcage?\ 9437}#
             (lambda (#{x\ 11279}#)
               (if (vector? #{x\ 11279}#)
                 (if (= (vector-length #{x\ 11279}#) 4)
                   (eq? (vector-ref #{x\ 11279}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 9435}#
             (lambda (#{symnames\ 11284}#
                      #{marks\ 11285}#
                      #{labels\ 11286}#)
               (vector
                 'ribcage
                 #{symnames\ 11284}#
                 #{marks\ 11285}#
                 #{labels\ 11286}#)))
           (#{gen-labels\ 9432}#
             (lambda (#{ls\ 11290}#)
               (if (null? #{ls\ 11290}#)
                 '()
                 (cons (#{gen-label\ 9430}#)
                       (#{gen-labels\ 9432}# (cdr #{ls\ 11290}#))))))
           (#{gen-label\ 9430}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 9423}# cdr)
           (#{wrap-marks\ 9421}# car)
           (#{make-wrap\ 9419}# cons)
           (#{id-sym-name&marks\ 9417}#
             (lambda (#{x\ 11292}# #{w\ 11293}#)
               (if (#{syntax-object?\ 9378}# #{x\ 11292}#)
                 (values
                   (#{syntax-object-expression\ 9380}# #{x\ 11292}#)
                   (#{join-marks\ 9467}#
                     (#{wrap-marks\ 9421}# #{w\ 11293}#)
                     (#{wrap-marks\ 9421}#
                       (#{syntax-object-wrap\ 9382}# #{x\ 11292}#))))
                 (values
                   #{x\ 11292}#
                   (#{wrap-marks\ 9421}# #{w\ 11293}#)))))
           (#{id?\ 9414}#
             (lambda (#{x\ 11296}#)
               (if (symbol? #{x\ 11296}#)
                 #t
                 (if (#{syntax-object?\ 9378}# #{x\ 11296}#)
                   (symbol?
                     (#{syntax-object-expression\ 9380}# #{x\ 11296}#))
                   #f))))
           (#{nonsymbol-id?\ 9412}#
             (lambda (#{x\ 11303}#)
               (if (#{syntax-object?\ 9378}# #{x\ 11303}#)
                 (symbol?
                   (#{syntax-object-expression\ 9380}# #{x\ 11303}#))
                 #f)))
           (#{global-extend\ 9410}#
             (lambda (#{type\ 11307}# #{sym\ 11308}# #{val\ 11309}#)
               (#{put-global-definition-hook\ 9330}#
                 #{sym\ 11308}#
                 #{type\ 11307}#
                 #{val\ 11309}#)))
           (#{lookup\ 9408}#
             (lambda (#{x\ 11313}# #{r\ 11314}# #{mod\ 11315}#)
               (let ((#{t\ 11321}# (assq #{x\ 11313}# #{r\ 11314}#)))
                 (if #{t\ 11321}#
                   (cdr #{t\ 11321}#)
                   (if (symbol? #{x\ 11313}#)
                     (let ((#{t\ 11327}#
                             (#{get-global-definition-hook\ 9332}#
                               #{x\ 11313}#
                               #{mod\ 11315}#)))
                       (if #{t\ 11327}# #{t\ 11327}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 9406}#
             (lambda (#{r\ 11332}#)
               (if (null? #{r\ 11332}#)
                 '()
                 (let ((#{a\ 11335}# (car #{r\ 11332}#)))
                   (if (eq? (cadr #{a\ 11335}#) (quote macro))
                     (cons #{a\ 11335}#
                           (#{macros-only-env\ 9406}# (cdr #{r\ 11332}#)))
                     (#{macros-only-env\ 9406}# (cdr #{r\ 11332}#)))))))
           (#{extend-var-env\ 9404}#
             (lambda (#{labels\ 11336}# #{vars\ 11337}# #{r\ 11338}#)
               (if (null? #{labels\ 11336}#)
                 #{r\ 11338}#
                 (#{extend-var-env\ 9404}#
                   (cdr #{labels\ 11336}#)
                   (cdr #{vars\ 11337}#)
                   (cons (cons (car #{labels\ 11336}#)
                               (cons (quote lexical) (car #{vars\ 11337}#)))
                         #{r\ 11338}#)))))
           (#{extend-env\ 9402}#
             (lambda (#{labels\ 11343}#
                      #{bindings\ 11344}#
                      #{r\ 11345}#)
               (if (null? #{labels\ 11343}#)
                 #{r\ 11345}#
                 (#{extend-env\ 9402}#
                   (cdr #{labels\ 11343}#)
                   (cdr #{bindings\ 11344}#)
                   (cons (cons (car #{labels\ 11343}#)
                               (car #{bindings\ 11344}#))
                         #{r\ 11345}#)))))
           (#{binding-value\ 9399}# cdr)
           (#{binding-type\ 9397}# car)
           (#{source-annotation\ 9393}#
             (lambda (#{x\ 11349}#)
               (if (#{syntax-object?\ 9378}# #{x\ 11349}#)
                 (#{source-annotation\ 9393}#
                   (#{syntax-object-expression\ 9380}# #{x\ 11349}#))
                 (if (pair? #{x\ 11349}#)
                   (let ((#{props\ 11356}#
                           (source-properties #{x\ 11349}#)))
                     (if (pair? #{props\ 11356}#) #{props\ 11356}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 9390}#
             (lambda (#{x\ 11358}# #{update\ 11359}#)
               (vector-set! #{x\ 11358}# 3 #{update\ 11359}#)))
           (#{set-syntax-object-wrap!\ 9388}#
             (lambda (#{x\ 11362}# #{update\ 11363}#)
               (vector-set! #{x\ 11362}# 2 #{update\ 11363}#)))
           (#{set-syntax-object-expression!\ 9386}#
             (lambda (#{x\ 11366}# #{update\ 11367}#)
               (vector-set! #{x\ 11366}# 1 #{update\ 11367}#)))
           (#{syntax-object-module\ 9384}#
             (lambda (#{x\ 11370}#)
               (vector-ref #{x\ 11370}# 3)))
           (#{syntax-object-wrap\ 9382}#
             (lambda (#{x\ 11372}#)
               (vector-ref #{x\ 11372}# 2)))
           (#{syntax-object-expression\ 9380}#
             (lambda (#{x\ 11374}#)
               (vector-ref #{x\ 11374}# 1)))
           (#{syntax-object?\ 9378}#
             (lambda (#{x\ 11376}#)
               (if (vector? #{x\ 11376}#)
                 (if (= (vector-length #{x\ 11376}#) 4)
                   (eq? (vector-ref #{x\ 11376}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 9376}#
             (lambda (#{expression\ 11381}#
                      #{wrap\ 11382}#
                      #{module\ 11383}#)
               (vector
                 'syntax-object
                 #{expression\ 11381}#
                 #{wrap\ 11382}#
                 #{module\ 11383}#)))
           (#{build-letrec\ 9372}#
             (lambda (#{src\ 11387}#
                      #{ids\ 11388}#
                      #{vars\ 11389}#
                      #{val-exps\ 11390}#
                      #{body-exp\ 11391}#)
               (if (null? #{vars\ 11389}#)
                 #{body-exp\ 11391}#
                 (let ((#{atom-key\ 11399}#
                         (fluid-ref #{*mode*\ 9315}#)))
                   (if (memv #{atom-key\ 11399}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 9352}#
                         #{ids\ 11388}#
                         #{val-exps\ 11390}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 11387}#
                        #{ids\ 11388}#
                        #{vars\ 11389}#
                        #{val-exps\ 11390}#
                        #{body-exp\ 11391}#))
                     (#{decorate-source\ 9334}#
                       (list 'letrec
                             (map list #{vars\ 11389}# #{val-exps\ 11390}#)
                             #{body-exp\ 11391}#)
                       #{src\ 11387}#))))))
           (#{build-named-let\ 9370}#
             (lambda (#{src\ 11403}#
                      #{ids\ 11404}#
                      #{vars\ 11405}#
                      #{val-exps\ 11406}#
                      #{body-exp\ 11407}#)
               (let ((#{f\ 11417}# (car #{vars\ 11405}#))
                     (#{f-name\ 11418}# (car #{ids\ 11404}#))
                     (#{vars\ 11419}# (cdr #{vars\ 11405}#))
                     (#{ids\ 11420}# (cdr #{ids\ 11404}#)))
                 (let ((#{atom-key\ 11423}#
                         (fluid-ref #{*mode*\ 9315}#)))
                   (if (memv #{atom-key\ 11423}# (quote (c)))
                     (let ((#{proc\ 11426}#
                             (#{build-simple-lambda\ 9356}#
                               #{src\ 11403}#
                               #{ids\ 11420}#
                               #f
                               #{vars\ 11419}#
                               #f
                               #{body-exp\ 11407}#)))
                       (begin
                         (#{maybe-name-value!\ 9352}#
                           #{f-name\ 11418}#
                           #{proc\ 11426}#)
                         (for-each
                           #{maybe-name-value!\ 9352}#
                           #{ids\ 11420}#
                           #{val-exps\ 11406}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 11403}#
                          (list #{f-name\ 11418}#)
                          (list #{f\ 11417}#)
                          (list #{proc\ 11426}#)
                          (#{build-application\ 9338}#
                            #{src\ 11403}#
                            (#{build-lexical-reference\ 9342}#
                              'fun
                              #{src\ 11403}#
                              #{f-name\ 11418}#
                              #{f\ 11417}#)
                            #{val-exps\ 11406}#))))
                     (#{decorate-source\ 9334}#
                       (list 'letrec
                             (list (list #{f\ 11417}#
                                         (list 'lambda
                                               #{vars\ 11419}#
                                               #{body-exp\ 11407}#)))
                             (cons #{f\ 11417}# #{val-exps\ 11406}#))
                       #{src\ 11403}#))))))
           (#{build-let\ 9368}#
             (lambda (#{src\ 11429}#
                      #{ids\ 11430}#
                      #{vars\ 11431}#
                      #{val-exps\ 11432}#
                      #{body-exp\ 11433}#)
               (if (null? #{vars\ 11431}#)
                 #{body-exp\ 11433}#
                 (let ((#{atom-key\ 11441}#
                         (fluid-ref #{*mode*\ 9315}#)))
                   (if (memv #{atom-key\ 11441}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 9352}#
                         #{ids\ 11430}#
                         #{val-exps\ 11432}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 11429}#
                        #{ids\ 11430}#
                        #{vars\ 11431}#
                        #{val-exps\ 11432}#
                        #{body-exp\ 11433}#))
                     (#{decorate-source\ 9334}#
                       (list 'let
                             (map list #{vars\ 11431}# #{val-exps\ 11432}#)
                             #{body-exp\ 11433}#)
                       #{src\ 11429}#))))))
           (#{build-sequence\ 9366}#
             (lambda (#{src\ 11445}# #{exps\ 11446}#)
               (if (null? (cdr #{exps\ 11446}#))
                 (car #{exps\ 11446}#)
                 (let ((#{atom-key\ 11451}#
                         (fluid-ref #{*mode*\ 9315}#)))
                   (if (memv #{atom-key\ 11451}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 11445}#
                      #{exps\ 11446}#)
                     (#{decorate-source\ 9334}#
                       (cons (quote begin) #{exps\ 11446}#)
                       #{src\ 11445}#))))))
           (#{build-data\ 9364}#
             (lambda (#{src\ 11455}# #{exp\ 11456}#)
               (let ((#{atom-key\ 11461}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11461}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 11455}#
                    #{exp\ 11456}#)
                   (#{decorate-source\ 9334}#
                     (if (if (self-evaluating? #{exp\ 11456}#)
                           (not (vector? #{exp\ 11456}#))
                           #f)
                       #{exp\ 11456}#
                       (list (quote quote) #{exp\ 11456}#))
                     #{src\ 11455}#)))))
           (#{build-primref\ 9362}#
             (lambda (#{src\ 11466}# #{name\ 11467}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 11472}#
                         (fluid-ref #{*mode*\ 9315}#)))
                   (if (memv #{atom-key\ 11472}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 11466}#
                      #{name\ 11467}#)
                     (#{decorate-source\ 9334}#
                       #{name\ 11467}#
                       #{src\ 11466}#)))
                 (let ((#{atom-key\ 11477}#
                         (fluid-ref #{*mode*\ 9315}#)))
                   (if (memv #{atom-key\ 11477}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 11466}#
                      '(guile)
                      #{name\ 11467}#
                      #f)
                     (#{decorate-source\ 9334}#
                       (list (quote @@) (quote (guile)) #{name\ 11467}#)
                       #{src\ 11466}#))))))
           (#{build-lambda-case\ 9360}#
             (lambda (#{src\ 11481}#
                      #{req\ 11482}#
                      #{opt\ 11483}#
                      #{rest\ 11484}#
                      #{kw\ 11485}#
                      #{inits\ 11486}#
                      #{vars\ 11487}#
                      #{body\ 11488}#
                      #{else-case\ 11489}#)
               (let ((#{atom-key\ 11501}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11501}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 11481}#
                    #{req\ 11482}#
                    #{opt\ 11483}#
                    #{rest\ 11484}#
                    #{kw\ 11485}#
                    #{inits\ 11486}#
                    #{vars\ 11487}#
                    #{body\ 11488}#
                    #{else-case\ 11489}#)
                   (let ((#{nreq\ 11506}# (length #{req\ 11482}#)))
                     (let ((#{nopt\ 11508}#
                             (if #{opt\ 11483}# (length #{opt\ 11483}#) 0)))
                       (let ((#{rest-idx\ 11510}#
                               (if #{rest\ 11484}#
                                 (+ #{nreq\ 11506}# #{nopt\ 11508}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 11514}#
                                 (if #{kw\ 11485}# (car #{kw\ 11485}#) #f)))
                           (let ((#{kw-indices\ 11516}#
                                   (map (lambda (#{x\ 11517}#)
                                          (cons (car #{x\ 11517}#)
                                                (list-index
                                                  #{vars\ 11487}#
                                                  (caddr #{x\ 11517}#))))
                                        (if #{kw\ 11485}#
                                          (cdr #{kw\ 11485}#)
                                          '()))))
                             (let ((#{nargs\ 11520}#
                                     (apply max
                                            (+ #{nreq\ 11506}#
                                               #{nopt\ 11508}#
                                               (if #{rest\ 11484}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 11516}#)))))
                               (begin
                                 (let ((#{t\ 11523}#
                                         (= #{nargs\ 11520}#
                                            (length #{vars\ 11487}#)
                                            (+ #{nreq\ 11506}#
                                               (length #{inits\ 11486}#)
                                               (if #{rest\ 11484}# 1 0)))))
                                   (if #{t\ 11523}#
                                     #{t\ 11523}#
                                     (error "something went wrong"
                                            #{req\ 11482}#
                                            #{opt\ 11483}#
                                            #{rest\ 11484}#
                                            #{kw\ 11485}#
                                            #{inits\ 11486}#
                                            #{vars\ 11487}#
                                            #{nreq\ 11506}#
                                            #{nopt\ 11508}#
                                            #{kw-indices\ 11516}#
                                            #{nargs\ 11520}#)))
                                 (#{decorate-source\ 9334}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 11506}#
                                                                       #{nopt\ 11508}#
                                                                       #{rest-idx\ 11510}#
                                                                       #{nargs\ 11520}#
                                                                       #{allow-other-keys?\ 11514}#
                                                                       #{kw-indices\ 11516}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 11526}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 11487}#
                                                                                    #{i\ 11526}#))
                                                                            #{inits\ 11486}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 11487}#
                                                                       #{body\ 11488}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 11531}#
                                                 #{else-case\ 11489}#))
                                           (if #{t\ 11531}#
                                             #{t\ 11531}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 11481}#))))))))))))
           (#{build-case-lambda\ 9358}#
             (lambda (#{src\ 11534}#
                      #{docstring\ 11535}#
                      #{body\ 11536}#)
               (let ((#{atom-key\ 11542}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11542}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 11534}#
                    (if #{docstring\ 11535}#
                      (list (cons (quote documentation) #{docstring\ 11535}#))
                      '())
                    #{body\ 11536}#)
                   (#{decorate-source\ 9334}#
                     (cons 'lambda
                           (cons '%%args
                                 (append
                                   (if #{docstring\ 11535}#
                                     (list #{docstring\ 11535}#)
                                     '())
                                   (list (cons 'cond
                                               #{body\ 11536}#)))))
                     #{src\ 11534}#)))))
           (#{build-simple-lambda\ 9356}#
             (lambda (#{src\ 11547}#
                      #{req\ 11548}#
                      #{rest\ 11549}#
                      #{vars\ 11550}#
                      #{docstring\ 11551}#
                      #{exp\ 11552}#)
               (let ((#{atom-key\ 11561}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11561}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 11547}#
                    (if #{docstring\ 11551}#
                      (list (cons (quote documentation) #{docstring\ 11551}#))
                      '())
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 11547}#
                     #{req\ 11548}#
                     #f
                     #{rest\ 11549}#
                     #f
                     '()
                     #{vars\ 11550}#
                     #{exp\ 11552}#
                     #f))
                   (#{decorate-source\ 9334}#
                     (cons 'lambda
                           (cons (if #{rest\ 11549}#
                                   (apply cons* #{vars\ 11550}#)
                                   #{vars\ 11550}#)
                                 (append
                                   (if #{docstring\ 11551}#
                                     (list #{docstring\ 11551}#)
                                     '())
                                   (list #{exp\ 11552}#))))
                     #{src\ 11547}#)))))
           (#{build-global-definition\ 9354}#
             (lambda (#{source\ 11566}# #{var\ 11567}# #{exp\ 11568}#)
               (let ((#{atom-key\ 11574}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11574}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 9352}#
                       #{var\ 11567}#
                       #{exp\ 11568}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 11566}#
                      #{var\ 11567}#
                      #{exp\ 11568}#))
                   (#{decorate-source\ 9334}#
                     (list 'define
                           #{var\ 11567}#
                           #{exp\ 11568}#)
                     #{source\ 11566}#)))))
           (#{maybe-name-value!\ 9352}#
             (lambda (#{name\ 11578}# #{val\ 11579}#)
               (if ((@ (language tree-il) lambda?) #{val\ 11579}#)
                 (let ((#{meta\ 11585}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 11579}#)))
                   (if (not (assq (quote name) #{meta\ 11585}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 11579}#
                      (acons 'name
                             #{name\ 11578}#
                             #{meta\ 11585}#)))))))
           (#{build-global-assignment\ 9350}#
             (lambda (#{source\ 11586}#
                      #{var\ 11587}#
                      #{exp\ 11588}#
                      #{mod\ 11589}#)
               (#{analyze-variable\ 9346}#
                 #{mod\ 11589}#
                 #{var\ 11587}#
                 (lambda (#{mod\ 11594}#
                          #{var\ 11595}#
                          #{public?\ 11596}#)
                   (let ((#{atom-key\ 11602}#
                           (fluid-ref #{*mode*\ 9315}#)))
                     (if (memv #{atom-key\ 11602}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 11586}#
                        #{mod\ 11594}#
                        #{var\ 11595}#
                        #{public?\ 11596}#
                        #{exp\ 11588}#)
                       (#{decorate-source\ 9334}#
                         (list 'set!
                               (list (if #{public?\ 11596}#
                                       '@
                                       '@@)
                                     #{mod\ 11594}#
                                     #{var\ 11595}#)
                               #{exp\ 11588}#)
                         #{source\ 11586}#))))
                 (lambda (#{var\ 11606}#)
                   (let ((#{atom-key\ 11610}#
                           (fluid-ref #{*mode*\ 9315}#)))
                     (if (memv #{atom-key\ 11610}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 11586}#
                        #{var\ 11606}#
                        #{exp\ 11588}#)
                       (#{decorate-source\ 9334}#
                         (list (quote set!) #{var\ 11606}# #{exp\ 11588}#)
                         #{source\ 11586}#)))))))
           (#{build-global-reference\ 9348}#
             (lambda (#{source\ 11614}# #{var\ 11615}# #{mod\ 11616}#)
               (#{analyze-variable\ 9346}#
                 #{mod\ 11616}#
                 #{var\ 11615}#
                 (lambda (#{mod\ 11620}#
                          #{var\ 11621}#
                          #{public?\ 11622}#)
                   (let ((#{atom-key\ 11628}#
                           (fluid-ref #{*mode*\ 9315}#)))
                     (if (memv #{atom-key\ 11628}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 11614}#
                        #{mod\ 11620}#
                        #{var\ 11621}#
                        #{public?\ 11622}#)
                       (#{decorate-source\ 9334}#
                         (list (if #{public?\ 11622}# (quote @) (quote @@))
                               #{mod\ 11620}#
                               #{var\ 11621}#)
                         #{source\ 11614}#))))
                 (lambda (#{var\ 11631}#)
                   (let ((#{atom-key\ 11635}#
                           (fluid-ref #{*mode*\ 9315}#)))
                     (if (memv #{atom-key\ 11635}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 11614}#
                        #{var\ 11631}#)
                       (#{decorate-source\ 9334}#
                         #{var\ 11631}#
                         #{source\ 11614}#)))))))
           (#{analyze-variable\ 9346}#
             (lambda (#{mod\ 11638}#
                      #{var\ 11639}#
                      #{modref-cont\ 11640}#
                      #{bare-cont\ 11641}#)
               (if (not #{mod\ 11638}#)
                 (#{bare-cont\ 11641}# #{var\ 11639}#)
                 (let ((#{kind\ 11648}# (car #{mod\ 11638}#))
                       (#{mod\ 11649}# (cdr #{mod\ 11638}#)))
                   (if (memv #{kind\ 11648}# (quote (public)))
                     (#{modref-cont\ 11640}#
                       #{mod\ 11649}#
                       #{var\ 11639}#
                       #t)
                     (if (memv #{kind\ 11648}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 11649}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 11640}#
                           #{mod\ 11649}#
                           #{var\ 11639}#
                           #f)
                         (#{bare-cont\ 11641}# #{var\ 11639}#))
                       (if (memv #{kind\ 11648}# (quote (bare)))
                         (#{bare-cont\ 11641}# #{var\ 11639}#)
                         (if (memv #{kind\ 11648}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 11649}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 11649}#)
                                   #{var\ 11639}#)
                                 #f)
                             (#{modref-cont\ 11640}#
                               #{mod\ 11649}#
                               #{var\ 11639}#
                               #f)
                             (#{bare-cont\ 11641}# #{var\ 11639}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 11639}#
                             #{mod\ 11649}#)))))))))
           (#{build-lexical-assignment\ 9344}#
             (lambda (#{source\ 11657}#
                      #{name\ 11658}#
                      #{var\ 11659}#
                      #{exp\ 11660}#)
               (let ((#{atom-key\ 11667}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11667}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 11657}#
                    #{name\ 11658}#
                    #{var\ 11659}#
                    #{exp\ 11660}#)
                   (#{decorate-source\ 9334}#
                     (list (quote set!) #{var\ 11659}# #{exp\ 11660}#)
                     #{source\ 11657}#)))))
           (#{build-lexical-reference\ 9342}#
             (lambda (#{type\ 11671}#
                      #{source\ 11672}#
                      #{name\ 11673}#
                      #{var\ 11674}#)
               (let ((#{atom-key\ 11681}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11681}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 11672}#
                    #{name\ 11673}#
                    #{var\ 11674}#)
                   (#{decorate-source\ 9334}#
                     #{var\ 11674}#
                     #{source\ 11672}#)))))
           (#{build-conditional\ 9340}#
             (lambda (#{source\ 11684}#
                      #{test-exp\ 11685}#
                      #{then-exp\ 11686}#
                      #{else-exp\ 11687}#)
               (let ((#{atom-key\ 11694}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11694}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 11684}#
                    #{test-exp\ 11685}#
                    #{then-exp\ 11686}#
                    #{else-exp\ 11687}#)
                   (#{decorate-source\ 9334}#
                     (if (equal? #{else-exp\ 11687}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 11685}#
                             #{then-exp\ 11686}#)
                       (list 'if
                             #{test-exp\ 11685}#
                             #{then-exp\ 11686}#
                             #{else-exp\ 11687}#))
                     #{source\ 11684}#)))))
           (#{build-application\ 9338}#
             (lambda (#{source\ 11699}#
                      #{fun-exp\ 11700}#
                      #{arg-exps\ 11701}#)
               (let ((#{atom-key\ 11707}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11707}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 11699}#
                    #{fun-exp\ 11700}#
                    #{arg-exps\ 11701}#)
                   (#{decorate-source\ 9334}#
                     (cons #{fun-exp\ 11700}# #{arg-exps\ 11701}#)
                     #{source\ 11699}#)))))
           (#{build-void\ 9336}#
             (lambda (#{source\ 11711}#)
               (let ((#{atom-key\ 11715}#
                       (fluid-ref #{*mode*\ 9315}#)))
                 (if (memv #{atom-key\ 11715}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 11711}#)
                   (#{decorate-source\ 9334}#
                     '(if #f #f)
                     #{source\ 11711}#)))))
           (#{decorate-source\ 9334}#
             (lambda (#{e\ 11718}# #{s\ 11719}#)
               (begin
                 (if (if (pair? #{e\ 11718}#) #{s\ 11719}# #f)
                   (set-source-properties!
                     #{e\ 11718}#
                     #{s\ 11719}#))
                 #{e\ 11718}#)))
           (#{get-global-definition-hook\ 9332}#
             (lambda (#{symbol\ 11724}# #{module\ 11725}#)
               (begin
                 (if (if (not #{module\ 11725}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 11724}#))
                 (let ((#{v\ 11731}#
                         (module-variable
                           (if #{module\ 11725}#
                             (resolve-module (cdr #{module\ 11725}#))
                             (current-module))
                           #{symbol\ 11724}#)))
                   (if #{v\ 11731}#
                     (if (variable-bound? #{v\ 11731}#)
                       (let ((#{val\ 11736}# (variable-ref #{v\ 11731}#)))
                         (if (macro? #{val\ 11736}#)
                           (if (macro-type #{val\ 11736}#)
                             (cons (macro-type #{val\ 11736}#)
                                   (macro-binding #{val\ 11736}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 9330}#
             (lambda (#{symbol\ 11740}#
                      #{type\ 11741}#
                      #{val\ 11742}#)
               (module-define!
                 (current-module)
                 #{symbol\ 11740}#
                 (make-syntax-transformer
                   #{symbol\ 11740}#
                   #{type\ 11741}#
                   #{val\ 11742}#))))
           (#{local-eval-hook\ 9327}#
             (lambda (#{x\ 11746}# #{mod\ 11747}#)
               (primitive-eval
                 (list #{noexpand\ 9313}#
                       (let ((#{atom-key\ 11753}#
                               (fluid-ref #{*mode*\ 9315}#)))
                         (if (memv #{atom-key\ 11753}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 11746}#)
                           #{x\ 11746}#))))))
           (#{top-level-eval-hook\ 9325}#
             (lambda (#{x\ 11756}# #{mod\ 11757}#)
               (primitive-eval
                 (list #{noexpand\ 9313}#
                       (let ((#{atom-key\ 11763}#
                               (fluid-ref #{*mode*\ 9315}#)))
                         (if (memv #{atom-key\ 11763}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 11756}#)
                           #{x\ 11756}#))))))
           (#{fx<\ 9323}# <)
           (#{fx=\ 9321}# =)
           (#{fx-\ 9319}# -)
           (#{fx+\ 9317}# +)
           (#{*mode*\ 9315}# (make-fluid))
           (#{noexpand\ 9313}# "noexpand"))
    (begin
      (#{global-extend\ 9410}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 9410}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 9410}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 11766}#
                 #{r\ 11767}#
                 #{w\ 11768}#
                 #{s\ 11769}#
                 #{mod\ 11770}#)
          ((lambda (#{tmp\ 11776}#)
             ((lambda (#{tmp\ 11777}#)
                (if (if #{tmp\ 11777}#
                      (apply (lambda (#{_\ 11783}#
                                      #{var\ 11784}#
                                      #{val\ 11785}#
                                      #{e1\ 11786}#
                                      #{e2\ 11787}#)
                               (#{valid-bound-ids?\ 9477}# #{var\ 11784}#))
                             #{tmp\ 11777}#)
                      #f)
                  (apply (lambda (#{_\ 11794}#
                                  #{var\ 11795}#
                                  #{val\ 11796}#
                                  #{e1\ 11797}#
                                  #{e2\ 11798}#)
                           (let ((#{names\ 11800}#
                                   (map (lambda (#{x\ 11801}#)
                                          (#{id-var-name\ 9471}#
                                            #{x\ 11801}#
                                            #{w\ 11768}#))
                                        #{var\ 11795}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 11804}# #{n\ 11805}#)
                                   (let ((#{atom-key\ 11810}#
                                           (#{binding-type\ 9397}#
                                             (#{lookup\ 9408}#
                                               #{n\ 11805}#
                                               #{r\ 11767}#
                                               #{mod\ 11770}#))))
                                     (if (memv #{atom-key\ 11810}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 11766}#
                                         (#{source-wrap\ 9485}#
                                           #{id\ 11804}#
                                           #{w\ 11768}#
                                           #{s\ 11769}#
                                           #{mod\ 11770}#)))))
                                 #{var\ 11795}#
                                 #{names\ 11800}#)
                               (#{chi-body\ 9507}#
                                 (cons #{e1\ 11797}# #{e2\ 11798}#)
                                 (#{source-wrap\ 9485}#
                                   #{e\ 11766}#
                                   #{w\ 11768}#
                                   #{s\ 11769}#
                                   #{mod\ 11770}#)
                                 (#{extend-env\ 9402}#
                                   #{names\ 11800}#
                                   (let ((#{trans-r\ 11815}#
                                           (#{macros-only-env\ 9406}#
                                             #{r\ 11767}#)))
                                     (map (lambda (#{x\ 11816}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 9511}#
                                                    (#{chi\ 9499}#
                                                      #{x\ 11816}#
                                                      #{trans-r\ 11815}#
                                                      #{w\ 11768}#
                                                      #{mod\ 11770}#)
                                                    #{mod\ 11770}#)))
                                          #{val\ 11796}#))
                                   #{r\ 11767}#)
                                 #{w\ 11768}#
                                 #{mod\ 11770}#))))
                         #{tmp\ 11777}#)
                  ((lambda (#{_\ 11821}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 9485}#
                         #{e\ 11766}#
                         #{w\ 11768}#
                         #{s\ 11769}#
                         #{mod\ 11770}#)))
                   #{tmp\ 11776}#)))
              ($sc-dispatch
                #{tmp\ 11776}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 11766}#)))
      (#{global-extend\ 9410}#
        'core
        'quote
        (lambda (#{e\ 11822}#
                 #{r\ 11823}#
                 #{w\ 11824}#
                 #{s\ 11825}#
                 #{mod\ 11826}#)
          ((lambda (#{tmp\ 11832}#)
             ((lambda (#{tmp\ 11833}#)
                (if #{tmp\ 11833}#
                  (apply (lambda (#{_\ 11836}# #{e\ 11837}#)
                           (#{build-data\ 9364}#
                             #{s\ 11825}#
                             (#{strip\ 9525}# #{e\ 11837}# #{w\ 11824}#)))
                         #{tmp\ 11833}#)
                  ((lambda (#{_\ 11839}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 9485}#
                         #{e\ 11822}#
                         #{w\ 11824}#
                         #{s\ 11825}#
                         #{mod\ 11826}#)))
                   #{tmp\ 11832}#)))
              ($sc-dispatch #{tmp\ 11832}# (quote (any any)))))
           #{e\ 11822}#)))
      (#{global-extend\ 9410}#
        'core
        'syntax
        (letrec ((#{regen\ 11855}#
                   (lambda (#{x\ 11856}#)
                     (let ((#{atom-key\ 11860}# (car #{x\ 11856}#)))
                       (if (memv #{atom-key\ 11860}# (quote (ref)))
                         (#{build-lexical-reference\ 9342}#
                           'value
                           #f
                           (cadr #{x\ 11856}#)
                           (cadr #{x\ 11856}#))
                         (if (memv #{atom-key\ 11860}# (quote (primitive)))
                           (#{build-primref\ 9362}# #f (cadr #{x\ 11856}#))
                           (if (memv #{atom-key\ 11860}# (quote (quote)))
                             (#{build-data\ 9364}# #f (cadr #{x\ 11856}#))
                             (if (memv #{atom-key\ 11860}# (quote (lambda)))
                               (if (list? (cadr #{x\ 11856}#))
                                 (#{build-simple-lambda\ 9356}#
                                   #f
                                   (cadr #{x\ 11856}#)
                                   #f
                                   (cadr #{x\ 11856}#)
                                   #f
                                   (#{regen\ 11855}# (caddr #{x\ 11856}#)))
                                 (error "how did we get here" #{x\ 11856}#))
                               (#{build-application\ 9338}#
                                 #f
                                 (#{build-primref\ 9362}#
                                   #f
                                   (car #{x\ 11856}#))
                                 (map #{regen\ 11855}#
                                      (cdr #{x\ 11856}#))))))))))
                 (#{gen-vector\ 11853}#
                   (lambda (#{x\ 11872}#)
                     (if (eq? (car #{x\ 11872}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 11872}#))
                       (if (eq? (car #{x\ 11872}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 11872}#)))
                         (list (quote list->vector) #{x\ 11872}#)))))
                 (#{gen-append\ 11851}#
                   (lambda (#{x\ 11882}# #{y\ 11883}#)
                     (if (equal? #{y\ 11883}# (quote (quote ())))
                       #{x\ 11882}#
                       (list (quote append) #{x\ 11882}# #{y\ 11883}#))))
                 (#{gen-cons\ 11849}#
                   (lambda (#{x\ 11887}# #{y\ 11888}#)
                     (let ((#{atom-key\ 11893}# (car #{y\ 11888}#)))
                       (if (memv #{atom-key\ 11893}# (quote (quote)))
                         (if (eq? (car #{x\ 11887}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 11887}#)
                                       (cadr #{y\ 11888}#)))
                           (if (eq? (cadr #{y\ 11888}#) (quote ()))
                             (list (quote list) #{x\ 11887}#)
                             (list (quote cons) #{x\ 11887}# #{y\ 11888}#)))
                         (if (memv #{atom-key\ 11893}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 11887}# (cdr #{y\ 11888}#)))
                           (list (quote cons) #{x\ 11887}# #{y\ 11888}#))))))
                 (#{gen-map\ 11847}#
                   (lambda (#{e\ 11902}# #{map-env\ 11903}#)
                     (let ((#{formals\ 11908}# (map cdr #{map-env\ 11903}#))
                           (#{actuals\ 11909}#
                             (map (lambda (#{x\ 11910}#)
                                    (list (quote ref) (car #{x\ 11910}#)))
                                  #{map-env\ 11903}#)))
                       (if (eq? (car #{e\ 11902}#) (quote ref))
                         (car #{actuals\ 11909}#)
                         (if (and-map
                               (lambda (#{x\ 11917}#)
                                 (if (eq? (car #{x\ 11917}#) (quote ref))
                                   (memq (cadr #{x\ 11917}#)
                                         #{formals\ 11908}#)
                                   #f))
                               (cdr #{e\ 11902}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 11902}#))
                                       (map (let ((#{r\ 11923}#
                                                    (map cons
                                                         #{formals\ 11908}#
                                                         #{actuals\ 11909}#)))
                                              (lambda (#{x\ 11924}#)
                                                (cdr (assq (cadr #{x\ 11924}#)
                                                           #{r\ 11923}#))))
                                            (cdr #{e\ 11902}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 11908}#
                                             #{e\ 11902}#)
                                       #{actuals\ 11909}#)))))))
                 (#{gen-mappend\ 11845}#
                   (lambda (#{e\ 11928}# #{map-env\ 11929}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 11847}#
                             #{e\ 11928}#
                             #{map-env\ 11929}#))))
                 (#{gen-ref\ 11843}#
                   (lambda (#{src\ 11933}#
                            #{var\ 11934}#
                            #{level\ 11935}#
                            #{maps\ 11936}#)
                     (if (#{fx=\ 9321}# #{level\ 11935}# 0)
                       (values #{var\ 11934}# #{maps\ 11936}#)
                       (if (null? #{maps\ 11936}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 11933}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 11843}#
                               #{src\ 11933}#
                               #{var\ 11934}#
                               (#{fx-\ 9319}# #{level\ 11935}# 1)
                               (cdr #{maps\ 11936}#)))
                           (lambda (#{outer-var\ 11941}# #{outer-maps\ 11942}#)
                             (let ((#{b\ 11946}#
                                     (assq #{outer-var\ 11941}#
                                           (car #{maps\ 11936}#))))
                               (if #{b\ 11946}#
                                 (values (cdr #{b\ 11946}#) #{maps\ 11936}#)
                                 (let ((#{inner-var\ 11948}#
                                         (#{gen-var\ 9527}# (quote tmp))))
                                   (values
                                     #{inner-var\ 11948}#
                                     (cons (cons (cons #{outer-var\ 11941}#
                                                       #{inner-var\ 11948}#)
                                                 (car #{maps\ 11936}#))
                                           #{outer-maps\ 11942}#)))))))))))
                 (#{gen-syntax\ 11841}#
                   (lambda (#{src\ 11949}#
                            #{e\ 11950}#
                            #{r\ 11951}#
                            #{maps\ 11952}#
                            #{ellipsis?\ 11953}#
                            #{mod\ 11954}#)
                     (if (#{id?\ 9414}# #{e\ 11950}#)
                       (let ((#{label\ 11962}#
                               (#{id-var-name\ 9471}#
                                 #{e\ 11950}#
                                 '(()))))
                         (let ((#{b\ 11965}#
                                 (#{lookup\ 9408}#
                                   #{label\ 11962}#
                                   #{r\ 11951}#
                                   #{mod\ 11954}#)))
                           (if (eq? (#{binding-type\ 9397}# #{b\ 11965}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 11967}#
                                         (#{binding-value\ 9399}#
                                           #{b\ 11965}#)))
                                   (#{gen-ref\ 11843}#
                                     #{src\ 11949}#
                                     (car #{var.lev\ 11967}#)
                                     (cdr #{var.lev\ 11967}#)
                                     #{maps\ 11952}#)))
                               (lambda (#{var\ 11968}# #{maps\ 11969}#)
                                 (values
                                   (list (quote ref) #{var\ 11968}#)
                                   #{maps\ 11969}#)))
                             (if (#{ellipsis?\ 11953}# #{e\ 11950}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 11949}#)
                               (values
                                 (list (quote quote) #{e\ 11950}#)
                                 #{maps\ 11952}#)))))
                       ((lambda (#{tmp\ 11974}#)
                          ((lambda (#{tmp\ 11975}#)
                             (if (if #{tmp\ 11975}#
                                   (apply (lambda (#{dots\ 11978}#
                                                   #{e\ 11979}#)
                                            (#{ellipsis?\ 11953}#
                                              #{dots\ 11978}#))
                                          #{tmp\ 11975}#)
                                   #f)
                               (apply (lambda (#{dots\ 11982}# #{e\ 11983}#)
                                        (#{gen-syntax\ 11841}#
                                          #{src\ 11949}#
                                          #{e\ 11983}#
                                          #{r\ 11951}#
                                          #{maps\ 11952}#
                                          (lambda (#{x\ 11984}#) #f)
                                          #{mod\ 11954}#))
                                      #{tmp\ 11975}#)
                               ((lambda (#{tmp\ 11986}#)
                                  (if (if #{tmp\ 11986}#
                                        (apply (lambda (#{x\ 11990}#
                                                        #{dots\ 11991}#
                                                        #{y\ 11992}#)
                                                 (#{ellipsis?\ 11953}#
                                                   #{dots\ 11991}#))
                                               #{tmp\ 11986}#)
                                        #f)
                                    (apply (lambda (#{x\ 11996}#
                                                    #{dots\ 11997}#
                                                    #{y\ 11998}#)
                                             (letrec ((#{f\ 12002}#
                                                        (lambda (#{y\ 12003}#
                                                                 #{k\ 12004}#)
                                                          ((lambda (#{tmp\ 12011}#)
                                                             ((lambda (#{tmp\ 12012}#)
                                                                (if (if #{tmp\ 12012}#
                                                                      (apply (lambda (#{dots\ 12015}#
                                                                                      #{y\ 12016}#)
                                                                               (#{ellipsis?\ 11953}#
                                                                                 #{dots\ 12015}#))
                                                                             #{tmp\ 12012}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 12019}#
                                                                                  #{y\ 12020}#)
                                                                           (#{f\ 12002}#
                                                                             #{y\ 12020}#
                                                                             (lambda (#{maps\ 12021}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 12004}#
                                                                                     (cons '()
                                                                                           #{maps\ 12021}#)))
                                                                                 (lambda (#{x\ 12023}#
                                                                                          #{maps\ 12024}#)
                                                                                   (if (null? (car #{maps\ 12024}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 11949}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 11845}#
                                                                                         #{x\ 12023}#
                                                                                         (car #{maps\ 12024}#))
                                                                                       (cdr #{maps\ 12024}#))))))))
                                                                         #{tmp\ 12012}#)
                                                                  ((lambda (#{_\ 12028}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 11841}#
                                                                           #{src\ 11949}#
                                                                           #{y\ 12003}#
                                                                           #{r\ 11951}#
                                                                           #{maps\ 11952}#
                                                                           #{ellipsis?\ 11953}#
                                                                           #{mod\ 11954}#))
                                                                       (lambda (#{y\ 12029}#
                                                                                #{maps\ 12030}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 12004}#
                                                                               #{maps\ 12030}#))
                                                                           (lambda (#{x\ 12033}#
                                                                                    #{maps\ 12034}#)
                                                                             (values
                                                                               (#{gen-append\ 11851}#
                                                                                 #{x\ 12033}#
                                                                                 #{y\ 12029}#)
                                                                               #{maps\ 12034}#))))))
                                                                   #{tmp\ 12011}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 12011}#
                                                                '(any . any))))
                                                           #{y\ 12003}#))))
                                               (#{f\ 12002}#
                                                 #{y\ 11998}#
                                                 (lambda (#{maps\ 12005}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 11841}#
                                                         #{src\ 11949}#
                                                         #{x\ 11996}#
                                                         #{r\ 11951}#
                                                         (cons '()
                                                               #{maps\ 12005}#)
                                                         #{ellipsis?\ 11953}#
                                                         #{mod\ 11954}#))
                                                     (lambda (#{x\ 12007}#
                                                              #{maps\ 12008}#)
                                                       (if (null? (car #{maps\ 12008}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 11949}#)
                                                         (values
                                                           (#{gen-map\ 11847}#
                                                             #{x\ 12007}#
                                                             (car #{maps\ 12008}#))
                                                           (cdr #{maps\ 12008}#)))))))))
                                           #{tmp\ 11986}#)
                                    ((lambda (#{tmp\ 12037}#)
                                       (if #{tmp\ 12037}#
                                         (apply (lambda (#{x\ 12040}#
                                                         #{y\ 12041}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 11841}#
                                                        #{src\ 11949}#
                                                        #{x\ 12040}#
                                                        #{r\ 11951}#
                                                        #{maps\ 11952}#
                                                        #{ellipsis?\ 11953}#
                                                        #{mod\ 11954}#))
                                                    (lambda (#{x\ 12042}#
                                                             #{maps\ 12043}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 11841}#
                                                            #{src\ 11949}#
                                                            #{y\ 12041}#
                                                            #{r\ 11951}#
                                                            #{maps\ 12043}#
                                                            #{ellipsis?\ 11953}#
                                                            #{mod\ 11954}#))
                                                        (lambda (#{y\ 12046}#
                                                                 #{maps\ 12047}#)
                                                          (values
                                                            (#{gen-cons\ 11849}#
                                                              #{x\ 12042}#
                                                              #{y\ 12046}#)
                                                            #{maps\ 12047}#))))))
                                                #{tmp\ 12037}#)
                                         ((lambda (#{tmp\ 12050}#)
                                            (if #{tmp\ 12050}#
                                              (apply (lambda (#{e1\ 12053}#
                                                              #{e2\ 12054}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 11841}#
                                                             #{src\ 11949}#
                                                             (cons #{e1\ 12053}#
                                                                   #{e2\ 12054}#)
                                                             #{r\ 11951}#
                                                             #{maps\ 11952}#
                                                             #{ellipsis?\ 11953}#
                                                             #{mod\ 11954}#))
                                                         (lambda (#{e\ 12056}#
                                                                  #{maps\ 12057}#)
                                                           (values
                                                             (#{gen-vector\ 11853}#
                                                               #{e\ 12056}#)
                                                             #{maps\ 12057}#))))
                                                     #{tmp\ 12050}#)
                                              ((lambda (#{_\ 12061}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 11950}#)
                                                   #{maps\ 11952}#))
                                               #{tmp\ 11974}#)))
                                          ($sc-dispatch
                                            #{tmp\ 11974}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 11974}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 11974}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 11974}# (quote (any any)))))
                        #{e\ 11950}#)))))
          (lambda (#{e\ 12063}#
                   #{r\ 12064}#
                   #{w\ 12065}#
                   #{s\ 12066}#
                   #{mod\ 12067}#)
            (let ((#{e\ 12074}#
                    (#{source-wrap\ 9485}#
                      #{e\ 12063}#
                      #{w\ 12065}#
                      #{s\ 12066}#
                      #{mod\ 12067}#)))
              ((lambda (#{tmp\ 12075}#)
                 ((lambda (#{tmp\ 12076}#)
                    (if #{tmp\ 12076}#
                      (apply (lambda (#{_\ 12079}# #{x\ 12080}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 11841}#
                                     #{e\ 12074}#
                                     #{x\ 12080}#
                                     #{r\ 12064}#
                                     '()
                                     #{ellipsis?\ 9515}#
                                     #{mod\ 12067}#))
                                 (lambda (#{e\ 12081}# #{maps\ 12082}#)
                                   (#{regen\ 11855}# #{e\ 12081}#))))
                             #{tmp\ 12076}#)
                      ((lambda (#{_\ 12086}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 12074}#))
                       #{tmp\ 12075}#)))
                  ($sc-dispatch #{tmp\ 12075}# (quote (any any)))))
               #{e\ 12074}#)))))
      (#{global-extend\ 9410}#
        'core
        'lambda
        (lambda (#{e\ 12087}#
                 #{r\ 12088}#
                 #{w\ 12089}#
                 #{s\ 12090}#
                 #{mod\ 12091}#)
          ((lambda (#{tmp\ 12097}#)
             ((lambda (#{tmp\ 12098}#)
                (if (if #{tmp\ 12098}#
                      (apply (lambda (#{_\ 12104}#
                                      #{args\ 12105}#
                                      #{docstring\ 12106}#
                                      #{e1\ 12107}#
                                      #{e2\ 12108}#)
                               (string? (syntax->datum #{docstring\ 12106}#)))
                             #{tmp\ 12098}#)
                      #f)
                  (apply (lambda (#{_\ 12114}#
                                  #{args\ 12115}#
                                  #{docstring\ 12116}#
                                  #{e1\ 12117}#
                                  #{e2\ 12118}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 9517}# #{args\ 12115}#))
                             (lambda (#{req\ 12119}#
                                      #{opt\ 12120}#
                                      #{rest\ 12121}#
                                      #{kw\ 12122}#)
                               (#{chi-simple-lambda\ 9519}#
                                 #{e\ 12087}#
                                 #{r\ 12088}#
                                 #{w\ 12089}#
                                 #{s\ 12090}#
                                 #{mod\ 12091}#
                                 #{req\ 12119}#
                                 #{rest\ 12121}#
                                 (syntax->datum #{docstring\ 12116}#)
                                 (cons #{e1\ 12117}# #{e2\ 12118}#)))))
                         #{tmp\ 12098}#)
                  ((lambda (#{tmp\ 12128}#)
                     (if #{tmp\ 12128}#
                       (apply (lambda (#{_\ 12133}#
                                       #{args\ 12134}#
                                       #{e1\ 12135}#
                                       #{e2\ 12136}#)
                                (call-with-values
                                  (lambda ()
                                    (#{lambda-formals\ 9517}# #{args\ 12134}#))
                                  (lambda (#{req\ 12137}#
                                           #{opt\ 12138}#
                                           #{rest\ 12139}#
                                           #{kw\ 12140}#)
                                    (#{chi-simple-lambda\ 9519}#
                                      #{e\ 12087}#
                                      #{r\ 12088}#
                                      #{w\ 12089}#
                                      #{s\ 12090}#
                                      #{mod\ 12091}#
                                      #{req\ 12137}#
                                      #{rest\ 12139}#
                                      #f
                                      (cons #{e1\ 12135}# #{e2\ 12136}#)))))
                              #{tmp\ 12128}#)
                       ((lambda (#{_\ 12147}#)
                          (syntax-violation
                            'lambda
                            "bad lambda"
                            #{e\ 12087}#))
                        #{tmp\ 12097}#)))
                   ($sc-dispatch
                     #{tmp\ 12097}#
                     '(any any any . each-any)))))
              ($sc-dispatch
                #{tmp\ 12097}#
                '(any any any any . each-any))))
           #{e\ 12087}#)))
      (#{global-extend\ 9410}#
        'core
        'lambda*
        (lambda (#{e\ 12148}#
                 #{r\ 12149}#
                 #{w\ 12150}#
                 #{s\ 12151}#
                 #{mod\ 12152}#)
          ((lambda (#{tmp\ 12158}#)
             ((lambda (#{tmp\ 12159}#)
                (if #{tmp\ 12159}#
                  (apply (lambda (#{_\ 12164}#
                                  #{args\ 12165}#
                                  #{e1\ 12166}#
                                  #{e2\ 12167}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 9523}#
                                 #{e\ 12148}#
                                 #{r\ 12149}#
                                 #{w\ 12150}#
                                 #{s\ 12151}#
                                 #{mod\ 12152}#
                                 #{lambda*-formals\ 9521}#
                                 (list (cons #{args\ 12165}#
                                             (cons #{e1\ 12166}#
                                                   #{e2\ 12167}#)))))
                             (lambda (#{docstring\ 12169}# #{lcase\ 12170}#)
                               (#{build-case-lambda\ 9358}#
                                 #{s\ 12151}#
                                 #{docstring\ 12169}#
                                 #{lcase\ 12170}#))))
                         #{tmp\ 12159}#)
                  ((lambda (#{_\ 12174}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 12148}#))
                   #{tmp\ 12158}#)))
              ($sc-dispatch
                #{tmp\ 12158}#
                '(any any any . each-any))))
           #{e\ 12148}#)))
      (#{global-extend\ 9410}#
        'core
        'case-lambda
        (lambda (#{e\ 12175}#
                 #{r\ 12176}#
                 #{w\ 12177}#
                 #{s\ 12178}#
                 #{mod\ 12179}#)
          ((lambda (#{tmp\ 12185}#)
             ((lambda (#{tmp\ 12186}#)
                (if #{tmp\ 12186}#
                  (apply (lambda (#{_\ 12194}#
                                  #{args\ 12195}#
                                  #{e1\ 12196}#
                                  #{e2\ 12197}#
                                  #{args*\ 12198}#
                                  #{e1*\ 12199}#
                                  #{e2*\ 12200}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 9523}#
                                 #{e\ 12175}#
                                 #{r\ 12176}#
                                 #{w\ 12177}#
                                 #{s\ 12178}#
                                 #{mod\ 12179}#
                                 #{lambda-formals\ 9517}#
                                 (cons (cons #{args\ 12195}#
                                             (cons #{e1\ 12196}#
                                                   #{e2\ 12197}#))
                                       (map (lambda (#{tmp\ 12204}#
                                                     #{tmp\ 12203}#
                                                     #{tmp\ 12202}#)
                                              (cons #{tmp\ 12202}#
                                                    (cons #{tmp\ 12203}#
                                                          #{tmp\ 12204}#)))
                                            #{e2*\ 12200}#
                                            #{e1*\ 12199}#
                                            #{args*\ 12198}#))))
                             (lambda (#{docstring\ 12206}# #{lcase\ 12207}#)
                               (#{build-case-lambda\ 9358}#
                                 #{s\ 12178}#
                                 #{docstring\ 12206}#
                                 #{lcase\ 12207}#))))
                         #{tmp\ 12186}#)
                  ((lambda (#{_\ 12211}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 12175}#))
                   #{tmp\ 12185}#)))
              ($sc-dispatch
                #{tmp\ 12185}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 12175}#)))
      (#{global-extend\ 9410}#
        'core
        'case-lambda*
        (lambda (#{e\ 12212}#
                 #{r\ 12213}#
                 #{w\ 12214}#
                 #{s\ 12215}#
                 #{mod\ 12216}#)
          ((lambda (#{tmp\ 12222}#)
             ((lambda (#{tmp\ 12223}#)
                (if #{tmp\ 12223}#
                  (apply (lambda (#{_\ 12231}#
                                  #{args\ 12232}#
                                  #{e1\ 12233}#
                                  #{e2\ 12234}#
                                  #{args*\ 12235}#
                                  #{e1*\ 12236}#
                                  #{e2*\ 12237}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 9523}#
                                 #{e\ 12212}#
                                 #{r\ 12213}#
                                 #{w\ 12214}#
                                 #{s\ 12215}#
                                 #{mod\ 12216}#
                                 #{lambda*-formals\ 9521}#
                                 (cons (cons #{args\ 12232}#
                                             (cons #{e1\ 12233}#
                                                   #{e2\ 12234}#))
                                       (map (lambda (#{tmp\ 12241}#
                                                     #{tmp\ 12240}#
                                                     #{tmp\ 12239}#)
                                              (cons #{tmp\ 12239}#
                                                    (cons #{tmp\ 12240}#
                                                          #{tmp\ 12241}#)))
                                            #{e2*\ 12237}#
                                            #{e1*\ 12236}#
                                            #{args*\ 12235}#))))
                             (lambda (#{docstring\ 12243}# #{lcase\ 12244}#)
                               (#{build-case-lambda\ 9358}#
                                 #{s\ 12215}#
                                 #{docstring\ 12243}#
                                 #{lcase\ 12244}#))))
                         #{tmp\ 12223}#)
                  ((lambda (#{_\ 12248}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 12212}#))
                   #{tmp\ 12222}#)))
              ($sc-dispatch
                #{tmp\ 12222}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 12212}#)))
      (#{global-extend\ 9410}#
        'core
        'let
        (letrec ((#{chi-let\ 12250}#
                   (lambda (#{e\ 12251}#
                            #{r\ 12252}#
                            #{w\ 12253}#
                            #{s\ 12254}#
                            #{mod\ 12255}#
                            #{constructor\ 12256}#
                            #{ids\ 12257}#
                            #{vals\ 12258}#
                            #{exps\ 12259}#)
                     (if (not (#{valid-bound-ids?\ 9477}# #{ids\ 12257}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 12251}#)
                       (let ((#{labels\ 12271}#
                               (#{gen-labels\ 9432}# #{ids\ 12257}#))
                             (#{new-vars\ 12272}#
                               (map #{gen-var\ 9527}# #{ids\ 12257}#)))
                         (let ((#{nw\ 12275}#
                                 (#{make-binding-wrap\ 9461}#
                                   #{ids\ 12257}#
                                   #{labels\ 12271}#
                                   #{w\ 12253}#))
                               (#{nr\ 12276}#
                                 (#{extend-var-env\ 9404}#
                                   #{labels\ 12271}#
                                   #{new-vars\ 12272}#
                                   #{r\ 12252}#)))
                           (#{constructor\ 12256}#
                             #{s\ 12254}#
                             (map syntax->datum #{ids\ 12257}#)
                             #{new-vars\ 12272}#
                             (map (lambda (#{x\ 12277}#)
                                    (#{chi\ 9499}#
                                      #{x\ 12277}#
                                      #{r\ 12252}#
                                      #{w\ 12253}#
                                      #{mod\ 12255}#))
                                  #{vals\ 12258}#)
                             (#{chi-body\ 9507}#
                               #{exps\ 12259}#
                               (#{source-wrap\ 9485}#
                                 #{e\ 12251}#
                                 #{nw\ 12275}#
                                 #{s\ 12254}#
                                 #{mod\ 12255}#)
                               #{nr\ 12276}#
                               #{nw\ 12275}#
                               #{mod\ 12255}#))))))))
          (lambda (#{e\ 12279}#
                   #{r\ 12280}#
                   #{w\ 12281}#
                   #{s\ 12282}#
                   #{mod\ 12283}#)
            ((lambda (#{tmp\ 12289}#)
               ((lambda (#{tmp\ 12290}#)
                  (if (if #{tmp\ 12290}#
                        (apply (lambda (#{_\ 12296}#
                                        #{id\ 12297}#
                                        #{val\ 12298}#
                                        #{e1\ 12299}#
                                        #{e2\ 12300}#)
                                 (and-map #{id?\ 9414}# #{id\ 12297}#))
                               #{tmp\ 12290}#)
                        #f)
                    (apply (lambda (#{_\ 12307}#
                                    #{id\ 12308}#
                                    #{val\ 12309}#
                                    #{e1\ 12310}#
                                    #{e2\ 12311}#)
                             (#{chi-let\ 12250}#
                               #{e\ 12279}#
                               #{r\ 12280}#
                               #{w\ 12281}#
                               #{s\ 12282}#
                               #{mod\ 12283}#
                               #{build-let\ 9368}#
                               #{id\ 12308}#
                               #{val\ 12309}#
                               (cons #{e1\ 12310}# #{e2\ 12311}#)))
                           #{tmp\ 12290}#)
                    ((lambda (#{tmp\ 12315}#)
                       (if (if #{tmp\ 12315}#
                             (apply (lambda (#{_\ 12322}#
                                             #{f\ 12323}#
                                             #{id\ 12324}#
                                             #{val\ 12325}#
                                             #{e1\ 12326}#
                                             #{e2\ 12327}#)
                                      (if (#{id?\ 9414}# #{f\ 12323}#)
                                        (and-map #{id?\ 9414}# #{id\ 12324}#)
                                        #f))
                                    #{tmp\ 12315}#)
                             #f)
                         (apply (lambda (#{_\ 12337}#
                                         #{f\ 12338}#
                                         #{id\ 12339}#
                                         #{val\ 12340}#
                                         #{e1\ 12341}#
                                         #{e2\ 12342}#)
                                  (#{chi-let\ 12250}#
                                    #{e\ 12279}#
                                    #{r\ 12280}#
                                    #{w\ 12281}#
                                    #{s\ 12282}#
                                    #{mod\ 12283}#
                                    #{build-named-let\ 9370}#
                                    (cons #{f\ 12338}# #{id\ 12339}#)
                                    #{val\ 12340}#
                                    (cons #{e1\ 12341}# #{e2\ 12342}#)))
                                #{tmp\ 12315}#)
                         ((lambda (#{_\ 12347}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 9485}#
                                #{e\ 12279}#
                                #{w\ 12281}#
                                #{s\ 12282}#
                                #{mod\ 12283}#)))
                          #{tmp\ 12289}#)))
                     ($sc-dispatch
                       #{tmp\ 12289}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 12289}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 12279}#))))
      (#{global-extend\ 9410}#
        'core
        'letrec
        (lambda (#{e\ 12348}#
                 #{r\ 12349}#
                 #{w\ 12350}#
                 #{s\ 12351}#
                 #{mod\ 12352}#)
          ((lambda (#{tmp\ 12358}#)
             ((lambda (#{tmp\ 12359}#)
                (if (if #{tmp\ 12359}#
                      (apply (lambda (#{_\ 12365}#
                                      #{id\ 12366}#
                                      #{val\ 12367}#
                                      #{e1\ 12368}#
                                      #{e2\ 12369}#)
                               (and-map #{id?\ 9414}# #{id\ 12366}#))
                             #{tmp\ 12359}#)
                      #f)
                  (apply (lambda (#{_\ 12376}#
                                  #{id\ 12377}#
                                  #{val\ 12378}#
                                  #{e1\ 12379}#
                                  #{e2\ 12380}#)
                           (let ((#{ids\ 12382}# #{id\ 12377}#))
                             (if (not (#{valid-bound-ids?\ 9477}#
                                        #{ids\ 12382}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 12348}#)
                               (let ((#{labels\ 12386}#
                                       (#{gen-labels\ 9432}# #{ids\ 12382}#))
                                     (#{new-vars\ 12387}#
                                       (map #{gen-var\ 9527}# #{ids\ 12382}#)))
                                 (let ((#{w\ 12390}#
                                         (#{make-binding-wrap\ 9461}#
                                           #{ids\ 12382}#
                                           #{labels\ 12386}#
                                           #{w\ 12350}#))
                                       (#{r\ 12391}#
                                         (#{extend-var-env\ 9404}#
                                           #{labels\ 12386}#
                                           #{new-vars\ 12387}#
                                           #{r\ 12349}#)))
                                   (#{build-letrec\ 9372}#
                                     #{s\ 12351}#
                                     (map syntax->datum #{ids\ 12382}#)
                                     #{new-vars\ 12387}#
                                     (map (lambda (#{x\ 12392}#)
                                            (#{chi\ 9499}#
                                              #{x\ 12392}#
                                              #{r\ 12391}#
                                              #{w\ 12390}#
                                              #{mod\ 12352}#))
                                          #{val\ 12378}#)
                                     (#{chi-body\ 9507}#
                                       (cons #{e1\ 12379}# #{e2\ 12380}#)
                                       (#{source-wrap\ 9485}#
                                         #{e\ 12348}#
                                         #{w\ 12390}#
                                         #{s\ 12351}#
                                         #{mod\ 12352}#)
                                       #{r\ 12391}#
                                       #{w\ 12390}#
                                       #{mod\ 12352}#)))))))
                         #{tmp\ 12359}#)
                  ((lambda (#{_\ 12397}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 9485}#
                         #{e\ 12348}#
                         #{w\ 12350}#
                         #{s\ 12351}#
                         #{mod\ 12352}#)))
                   #{tmp\ 12358}#)))
              ($sc-dispatch
                #{tmp\ 12358}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 12348}#)))
      (#{global-extend\ 9410}#
        'core
        'set!
        (lambda (#{e\ 12398}#
                 #{r\ 12399}#
                 #{w\ 12400}#
                 #{s\ 12401}#
                 #{mod\ 12402}#)
          ((lambda (#{tmp\ 12408}#)
             ((lambda (#{tmp\ 12409}#)
                (if (if #{tmp\ 12409}#
                      (apply (lambda (#{_\ 12413}#
                                      #{id\ 12414}#
                                      #{val\ 12415}#)
                               (#{id?\ 9414}# #{id\ 12414}#))
                             #{tmp\ 12409}#)
                      #f)
                  (apply (lambda (#{_\ 12419}# #{id\ 12420}# #{val\ 12421}#)
                           (let ((#{val\ 12424}#
                                   (#{chi\ 9499}#
                                     #{val\ 12421}#
                                     #{r\ 12399}#
                                     #{w\ 12400}#
                                     #{mod\ 12402}#))
                                 (#{n\ 12425}#
                                   (#{id-var-name\ 9471}#
                                     #{id\ 12420}#
                                     #{w\ 12400}#)))
                             (let ((#{b\ 12427}#
                                     (#{lookup\ 9408}#
                                       #{n\ 12425}#
                                       #{r\ 12399}#
                                       #{mod\ 12402}#)))
                               (let ((#{atom-key\ 12430}#
                                       (#{binding-type\ 9397}# #{b\ 12427}#)))
                                 (if (memv #{atom-key\ 12430}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 9344}#
                                     #{s\ 12401}#
                                     (syntax->datum #{id\ 12420}#)
                                     (#{binding-value\ 9399}# #{b\ 12427}#)
                                     #{val\ 12424}#)
                                   (if (memv #{atom-key\ 12430}#
                                             '(global))
                                     (#{build-global-assignment\ 9350}#
                                       #{s\ 12401}#
                                       #{n\ 12425}#
                                       #{val\ 12424}#
                                       #{mod\ 12402}#)
                                     (if (memv #{atom-key\ 12430}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 9483}#
                                           #{id\ 12420}#
                                           #{w\ 12400}#
                                           #{mod\ 12402}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 9485}#
                                           #{e\ 12398}#
                                           #{w\ 12400}#
                                           #{s\ 12401}#
                                           #{mod\ 12402}#)))))))))
                         #{tmp\ 12409}#)
                  ((lambda (#{tmp\ 12435}#)
                     (if #{tmp\ 12435}#
                       (apply (lambda (#{_\ 12440}#
                                       #{head\ 12441}#
                                       #{tail\ 12442}#
                                       #{val\ 12443}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 9495}#
                                      #{head\ 12441}#
                                      #{r\ 12399}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 12402}#
                                      #t))
                                  (lambda (#{type\ 12446}#
                                           #{value\ 12447}#
                                           #{ee\ 12448}#
                                           #{ww\ 12449}#
                                           #{ss\ 12450}#
                                           #{modmod\ 12451}#)
                                    (if (memv #{type\ 12446}#
                                              '(module-ref))
                                      (let ((#{val\ 12460}#
                                              (#{chi\ 9499}#
                                                #{val\ 12443}#
                                                #{r\ 12399}#
                                                #{w\ 12400}#
                                                #{mod\ 12402}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 12447}#
                                              (cons #{head\ 12441}#
                                                    #{tail\ 12442}#)))
                                          (lambda (#{id\ 12462}#
                                                   #{mod\ 12463}#)
                                            (#{build-global-assignment\ 9350}#
                                              #{s\ 12401}#
                                              #{id\ 12462}#
                                              #{val\ 12460}#
                                              #{mod\ 12463}#))))
                                      (#{build-application\ 9338}#
                                        #{s\ 12401}#
                                        (#{chi\ 9499}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12452"
                                                        "i12453"
                                                        "i12454"
                                                        "i12455"
                                                        "i12456"
                                                        "i12457"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12436"
                                                        "i12437"
                                                        "i12438"
                                                        "i12439"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i12403"
                                                        "i12404"
                                                        "i12405"
                                                        "i12406"
                                                        "i12407"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i9528"
                                                       "i9526"
                                                       "i9524"
                                                       "i9522"
                                                       "i9520"
                                                       "i9518"
                                                       "i9516"
                                                       "i9514"
                                                       "i9512"
                                                       "i9510"
                                                       "i9508"
                                                       "i9506"
                                                       "i9504"
                                                       "i9502"
                                                       "i9500"
                                                       "i9498"
                                                       "i9496"
                                                       "i9494"
                                                       "i9492"
                                                       "i9490"
                                                       "i9488"
                                                       "i9486"
                                                       "i9484"
                                                       "i9482"
                                                       "i9480"
                                                       "i9478"
                                                       "i9476"
                                                       "i9474"
                                                       "i9472"
                                                       "i9470"
                                                       "i9468"
                                                       "i9466"
                                                       "i9464"
                                                       "i9462"
                                                       "i9460"
                                                       "i9458"
                                                       "i9457"
                                                       "i9456"
                                                       "i9454"
                                                       "i9453"
                                                       "i9452"
                                                       "i9451"
                                                       "i9450"
                                                       "i9448"
                                                       "i9446"
                                                       "i9444"
                                                       "i9442"
                                                       "i9440"
                                                       "i9438"
                                                       "i9436"
                                                       "i9434"
                                                       "i9431"
                                                       "i9429"
                                                       "i9428"
                                                       "i9427"
                                                       "i9426"
                                                       "i9425"
                                                       "i9424"
                                                       "i9422"
                                                       "i9420"
                                                       "i9418"
                                                       "i9416"
                                                       "i9415"
                                                       "i9413"
                                                       "i9411"
                                                       "i9409"
                                                       "i9407"
                                                       "i9405"
                                                       "i9403"
                                                       "i9401"
                                                       "i9400"
                                                       "i9398"
                                                       "i9396"
                                                       "i9395"
                                                       "i9394"
                                                       "i9392"
                                                       "i9391"
                                                       "i9389"
                                                       "i9387"
                                                       "i9385"
                                                       "i9383"
                                                       "i9381"
                                                       "i9379"
                                                       "i9377"
                                                       "i9375"
                                                       "i9373"
                                                       "i9371"
                                                       "i9369"
                                                       "i9367"
                                                       "i9365"
                                                       "i9363"
                                                       "i9361"
                                                       "i9359"
                                                       "i9357"
                                                       "i9355"
                                                       "i9353"
                                                       "i9351"
                                                       "i9349"
                                                       "i9347"
                                                       "i9345"
                                                       "i9343"
                                                       "i9341"
                                                       "i9339"
                                                       "i9337"
                                                       "i9335"
                                                       "i9333"
                                                       "i9331"
                                                       "i9329"
                                                       "i9328"
                                                       "i9326"
                                                       "i9324"
                                                       "i9322"
                                                       "i9320"
                                                       "i9318"
                                                       "i9316"
                                                       "i9314"
                                                       "i9312"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i9215" "i9213")))
                                                   (hygiene guile))
                                                #{head\ 12441}#)
                                          #{r\ 12399}#
                                          #{w\ 12400}#
                                          #{mod\ 12402}#)
                                        (map (lambda (#{e\ 12467}#)
                                               (#{chi\ 9499}#
                                                 #{e\ 12467}#
                                                 #{r\ 12399}#
                                                 #{w\ 12400}#
                                                 #{mod\ 12402}#))
                                             (append
                                               #{tail\ 12442}#
                                               (list #{val\ 12443}#))))))))
                              #{tmp\ 12435}#)
                       ((lambda (#{_\ 12471}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 9485}#
                              #{e\ 12398}#
                              #{w\ 12400}#
                              #{s\ 12401}#
                              #{mod\ 12402}#)))
                        #{tmp\ 12408}#)))
                   ($sc-dispatch
                     #{tmp\ 12408}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 12408}#
                '(any any any))))
           #{e\ 12398}#)))
      (#{global-extend\ 9410}#
        'module-ref
        '@
        (lambda (#{e\ 12472}#)
          ((lambda (#{tmp\ 12474}#)
             ((lambda (#{tmp\ 12475}#)
                (if (if #{tmp\ 12475}#
                      (apply (lambda (#{_\ 12479}#
                                      #{mod\ 12480}#
                                      #{id\ 12481}#)
                               (if (and-map #{id?\ 9414}# #{mod\ 12480}#)
                                 (#{id?\ 9414}# #{id\ 12481}#)
                                 #f))
                             #{tmp\ 12475}#)
                      #f)
                  (apply (lambda (#{_\ 12488}# #{mod\ 12489}# #{id\ 12490}#)
                           (values
                             (syntax->datum #{id\ 12490}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i12485" "i12486" "i12487"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i12473"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i9528"
                                            "i9526"
                                            "i9524"
                                            "i9522"
                                            "i9520"
                                            "i9518"
                                            "i9516"
                                            "i9514"
                                            "i9512"
                                            "i9510"
                                            "i9508"
                                            "i9506"
                                            "i9504"
                                            "i9502"
                                            "i9500"
                                            "i9498"
                                            "i9496"
                                            "i9494"
                                            "i9492"
                                            "i9490"
                                            "i9488"
                                            "i9486"
                                            "i9484"
                                            "i9482"
                                            "i9480"
                                            "i9478"
                                            "i9476"
                                            "i9474"
                                            "i9472"
                                            "i9470"
                                            "i9468"
                                            "i9466"
                                            "i9464"
                                            "i9462"
                                            "i9460"
                                            "i9458"
                                            "i9457"
                                            "i9456"
                                            "i9454"
                                            "i9453"
                                            "i9452"
                                            "i9451"
                                            "i9450"
                                            "i9448"
                                            "i9446"
                                            "i9444"
                                            "i9442"
                                            "i9440"
                                            "i9438"
                                            "i9436"
                                            "i9434"
                                            "i9431"
                                            "i9429"
                                            "i9428"
                                            "i9427"
                                            "i9426"
                                            "i9425"
                                            "i9424"
                                            "i9422"
                                            "i9420"
                                            "i9418"
                                            "i9416"
                                            "i9415"
                                            "i9413"
                                            "i9411"
                                            "i9409"
                                            "i9407"
                                            "i9405"
                                            "i9403"
                                            "i9401"
                                            "i9400"
                                            "i9398"
                                            "i9396"
                                            "i9395"
                                            "i9394"
                                            "i9392"
                                            "i9391"
                                            "i9389"
                                            "i9387"
                                            "i9385"
                                            "i9383"
                                            "i9381"
                                            "i9379"
                                            "i9377"
                                            "i9375"
                                            "i9373"
                                            "i9371"
                                            "i9369"
                                            "i9367"
                                            "i9365"
                                            "i9363"
                                            "i9361"
                                            "i9359"
                                            "i9357"
                                            "i9355"
                                            "i9353"
                                            "i9351"
                                            "i9349"
                                            "i9347"
                                            "i9345"
                                            "i9343"
                                            "i9341"
                                            "i9339"
                                            "i9337"
                                            "i9335"
                                            "i9333"
                                            "i9331"
                                            "i9329"
                                            "i9328"
                                            "i9326"
                                            "i9324"
                                            "i9322"
                                            "i9320"
                                            "i9318"
                                            "i9316"
                                            "i9314"
                                            "i9312"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i9215" "i9213")))
                                        (hygiene guile))
                                     #{mod\ 12489}#))))
                         #{tmp\ 12475}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 12474}#)))
              ($sc-dispatch
                #{tmp\ 12474}#
                '(any each-any any))))
           #{e\ 12472}#)))
      (#{global-extend\ 9410}#
        'module-ref
        '@@
        (lambda (#{e\ 12492}#)
          ((lambda (#{tmp\ 12494}#)
             ((lambda (#{tmp\ 12495}#)
                (if (if #{tmp\ 12495}#
                      (apply (lambda (#{_\ 12499}#
                                      #{mod\ 12500}#
                                      #{id\ 12501}#)
                               (if (and-map #{id?\ 9414}# #{mod\ 12500}#)
                                 (#{id?\ 9414}# #{id\ 12501}#)
                                 #f))
                             #{tmp\ 12495}#)
                      #f)
                  (apply (lambda (#{_\ 12508}# #{mod\ 12509}# #{id\ 12510}#)
                           (values
                             (syntax->datum #{id\ 12510}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        private
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i12505" "i12506" "i12507"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i12493"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i9528"
                                            "i9526"
                                            "i9524"
                                            "i9522"
                                            "i9520"
                                            "i9518"
                                            "i9516"
                                            "i9514"
                                            "i9512"
                                            "i9510"
                                            "i9508"
                                            "i9506"
                                            "i9504"
                                            "i9502"
                                            "i9500"
                                            "i9498"
                                            "i9496"
                                            "i9494"
                                            "i9492"
                                            "i9490"
                                            "i9488"
                                            "i9486"
                                            "i9484"
                                            "i9482"
                                            "i9480"
                                            "i9478"
                                            "i9476"
                                            "i9474"
                                            "i9472"
                                            "i9470"
                                            "i9468"
                                            "i9466"
                                            "i9464"
                                            "i9462"
                                            "i9460"
                                            "i9458"
                                            "i9457"
                                            "i9456"
                                            "i9454"
                                            "i9453"
                                            "i9452"
                                            "i9451"
                                            "i9450"
                                            "i9448"
                                            "i9446"
                                            "i9444"
                                            "i9442"
                                            "i9440"
                                            "i9438"
                                            "i9436"
                                            "i9434"
                                            "i9431"
                                            "i9429"
                                            "i9428"
                                            "i9427"
                                            "i9426"
                                            "i9425"
                                            "i9424"
                                            "i9422"
                                            "i9420"
                                            "i9418"
                                            "i9416"
                                            "i9415"
                                            "i9413"
                                            "i9411"
                                            "i9409"
                                            "i9407"
                                            "i9405"
                                            "i9403"
                                            "i9401"
                                            "i9400"
                                            "i9398"
                                            "i9396"
                                            "i9395"
                                            "i9394"
                                            "i9392"
                                            "i9391"
                                            "i9389"
                                            "i9387"
                                            "i9385"
                                            "i9383"
                                            "i9381"
                                            "i9379"
                                            "i9377"
                                            "i9375"
                                            "i9373"
                                            "i9371"
                                            "i9369"
                                            "i9367"
                                            "i9365"
                                            "i9363"
                                            "i9361"
                                            "i9359"
                                            "i9357"
                                            "i9355"
                                            "i9353"
                                            "i9351"
                                            "i9349"
                                            "i9347"
                                            "i9345"
                                            "i9343"
                                            "i9341"
                                            "i9339"
                                            "i9337"
                                            "i9335"
                                            "i9333"
                                            "i9331"
                                            "i9329"
                                            "i9328"
                                            "i9326"
                                            "i9324"
                                            "i9322"
                                            "i9320"
                                            "i9318"
                                            "i9316"
                                            "i9314"
                                            "i9312"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i9215" "i9213")))
                                        (hygiene guile))
                                     #{mod\ 12509}#))))
                         #{tmp\ 12495}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 12494}#)))
              ($sc-dispatch
                #{tmp\ 12494}#
                '(any each-any any))))
           #{e\ 12492}#)))
      (#{global-extend\ 9410}#
        'core
        'if
        (lambda (#{e\ 12512}#
                 #{r\ 12513}#
                 #{w\ 12514}#
                 #{s\ 12515}#
                 #{mod\ 12516}#)
          ((lambda (#{tmp\ 12522}#)
             ((lambda (#{tmp\ 12523}#)
                (if #{tmp\ 12523}#
                  (apply (lambda (#{_\ 12527}# #{test\ 12528}# #{then\ 12529}#)
                           (#{build-conditional\ 9340}#
                             #{s\ 12515}#
                             (#{chi\ 9499}#
                               #{test\ 12528}#
                               #{r\ 12513}#
                               #{w\ 12514}#
                               #{mod\ 12516}#)
                             (#{chi\ 9499}#
                               #{then\ 12529}#
                               #{r\ 12513}#
                               #{w\ 12514}#
                               #{mod\ 12516}#)
                             (#{build-void\ 9336}# #f)))
                         #{tmp\ 12523}#)
                  ((lambda (#{tmp\ 12531}#)
                     (if #{tmp\ 12531}#
                       (apply (lambda (#{_\ 12536}#
                                       #{test\ 12537}#
                                       #{then\ 12538}#
                                       #{else\ 12539}#)
                                (#{build-conditional\ 9340}#
                                  #{s\ 12515}#
                                  (#{chi\ 9499}#
                                    #{test\ 12537}#
                                    #{r\ 12513}#
                                    #{w\ 12514}#
                                    #{mod\ 12516}#)
                                  (#{chi\ 9499}#
                                    #{then\ 12538}#
                                    #{r\ 12513}#
                                    #{w\ 12514}#
                                    #{mod\ 12516}#)
                                  (#{chi\ 9499}#
                                    #{else\ 12539}#
                                    #{r\ 12513}#
                                    #{w\ 12514}#
                                    #{mod\ 12516}#)))
                              #{tmp\ 12531}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 12522}#)))
                   ($sc-dispatch
                     #{tmp\ 12522}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 12522}#
                '(any any any))))
           #{e\ 12512}#)))
      (#{global-extend\ 9410}#
        'begin
        'begin
        '())
      (#{global-extend\ 9410}#
        'define
        'define
        '())
      (#{global-extend\ 9410}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 9410}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 9410}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 12547}#
                   (lambda (#{x\ 12548}#
                            #{keys\ 12549}#
                            #{clauses\ 12550}#
                            #{r\ 12551}#
                            #{mod\ 12552}#)
                     (if (null? #{clauses\ 12550}#)
                       (#{build-application\ 9338}#
                         #f
                         (#{build-primref\ 9362}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 9364}# #f #f)
                               (#{build-data\ 9364}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 12548}#))
                       ((lambda (#{tmp\ 12562}#)
                          ((lambda (#{tmp\ 12563}#)
                             (if #{tmp\ 12563}#
                               (apply (lambda (#{pat\ 12566}# #{exp\ 12567}#)
                                        (if (if (#{id?\ 9414}# #{pat\ 12566}#)
                                              (and-map
                                                (lambda (#{x\ 12570}#)
                                                  (not (#{free-id=?\ 9473}#
                                                         #{pat\ 12566}#
                                                         #{x\ 12570}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i12564"
                                                              "i12565"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i12553"
                                                              "i12554"
                                                              "i12555"
                                                              "i12556"
                                                              "i12557"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i12546"
                                                             "i12544"
                                                             "i12542"
                                                             "i12540"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*
                                                              noexpand)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i9528"
                                                             "i9526"
                                                             "i9524"
                                                             "i9522"
                                                             "i9520"
                                                             "i9518"
                                                             "i9516"
                                                             "i9514"
                                                             "i9512"
                                                             "i9510"
                                                             "i9508"
                                                             "i9506"
                                                             "i9504"
                                                             "i9502"
                                                             "i9500"
                                                             "i9498"
                                                             "i9496"
                                                             "i9494"
                                                             "i9492"
                                                             "i9490"
                                                             "i9488"
                                                             "i9486"
                                                             "i9484"
                                                             "i9482"
                                                             "i9480"
                                                             "i9478"
                                                             "i9476"
                                                             "i9474"
                                                             "i9472"
                                                             "i9470"
                                                             "i9468"
                                                             "i9466"
                                                             "i9464"
                                                             "i9462"
                                                             "i9460"
                                                             "i9458"
                                                             "i9457"
                                                             "i9456"
                                                             "i9454"
                                                             "i9453"
                                                             "i9452"
                                                             "i9451"
                                                             "i9450"
                                                             "i9448"
                                                             "i9446"
                                                             "i9444"
                                                             "i9442"
                                                             "i9440"
                                                             "i9438"
                                                             "i9436"
                                                             "i9434"
                                                             "i9431"
                                                             "i9429"
                                                             "i9428"
                                                             "i9427"
                                                             "i9426"
                                                             "i9425"
                                                             "i9424"
                                                             "i9422"
                                                             "i9420"
                                                             "i9418"
                                                             "i9416"
                                                             "i9415"
                                                             "i9413"
                                                             "i9411"
                                                             "i9409"
                                                             "i9407"
                                                             "i9405"
                                                             "i9403"
                                                             "i9401"
                                                             "i9400"
                                                             "i9398"
                                                             "i9396"
                                                             "i9395"
                                                             "i9394"
                                                             "i9392"
                                                             "i9391"
                                                             "i9389"
                                                             "i9387"
                                                             "i9385"
                                                             "i9383"
                                                             "i9381"
                                                             "i9379"
                                                             "i9377"
                                                             "i9375"
                                                             "i9373"
                                                             "i9371"
                                                             "i9369"
                                                             "i9367"
                                                             "i9365"
                                                             "i9363"
                                                             "i9361"
                                                             "i9359"
                                                             "i9357"
                                                             "i9355"
                                                             "i9353"
                                                             "i9351"
                                                             "i9349"
                                                             "i9347"
                                                             "i9345"
                                                             "i9343"
                                                             "i9341"
                                                             "i9339"
                                                             "i9337"
                                                             "i9335"
                                                             "i9333"
                                                             "i9331"
                                                             "i9329"
                                                             "i9328"
                                                             "i9326"
                                                             "i9324"
                                                             "i9322"
                                                             "i9320"
                                                             "i9318"
                                                             "i9316"
                                                             "i9314"
                                                             "i9312"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i9215" "i9213")))
                                                         (hygiene guile))
                                                      #{keys\ 12549}#))
                                              #f)
                                          (let ((#{labels\ 12574}#
                                                  (list (#{gen-label\ 9430}#)))
                                                (#{var\ 12575}#
                                                  (#{gen-var\ 9527}#
                                                    #{pat\ 12566}#)))
                                            (#{build-application\ 9338}#
                                              #f
                                              (#{build-simple-lambda\ 9356}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 12566}#))
                                                #f
                                                (list #{var\ 12575}#)
                                                #f
                                                (#{chi\ 9499}#
                                                  #{exp\ 12567}#
                                                  (#{extend-env\ 9402}#
                                                    #{labels\ 12574}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 12575}#
                                                                      0)))
                                                    #{r\ 12551}#)
                                                  (#{make-binding-wrap\ 9461}#
                                                    (list #{pat\ 12566}#)
                                                    #{labels\ 12574}#
                                                    '(()))
                                                  #{mod\ 12552}#))
                                              (list #{x\ 12548}#)))
                                          (#{gen-clause\ 12545}#
                                            #{x\ 12548}#
                                            #{keys\ 12549}#
                                            (cdr #{clauses\ 12550}#)
                                            #{r\ 12551}#
                                            #{pat\ 12566}#
                                            #t
                                            #{exp\ 12567}#
                                            #{mod\ 12552}#)))
                                      #{tmp\ 12563}#)
                               ((lambda (#{tmp\ 12581}#)
                                  (if #{tmp\ 12581}#
                                    (apply (lambda (#{pat\ 12585}#
                                                    #{fender\ 12586}#
                                                    #{exp\ 12587}#)
                                             (#{gen-clause\ 12545}#
                                               #{x\ 12548}#
                                               #{keys\ 12549}#
                                               (cdr #{clauses\ 12550}#)
                                               #{r\ 12551}#
                                               #{pat\ 12585}#
                                               #{fender\ 12586}#
                                               #{exp\ 12587}#
                                               #{mod\ 12552}#))
                                           #{tmp\ 12581}#)
                                    ((lambda (#{_\ 12589}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 12550}#)))
                                     #{tmp\ 12562}#)))
                                ($sc-dispatch
                                  #{tmp\ 12562}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 12562}# (quote (any any)))))
                        (car #{clauses\ 12550}#)))))
                 (#{gen-clause\ 12545}#
                   (lambda (#{x\ 12590}#
                            #{keys\ 12591}#
                            #{clauses\ 12592}#
                            #{r\ 12593}#
                            #{pat\ 12594}#
                            #{fender\ 12595}#
                            #{exp\ 12596}#
                            #{mod\ 12597}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 12541}#
                           #{pat\ 12594}#
                           #{keys\ 12591}#))
                       (lambda (#{p\ 12606}# #{pvars\ 12607}#)
                         (if (not (#{distinct-bound-ids?\ 9479}#
                                    (map car #{pvars\ 12607}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 12594}#)
                           (if (not (and-map
                                      (lambda (#{x\ 12614}#)
                                        (not (#{ellipsis?\ 9515}#
                                               (car #{x\ 12614}#))))
                                      #{pvars\ 12607}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 12594}#)
                             (let ((#{y\ 12618}#
                                     (#{gen-var\ 9527}# (quote tmp))))
                               (#{build-application\ 9338}#
                                 #f
                                 (#{build-simple-lambda\ 9356}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 12618}#)
                                   #f
                                   (let ((#{y\ 12622}#
                                           (#{build-lexical-reference\ 9342}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 12618}#)))
                                     (#{build-conditional\ 9340}#
                                       #f
                                       ((lambda (#{tmp\ 12625}#)
                                          ((lambda (#{tmp\ 12626}#)
                                             (if #{tmp\ 12626}#
                                               (apply (lambda () #{y\ 12622}#)
                                                      #{tmp\ 12626}#)
                                               ((lambda (#{_\ 12628}#)
                                                  (#{build-conditional\ 9340}#
                                                    #f
                                                    #{y\ 12622}#
                                                    (#{build-dispatch-call\ 12543}#
                                                      #{pvars\ 12607}#
                                                      #{fender\ 12595}#
                                                      #{y\ 12622}#
                                                      #{r\ 12593}#
                                                      #{mod\ 12597}#)
                                                    (#{build-data\ 9364}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 12625}#)))
                                           ($sc-dispatch
                                             #{tmp\ 12625}#
                                             '#(atom #t))))
                                        #{fender\ 12595}#)
                                       (#{build-dispatch-call\ 12543}#
                                         #{pvars\ 12607}#
                                         #{exp\ 12596}#
                                         #{y\ 12622}#
                                         #{r\ 12593}#
                                         #{mod\ 12597}#)
                                       (#{gen-syntax-case\ 12547}#
                                         #{x\ 12590}#
                                         #{keys\ 12591}#
                                         #{clauses\ 12592}#
                                         #{r\ 12593}#
                                         #{mod\ 12597}#))))
                                 (list (if (eq? #{p\ 12606}# (quote any))
                                         (#{build-application\ 9338}#
                                           #f
                                           (#{build-primref\ 9362}#
                                             #f
                                             'list)
                                           (list #{x\ 12590}#))
                                         (#{build-application\ 9338}#
                                           #f
                                           (#{build-primref\ 9362}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 12590}#
                                                 (#{build-data\ 9364}#
                                                   #f
                                                   #{p\ 12606}#)))))))))))))
                 (#{build-dispatch-call\ 12543}#
                   (lambda (#{pvars\ 12636}#
                            #{exp\ 12637}#
                            #{y\ 12638}#
                            #{r\ 12639}#
                            #{mod\ 12640}#)
                     (let ((#{ids\ 12648}# (map car #{pvars\ 12636}#))
                           (#{levels\ 12649}# (map cdr #{pvars\ 12636}#)))
                       (let ((#{labels\ 12652}#
                               (#{gen-labels\ 9432}# #{ids\ 12648}#))
                             (#{new-vars\ 12653}#
                               (map #{gen-var\ 9527}# #{ids\ 12648}#)))
                         (#{build-application\ 9338}#
                           #f
                           (#{build-primref\ 9362}# #f (quote apply))
                           (list (#{build-simple-lambda\ 9356}#
                                   #f
                                   (map syntax->datum #{ids\ 12648}#)
                                   #f
                                   #{new-vars\ 12653}#
                                   #f
                                   (#{chi\ 9499}#
                                     #{exp\ 12637}#
                                     (#{extend-env\ 9402}#
                                       #{labels\ 12652}#
                                       (map (lambda (#{var\ 12657}#
                                                     #{level\ 12658}#)
                                              (cons 'syntax
                                                    (cons #{var\ 12657}#
                                                          #{level\ 12658}#)))
                                            #{new-vars\ 12653}#
                                            (map cdr #{pvars\ 12636}#))
                                       #{r\ 12639}#)
                                     (#{make-binding-wrap\ 9461}#
                                       #{ids\ 12648}#
                                       #{labels\ 12652}#
                                       '(()))
                                     #{mod\ 12640}#))
                                 #{y\ 12638}#))))))
                 (#{convert-pattern\ 12541}#
                   (lambda (#{pattern\ 12664}# #{keys\ 12665}#)
                     (letrec ((#{cvt\ 12671}#
                                (lambda (#{p\ 12672}#
                                         #{n\ 12673}#
                                         #{ids\ 12674}#)
                                  (if (#{id?\ 9414}# #{p\ 12672}#)
                                    (if (#{bound-id-member?\ 9481}#
                                          #{p\ 12672}#
                                          #{keys\ 12665}#)
                                      (values
                                        (vector (quote free-id) #{p\ 12672}#)
                                        #{ids\ 12674}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 12672}# #{n\ 12673}#)
                                              #{ids\ 12674}#)))
                                    ((lambda (#{tmp\ 12678}#)
                                       ((lambda (#{tmp\ 12679}#)
                                          (if (if #{tmp\ 12679}#
                                                (apply (lambda (#{x\ 12682}#
                                                                #{dots\ 12683}#)
                                                         (#{ellipsis?\ 9515}#
                                                           #{dots\ 12683}#))
                                                       #{tmp\ 12679}#)
                                                #f)
                                            (apply (lambda (#{x\ 12686}#
                                                            #{dots\ 12687}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 12671}#
                                                           #{x\ 12686}#
                                                           (#{fx+\ 9317}#
                                                             #{n\ 12673}#
                                                             1)
                                                           #{ids\ 12674}#))
                                                       (lambda (#{p\ 12688}#
                                                                #{ids\ 12689}#)
                                                         (values
                                                           (if (eq? #{p\ 12688}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 12688}#))
                                                           #{ids\ 12689}#))))
                                                   #{tmp\ 12679}#)
                                            ((lambda (#{tmp\ 12692}#)
                                               (if (if #{tmp\ 12692}#
                                                     (apply (lambda (#{x\ 12696}#
                                                                     #{dots\ 12697}#
                                                                     #{ys\ 12698}#)
                                                              (#{ellipsis?\ 9515}#
                                                                #{dots\ 12697}#))
                                                            #{tmp\ 12692}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 12702}#
                                                                 #{dots\ 12703}#
                                                                 #{ys\ 12704}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 12669}#
                                                                #{ys\ 12704}#
                                                                #{n\ 12673}#
                                                                #{ids\ 12674}#))
                                                            (lambda (#{ys\ 12706}#
                                                                     #{ids\ 12707}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 12671}#
                                                                    #{x\ 12702}#
                                                                    (+ #{n\ 12673}#
                                                                       1)
                                                                    #{ids\ 12707}#))
                                                                (lambda (#{x\ 12710}#
                                                                         #{ids\ 12711}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 12710}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 12706}#)
                                                                                        '(())))))
                                                                    #{ids\ 12711}#))))))
                                                        #{tmp\ 12692}#)
                                                 ((lambda (#{tmp\ 12715}#)
                                                    (if #{tmp\ 12715}#
                                                      (apply (lambda (#{x\ 12718}#
                                                                      #{y\ 12719}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 12671}#
                                                                     #{y\ 12719}#
                                                                     #{n\ 12673}#
                                                                     #{ids\ 12674}#))
                                                                 (lambda (#{y\ 12720}#
                                                                          #{ids\ 12721}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 12671}#
                                                                         #{x\ 12718}#
                                                                         #{n\ 12673}#
                                                                         #{ids\ 12721}#))
                                                                     (lambda (#{x\ 12724}#
                                                                              #{ids\ 12725}#)
                                                                       (values
                                                                         (cons #{x\ 12724}#
                                                                               #{y\ 12720}#)
                                                                         #{ids\ 12725}#))))))
                                                             #{tmp\ 12715}#)
                                                      ((lambda (#{tmp\ 12728}#)
                                                         (if #{tmp\ 12728}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 12674}#))
                                                                  #{tmp\ 12728}#)
                                                           ((lambda (#{tmp\ 12729}#)
                                                              (if #{tmp\ 12729}#
                                                                (apply (lambda (#{x\ 12731}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 12671}#
                                                                               #{x\ 12731}#
                                                                               #{n\ 12673}#
                                                                               #{ids\ 12674}#))
                                                                           (lambda (#{p\ 12733}#
                                                                                    #{ids\ 12734}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 12733}#)
                                                                               #{ids\ 12734}#))))
                                                                       #{tmp\ 12729}#)
                                                                ((lambda (#{x\ 12738}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 9525}#
                                                                         #{p\ 12672}#
                                                                         '(())))
                                                                     #{ids\ 12674}#))
                                                                 #{tmp\ 12678}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 12678}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 12678}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 12678}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 12678}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 12678}#
                                          '(any any))))
                                     #{p\ 12672}#))))
                              (#{cvt*\ 12669}#
                                (lambda (#{p*\ 12740}#
                                         #{n\ 12741}#
                                         #{ids\ 12742}#)
                                  (if (null? #{p*\ 12740}#)
                                    (values (quote ()) #{ids\ 12742}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 12669}#
                                          (cdr #{p*\ 12740}#)
                                          #{n\ 12741}#
                                          #{ids\ 12742}#))
                                      (lambda (#{y\ 12746}# #{ids\ 12747}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 12671}#
                                              (car #{p*\ 12740}#)
                                              #{n\ 12741}#
                                              #{ids\ 12747}#))
                                          (lambda (#{x\ 12750}# #{ids\ 12751}#)
                                            (values
                                              (cons #{x\ 12750}# #{y\ 12746}#)
                                              #{ids\ 12751}#)))))))))
                       (#{cvt\ 12671}# #{pattern\ 12664}# 0 (quote ()))))))
          (lambda (#{e\ 12754}#
                   #{r\ 12755}#
                   #{w\ 12756}#
                   #{s\ 12757}#
                   #{mod\ 12758}#)
            (let ((#{e\ 12765}#
                    (#{source-wrap\ 9485}#
                      #{e\ 12754}#
                      #{w\ 12756}#
                      #{s\ 12757}#
                      #{mod\ 12758}#)))
              ((lambda (#{tmp\ 12766}#)
                 ((lambda (#{tmp\ 12767}#)
                    (if #{tmp\ 12767}#
                      (apply (lambda (#{_\ 12772}#
                                      #{val\ 12773}#
                                      #{key\ 12774}#
                                      #{m\ 12775}#)
                               (if (and-map
                                     (lambda (#{x\ 12776}#)
                                       (if (#{id?\ 9414}# #{x\ 12776}#)
                                         (not (#{ellipsis?\ 9515}#
                                                #{x\ 12776}#))
                                         #f))
                                     #{key\ 12774}#)
                                 (let ((#{x\ 12782}#
                                         (#{gen-var\ 9527}# (quote tmp))))
                                   (#{build-application\ 9338}#
                                     #{s\ 12757}#
                                     (#{build-simple-lambda\ 9356}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 12782}#)
                                       #f
                                       (#{gen-syntax-case\ 12547}#
                                         (#{build-lexical-reference\ 9342}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 12782}#)
                                         #{key\ 12774}#
                                         #{m\ 12775}#
                                         #{r\ 12755}#
                                         #{mod\ 12758}#))
                                     (list (#{chi\ 9499}#
                                             #{val\ 12773}#
                                             #{r\ 12755}#
                                             '(())
                                             #{mod\ 12758}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 12765}#)))
                             #{tmp\ 12767}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 12766}#)))
                  ($sc-dispatch
                    #{tmp\ 12766}#
                    '(any any each-any . each-any))))
               #{e\ 12765}#)))))
      (set! sc-expand
        (lambda (#{x\ 12788}# . #{rest\ 12789}#)
          (if (if (pair? #{x\ 12788}#)
                (equal? (car #{x\ 12788}#) #{noexpand\ 9313}#)
                #f)
            (cadr #{x\ 12788}#)
            (let ((#{m\ 12796}#
                    (if (null? #{rest\ 12789}#)
                      'e
                      (car #{rest\ 12789}#)))
                  (#{esew\ 12797}#
                    (if (let ((#{t\ 12800}# (null? #{rest\ 12789}#)))
                          (if #{t\ 12800}#
                            #{t\ 12800}#
                            (null? (cdr #{rest\ 12789}#))))
                      '(eval)
                      (cadr #{rest\ 12789}#))))
              (with-fluid*
                #{*mode*\ 9315}#
                #{m\ 12796}#
                (lambda ()
                  (#{chi-top\ 9497}#
                    #{x\ 12788}#
                    '()
                    '((top))
                    #{m\ 12796}#
                    #{esew\ 12797}#
                    (cons 'hygiene
                          (module-name (current-module))))))))))
      (set! identifier?
        (lambda (#{x\ 12804}#)
          (#{nonsymbol-id?\ 9412}# #{x\ 12804}#)))
      (set! datum->syntax
        (lambda (#{id\ 12806}# #{datum\ 12807}#)
          (#{make-syntax-object\ 9376}#
            #{datum\ 12807}#
            (#{syntax-object-wrap\ 9382}# #{id\ 12806}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 12810}#)
          (#{strip\ 9525}# #{x\ 12810}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 12813}#)
          (begin
            (let ((#{x\ 12817}# #{ls\ 12813}#))
              (if (not (list? #{x\ 12817}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 12817}#)))
            (map (lambda (#{x\ 12818}#)
                   (#{wrap\ 9483}# (gensym) (quote ((top))) #f))
                 #{ls\ 12813}#))))
      (set! free-identifier=?
        (lambda (#{x\ 12822}# #{y\ 12823}#)
          (begin
            (let ((#{x\ 12828}# #{x\ 12822}#))
              (if (not (#{nonsymbol-id?\ 9412}# #{x\ 12828}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 12828}#)))
            (let ((#{x\ 12831}# #{y\ 12823}#))
              (if (not (#{nonsymbol-id?\ 9412}# #{x\ 12831}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 12831}#)))
            (#{free-id=?\ 9473}# #{x\ 12822}# #{y\ 12823}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 12832}# #{y\ 12833}#)
          (begin
            (let ((#{x\ 12838}# #{x\ 12832}#))
              (if (not (#{nonsymbol-id?\ 9412}# #{x\ 12838}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 12838}#)))
            (let ((#{x\ 12841}# #{y\ 12833}#))
              (if (not (#{nonsymbol-id?\ 9412}# #{x\ 12841}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 12841}#)))
            (#{bound-id=?\ 9475}# #{x\ 12832}# #{y\ 12833}#))))
      (set! syntax-violation
        (lambda (#{who\ 12842}#
                 #{message\ 12843}#
                 #{form\ 12844}#
                 .
                 #{subform\ 12845}#)
          (begin
            (let ((#{x\ 12852}# #{who\ 12842}#))
              (if (not ((lambda (#{x\ 12853}#)
                          (let ((#{t\ 12857}# (not #{x\ 12853}#)))
                            (if #{t\ 12857}#
                              #{t\ 12857}#
                              (let ((#{t\ 12860}# (string? #{x\ 12853}#)))
                                (if #{t\ 12860}#
                                  #{t\ 12860}#
                                  (symbol? #{x\ 12853}#))))))
                        #{x\ 12852}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 12852}#)))
            (let ((#{x\ 12864}# #{message\ 12843}#))
              (if (not (string? #{x\ 12864}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 12864}#)))
            (scm-error
              'syntax-error
              'sc-expand
              (string-append
                (if #{who\ 12842}# "~a: " "")
                "~a "
                (if (null? #{subform\ 12845}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 12866}#
                      (cons #{message\ 12843}#
                            (map (lambda (#{x\ 12867}#)
                                   (#{strip\ 9525}# #{x\ 12867}# (quote (()))))
                                 (append
                                   #{subform\ 12845}#
                                   (list #{form\ 12844}#))))))
                (if #{who\ 12842}#
                  (cons #{who\ 12842}# #{tail\ 12866}#)
                  #{tail\ 12866}#))
              #f))))
      (letrec ((#{match\ 12883}#
                 (lambda (#{e\ 12884}#
                          #{p\ 12885}#
                          #{w\ 12886}#
                          #{r\ 12887}#
                          #{mod\ 12888}#)
                   (if (not #{r\ 12887}#)
                     #f
                     (if (eq? #{p\ 12885}# (quote any))
                       (cons (#{wrap\ 9483}#
                               #{e\ 12884}#
                               #{w\ 12886}#
                               #{mod\ 12888}#)
                             #{r\ 12887}#)
                       (if (#{syntax-object?\ 9378}# #{e\ 12884}#)
                         (#{match*\ 12881}#
                           (#{syntax-object-expression\ 9380}# #{e\ 12884}#)
                           #{p\ 12885}#
                           (#{join-wraps\ 9465}#
                             #{w\ 12886}#
                             (#{syntax-object-wrap\ 9382}# #{e\ 12884}#))
                           #{r\ 12887}#
                           (#{syntax-object-module\ 9384}# #{e\ 12884}#))
                         (#{match*\ 12881}#
                           #{e\ 12884}#
                           #{p\ 12885}#
                           #{w\ 12886}#
                           #{r\ 12887}#
                           #{mod\ 12888}#))))))
               (#{match*\ 12881}#
                 (lambda (#{e\ 12901}#
                          #{p\ 12902}#
                          #{w\ 12903}#
                          #{r\ 12904}#
                          #{mod\ 12905}#)
                   (if (null? #{p\ 12902}#)
                     (if (null? #{e\ 12901}#) #{r\ 12904}# #f)
                     (if (pair? #{p\ 12902}#)
                       (if (pair? #{e\ 12901}#)
                         (#{match\ 12883}#
                           (car #{e\ 12901}#)
                           (car #{p\ 12902}#)
                           #{w\ 12903}#
                           (#{match\ 12883}#
                             (cdr #{e\ 12901}#)
                             (cdr #{p\ 12902}#)
                             #{w\ 12903}#
                             #{r\ 12904}#
                             #{mod\ 12905}#)
                           #{mod\ 12905}#)
                         #f)
                       (if (eq? #{p\ 12902}# (quote each-any))
                         (let ((#{l\ 12922}#
                                 (#{match-each-any\ 12875}#
                                   #{e\ 12901}#
                                   #{w\ 12903}#
                                   #{mod\ 12905}#)))
                           (if #{l\ 12922}#
                             (cons #{l\ 12922}# #{r\ 12904}#)
                             #f))
                         (let ((#{atom-key\ 12928}#
                                 (vector-ref #{p\ 12902}# 0)))
                           (if (memv #{atom-key\ 12928}# (quote (each)))
                             (if (null? #{e\ 12901}#)
                               (#{match-empty\ 12877}#
                                 (vector-ref #{p\ 12902}# 1)
                                 #{r\ 12904}#)
                               (let ((#{l\ 12931}#
                                       (#{match-each\ 12871}#
                                         #{e\ 12901}#
                                         (vector-ref #{p\ 12902}# 1)
                                         #{w\ 12903}#
                                         #{mod\ 12905}#)))
                                 (if #{l\ 12931}#
                                   (letrec ((#{collect\ 12936}#
                                              (lambda (#{l\ 12937}#)
                                                (if (null? (car #{l\ 12937}#))
                                                  #{r\ 12904}#
                                                  (cons (map car #{l\ 12937}#)
                                                        (#{collect\ 12936}#
                                                          (map cdr
                                                               #{l\ 12937}#)))))))
                                     (#{collect\ 12936}# #{l\ 12931}#))
                                   #f)))
                             (if (memv #{atom-key\ 12928}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 12873}#
                                     #{e\ 12901}#
                                     (vector-ref #{p\ 12902}# 1)
                                     (vector-ref #{p\ 12902}# 2)
                                     (vector-ref #{p\ 12902}# 3)
                                     #{w\ 12903}#
                                     #{r\ 12904}#
                                     #{mod\ 12905}#))
                                 (lambda (#{xr*\ 12939}#
                                          #{y-pat\ 12940}#
                                          #{r\ 12941}#)
                                   (if #{r\ 12941}#
                                     (if (null? #{y-pat\ 12940}#)
                                       (if (null? #{xr*\ 12939}#)
                                         (#{match-empty\ 12877}#
                                           (vector-ref #{p\ 12902}# 1)
                                           #{r\ 12941}#)
                                         (#{combine\ 12879}#
                                           #{xr*\ 12939}#
                                           #{r\ 12941}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 12928}# (quote (free-id)))
                                 (if (#{id?\ 9414}# #{e\ 12901}#)
                                   (if (#{free-id=?\ 9473}#
                                         (#{wrap\ 9483}#
                                           #{e\ 12901}#
                                           #{w\ 12903}#
                                           #{mod\ 12905}#)
                                         (vector-ref #{p\ 12902}# 1))
                                     #{r\ 12904}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 12928}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 12902}# 1)
                                         (#{strip\ 9525}#
                                           #{e\ 12901}#
                                           #{w\ 12903}#))
                                     #{r\ 12904}#
                                     #f)
                                   (if (memv #{atom-key\ 12928}#
                                             '(vector))
                                     (if (vector? #{e\ 12901}#)
                                       (#{match\ 12883}#
                                         (vector->list #{e\ 12901}#)
                                         (vector-ref #{p\ 12902}# 1)
                                         #{w\ 12903}#
                                         #{r\ 12904}#
                                         #{mod\ 12905}#)
                                       #f))))))))))))
               (#{combine\ 12879}#
                 (lambda (#{r*\ 12958}# #{r\ 12959}#)
                   (if (null? (car #{r*\ 12958}#))
                     #{r\ 12959}#
                     (cons (map car #{r*\ 12958}#)
                           (#{combine\ 12879}#
                             (map cdr #{r*\ 12958}#)
                             #{r\ 12959}#)))))
               (#{match-empty\ 12877}#
                 (lambda (#{p\ 12962}# #{r\ 12963}#)
                   (if (null? #{p\ 12962}#)
                     #{r\ 12963}#
                     (if (eq? #{p\ 12962}# (quote any))
                       (cons (quote ()) #{r\ 12963}#)
                       (if (pair? #{p\ 12962}#)
                         (#{match-empty\ 12877}#
                           (car #{p\ 12962}#)
                           (#{match-empty\ 12877}#
                             (cdr #{p\ 12962}#)
                             #{r\ 12963}#))
                         (if (eq? #{p\ 12962}# (quote each-any))
                           (cons (quote ()) #{r\ 12963}#)
                           (let ((#{atom-key\ 12977}#
                                   (vector-ref #{p\ 12962}# 0)))
                             (if (memv #{atom-key\ 12977}# (quote (each)))
                               (#{match-empty\ 12877}#
                                 (vector-ref #{p\ 12962}# 1)
                                 #{r\ 12963}#)
                               (if (memv #{atom-key\ 12977}# (quote (each+)))
                                 (#{match-empty\ 12877}#
                                   (vector-ref #{p\ 12962}# 1)
                                   (#{match-empty\ 12877}#
                                     (reverse (vector-ref #{p\ 12962}# 2))
                                     (#{match-empty\ 12877}#
                                       (vector-ref #{p\ 12962}# 3)
                                       #{r\ 12963}#)))
                                 (if (memv #{atom-key\ 12977}#
                                           '(free-id atom))
                                   #{r\ 12963}#
                                   (if (memv #{atom-key\ 12977}#
                                             '(vector))
                                     (#{match-empty\ 12877}#
                                       (vector-ref #{p\ 12962}# 1)
                                       #{r\ 12963}#))))))))))))
               (#{match-each-any\ 12875}#
                 (lambda (#{e\ 12982}# #{w\ 12983}# #{mod\ 12984}#)
                   (if (pair? #{e\ 12982}#)
                     (let ((#{l\ 12991}#
                             (#{match-each-any\ 12875}#
                               (cdr #{e\ 12982}#)
                               #{w\ 12983}#
                               #{mod\ 12984}#)))
                       (if #{l\ 12991}#
                         (cons (#{wrap\ 9483}#
                                 (car #{e\ 12982}#)
                                 #{w\ 12983}#
                                 #{mod\ 12984}#)
                               #{l\ 12991}#)
                         #f))
                     (if (null? #{e\ 12982}#)
                       '()
                       (if (#{syntax-object?\ 9378}# #{e\ 12982}#)
                         (#{match-each-any\ 12875}#
                           (#{syntax-object-expression\ 9380}# #{e\ 12982}#)
                           (#{join-wraps\ 9465}#
                             #{w\ 12983}#
                             (#{syntax-object-wrap\ 9382}# #{e\ 12982}#))
                           #{mod\ 12984}#)
                         #f)))))
               (#{match-each+\ 12873}#
                 (lambda (#{e\ 12999}#
                          #{x-pat\ 13000}#
                          #{y-pat\ 13001}#
                          #{z-pat\ 13002}#
                          #{w\ 13003}#
                          #{r\ 13004}#
                          #{mod\ 13005}#)
                   (letrec ((#{f\ 13016}#
                              (lambda (#{e\ 13017}# #{w\ 13018}#)
                                (if (pair? #{e\ 13017}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 13016}#
                                        (cdr #{e\ 13017}#)
                                        #{w\ 13018}#))
                                    (lambda (#{xr*\ 13021}#
                                             #{y-pat\ 13022}#
                                             #{r\ 13023}#)
                                      (if #{r\ 13023}#
                                        (if (null? #{y-pat\ 13022}#)
                                          (let ((#{xr\ 13028}#
                                                  (#{match\ 12883}#
                                                    (car #{e\ 13017}#)
                                                    #{x-pat\ 13000}#
                                                    #{w\ 13018}#
                                                    '()
                                                    #{mod\ 13005}#)))
                                            (if #{xr\ 13028}#
                                              (values
                                                (cons #{xr\ 13028}#
                                                      #{xr*\ 13021}#)
                                                #{y-pat\ 13022}#
                                                #{r\ 13023}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 13022}#)
                                            (#{match\ 12883}#
                                              (car #{e\ 13017}#)
                                              (car #{y-pat\ 13022}#)
                                              #{w\ 13018}#
                                              #{r\ 13023}#
                                              #{mod\ 13005}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 9378}# #{e\ 13017}#)
                                    (#{f\ 13016}#
                                      (#{syntax-object-expression\ 9380}#
                                        #{e\ 13017}#)
                                      (#{join-wraps\ 9465}#
                                        #{w\ 13018}#
                                        #{e\ 13017}#))
                                    (values
                                      '()
                                      #{y-pat\ 13001}#
                                      (#{match\ 12883}#
                                        #{e\ 13017}#
                                        #{z-pat\ 13002}#
                                        #{w\ 13018}#
                                        #{r\ 13004}#
                                        #{mod\ 13005}#)))))))
                     (#{f\ 13016}# #{e\ 12999}# #{w\ 13003}#))))
               (#{match-each\ 12871}#
                 (lambda (#{e\ 13032}#
                          #{p\ 13033}#
                          #{w\ 13034}#
                          #{mod\ 13035}#)
                   (if (pair? #{e\ 13032}#)
                     (let ((#{first\ 13043}#
                             (#{match\ 12883}#
                               (car #{e\ 13032}#)
                               #{p\ 13033}#
                               #{w\ 13034}#
                               '()
                               #{mod\ 13035}#)))
                       (if #{first\ 13043}#
                         (let ((#{rest\ 13047}#
                                 (#{match-each\ 12871}#
                                   (cdr #{e\ 13032}#)
                                   #{p\ 13033}#
                                   #{w\ 13034}#
                                   #{mod\ 13035}#)))
                           (if #{rest\ 13047}#
                             (cons #{first\ 13043}# #{rest\ 13047}#)
                             #f))
                         #f))
                     (if (null? #{e\ 13032}#)
                       '()
                       (if (#{syntax-object?\ 9378}# #{e\ 13032}#)
                         (#{match-each\ 12871}#
                           (#{syntax-object-expression\ 9380}# #{e\ 13032}#)
                           #{p\ 13033}#
                           (#{join-wraps\ 9465}#
                             #{w\ 13034}#
                             (#{syntax-object-wrap\ 9382}# #{e\ 13032}#))
                           (#{syntax-object-module\ 9384}# #{e\ 13032}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 13055}# #{p\ 13056}#)
            (if (eq? #{p\ 13056}# (quote any))
              (list #{e\ 13055}#)
              (if (#{syntax-object?\ 9378}# #{e\ 13055}#)
                (#{match*\ 12881}#
                  (#{syntax-object-expression\ 9380}# #{e\ 13055}#)
                  #{p\ 13056}#
                  (#{syntax-object-wrap\ 9382}# #{e\ 13055}#)
                  '()
                  (#{syntax-object-module\ 9384}# #{e\ 13055}#))
                (#{match*\ 12881}#
                  #{e\ 13055}#
                  #{p\ 13056}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 13065}#)
            ((lambda (#{tmp\ 13067}#)
               ((lambda (#{tmp\ 13068}#)
                  (if #{tmp\ 13068}#
                    (apply (lambda (#{_\ 13072}# #{e1\ 13073}# #{e2\ 13074}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i13069" "i13070" "i13071"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i13066")))
                                      (hygiene guile))
                                   (cons #{e1\ 13073}# #{e2\ 13074}#)))
                           #{tmp\ 13068}#)
                    ((lambda (#{tmp\ 13076}#)
                       (if #{tmp\ 13076}#
                         (apply (lambda (#{_\ 13082}#
                                         #{out\ 13083}#
                                         #{in\ 13084}#
                                         #{e1\ 13085}#
                                         #{e2\ 13086}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i13077"
                                                "i13078"
                                                "i13079"
                                                "i13080"
                                                "i13081"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i13066")))
                                           (hygiene guile))
                                        #{in\ 13084}#
                                        '()
                                        (list #{out\ 13083}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i13077"
                                                            "i13078"
                                                            "i13079"
                                                            "i13080"
                                                            "i13081"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i13066")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 13085}#
                                                          #{e2\ 13086}#)))))
                                #{tmp\ 13076}#)
                         ((lambda (#{tmp\ 13088}#)
                            (if #{tmp\ 13088}#
                              (apply (lambda (#{_\ 13094}#
                                              #{out\ 13095}#
                                              #{in\ 13096}#
                                              #{e1\ 13097}#
                                              #{e2\ 13098}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i13089"
                                                     "i13090"
                                                     "i13091"
                                                     "i13092"
                                                     "i13093"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i13066")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i13089"
                                                           "i13090"
                                                           "i13091"
                                                           "i13092"
                                                           "i13093"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i13066")))
                                                      (hygiene guile))
                                                   #{in\ 13096}#)
                                             '()
                                             (list #{out\ 13095}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i13089"
                                                                 "i13090"
                                                                 "i13091"
                                                                 "i13092"
                                                                 "i13093"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i13066")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 13097}#
                                                               #{e2\ 13098}#)))))
                                     #{tmp\ 13088}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 13067}#)))
                          ($sc-dispatch
                            #{tmp\ 13067}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 13067}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 13067}#
                  '(any () any . each-any))))
             #{x\ 13065}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 13102}#)
            ((lambda (#{tmp\ 13104}#)
               ((lambda (#{tmp\ 13105}#)
                  (if #{tmp\ 13105}#
                    (apply (lambda (#{_\ 13111}#
                                    #{k\ 13112}#
                                    #{keyword\ 13113}#
                                    #{pattern\ 13114}#
                                    #{template\ 13115}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i13106"
                                           "i13107"
                                           "i13108"
                                           "i13109"
                                           "i13110"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i13103")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i13106"
                                            "i13107"
                                            "i13108"
                                            "i13109"
                                            "i13110"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i13103")))
                                       (hygiene guile)))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i13106"
                                                 "i13107"
                                                 "i13108"
                                                 "i13109"
                                                 "i13110"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13103")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i13106"
                                                       "i13107"
                                                       "i13108"
                                                       "i13109"
                                                       "i13110"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i13103")))
                                                  (hygiene guile))
                                               (cons #{k\ 13112}#
                                                     (map (lambda (#{tmp\ 13118}#
                                                                   #{tmp\ 13117}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i13106"
                                                                                "i13107"
                                                                                "i13108"
                                                                                "i13109"
                                                                                "i13110"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i13103")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 13117}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i13106"
                                                                                "i13107"
                                                                                "i13108"
                                                                                "i13109"
                                                                                "i13110"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i13103")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 13118}#)))
                                                          #{template\ 13115}#
                                                          #{pattern\ 13114}#))))))
                           #{tmp\ 13105}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13104}#)))
                ($sc-dispatch
                  #{tmp\ 13104}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 13102}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 13119}#)
            ((lambda (#{tmp\ 13121}#)
               ((lambda (#{tmp\ 13122}#)
                  (if (if #{tmp\ 13122}#
                        (apply (lambda (#{let*\ 13128}#
                                        #{x\ 13129}#
                                        #{v\ 13130}#
                                        #{e1\ 13131}#
                                        #{e2\ 13132}#)
                                 (and-map identifier? #{x\ 13129}#))
                               #{tmp\ 13122}#)
                        #f)
                    (apply (lambda (#{let*\ 13139}#
                                    #{x\ 13140}#
                                    #{v\ 13141}#
                                    #{e1\ 13142}#
                                    #{e2\ 13143}#)
                             (letrec ((#{f\ 13146}#
                                        (lambda (#{bindings\ 13147}#)
                                          (if (null? #{bindings\ 13147}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i13144" "i13145"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i13134"
                                                          "i13135"
                                                          "i13136"
                                                          "i13137"
                                                          "i13138"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i13120")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 13142}#
                                                              #{e2\ 13143}#)))
                                            ((lambda (#{tmp\ 13152}#)
                                               ((lambda (#{tmp\ 13153}#)
                                                  (if #{tmp\ 13153}#
                                                    (apply (lambda (#{body\ 13156}#
                                                                    #{binding\ 13157}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i13154"
                                                                           "i13155"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i13144"
                                                                           "i13145"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i13134"
                                                                           "i13135"
                                                                           "i13136"
                                                                           "i13137"
                                                                           "i13138"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i13120")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 13157}#)
                                                                   #{body\ 13156}#))
                                                           #{tmp\ 13153}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 13152}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 13152}#
                                                  '(any any))))
                                             (list (#{f\ 13146}#
                                                     (cdr #{bindings\ 13147}#))
                                                   (car #{bindings\ 13147}#)))))))
                               (#{f\ 13146}#
                                 (map list #{x\ 13140}# #{v\ 13141}#))))
                           #{tmp\ 13122}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13121}#)))
                ($sc-dispatch
                  #{tmp\ 13121}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 13119}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 13158}#)
            ((lambda (#{tmp\ 13160}#)
               ((lambda (#{tmp\ 13161}#)
                  (if #{tmp\ 13161}#
                    (apply (lambda (#{_\ 13169}#
                                    #{var\ 13170}#
                                    #{init\ 13171}#
                                    #{step\ 13172}#
                                    #{e0\ 13173}#
                                    #{e1\ 13174}#
                                    #{c\ 13175}#)
                             ((lambda (#{tmp\ 13177}#)
                                ((lambda (#{tmp\ 13178}#)
                                   (if #{tmp\ 13178}#
                                     (apply (lambda (#{step\ 13180}#)
                                              ((lambda (#{tmp\ 13181}#)
                                                 ((lambda (#{tmp\ 13182}#)
                                                    (if #{tmp\ 13182}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i13179"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i13162"
                                                                             "i13163"
                                                                             "i13164"
                                                                             "i13165"
                                                                             "i13166"
                                                                             "i13167"
                                                                             "i13168"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i13159")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i13179"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i13162"
                                                                             "i13163"
                                                                             "i13164"
                                                                             "i13165"
                                                                             "i13166"
                                                                             "i13167"
                                                                             "i13168"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i13159")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 13170}#
                                                                          #{init\ 13171}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i13179"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i13162"
                                                                                   "i13163"
                                                                                   "i13164"
                                                                                   "i13165"
                                                                                   "i13166"
                                                                                   "i13167"
                                                                                   "i13168"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i13159")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i13179"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i13162"
                                                                                         "i13163"
                                                                                         "i13164"
                                                                                         "i13165"
                                                                                         "i13166"
                                                                                         "i13167"
                                                                                         "i13168"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i13159")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 13173}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i13179"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i13162"
                                                                                         "i13163"
                                                                                         "i13164"
                                                                                         "i13165"
                                                                                         "i13166"
                                                                                         "i13167"
                                                                                         "i13168"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i13159")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 13175}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i13179"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i13162"
                                                                                                       "i13163"
                                                                                                       "i13164"
                                                                                                       "i13165"
                                                                                                       "i13166"
                                                                                                       "i13167"
                                                                                                       "i13168"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i13159")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 13180}#)))))))
                                                             #{tmp\ 13182}#)
                                                      ((lambda (#{tmp\ 13187}#)
                                                         (if #{tmp\ 13187}#
                                                           (apply (lambda (#{e1\ 13190}#
                                                                           #{e2\ 13191}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i13188"
                                                                                  "i13189"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i13179"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13162"
                                                                                  "i13163"
                                                                                  "i13164"
                                                                                  "i13165"
                                                                                  "i13166"
                                                                                  "i13167"
                                                                                  "i13168"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i13159")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i13188"
                                                                                  "i13189"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i13179"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13162"
                                                                                  "i13163"
                                                                                  "i13164"
                                                                                  "i13165"
                                                                                  "i13166"
                                                                                  "i13167"
                                                                                  "i13168"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i13159")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 13170}#
                                                                               #{init\ 13171}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i13188"
                                                                                        "i13189"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i13179"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13162"
                                                                                        "i13163"
                                                                                        "i13164"
                                                                                        "i13165"
                                                                                        "i13166"
                                                                                        "i13167"
                                                                                        "i13168"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i13159")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 13173}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i13188"
                                                                                              "i13189"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i13179"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13162"
                                                                                              "i13163"
                                                                                              "i13164"
                                                                                              "i13165"
                                                                                              "i13166"
                                                                                              "i13167"
                                                                                              "i13168"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i13159")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 13190}#
                                                                                            #{e2\ 13191}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i13188"
                                                                                              "i13189"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i13179"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13162"
                                                                                              "i13163"
                                                                                              "i13164"
                                                                                              "i13165"
                                                                                              "i13166"
                                                                                              "i13167"
                                                                                              "i13168"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i13159")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 13175}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i13188"
                                                                                                            "i13189"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i13179"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i13162"
                                                                                                            "i13163"
                                                                                                            "i13164"
                                                                                                            "i13165"
                                                                                                            "i13166"
                                                                                                            "i13167"
                                                                                                            "i13168"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i13159")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 13180}#)))))))
                                                                  #{tmp\ 13187}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 13181}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 13181}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 13181}#
                                                    '())))
                                               #{e1\ 13174}#))
                                            #{tmp\ 13178}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 13177}#)))
                                 ($sc-dispatch
                                   #{tmp\ 13177}#
                                   'each-any)))
                              (map (lambda (#{v\ 13198}# #{s\ 13199}#)
                                     ((lambda (#{tmp\ 13202}#)
                                        ((lambda (#{tmp\ 13203}#)
                                           (if #{tmp\ 13203}#
                                             (apply (lambda () #{v\ 13198}#)
                                                    #{tmp\ 13203}#)
                                             ((lambda (#{tmp\ 13204}#)
                                                (if #{tmp\ 13204}#
                                                  (apply (lambda (#{e\ 13206}#)
                                                           #{e\ 13206}#)
                                                         #{tmp\ 13204}#)
                                                  ((lambda (#{_\ 13208}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 13158}#
                                                       #{s\ 13199}#))
                                                   #{tmp\ 13202}#)))
                                              ($sc-dispatch
                                                #{tmp\ 13202}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 13202}#
                                           '())))
                                      #{s\ 13199}#))
                                   #{var\ 13170}#
                                   #{step\ 13172}#)))
                           #{tmp\ 13161}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13160}#)))
                ($sc-dispatch
                  #{tmp\ 13160}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 13158}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 13215}#
                     (lambda (#{x\ 13219}# #{y\ 13220}#)
                       ((lambda (#{tmp\ 13224}#)
                          ((lambda (#{tmp\ 13225}#)
                             (if #{tmp\ 13225}#
                               (apply (lambda (#{x\ 13228}# #{y\ 13229}#)
                                        ((lambda (#{tmp\ 13230}#)
                                           ((lambda (#{tmp\ 13231}#)
                                              (if #{tmp\ 13231}#
                                                (apply (lambda (#{dy\ 13233}#)
                                                         ((lambda (#{tmp\ 13234}#)
                                                            ((lambda (#{tmp\ 13235}#)
                                                               (if #{tmp\ 13235}#
                                                                 (apply (lambda (#{dx\ 13237}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i13236"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i13232"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i13226"
                                                                                        "i13227"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i13221"
                                                                                        "i13222"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13211"
                                                                                        "i13212"
                                                                                        "i13213"
                                                                                        "i13214")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 13237}#
                                                                                      #{dy\ 13233}#)))
                                                                        #{tmp\ 13235}#)
                                                                 ((lambda (#{_\ 13239}#)
                                                                    (if (null? #{dy\ 13233}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i13238"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i13232"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i13226"
                                                                                    "i13227"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i13221"
                                                                                    "i13222"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i13211"
                                                                                    "i13212"
                                                                                    "i13213"
                                                                                    "i13214")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 13228}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i13238"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i13232"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i13226"
                                                                                    "i13227"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i13221"
                                                                                    "i13222"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i13211"
                                                                                    "i13212"
                                                                                    "i13213"
                                                                                    "i13214")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 13228}#
                                                                            #{y\ 13229}#)))
                                                                  #{tmp\ 13234}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 13234}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i13232"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i13226"
                                                                          "i13227"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i13221"
                                                                          "i13222"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i13211"
                                                                          "i13212"
                                                                          "i13213"
                                                                          "i13214")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 13228}#))
                                                       #{tmp\ 13231}#)
                                                ((lambda (#{tmp\ 13240}#)
                                                   (if #{tmp\ 13240}#
                                                     (apply (lambda (#{stuff\ 13242}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i13241"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i13226"
                                                                            "i13227"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i13221"
                                                                            "i13222"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i13211"
                                                                            "i13212"
                                                                            "i13213"
                                                                            "i13214")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 13228}#
                                                                          #{stuff\ 13242}#)))
                                                            #{tmp\ 13240}#)
                                                     ((lambda (#{else\ 13244}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i13243"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i13226"
                                                                      "i13227"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i13221"
                                                                      "i13222"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i13211"
                                                                      "i13212"
                                                                      "i13213"
                                                                      "i13214")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 13228}#
                                                              #{y\ 13229}#))
                                                      #{tmp\ 13230}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 13230}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i13226"
                                                              "i13227"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i13221"
                                                              "i13222"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i13211"
                                                              "i13212"
                                                              "i13213"
                                                              "i13214")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 13230}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i13226" "i13227"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i13221" "i13222"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i13211"
                                                         "i13212"
                                                         "i13213"
                                                         "i13214")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 13229}#))
                                      #{tmp\ 13225}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 13224}#)))
                           ($sc-dispatch #{tmp\ 13224}# (quote (any any)))))
                        (list #{x\ 13219}# #{y\ 13220}#))))
                   (#{quasiappend\ 13216}#
                     (lambda (#{x\ 13245}# #{y\ 13246}#)
                       ((lambda (#{tmp\ 13250}#)
                          ((lambda (#{tmp\ 13251}#)
                             (if #{tmp\ 13251}#
                               (apply (lambda (#{x\ 13254}# #{y\ 13255}#)
                                        ((lambda (#{tmp\ 13256}#)
                                           ((lambda (#{tmp\ 13257}#)
                                              (if #{tmp\ 13257}#
                                                (apply (lambda () #{x\ 13254}#)
                                                       #{tmp\ 13257}#)
                                                ((lambda (#{_\ 13259}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i13258"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i13252"
                                                                 "i13253"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i13247"
                                                                 "i13248"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i13211"
                                                                 "i13212"
                                                                 "i13213"
                                                                 "i13214")))
                                                            (hygiene guile))
                                                         #{x\ 13254}#
                                                         #{y\ 13255}#))
                                                 #{tmp\ 13256}#)))
                                            ($sc-dispatch
                                              #{tmp\ 13256}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i13252" "i13253"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i13247" "i13248"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i13211"
                                                         "i13212"
                                                         "i13213"
                                                         "i13214")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 13255}#))
                                      #{tmp\ 13251}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 13250}#)))
                           ($sc-dispatch #{tmp\ 13250}# (quote (any any)))))
                        (list #{x\ 13245}# #{y\ 13246}#))))
                   (#{quasivector\ 13217}#
                     (lambda (#{x\ 13260}#)
                       ((lambda (#{tmp\ 13263}#)
                          ((lambda (#{x\ 13265}#)
                             ((lambda (#{tmp\ 13266}#)
                                ((lambda (#{tmp\ 13267}#)
                                   (if #{tmp\ 13267}#
                                     (apply (lambda (#{x\ 13269}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i13268"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i13264"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i13261"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i13211"
                                                            "i13212"
                                                            "i13213"
                                                            "i13214")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 13269}#)))
                                            #{tmp\ 13267}#)
                                     ((lambda (#{tmp\ 13271}#)
                                        (if #{tmp\ 13271}#
                                          (apply (lambda (#{x\ 13273}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i13272"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i13264"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i13261"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i13211"
                                                                 "i13212"
                                                                 "i13213"
                                                                 "i13214")))
                                                            (hygiene guile))
                                                         #{x\ 13273}#))
                                                 #{tmp\ 13271}#)
                                          ((lambda (#{_\ 13276}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i13275"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i13264"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i13261"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i13211"
                                                           "i13212"
                                                           "i13213"
                                                           "i13214")))
                                                      (hygiene guile))
                                                   #{x\ 13265}#))
                                           #{tmp\ 13266}#)))
                                      ($sc-dispatch
                                        #{tmp\ 13266}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i13264"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i13261"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i13211"
                                                   "i13212"
                                                   "i13213"
                                                   "i13214")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 13266}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i13264"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i13261"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i13211"
                                              "i13212"
                                              "i13213"
                                              "i13214")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 13265}#))
                           #{tmp\ 13263}#))
                        #{x\ 13260}#)))
                   (#{quasi\ 13218}#
                     (lambda (#{p\ 13277}# #{lev\ 13278}#)
                       ((lambda (#{tmp\ 13281}#)
                          ((lambda (#{tmp\ 13282}#)
                             (if #{tmp\ 13282}#
                               (apply (lambda (#{p\ 13284}#)
                                        (if (= #{lev\ 13278}# 0)
                                          #{p\ 13284}#
                                          (#{quasicons\ 13215}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i13283"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i13279" "i13280"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i13211"
                                                     "i13212"
                                                     "i13213"
                                                     "i13214")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i13283"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i13279" "i13280"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i13211"
                                                     "i13212"
                                                     "i13213"
                                                     "i13214")))
                                                (hygiene guile)))
                                            (#{quasi\ 13218}#
                                              (list #{p\ 13284}#)
                                              (- #{lev\ 13278}# 1)))))
                                      #{tmp\ 13282}#)
                               ((lambda (#{tmp\ 13285}#)
                                  (if (if #{tmp\ 13285}#
                                        (apply (lambda (#{args\ 13287}#)
                                                 (= #{lev\ 13278}# 0))
                                               #{tmp\ 13285}#)
                                        #f)
                                    (apply (lambda (#{args\ 13289}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 13277}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i13288"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i13279"
                                                             "i13280"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i13211"
                                                             "i13212"
                                                             "i13213"
                                                             "i13214")))
                                                        (hygiene guile))
                                                     #{args\ 13289}#)))
                                           #{tmp\ 13285}#)
                                    ((lambda (#{tmp\ 13290}#)
                                       (if #{tmp\ 13290}#
                                         (apply (lambda (#{p\ 13293}#
                                                         #{q\ 13294}#)
                                                  (if (= #{lev\ 13278}# 0)
                                                    (#{quasiappend\ 13216}#
                                                      #{p\ 13293}#
                                                      (#{quasi\ 13218}#
                                                        #{q\ 13294}#
                                                        #{lev\ 13278}#))
                                                    (#{quasicons\ 13215}#
                                                      (#{quasicons\ 13215}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i13291"
                                                                 "i13292"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i13279"
                                                                 "i13280"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i13211"
                                                                 "i13212"
                                                                 "i13213"
                                                                 "i13214")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i13291"
                                                                 "i13292"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i13279"
                                                                 "i13280"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i13211"
                                                                 "i13212"
                                                                 "i13213"
                                                                 "i13214")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 13218}#
                                                          (list #{p\ 13293}#)
                                                          (- #{lev\ 13278}#
                                                             1)))
                                                      (#{quasi\ 13218}#
                                                        #{q\ 13294}#
                                                        #{lev\ 13278}#))))
                                                #{tmp\ 13290}#)
                                         ((lambda (#{tmp\ 13295}#)
                                            (if (if #{tmp\ 13295}#
                                                  (apply (lambda (#{args\ 13298}#
                                                                  #{q\ 13299}#)
                                                           (= #{lev\ 13278}#
                                                              0))
                                                         #{tmp\ 13295}#)
                                                  #f)
                                              (apply (lambda (#{args\ 13302}#
                                                              #{q\ 13303}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 13277}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13300"
                                                                       "i13301"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13279"
                                                                       "i13280"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i13211"
                                                                       "i13212"
                                                                       "i13213"
                                                                       "i13214")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 13302}#)))
                                                     #{tmp\ 13295}#)
                                              ((lambda (#{tmp\ 13304}#)
                                                 (if #{tmp\ 13304}#
                                                   (apply (lambda (#{p\ 13306}#)
                                                            (#{quasicons\ 13215}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i13305"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13279"
                                                                       "i13280"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i13211"
                                                                       "i13212"
                                                                       "i13213"
                                                                       "i13214")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i13305"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i13279"
                                                                       "i13280"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i13211"
                                                                       "i13212"
                                                                       "i13213"
                                                                       "i13214")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 13218}#
                                                                (list #{p\ 13306}#)
                                                                (+ #{lev\ 13278}#
                                                                   1))))
                                                          #{tmp\ 13304}#)
                                                   ((lambda (#{tmp\ 13307}#)
                                                      (if #{tmp\ 13307}#
                                                        (apply (lambda (#{p\ 13310}#
                                                                        #{q\ 13311}#)
                                                                 (#{quasicons\ 13215}#
                                                                   (#{quasi\ 13218}#
                                                                     #{p\ 13310}#
                                                                     #{lev\ 13278}#)
                                                                   (#{quasi\ 13218}#
                                                                     #{q\ 13311}#
                                                                     #{lev\ 13278}#)))
                                                               #{tmp\ 13307}#)
                                                        ((lambda (#{tmp\ 13312}#)
                                                           (if #{tmp\ 13312}#
                                                             (apply (lambda (#{x\ 13314}#)
                                                                      (#{quasivector\ 13217}#
                                                                        (#{quasi\ 13218}#
                                                                          #{x\ 13314}#
                                                                          #{lev\ 13278}#)))
                                                                    #{tmp\ 13312}#)
                                                             ((lambda (#{p\ 13317}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i13316"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i13279"
                                                                              "i13280"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i13211"
                                                                              "i13212"
                                                                              "i13213"
                                                                              "i13214")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 13317}#))
                                                              #{tmp\ 13281}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 13281}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 13281}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 13281}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i13279" "i13280"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i13211"
                                                            "i13212"
                                                            "i13213"
                                                            "i13214")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 13281}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i13279" "i13280"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i13211"
                                                        "i13212"
                                                        "i13213"
                                                        "i13214")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 13281}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i13279" "i13280"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i13211"
                                                   "i13212"
                                                   "i13213"
                                                   "i13214")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 13281}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i13279" "i13280"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i13211"
                                             "i13212"
                                             "i13213"
                                             "i13214")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 13281}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i13279" "i13280"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i13211" "i13212" "i13213" "i13214")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 13277}#))))
            (lambda (#{x\ 13318}#)
              ((lambda (#{tmp\ 13320}#)
                 ((lambda (#{tmp\ 13321}#)
                    (if #{tmp\ 13321}#
                      (apply (lambda (#{_\ 13324}# #{e\ 13325}#)
                               (#{quasi\ 13218}# #{e\ 13325}# 0))
                             #{tmp\ 13321}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 13320}#)))
                  ($sc-dispatch #{tmp\ 13320}# (quote (any any)))))
               #{x\ 13318}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 13326}#)
            (letrec ((#{read-file\ 13329}#
                       (lambda (#{fn\ 13330}# #{k\ 13331}#)
                         (let ((#{p\ 13335}# (open-input-file #{fn\ 13330}#)))
                           (letrec ((#{f\ 13338}#
                                      (lambda (#{x\ 13339}#)
                                        (if (eof-object? #{x\ 13339}#)
                                          (begin
                                            (close-input-port #{p\ 13335}#)
                                            '())
                                          (cons (datum->syntax
                                                  #{k\ 13331}#
                                                  #{x\ 13339}#)
                                                (#{f\ 13338}#
                                                  (read #{p\ 13335}#)))))))
                             (#{f\ 13338}# (read #{p\ 13335}#)))))))
              ((lambda (#{tmp\ 13340}#)
                 ((lambda (#{tmp\ 13341}#)
                    (if #{tmp\ 13341}#
                      (apply (lambda (#{k\ 13344}# #{filename\ 13345}#)
                               (let ((#{fn\ 13347}#
                                       (syntax->datum #{filename\ 13345}#)))
                                 ((lambda (#{tmp\ 13349}#)
                                    ((lambda (#{tmp\ 13350}#)
                                       (if #{tmp\ 13350}#
                                         (apply (lambda (#{exp\ 13352}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i13351"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i13346"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i13342"
                                                                "i13343"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i13328"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i13327")))
                                                           (hygiene guile))
                                                        #{exp\ 13352}#))
                                                #{tmp\ 13350}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 13349}#)))
                                     ($sc-dispatch
                                       #{tmp\ 13349}#
                                       'each-any)))
                                  (#{read-file\ 13329}#
                                    #{fn\ 13347}#
                                    #{k\ 13344}#))))
                             #{tmp\ 13341}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 13340}#)))
                  ($sc-dispatch #{tmp\ 13340}# (quote (any any)))))
               #{x\ 13326}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 13354}#)
            ((lambda (#{tmp\ 13356}#)
               ((lambda (#{tmp\ 13357}#)
                  (if #{tmp\ 13357}#
                    (apply (lambda (#{k\ 13360}# #{filename\ 13361}#)
                             (let ((#{fn\ 13363}#
                                     (syntax->datum #{filename\ 13361}#)))
                               ((lambda (#{tmp\ 13365}#)
                                  ((lambda (#{fn\ 13367}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i13366"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i13362"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i13358" "i13359"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i13355")))
                                              (hygiene guile))
                                           #{fn\ 13367}#))
                                   #{tmp\ 13365}#))
                                (let ((#{t\ 13370}#
                                        (%search-load-path #{fn\ 13363}#)))
                                  (if #{t\ 13370}#
                                    #{t\ 13370}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 13354}#
                                      #{filename\ 13361}#))))))
                           #{tmp\ 13357}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13356}#)))
                ($sc-dispatch #{tmp\ 13356}# (quote (any any)))))
             #{x\ 13354}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 13372}#)
            ((lambda (#{tmp\ 13374}#)
               ((lambda (#{tmp\ 13375}#)
                  (if #{tmp\ 13375}#
                    (apply (lambda (#{_\ 13378}# #{e\ 13379}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 13372}#))
                           #{tmp\ 13375}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13374}#)))
                ($sc-dispatch #{tmp\ 13374}# (quote (any any)))))
             #{x\ 13372}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 13380}#)
            ((lambda (#{tmp\ 13382}#)
               ((lambda (#{tmp\ 13383}#)
                  (if #{tmp\ 13383}#
                    (apply (lambda (#{_\ 13386}# #{e\ 13387}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 13380}#))
                           #{tmp\ 13383}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13382}#)))
                ($sc-dispatch #{tmp\ 13382}# (quote (any any)))))
             #{x\ 13380}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 13388}#)
            ((lambda (#{tmp\ 13390}#)
               ((lambda (#{tmp\ 13391}#)
                  (if #{tmp\ 13391}#
                    (apply (lambda (#{_\ 13396}#
                                    #{e\ 13397}#
                                    #{m1\ 13398}#
                                    #{m2\ 13399}#)
                             ((lambda (#{tmp\ 13401}#)
                                ((lambda (#{body\ 13403}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i13402"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i13392"
                                                 "i13393"
                                                 "i13394"
                                                 "i13395"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13389")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i13402"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i13392"
                                                             "i13393"
                                                             "i13394"
                                                             "i13395"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i13389")))
                                                        (hygiene guile))
                                                     #{e\ 13397}#))
                                         #{body\ 13403}#))
                                 #{tmp\ 13401}#))
                              (letrec ((#{f\ 13407}#
                                         (lambda (#{clause\ 13408}#
                                                  #{clauses\ 13409}#)
                                           (if (null? #{clauses\ 13409}#)
                                             ((lambda (#{tmp\ 13411}#)
                                                ((lambda (#{tmp\ 13412}#)
                                                   (if #{tmp\ 13412}#
                                                     (apply (lambda (#{e1\ 13415}#
                                                                     #{e2\ 13416}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i13413"
                                                                            "i13414"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i13404"
                                                                            "i13405"
                                                                            "i13406"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i13392"
                                                                            "i13393"
                                                                            "i13394"
                                                                            "i13395"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i13389")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 13415}#
                                                                          #{e2\ 13416}#)))
                                                            #{tmp\ 13412}#)
                                                     ((lambda (#{tmp\ 13418}#)
                                                        (if #{tmp\ 13418}#
                                                          (apply (lambda (#{k\ 13422}#
                                                                          #{e1\ 13423}#
                                                                          #{e2\ 13424}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i13419"
                                                                                 "i13420"
                                                                                 "i13421"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i13404"
                                                                                 "i13405"
                                                                                 "i13406"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i13392"
                                                                                 "i13393"
                                                                                 "i13394"
                                                                                 "i13395"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i13389")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13419"
                                                                                       "i13420"
                                                                                       "i13421"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13404"
                                                                                       "i13405"
                                                                                       "i13406"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13392"
                                                                                       "i13393"
                                                                                       "i13394"
                                                                                       "i13395"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i13389")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13419"
                                                                                       "i13420"
                                                                                       "i13421"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13404"
                                                                                       "i13405"
                                                                                       "i13406"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13392"
                                                                                       "i13393"
                                                                                       "i13394"
                                                                                       "i13395"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i13389")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i13419"
                                                                                             "i13420"
                                                                                             "i13421"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i13404"
                                                                                             "i13405"
                                                                                             "i13406"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i13392"
                                                                                             "i13393"
                                                                                             "i13394"
                                                                                             "i13395"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i13389")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 13422}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13419"
                                                                                       "i13420"
                                                                                       "i13421"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13404"
                                                                                       "i13405"
                                                                                       "i13406"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i13392"
                                                                                       "i13393"
                                                                                       "i13394"
                                                                                       "i13395"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i13389")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 13423}#
                                                                                     #{e2\ 13424}#))))
                                                                 #{tmp\ 13418}#)
                                                          ((lambda (#{_\ 13428}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 13388}#
                                                               #{clause\ 13408}#))
                                                           #{tmp\ 13411}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 13411}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 13411}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i13404"
                                                              "i13405"
                                                              "i13406"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i13392"
                                                              "i13393"
                                                              "i13394"
                                                              "i13395"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i13389")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 13408}#)
                                             ((lambda (#{tmp\ 13430}#)
                                                ((lambda (#{rest\ 13432}#)
                                                   ((lambda (#{tmp\ 13433}#)
                                                      ((lambda (#{tmp\ 13434}#)
                                                         (if #{tmp\ 13434}#
                                                           (apply (lambda (#{k\ 13438}#
                                                                           #{e1\ 13439}#
                                                                           #{e2\ 13440}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13435"
                                                                                  "i13436"
                                                                                  "i13437"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i13431"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13404"
                                                                                  "i13405"
                                                                                  "i13406"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i13392"
                                                                                  "i13393"
                                                                                  "i13394"
                                                                                  "i13395"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i13389")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13435"
                                                                                        "i13436"
                                                                                        "i13437"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i13431"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13404"
                                                                                        "i13405"
                                                                                        "i13406"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13392"
                                                                                        "i13393"
                                                                                        "i13394"
                                                                                        "i13395"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i13389")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13435"
                                                                                        "i13436"
                                                                                        "i13437"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i13431"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13404"
                                                                                        "i13405"
                                                                                        "i13406"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13392"
                                                                                        "i13393"
                                                                                        "i13394"
                                                                                        "i13395"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i13389")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13435"
                                                                                              "i13436"
                                                                                              "i13437"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i13431"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13404"
                                                                                              "i13405"
                                                                                              "i13406"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i13392"
                                                                                              "i13393"
                                                                                              "i13394"
                                                                                              "i13395"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i13389")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 13438}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13435"
                                                                                        "i13436"
                                                                                        "i13437"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i13431"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13404"
                                                                                        "i13405"
                                                                                        "i13406"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i13392"
                                                                                        "i13393"
                                                                                        "i13394"
                                                                                        "i13395"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i13389")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 13439}#
                                                                                      #{e2\ 13440}#))
                                                                          #{rest\ 13432}#))
                                                                  #{tmp\ 13434}#)
                                                           ((lambda (#{_\ 13444}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 13388}#
                                                                #{clause\ 13408}#))
                                                            #{tmp\ 13433}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 13433}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 13408}#))
                                                 #{tmp\ 13430}#))
                                              (#{f\ 13407}#
                                                (car #{clauses\ 13409}#)
                                                (cdr #{clauses\ 13409}#)))))))
                                (#{f\ 13407}# #{m1\ 13398}# #{m2\ 13399}#))))
                           #{tmp\ 13391}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13390}#)))
                ($sc-dispatch
                  #{tmp\ 13390}#
                  '(any any any . each-any))))
             #{x\ 13388}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 13445}#)
            ((lambda (#{tmp\ 13447}#)
               ((lambda (#{tmp\ 13448}#)
                  (if #{tmp\ 13448}#
                    (apply (lambda (#{_\ 13451}# #{e\ 13452}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i13449" "i13450"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i13446")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i13449" "i13450"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i13446")))
                                       (hygiene guile)))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i13449" "i13450"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13446")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i13449" "i13450"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i13446")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i13449" "i13450"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i13446")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i13449" "i13450"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i13446")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i13449" "i13450"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i13446")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i13449" "i13450"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i13446")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i13449"
                                                             "i13450"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i13446")))
                                                        (hygiene guile))
                                                     #{e\ 13452}#))
                                         (list (cons #{_\ 13451}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i13449"
                                                              "i13450"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i13446")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i13449"
                                                              "i13450"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i13446")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i13449"
                                                             "i13450"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i13446")))
                                                        (hygiene guile))
                                                     (cons #{e\ 13452}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i13449"
                                                                    "i13450"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i13446")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i13449"
                                                                    "i13450"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i13446")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 13448}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13447}#)))
                ($sc-dispatch #{tmp\ 13447}# (quote (any any)))))
             #{x\ 13445}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 13454}#)
            ((lambda (#{tmp\ 13456}#)
               ((lambda (#{tmp\ 13457}#)
                  (if #{tmp\ 13457}#
                    (apply (lambda (#{dummy\ 13463}#
                                    #{id\ 13464}#
                                    #{args\ 13465}#
                                    #{b0\ 13466}#
                                    #{b1\ 13467}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(dummy id args b0 b1)
                                         #((m13453 top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                         #("i13458"
                                           "i13459"
                                           "i13460"
                                           "i13461"
                                           "i13462"))
                                       #(ribcage () () ())
                                       #(ribcage
                                         #(x)
                                         #((m13453 top))
                                         #("i13455")))
                                      (hygiene guile))
                                   #{id\ 13464}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(dummy id args b0 b1)
                                               #((m13453 top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                               #("i13458"
                                                 "i13459"
                                                 "i13460"
                                                 "i13461"
                                                 "i13462"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((m13453 top))
                                               #("i13455")))
                                            (hygiene guile))
                                         (cons #{args\ 13465}#
                                               (cons #{b0\ 13466}#
                                                     #{b1\ 13467}#)))))
                           #{tmp\ 13457}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13456}#)))
                ($sc-dispatch
                  #{tmp\ 13456}#
                  '(any (any . any) any . each-any))))
             #{x\ 13454}#))
          (module-name (current-module)))))

