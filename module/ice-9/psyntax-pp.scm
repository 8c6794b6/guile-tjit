(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 10504}#
           (lambda (#{f\ 10566}# #{first\ 10567}# . #{rest\ 10568}#)
             (let ((#{t\ 10574}# (null? #{first\ 10567}#)))
               (if #{t\ 10574}#
                 #{t\ 10574}#
                 (if (null? #{rest\ 10568}#)
                   (letrec ((#{andmap\ 10578}#
                              (lambda (#{first\ 10579}#)
                                (let ((#{x\ 10582}# (car #{first\ 10579}#))
                                      (#{first\ 10583}#
                                        (cdr #{first\ 10579}#)))
                                  (if (null? #{first\ 10583}#)
                                    (#{f\ 10566}# #{x\ 10582}#)
                                    (if (#{f\ 10566}# #{x\ 10582}#)
                                      (#{andmap\ 10578}# #{first\ 10583}#)
                                      #f))))))
                     (#{andmap\ 10578}# #{first\ 10567}#))
                   (letrec ((#{andmap\ 10589}#
                              (lambda (#{first\ 10590}# #{rest\ 10591}#)
                                (let ((#{x\ 10596}# (car #{first\ 10590}#))
                                      (#{xr\ 10597}# (map car #{rest\ 10591}#))
                                      (#{first\ 10598}# (cdr #{first\ 10590}#))
                                      (#{rest\ 10599}#
                                        (map cdr #{rest\ 10591}#)))
                                  (if (null? #{first\ 10598}#)
                                    (apply #{f\ 10566}#
                                           (cons #{x\ 10596}# #{xr\ 10597}#))
                                    (if (apply #{f\ 10566}#
                                               (cons #{x\ 10596}#
                                                     #{xr\ 10597}#))
                                      (#{andmap\ 10589}#
                                        #{first\ 10598}#
                                        #{rest\ 10599}#)
                                      #f))))))
                     (#{andmap\ 10589}#
                       #{first\ 10567}#
                       #{rest\ 10568}#))))))))
  (letrec ((#{lambda-var-list\ 10821}#
             (lambda (#{vars\ 11036}#)
               (letrec ((#{lvl\ 11042}#
                          (lambda (#{vars\ 11043}# #{ls\ 11044}# #{w\ 11045}#)
                            (if (pair? #{vars\ 11043}#)
                              (#{lvl\ 11042}#
                                (cdr #{vars\ 11043}#)
                                (cons (#{wrap\ 10775}#
                                        (car #{vars\ 11043}#)
                                        #{w\ 11045}#
                                        #f)
                                      #{ls\ 11044}#)
                                #{w\ 11045}#)
                              (if (#{id?\ 10706}# #{vars\ 11043}#)
                                (cons (#{wrap\ 10775}#
                                        #{vars\ 11043}#
                                        #{w\ 11045}#
                                        #f)
                                      #{ls\ 11044}#)
                                (if (null? #{vars\ 11043}#)
                                  #{ls\ 11044}#
                                  (if (#{syntax-object?\ 10670}#
                                        #{vars\ 11043}#)
                                    (#{lvl\ 11042}#
                                      (#{syntax-object-expression\ 10672}#
                                        #{vars\ 11043}#)
                                      #{ls\ 11044}#
                                      (#{join-wraps\ 10757}#
                                        #{w\ 11045}#
                                        (#{syntax-object-wrap\ 10674}#
                                          #{vars\ 11043}#)))
                                    (cons #{vars\ 11043}# #{ls\ 11044}#))))))))
                 (#{lvl\ 11042}#
                   #{vars\ 11036}#
                   '()
                   '(())))))
           (#{gen-var\ 10819}#
             (lambda (#{id\ 11056}#)
               (let ((#{id\ 11059}#
                       (if (#{syntax-object?\ 10670}# #{id\ 11056}#)
                         (#{syntax-object-expression\ 10672}#
                           #{id\ 11056}#)
                         #{id\ 11056}#)))
                 (gensym
                   (string-append
                     (symbol->string #{id\ 11059}#)
                     " ")))))
           (#{strip\ 10817}#
             (lambda (#{x\ 11061}# #{w\ 11062}#)
               (if (memq 'top
                         (#{wrap-marks\ 10713}# #{w\ 11062}#))
                 #{x\ 11061}#
                 (letrec ((#{f\ 11068}#
                            (lambda (#{x\ 11069}#)
                              (if (#{syntax-object?\ 10670}# #{x\ 11069}#)
                                (#{strip\ 10817}#
                                  (#{syntax-object-expression\ 10672}#
                                    #{x\ 11069}#)
                                  (#{syntax-object-wrap\ 10674}# #{x\ 11069}#))
                                (if (pair? #{x\ 11069}#)
                                  (let ((#{a\ 11076}#
                                          (#{f\ 11068}# (car #{x\ 11069}#)))
                                        (#{d\ 11077}#
                                          (#{f\ 11068}# (cdr #{x\ 11069}#))))
                                    (if (if (eq? #{a\ 11076}#
                                                 (car #{x\ 11069}#))
                                          (eq? #{d\ 11077}# (cdr #{x\ 11069}#))
                                          #f)
                                      #{x\ 11069}#
                                      (cons #{a\ 11076}# #{d\ 11077}#)))
                                  (if (vector? #{x\ 11069}#)
                                    (let ((#{old\ 11083}#
                                            (vector->list #{x\ 11069}#)))
                                      (let ((#{new\ 11085}#
                                              (map #{f\ 11068}#
                                                   #{old\ 11083}#)))
                                        (if (#{and-map*\ 10504}#
                                              eq?
                                              #{old\ 11083}#
                                              #{new\ 11085}#)
                                          #{x\ 11069}#
                                          (list->vector #{new\ 11085}#))))
                                    #{x\ 11069}#))))))
                   (#{f\ 11068}# #{x\ 11061}#)))))
           (#{chi-lambda-case\ 10815}#
             (lambda (#{e\ 11087}#
                      #{r\ 11088}#
                      #{w\ 11089}#
                      #{s\ 11090}#
                      #{mod\ 11091}#
                      #{get-formals\ 11092}#
                      #{clauses\ 11093}#)
               (letrec ((#{expand-body\ 11108}#
                          (lambda (#{req\ 11109}#
                                   #{opt\ 11110}#
                                   #{rest\ 11111}#
                                   #{kw\ 11112}#
                                   #{body\ 11113}#
                                   #{vars\ 11114}#
                                   #{r*\ 11115}#
                                   #{w*\ 11116}#
                                   #{inits\ 11117}#
                                   #{meta\ 11118}#)
                            ((lambda (#{tmp\ 11129}#)
                               ((lambda (#{tmp\ 11130}#)
                                  (if (if #{tmp\ 11130}#
                                        (apply (lambda (#{docstring\ 11134}#
                                                        #{e1\ 11135}#
                                                        #{e2\ 11136}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 11134}#)))
                                               #{tmp\ 11130}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 11140}#
                                                    #{e1\ 11141}#
                                                    #{e2\ 11142}#)
                                             (#{expand-body\ 11108}#
                                               #{req\ 11109}#
                                               #{opt\ 11110}#
                                               #{rest\ 11111}#
                                               #{kw\ 11112}#
                                               (cons #{e1\ 11141}#
                                                     #{e2\ 11142}#)
                                               #{vars\ 11114}#
                                               #{r*\ 11115}#
                                               #{w*\ 11116}#
                                               #{inits\ 11117}#
                                               (append
                                                 #{meta\ 11118}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 11140}#))))))
                                           #{tmp\ 11130}#)
                                    ((lambda (#{tmp\ 11145}#)
                                       (if #{tmp\ 11145}#
                                         (apply (lambda (#{k\ 11150}#
                                                         #{v\ 11151}#
                                                         #{e1\ 11152}#
                                                         #{e2\ 11153}#)
                                                  (#{expand-body\ 11108}#
                                                    #{req\ 11109}#
                                                    #{opt\ 11110}#
                                                    #{rest\ 11111}#
                                                    #{kw\ 11112}#
                                                    (cons #{e1\ 11152}#
                                                          #{e2\ 11153}#)
                                                    #{vars\ 11114}#
                                                    #{r*\ 11115}#
                                                    #{w*\ 11116}#
                                                    #{inits\ 11117}#
                                                    (append
                                                      #{meta\ 11118}#
                                                      (syntax->datum
                                                        (map cons
                                                             #{k\ 11150}#
                                                             #{v\ 11151}#)))))
                                                #{tmp\ 11145}#)
                                         ((lambda (#{tmp\ 11157}#)
                                            (if #{tmp\ 11157}#
                                              (apply (lambda (#{e1\ 11160}#
                                                              #{e2\ 11161}#)
                                                       (values
                                                         #{meta\ 11118}#
                                                         #{req\ 11109}#
                                                         #{opt\ 11110}#
                                                         #{rest\ 11111}#
                                                         #{kw\ 11112}#
                                                         #{inits\ 11117}#
                                                         #{vars\ 11114}#
                                                         (#{chi-body\ 10799}#
                                                           (cons #{e1\ 11160}#
                                                                 #{e2\ 11161}#)
                                                           (#{source-wrap\ 10777}#
                                                             #{e\ 11087}#
                                                             #{w\ 11089}#
                                                             #{s\ 11090}#
                                                             #{mod\ 11091}#)
                                                           #{r*\ 11115}#
                                                           #{w*\ 11116}#
                                                           #{mod\ 11091}#)))
                                                     #{tmp\ 11157}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{tmp\ 11129}#)))
                                          ($sc-dispatch
                                            #{tmp\ 11129}#
                                            '(any . each-any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11129}#
                                       '(#(vector #(each (any . any)))
                                         any
                                         .
                                         each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 11129}#
                                  '(any any . each-any))))
                             #{body\ 11113}#)))
                        (#{expand-kw\ 11106}#
                          (lambda (#{req\ 11163}#
                                   #{opt\ 11164}#
                                   #{rest\ 11165}#
                                   #{kw\ 11166}#
                                   #{body\ 11167}#
                                   #{vars\ 11168}#
                                   #{r*\ 11169}#
                                   #{w*\ 11170}#
                                   #{aok\ 11171}#
                                   #{out\ 11172}#
                                   #{inits\ 11173}#)
                            (if (pair? #{kw\ 11166}#)
                              ((lambda (#{tmp\ 11187}#)
                                 ((lambda (#{tmp\ 11188}#)
                                    (if #{tmp\ 11188}#
                                      (apply (lambda (#{k\ 11192}#
                                                      #{id\ 11193}#
                                                      #{i\ 11194}#)
                                               (let ((#{v\ 11197}#
                                                       (#{gen-var\ 10819}#
                                                         #{id\ 11193}#)))
                                                 (let ((#{l\ 11199}#
                                                         (#{gen-labels\ 10724}#
                                                           (list #{v\ 11197}#))))
                                                   (let ((#{r**\ 11201}#
                                                           (#{extend-var-env\ 10696}#
                                                             #{l\ 11199}#
                                                             (list #{v\ 11197}#)
                                                             #{r*\ 11169}#)))
                                                     (let ((#{w**\ 11203}#
                                                             (#{make-binding-wrap\ 10753}#
                                                               (list #{id\ 11193}#)
                                                               #{l\ 11199}#
                                                               #{w*\ 11170}#)))
                                                       (#{expand-kw\ 11106}#
                                                         #{req\ 11163}#
                                                         #{opt\ 11164}#
                                                         #{rest\ 11165}#
                                                         (cdr #{kw\ 11166}#)
                                                         #{body\ 11167}#
                                                         (cons #{v\ 11197}#
                                                               #{vars\ 11168}#)
                                                         #{r**\ 11201}#
                                                         #{w**\ 11203}#
                                                         #{aok\ 11171}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 11192}#)
                                                                     (syntax->datum
                                                                       #{id\ 11193}#)
                                                                     #{v\ 11197}#)
                                                               #{out\ 11172}#)
                                                         (cons (#{chi\ 10791}#
                                                                 #{i\ 11194}#
                                                                 #{r*\ 11169}#
                                                                 #{w*\ 11170}#
                                                                 #{mod\ 11091}#)
                                                               #{inits\ 11173}#)))))))
                                             #{tmp\ 11188}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 11187}#)))
                                  ($sc-dispatch
                                    #{tmp\ 11187}#
                                    '(any any any))))
                               (car #{kw\ 11166}#))
                              (#{expand-body\ 11108}#
                                #{req\ 11163}#
                                #{opt\ 11164}#
                                #{rest\ 11165}#
                                (if (let ((#{t\ 11207}# #{aok\ 11171}#))
                                      (if #{t\ 11207}#
                                        #{t\ 11207}#
                                        (pair? #{out\ 11172}#)))
                                  (cons #{aok\ 11171}#
                                        (reverse #{out\ 11172}#))
                                  #f)
                                #{body\ 11167}#
                                (reverse #{vars\ 11168}#)
                                #{r*\ 11169}#
                                #{w*\ 11170}#
                                (reverse #{inits\ 11173}#)
                                '()))))
                        (#{expand-opt\ 11104}#
                          (lambda (#{req\ 11209}#
                                   #{opt\ 11210}#
                                   #{rest\ 11211}#
                                   #{kw\ 11212}#
                                   #{body\ 11213}#
                                   #{vars\ 11214}#
                                   #{r*\ 11215}#
                                   #{w*\ 11216}#
                                   #{out\ 11217}#
                                   #{inits\ 11218}#)
                            (if (pair? #{opt\ 11210}#)
                              ((lambda (#{tmp\ 11231}#)
                                 ((lambda (#{tmp\ 11232}#)
                                    (if #{tmp\ 11232}#
                                      (apply (lambda (#{id\ 11235}#
                                                      #{i\ 11236}#)
                                               (let ((#{v\ 11239}#
                                                       (#{gen-var\ 10819}#
                                                         #{id\ 11235}#)))
                                                 (let ((#{l\ 11241}#
                                                         (#{gen-labels\ 10724}#
                                                           (list #{v\ 11239}#))))
                                                   (let ((#{r**\ 11243}#
                                                           (#{extend-var-env\ 10696}#
                                                             #{l\ 11241}#
                                                             (list #{v\ 11239}#)
                                                             #{r*\ 11215}#)))
                                                     (let ((#{w**\ 11245}#
                                                             (#{make-binding-wrap\ 10753}#
                                                               (list #{id\ 11235}#)
                                                               #{l\ 11241}#
                                                               #{w*\ 11216}#)))
                                                       (#{expand-opt\ 11104}#
                                                         #{req\ 11209}#
                                                         (cdr #{opt\ 11210}#)
                                                         #{rest\ 11211}#
                                                         #{kw\ 11212}#
                                                         #{body\ 11213}#
                                                         (cons #{v\ 11239}#
                                                               #{vars\ 11214}#)
                                                         #{r**\ 11243}#
                                                         #{w**\ 11245}#
                                                         (cons (syntax->datum
                                                                 #{id\ 11235}#)
                                                               #{out\ 11217}#)
                                                         (cons (#{chi\ 10791}#
                                                                 #{i\ 11236}#
                                                                 #{r*\ 11215}#
                                                                 #{w*\ 11216}#
                                                                 #{mod\ 11091}#)
                                                               #{inits\ 11218}#)))))))
                                             #{tmp\ 11232}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 11231}#)))
                                  ($sc-dispatch
                                    #{tmp\ 11231}#
                                    '(any any))))
                               (car #{opt\ 11210}#))
                              (if #{rest\ 11211}#
                                (let ((#{v\ 11250}#
                                        (#{gen-var\ 10819}# #{rest\ 11211}#)))
                                  (let ((#{l\ 11252}#
                                          (#{gen-labels\ 10724}#
                                            (list #{v\ 11250}#))))
                                    (let ((#{r*\ 11254}#
                                            (#{extend-var-env\ 10696}#
                                              #{l\ 11252}#
                                              (list #{v\ 11250}#)
                                              #{r*\ 11215}#)))
                                      (let ((#{w*\ 11256}#
                                              (#{make-binding-wrap\ 10753}#
                                                (list #{rest\ 11211}#)
                                                #{l\ 11252}#
                                                #{w*\ 11216}#)))
                                        (#{expand-kw\ 11106}#
                                          #{req\ 11209}#
                                          (if (pair? #{out\ 11217}#)
                                            (reverse #{out\ 11217}#)
                                            #f)
                                          (syntax->datum #{rest\ 11211}#)
                                          (if (pair? #{kw\ 11212}#)
                                            (cdr #{kw\ 11212}#)
                                            #{kw\ 11212}#)
                                          #{body\ 11213}#
                                          (cons #{v\ 11250}# #{vars\ 11214}#)
                                          #{r*\ 11254}#
                                          #{w*\ 11256}#
                                          (if (pair? #{kw\ 11212}#)
                                            (car #{kw\ 11212}#)
                                            #f)
                                          '()
                                          #{inits\ 11218}#)))))
                                (#{expand-kw\ 11106}#
                                  #{req\ 11209}#
                                  (if (pair? #{out\ 11217}#)
                                    (reverse #{out\ 11217}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 11212}#)
                                    (cdr #{kw\ 11212}#)
                                    #{kw\ 11212}#)
                                  #{body\ 11213}#
                                  #{vars\ 11214}#
                                  #{r*\ 11215}#
                                  #{w*\ 11216}#
                                  (if (pair? #{kw\ 11212}#)
                                    (car #{kw\ 11212}#)
                                    #f)
                                  '()
                                  #{inits\ 11218}#)))))
                        (#{expand-req\ 11102}#
                          (lambda (#{req\ 11258}#
                                   #{opt\ 11259}#
                                   #{rest\ 11260}#
                                   #{kw\ 11261}#
                                   #{body\ 11262}#)
                            (let ((#{vars\ 11270}#
                                    (map #{gen-var\ 10819}# #{req\ 11258}#))
                                  (#{labels\ 11271}#
                                    (#{gen-labels\ 10724}# #{req\ 11258}#)))
                              (let ((#{r*\ 11274}#
                                      (#{extend-var-env\ 10696}#
                                        #{labels\ 11271}#
                                        #{vars\ 11270}#
                                        #{r\ 11088}#))
                                    (#{w*\ 11275}#
                                      (#{make-binding-wrap\ 10753}#
                                        #{req\ 11258}#
                                        #{labels\ 11271}#
                                        #{w\ 11089}#)))
                                (#{expand-opt\ 11104}#
                                  (map syntax->datum #{req\ 11258}#)
                                  #{opt\ 11259}#
                                  #{rest\ 11260}#
                                  #{kw\ 11261}#
                                  #{body\ 11262}#
                                  (reverse #{vars\ 11270}#)
                                  #{r*\ 11274}#
                                  #{w*\ 11275}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 11276}#)
                    ((lambda (#{tmp\ 11277}#)
                       (if #{tmp\ 11277}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 11277}#)
                         ((lambda (#{tmp\ 11278}#)
                            (if #{tmp\ 11278}#
                              (apply (lambda (#{args\ 11285}#
                                              #{e1\ 11286}#
                                              #{e2\ 11287}#
                                              #{args*\ 11288}#
                                              #{e1*\ 11289}#
                                              #{e2*\ 11290}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 11092}#
                                             #{args\ 11285}#))
                                         (lambda (#{req\ 11291}#
                                                  #{opt\ 11292}#
                                                  #{rest\ 11293}#
                                                  #{kw\ 11294}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 11102}#
                                                 #{req\ 11291}#
                                                 #{opt\ 11292}#
                                                 #{rest\ 11293}#
                                                 #{kw\ 11294}#
                                                 (cons #{e1\ 11286}#
                                                       #{e2\ 11287}#)))
                                             (lambda (#{meta\ 11300}#
                                                      #{req\ 11301}#
                                                      #{opt\ 11302}#
                                                      #{rest\ 11303}#
                                                      #{kw\ 11304}#
                                                      #{inits\ 11305}#
                                                      #{vars\ 11306}#
                                                      #{body\ 11307}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 10815}#
                                                     #{e\ 11087}#
                                                     #{r\ 11088}#
                                                     #{w\ 11089}#
                                                     #{s\ 11090}#
                                                     #{mod\ 11091}#
                                                     #{get-formals\ 11092}#
                                                     (map (lambda (#{tmp\ 11318}#
                                                                   #{tmp\ 11317}#
                                                                   #{tmp\ 11316}#)
                                                            (cons #{tmp\ 11316}#
                                                                  (cons #{tmp\ 11317}#
                                                                        #{tmp\ 11318}#)))
                                                          #{e2*\ 11290}#
                                                          #{e1*\ 11289}#
                                                          #{args*\ 11288}#)))
                                                 (lambda (#{meta*\ 11320}#
                                                          #{else*\ 11321}#)
                                                   (values
                                                     (append
                                                       #{meta\ 11300}#
                                                       #{meta*\ 11320}#)
                                                     (#{build-lambda-case\ 10652}#
                                                       #{s\ 11090}#
                                                       #{req\ 11301}#
                                                       #{opt\ 11302}#
                                                       #{rest\ 11303}#
                                                       #{kw\ 11304}#
                                                       #{inits\ 11305}#
                                                       #{vars\ 11306}#
                                                       #{body\ 11307}#
                                                       #{else*\ 11321}#)))))))))
                                     #{tmp\ 11278}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 11276}#)))
                          ($sc-dispatch
                            #{tmp\ 11276}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 11276}# (quote ()))))
                  #{clauses\ 11093}#))))
           (#{lambda*-formals\ 10813}#
             (lambda (#{orig-args\ 11324}#)
               (letrec ((#{check\ 11335}#
                          (lambda (#{req\ 11336}#
                                   #{opt\ 11337}#
                                   #{rest\ 11338}#
                                   #{kw\ 11339}#)
                            (if (#{distinct-bound-ids?\ 10771}#
                                  (append
                                    #{req\ 11336}#
                                    (map car #{opt\ 11337}#)
                                    (if #{rest\ 11338}#
                                      (list #{rest\ 11338}#)
                                      '())
                                    (if (pair? #{kw\ 11339}#)
                                      (map cadr (cdr #{kw\ 11339}#))
                                      '())))
                              (values
                                #{req\ 11336}#
                                #{opt\ 11337}#
                                #{rest\ 11338}#
                                #{kw\ 11339}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 11324}#))))
                        (#{rest\ 11333}#
                          (lambda (#{args\ 11347}#
                                   #{req\ 11348}#
                                   #{opt\ 11349}#
                                   #{kw\ 11350}#)
                            ((lambda (#{tmp\ 11355}#)
                               ((lambda (#{tmp\ 11356}#)
                                  (if (if #{tmp\ 11356}#
                                        (apply (lambda (#{r\ 11358}#)
                                                 (#{id?\ 10706}# #{r\ 11358}#))
                                               #{tmp\ 11356}#)
                                        #f)
                                    (apply (lambda (#{r\ 11360}#)
                                             (#{check\ 11335}#
                                               #{req\ 11348}#
                                               #{opt\ 11349}#
                                               #{r\ 11360}#
                                               #{kw\ 11350}#))
                                           #{tmp\ 11356}#)
                                    ((lambda (#{else\ 11362}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 11324}#
                                         #{args\ 11347}#))
                                     #{tmp\ 11355}#)))
                                (list #{tmp\ 11355}#)))
                             #{args\ 11347}#)))
                        (#{key\ 11331}#
                          (lambda (#{args\ 11363}#
                                   #{req\ 11364}#
                                   #{opt\ 11365}#
                                   #{rkey\ 11366}#)
                            ((lambda (#{tmp\ 11371}#)
                               ((lambda (#{tmp\ 11372}#)
                                  (if #{tmp\ 11372}#
                                    (apply (lambda ()
                                             (#{check\ 11335}#
                                               #{req\ 11364}#
                                               #{opt\ 11365}#
                                               #f
                                               (cons #f
                                                     (reverse
                                                       #{rkey\ 11366}#))))
                                           #{tmp\ 11372}#)
                                    ((lambda (#{tmp\ 11373}#)
                                       (if (if #{tmp\ 11373}#
                                             (apply (lambda (#{a\ 11376}#
                                                             #{b\ 11377}#)
                                                      (#{id?\ 10706}#
                                                        #{a\ 11376}#))
                                                    #{tmp\ 11373}#)
                                             #f)
                                         (apply (lambda (#{a\ 11380}#
                                                         #{b\ 11381}#)
                                                  ((lambda (#{tmp\ 11383}#)
                                                     ((lambda (#{k\ 11385}#)
                                                        (#{key\ 11331}#
                                                          #{b\ 11381}#
                                                          #{req\ 11364}#
                                                          #{opt\ 11365}#
                                                          (cons (cons #{k\ 11385}#
                                                                      (cons #{a\ 11380}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i11384"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i11378"
                                                                                     "i11379"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i11367"
                                                                                     "i11368"
                                                                                     "i11369"
                                                                                     "i11370"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i11334"
                                                                                    "i11332"
                                                                                    "i11330"
                                                                                    "i11328"
                                                                                    "i11326"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i11325"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*
                                                                                     noexpand)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i10820"
                                                                                    "i10818"
                                                                                    "i10816"
                                                                                    "i10814"
                                                                                    "i10812"
                                                                                    "i10810"
                                                                                    "i10808"
                                                                                    "i10806"
                                                                                    "i10804"
                                                                                    "i10802"
                                                                                    "i10800"
                                                                                    "i10798"
                                                                                    "i10796"
                                                                                    "i10794"
                                                                                    "i10792"
                                                                                    "i10790"
                                                                                    "i10788"
                                                                                    "i10786"
                                                                                    "i10784"
                                                                                    "i10782"
                                                                                    "i10780"
                                                                                    "i10778"
                                                                                    "i10776"
                                                                                    "i10774"
                                                                                    "i10772"
                                                                                    "i10770"
                                                                                    "i10768"
                                                                                    "i10766"
                                                                                    "i10764"
                                                                                    "i10762"
                                                                                    "i10760"
                                                                                    "i10758"
                                                                                    "i10756"
                                                                                    "i10754"
                                                                                    "i10752"
                                                                                    "i10750"
                                                                                    "i10749"
                                                                                    "i10748"
                                                                                    "i10746"
                                                                                    "i10745"
                                                                                    "i10744"
                                                                                    "i10743"
                                                                                    "i10742"
                                                                                    "i10740"
                                                                                    "i10738"
                                                                                    "i10736"
                                                                                    "i10734"
                                                                                    "i10732"
                                                                                    "i10730"
                                                                                    "i10728"
                                                                                    "i10726"
                                                                                    "i10723"
                                                                                    "i10721"
                                                                                    "i10720"
                                                                                    "i10719"
                                                                                    "i10718"
                                                                                    "i10717"
                                                                                    "i10716"
                                                                                    "i10714"
                                                                                    "i10712"
                                                                                    "i10710"
                                                                                    "i10708"
                                                                                    "i10707"
                                                                                    "i10705"
                                                                                    "i10703"
                                                                                    "i10701"
                                                                                    "i10699"
                                                                                    "i10697"
                                                                                    "i10695"
                                                                                    "i10693"
                                                                                    "i10692"
                                                                                    "i10690"
                                                                                    "i10688"
                                                                                    "i10687"
                                                                                    "i10686"
                                                                                    "i10684"
                                                                                    "i10683"
                                                                                    "i10681"
                                                                                    "i10679"
                                                                                    "i10677"
                                                                                    "i10675"
                                                                                    "i10673"
                                                                                    "i10671"
                                                                                    "i10669"
                                                                                    "i10667"
                                                                                    "i10665"
                                                                                    "i10663"
                                                                                    "i10661"
                                                                                    "i10659"
                                                                                    "i10657"
                                                                                    "i10655"
                                                                                    "i10653"
                                                                                    "i10651"
                                                                                    "i10649"
                                                                                    "i10647"
                                                                                    "i10645"
                                                                                    "i10643"
                                                                                    "i10641"
                                                                                    "i10639"
                                                                                    "i10637"
                                                                                    "i10635"
                                                                                    "i10633"
                                                                                    "i10631"
                                                                                    "i10629"
                                                                                    "i10627"
                                                                                    "i10625"
                                                                                    "i10623"
                                                                                    "i10621"
                                                                                    "i10619"
                                                                                    "i10618"
                                                                                    "i10616"
                                                                                    "i10614"
                                                                                    "i10612"
                                                                                    "i10610"
                                                                                    "i10608"
                                                                                    "i10606"
                                                                                    "i10604"
                                                                                    "i10602"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i10505"
                                                                                    "i10503")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 11366}#)))
                                                      #{tmp\ 11383}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 11380}#))))
                                                #{tmp\ 11373}#)
                                         ((lambda (#{tmp\ 11386}#)
                                            (if (if #{tmp\ 11386}#
                                                  (apply (lambda (#{a\ 11390}#
                                                                  #{init\ 11391}#
                                                                  #{b\ 11392}#)
                                                           (#{id?\ 10706}#
                                                             #{a\ 11390}#))
                                                         #{tmp\ 11386}#)
                                                  #f)
                                              (apply (lambda (#{a\ 11396}#
                                                              #{init\ 11397}#
                                                              #{b\ 11398}#)
                                                       ((lambda (#{tmp\ 11400}#)
                                                          ((lambda (#{k\ 11402}#)
                                                             (#{key\ 11331}#
                                                               #{b\ 11398}#
                                                               #{req\ 11364}#
                                                               #{opt\ 11365}#
                                                               (cons (list #{k\ 11402}#
                                                                           #{a\ 11396}#
                                                                           #{init\ 11397}#)
                                                                     #{rkey\ 11366}#)))
                                                           #{tmp\ 11400}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 11396}#))))
                                                     #{tmp\ 11386}#)
                                              ((lambda (#{tmp\ 11403}#)
                                                 (if (if #{tmp\ 11403}#
                                                       (apply (lambda (#{a\ 11408}#
                                                                       #{init\ 11409}#
                                                                       #{k\ 11410}#
                                                                       #{b\ 11411}#)
                                                                (if (#{id?\ 10706}#
                                                                      #{a\ 11408}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 11410}#))
                                                                  #f))
                                                              #{tmp\ 11403}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 11418}#
                                                                   #{init\ 11419}#
                                                                   #{k\ 11420}#
                                                                   #{b\ 11421}#)
                                                            (#{key\ 11331}#
                                                              #{b\ 11421}#
                                                              #{req\ 11364}#
                                                              #{opt\ 11365}#
                                                              (cons (list #{k\ 11420}#
                                                                          #{a\ 11418}#
                                                                          #{init\ 11419}#)
                                                                    #{rkey\ 11366}#)))
                                                          #{tmp\ 11403}#)
                                                   ((lambda (#{tmp\ 11422}#)
                                                      (if (if #{tmp\ 11422}#
                                                            (apply (lambda (#{aok\ 11424}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 11424}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 11422}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 11426}#)
                                                                 (#{check\ 11335}#
                                                                   #{req\ 11364}#
                                                                   #{opt\ 11365}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 11366}#))))
                                                               #{tmp\ 11422}#)
                                                        ((lambda (#{tmp\ 11427}#)
                                                           (if (if #{tmp\ 11427}#
                                                                 (apply (lambda (#{aok\ 11431}#
                                                                                 #{a\ 11432}#
                                                                                 #{b\ 11433}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 11431}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 11432}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 11427}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 11439}#
                                                                             #{a\ 11440}#
                                                                             #{b\ 11441}#)
                                                                      (#{rest\ 11333}#
                                                                        #{b\ 11441}#
                                                                        #{req\ 11364}#
                                                                        #{opt\ 11365}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 11366}#))))
                                                                    #{tmp\ 11427}#)
                                                             ((lambda (#{tmp\ 11442}#)
                                                                (if (if #{tmp\ 11442}#
                                                                      (apply (lambda (#{aok\ 11445}#
                                                                                      #{r\ 11446}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 11445}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 10706}#
                                                                                   #{r\ 11446}#)
                                                                                 #f))
                                                                             #{tmp\ 11442}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 11451}#
                                                                                  #{r\ 11452}#)
                                                                           (#{rest\ 11333}#
                                                                             #{r\ 11452}#
                                                                             #{req\ 11364}#
                                                                             #{opt\ 11365}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 11366}#))))
                                                                         #{tmp\ 11442}#)
                                                                  ((lambda (#{tmp\ 11453}#)
                                                                     (if (if #{tmp\ 11453}#
                                                                           (apply (lambda (#{a\ 11456}#
                                                                                           #{b\ 11457}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 11456}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 11453}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 11460}#
                                                                                       #{b\ 11461}#)
                                                                                (#{rest\ 11333}#
                                                                                  #{b\ 11461}#
                                                                                  #{req\ 11364}#
                                                                                  #{opt\ 11365}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 11366}#))))
                                                                              #{tmp\ 11453}#)
                                                                       ((lambda (#{tmp\ 11462}#)
                                                                          (if (if #{tmp\ 11462}#
                                                                                (apply (lambda (#{r\ 11464}#)
                                                                                         (#{id?\ 10706}#
                                                                                           #{r\ 11464}#))
                                                                                       #{tmp\ 11462}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 11466}#)
                                                                                     (#{rest\ 11333}#
                                                                                       #{r\ 11466}#
                                                                                       #{req\ 11364}#
                                                                                       #{opt\ 11365}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 11366}#))))
                                                                                   #{tmp\ 11462}#)
                                                                            ((lambda (#{else\ 11468}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 11324}#
                                                                                 #{args\ 11363}#))
                                                                             #{tmp\ 11371}#)))
                                                                        (list #{tmp\ 11371}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 11371}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 11371}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 11371}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 11371}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 11371}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 11371}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11371}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11371}# (quote ()))))
                             #{args\ 11363}#)))
                        (#{opt\ 11329}#
                          (lambda (#{args\ 11469}#
                                   #{req\ 11470}#
                                   #{ropt\ 11471}#)
                            ((lambda (#{tmp\ 11475}#)
                               ((lambda (#{tmp\ 11476}#)
                                  (if #{tmp\ 11476}#
                                    (apply (lambda ()
                                             (#{check\ 11335}#
                                               #{req\ 11470}#
                                               (reverse #{ropt\ 11471}#)
                                               #f
                                               '()))
                                           #{tmp\ 11476}#)
                                    ((lambda (#{tmp\ 11477}#)
                                       (if (if #{tmp\ 11477}#
                                             (apply (lambda (#{a\ 11480}#
                                                             #{b\ 11481}#)
                                                      (#{id?\ 10706}#
                                                        #{a\ 11480}#))
                                                    #{tmp\ 11477}#)
                                             #f)
                                         (apply (lambda (#{a\ 11484}#
                                                         #{b\ 11485}#)
                                                  (#{opt\ 11329}#
                                                    #{b\ 11485}#
                                                    #{req\ 11470}#
                                                    (cons (cons #{a\ 11484}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i11482"
                                                                         "i11483"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i11472"
                                                                         "i11473"
                                                                         "i11474"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i11334"
                                                                        "i11332"
                                                                        "i11330"
                                                                        "i11328"
                                                                        "i11326"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i11325"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*
                                                                         noexpand)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i10820"
                                                                        "i10818"
                                                                        "i10816"
                                                                        "i10814"
                                                                        "i10812"
                                                                        "i10810"
                                                                        "i10808"
                                                                        "i10806"
                                                                        "i10804"
                                                                        "i10802"
                                                                        "i10800"
                                                                        "i10798"
                                                                        "i10796"
                                                                        "i10794"
                                                                        "i10792"
                                                                        "i10790"
                                                                        "i10788"
                                                                        "i10786"
                                                                        "i10784"
                                                                        "i10782"
                                                                        "i10780"
                                                                        "i10778"
                                                                        "i10776"
                                                                        "i10774"
                                                                        "i10772"
                                                                        "i10770"
                                                                        "i10768"
                                                                        "i10766"
                                                                        "i10764"
                                                                        "i10762"
                                                                        "i10760"
                                                                        "i10758"
                                                                        "i10756"
                                                                        "i10754"
                                                                        "i10752"
                                                                        "i10750"
                                                                        "i10749"
                                                                        "i10748"
                                                                        "i10746"
                                                                        "i10745"
                                                                        "i10744"
                                                                        "i10743"
                                                                        "i10742"
                                                                        "i10740"
                                                                        "i10738"
                                                                        "i10736"
                                                                        "i10734"
                                                                        "i10732"
                                                                        "i10730"
                                                                        "i10728"
                                                                        "i10726"
                                                                        "i10723"
                                                                        "i10721"
                                                                        "i10720"
                                                                        "i10719"
                                                                        "i10718"
                                                                        "i10717"
                                                                        "i10716"
                                                                        "i10714"
                                                                        "i10712"
                                                                        "i10710"
                                                                        "i10708"
                                                                        "i10707"
                                                                        "i10705"
                                                                        "i10703"
                                                                        "i10701"
                                                                        "i10699"
                                                                        "i10697"
                                                                        "i10695"
                                                                        "i10693"
                                                                        "i10692"
                                                                        "i10690"
                                                                        "i10688"
                                                                        "i10687"
                                                                        "i10686"
                                                                        "i10684"
                                                                        "i10683"
                                                                        "i10681"
                                                                        "i10679"
                                                                        "i10677"
                                                                        "i10675"
                                                                        "i10673"
                                                                        "i10671"
                                                                        "i10669"
                                                                        "i10667"
                                                                        "i10665"
                                                                        "i10663"
                                                                        "i10661"
                                                                        "i10659"
                                                                        "i10657"
                                                                        "i10655"
                                                                        "i10653"
                                                                        "i10651"
                                                                        "i10649"
                                                                        "i10647"
                                                                        "i10645"
                                                                        "i10643"
                                                                        "i10641"
                                                                        "i10639"
                                                                        "i10637"
                                                                        "i10635"
                                                                        "i10633"
                                                                        "i10631"
                                                                        "i10629"
                                                                        "i10627"
                                                                        "i10625"
                                                                        "i10623"
                                                                        "i10621"
                                                                        "i10619"
                                                                        "i10618"
                                                                        "i10616"
                                                                        "i10614"
                                                                        "i10612"
                                                                        "i10610"
                                                                        "i10608"
                                                                        "i10606"
                                                                        "i10604"
                                                                        "i10602"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i10505"
                                                                        "i10503")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 11471}#)))
                                                #{tmp\ 11477}#)
                                         ((lambda (#{tmp\ 11486}#)
                                            (if (if #{tmp\ 11486}#
                                                  (apply (lambda (#{a\ 11490}#
                                                                  #{init\ 11491}#
                                                                  #{b\ 11492}#)
                                                           (#{id?\ 10706}#
                                                             #{a\ 11490}#))
                                                         #{tmp\ 11486}#)
                                                  #f)
                                              (apply (lambda (#{a\ 11496}#
                                                              #{init\ 11497}#
                                                              #{b\ 11498}#)
                                                       (#{opt\ 11329}#
                                                         #{b\ 11498}#
                                                         #{req\ 11470}#
                                                         (cons (list #{a\ 11496}#
                                                                     #{init\ 11497}#)
                                                               #{ropt\ 11471}#)))
                                                     #{tmp\ 11486}#)
                                              ((lambda (#{tmp\ 11499}#)
                                                 (if (if #{tmp\ 11499}#
                                                       (apply (lambda (#{a\ 11502}#
                                                                       #{b\ 11503}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 11502}#)
                                                                     #:key))
                                                              #{tmp\ 11499}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 11506}#
                                                                   #{b\ 11507}#)
                                                            (#{key\ 11331}#
                                                              #{b\ 11507}#
                                                              #{req\ 11470}#
                                                              (reverse
                                                                #{ropt\ 11471}#)
                                                              '()))
                                                          #{tmp\ 11499}#)
                                                   ((lambda (#{tmp\ 11508}#)
                                                      (if (if #{tmp\ 11508}#
                                                            (apply (lambda (#{a\ 11511}#
                                                                            #{b\ 11512}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 11511}#)
                                                                          #:rest))
                                                                   #{tmp\ 11508}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 11515}#
                                                                        #{b\ 11516}#)
                                                                 (#{rest\ 11333}#
                                                                   #{b\ 11516}#
                                                                   #{req\ 11470}#
                                                                   (reverse
                                                                     #{ropt\ 11471}#)
                                                                   '()))
                                                               #{tmp\ 11508}#)
                                                        ((lambda (#{tmp\ 11517}#)
                                                           (if (if #{tmp\ 11517}#
                                                                 (apply (lambda (#{r\ 11519}#)
                                                                          (#{id?\ 10706}#
                                                                            #{r\ 11519}#))
                                                                        #{tmp\ 11517}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 11521}#)
                                                                      (#{rest\ 11333}#
                                                                        #{r\ 11521}#
                                                                        #{req\ 11470}#
                                                                        (reverse
                                                                          #{ropt\ 11471}#)
                                                                        '()))
                                                                    #{tmp\ 11517}#)
                                                             ((lambda (#{else\ 11523}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 11324}#
                                                                  #{args\ 11469}#))
                                                              #{tmp\ 11475}#)))
                                                         (list #{tmp\ 11475}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 11475}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 11475}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 11475}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11475}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11475}# (quote ()))))
                             #{args\ 11469}#)))
                        (#{req\ 11327}#
                          (lambda (#{args\ 11524}# #{rreq\ 11525}#)
                            ((lambda (#{tmp\ 11528}#)
                               ((lambda (#{tmp\ 11529}#)
                                  (if #{tmp\ 11529}#
                                    (apply (lambda ()
                                             (#{check\ 11335}#
                                               (reverse #{rreq\ 11525}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 11529}#)
                                    ((lambda (#{tmp\ 11530}#)
                                       (if (if #{tmp\ 11530}#
                                             (apply (lambda (#{a\ 11533}#
                                                             #{b\ 11534}#)
                                                      (#{id?\ 10706}#
                                                        #{a\ 11533}#))
                                                    #{tmp\ 11530}#)
                                             #f)
                                         (apply (lambda (#{a\ 11537}#
                                                         #{b\ 11538}#)
                                                  (#{req\ 11327}#
                                                    #{b\ 11538}#
                                                    (cons #{a\ 11537}#
                                                          #{rreq\ 11525}#)))
                                                #{tmp\ 11530}#)
                                         ((lambda (#{tmp\ 11539}#)
                                            (if (if #{tmp\ 11539}#
                                                  (apply (lambda (#{a\ 11542}#
                                                                  #{b\ 11543}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 11542}#)
                                                                #:optional))
                                                         #{tmp\ 11539}#)
                                                  #f)
                                              (apply (lambda (#{a\ 11546}#
                                                              #{b\ 11547}#)
                                                       (#{opt\ 11329}#
                                                         #{b\ 11547}#
                                                         (reverse
                                                           #{rreq\ 11525}#)
                                                         '()))
                                                     #{tmp\ 11539}#)
                                              ((lambda (#{tmp\ 11548}#)
                                                 (if (if #{tmp\ 11548}#
                                                       (apply (lambda (#{a\ 11551}#
                                                                       #{b\ 11552}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 11551}#)
                                                                     #:key))
                                                              #{tmp\ 11548}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 11555}#
                                                                   #{b\ 11556}#)
                                                            (#{key\ 11331}#
                                                              #{b\ 11556}#
                                                              (reverse
                                                                #{rreq\ 11525}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 11548}#)
                                                   ((lambda (#{tmp\ 11557}#)
                                                      (if (if #{tmp\ 11557}#
                                                            (apply (lambda (#{a\ 11560}#
                                                                            #{b\ 11561}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 11560}#)
                                                                          #:rest))
                                                                   #{tmp\ 11557}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 11564}#
                                                                        #{b\ 11565}#)
                                                                 (#{rest\ 11333}#
                                                                   #{b\ 11565}#
                                                                   (reverse
                                                                     #{rreq\ 11525}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 11557}#)
                                                        ((lambda (#{tmp\ 11566}#)
                                                           (if (if #{tmp\ 11566}#
                                                                 (apply (lambda (#{r\ 11568}#)
                                                                          (#{id?\ 10706}#
                                                                            #{r\ 11568}#))
                                                                        #{tmp\ 11566}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 11570}#)
                                                                      (#{rest\ 11333}#
                                                                        #{r\ 11570}#
                                                                        (reverse
                                                                          #{rreq\ 11525}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 11566}#)
                                                             ((lambda (#{else\ 11572}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 11324}#
                                                                  #{args\ 11524}#))
                                                              #{tmp\ 11528}#)))
                                                         (list #{tmp\ 11528}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 11528}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 11528}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 11528}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 11528}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11528}# (quote ()))))
                             #{args\ 11524}#))))
                 (#{req\ 11327}# #{orig-args\ 11324}# (quote ())))))
           (#{chi-simple-lambda\ 10811}#
             (lambda (#{e\ 11573}#
                      #{r\ 11574}#
                      #{w\ 11575}#
                      #{s\ 11576}#
                      #{mod\ 11577}#
                      #{req\ 11578}#
                      #{rest\ 11579}#
                      #{meta\ 11580}#
                      #{body\ 11581}#)
               (let ((#{ids\ 11593}#
                       (if #{rest\ 11579}#
                         (append #{req\ 11578}# (list #{rest\ 11579}#))
                         #{req\ 11578}#)))
                 (let ((#{vars\ 11595}#
                         (map #{gen-var\ 10819}# #{ids\ 11593}#)))
                   (let ((#{labels\ 11597}#
                           (#{gen-labels\ 10724}# #{ids\ 11593}#)))
                     (#{build-simple-lambda\ 10648}#
                       #{s\ 11576}#
                       (map syntax->datum #{req\ 11578}#)
                       (if #{rest\ 11579}#
                         (syntax->datum #{rest\ 11579}#)
                         #f)
                       #{vars\ 11595}#
                       #{meta\ 11580}#
                       (#{chi-body\ 10799}#
                         #{body\ 11581}#
                         (#{source-wrap\ 10777}#
                           #{e\ 11573}#
                           #{w\ 11575}#
                           #{s\ 11576}#
                           #{mod\ 11577}#)
                         (#{extend-var-env\ 10696}#
                           #{labels\ 11597}#
                           #{vars\ 11595}#
                           #{r\ 11574}#)
                         (#{make-binding-wrap\ 10753}#
                           #{ids\ 11593}#
                           #{labels\ 11597}#
                           #{w\ 11575}#)
                         #{mod\ 11577}#)))))))
           (#{lambda-formals\ 10809}#
             (lambda (#{orig-args\ 11600}#)
               (letrec ((#{check\ 11605}#
                          (lambda (#{req\ 11606}# #{rest\ 11607}#)
                            (if (#{distinct-bound-ids?\ 10771}#
                                  (if #{rest\ 11607}#
                                    (cons #{rest\ 11607}# #{req\ 11606}#)
                                    #{req\ 11606}#))
                              (values #{req\ 11606}# #f #{rest\ 11607}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 11600}#))))
                        (#{req\ 11603}#
                          (lambda (#{args\ 11613}# #{rreq\ 11614}#)
                            ((lambda (#{tmp\ 11617}#)
                               ((lambda (#{tmp\ 11618}#)
                                  (if #{tmp\ 11618}#
                                    (apply (lambda ()
                                             (#{check\ 11605}#
                                               (reverse #{rreq\ 11614}#)
                                               #f))
                                           #{tmp\ 11618}#)
                                    ((lambda (#{tmp\ 11619}#)
                                       (if (if #{tmp\ 11619}#
                                             (apply (lambda (#{a\ 11622}#
                                                             #{b\ 11623}#)
                                                      (#{id?\ 10706}#
                                                        #{a\ 11622}#))
                                                    #{tmp\ 11619}#)
                                             #f)
                                         (apply (lambda (#{a\ 11626}#
                                                         #{b\ 11627}#)
                                                  (#{req\ 11603}#
                                                    #{b\ 11627}#
                                                    (cons #{a\ 11626}#
                                                          #{rreq\ 11614}#)))
                                                #{tmp\ 11619}#)
                                         ((lambda (#{tmp\ 11628}#)
                                            (if (if #{tmp\ 11628}#
                                                  (apply (lambda (#{r\ 11630}#)
                                                           (#{id?\ 10706}#
                                                             #{r\ 11630}#))
                                                         #{tmp\ 11628}#)
                                                  #f)
                                              (apply (lambda (#{r\ 11632}#)
                                                       (#{check\ 11605}#
                                                         (reverse
                                                           #{rreq\ 11614}#)
                                                         #{r\ 11632}#))
                                                     #{tmp\ 11628}#)
                                              ((lambda (#{else\ 11634}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 11600}#
                                                   #{args\ 11613}#))
                                               #{tmp\ 11617}#)))
                                          (list #{tmp\ 11617}#))))
                                     ($sc-dispatch
                                       #{tmp\ 11617}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 11617}# (quote ()))))
                             #{args\ 11613}#))))
                 (#{req\ 11603}# #{orig-args\ 11600}# (quote ())))))
           (#{ellipsis?\ 10807}#
             (lambda (#{x\ 11635}#)
               (if (#{nonsymbol-id?\ 10704}# #{x\ 11635}#)
                 (#{free-id=?\ 10765}#
                   #{x\ 11635}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i11636"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*
                           noexpand)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i10820"
                          "i10818"
                          "i10816"
                          "i10814"
                          "i10812"
                          "i10810"
                          "i10808"
                          "i10806"
                          "i10804"
                          "i10802"
                          "i10800"
                          "i10798"
                          "i10796"
                          "i10794"
                          "i10792"
                          "i10790"
                          "i10788"
                          "i10786"
                          "i10784"
                          "i10782"
                          "i10780"
                          "i10778"
                          "i10776"
                          "i10774"
                          "i10772"
                          "i10770"
                          "i10768"
                          "i10766"
                          "i10764"
                          "i10762"
                          "i10760"
                          "i10758"
                          "i10756"
                          "i10754"
                          "i10752"
                          "i10750"
                          "i10749"
                          "i10748"
                          "i10746"
                          "i10745"
                          "i10744"
                          "i10743"
                          "i10742"
                          "i10740"
                          "i10738"
                          "i10736"
                          "i10734"
                          "i10732"
                          "i10730"
                          "i10728"
                          "i10726"
                          "i10723"
                          "i10721"
                          "i10720"
                          "i10719"
                          "i10718"
                          "i10717"
                          "i10716"
                          "i10714"
                          "i10712"
                          "i10710"
                          "i10708"
                          "i10707"
                          "i10705"
                          "i10703"
                          "i10701"
                          "i10699"
                          "i10697"
                          "i10695"
                          "i10693"
                          "i10692"
                          "i10690"
                          "i10688"
                          "i10687"
                          "i10686"
                          "i10684"
                          "i10683"
                          "i10681"
                          "i10679"
                          "i10677"
                          "i10675"
                          "i10673"
                          "i10671"
                          "i10669"
                          "i10667"
                          "i10665"
                          "i10663"
                          "i10661"
                          "i10659"
                          "i10657"
                          "i10655"
                          "i10653"
                          "i10651"
                          "i10649"
                          "i10647"
                          "i10645"
                          "i10643"
                          "i10641"
                          "i10639"
                          "i10637"
                          "i10635"
                          "i10633"
                          "i10631"
                          "i10629"
                          "i10627"
                          "i10625"
                          "i10623"
                          "i10621"
                          "i10619"
                          "i10618"
                          "i10616"
                          "i10614"
                          "i10612"
                          "i10610"
                          "i10608"
                          "i10606"
                          "i10604"
                          "i10602"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i10505" "i10503")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 10805}#
             (lambda () (#{build-void\ 10626}# #f)))
           (#{eval-local-transformer\ 10803}#
             (lambda (#{expanded\ 11640}# #{mod\ 11641}#)
               (let ((#{p\ 11645}#
                       (#{local-eval-hook\ 10617}#
                         #{expanded\ 11640}#
                         #{mod\ 11641}#)))
                 (if (procedure? #{p\ 11645}#)
                   (cons #{p\ 11645}#
                         (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 11645}#)))))
           (#{chi-local-syntax\ 10801}#
             (lambda (#{rec?\ 11646}#
                      #{e\ 11647}#
                      #{r\ 11648}#
                      #{w\ 11649}#
                      #{s\ 11650}#
                      #{mod\ 11651}#
                      #{k\ 11652}#)
               ((lambda (#{tmp\ 11660}#)
                  ((lambda (#{tmp\ 11661}#)
                     (if #{tmp\ 11661}#
                       (apply (lambda (#{_\ 11667}#
                                       #{id\ 11668}#
                                       #{val\ 11669}#
                                       #{e1\ 11670}#
                                       #{e2\ 11671}#)
                                (let ((#{ids\ 11673}# #{id\ 11668}#))
                                  (if (not (#{valid-bound-ids?\ 10769}#
                                             #{ids\ 11673}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 11647}#)
                                    (let ((#{labels\ 11676}#
                                            (#{gen-labels\ 10724}#
                                              #{ids\ 11673}#)))
                                      (let ((#{new-w\ 11678}#
                                              (#{make-binding-wrap\ 10753}#
                                                #{ids\ 11673}#
                                                #{labels\ 11676}#
                                                #{w\ 11649}#)))
                                        (#{k\ 11652}#
                                          (cons #{e1\ 11670}# #{e2\ 11671}#)
                                          (#{extend-env\ 10694}#
                                            #{labels\ 11676}#
                                            (let ((#{w\ 11682}#
                                                    (if #{rec?\ 11646}#
                                                      #{new-w\ 11678}#
                                                      #{w\ 11649}#))
                                                  (#{trans-r\ 11683}#
                                                    (#{macros-only-env\ 10698}#
                                                      #{r\ 11648}#)))
                                              (map (lambda (#{x\ 11684}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 10803}#
                                                             (#{chi\ 10791}#
                                                               #{x\ 11684}#
                                                               #{trans-r\ 11683}#
                                                               #{w\ 11682}#
                                                               #{mod\ 11651}#)
                                                             #{mod\ 11651}#)))
                                                   #{val\ 11669}#))
                                            #{r\ 11648}#)
                                          #{new-w\ 11678}#
                                          #{s\ 11650}#
                                          #{mod\ 11651}#))))))
                              #{tmp\ 11661}#)
                       ((lambda (#{_\ 11689}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 10777}#
                              #{e\ 11647}#
                              #{w\ 11649}#
                              #{s\ 11650}#
                              #{mod\ 11651}#)))
                        #{tmp\ 11660}#)))
                   ($sc-dispatch
                     #{tmp\ 11660}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 11647}#)))
           (#{chi-body\ 10799}#
             (lambda (#{body\ 11690}#
                      #{outer-form\ 11691}#
                      #{r\ 11692}#
                      #{w\ 11693}#
                      #{mod\ 11694}#)
               (let ((#{r\ 11702}#
                       (cons '("placeholder" placeholder)
                             #{r\ 11692}#)))
                 (let ((#{ribcage\ 11704}#
                         (#{make-ribcage\ 10727}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 11707}#
                           (#{make-wrap\ 10711}#
                             (#{wrap-marks\ 10713}# #{w\ 11693}#)
                             (cons #{ribcage\ 11704}#
                                   (#{wrap-subst\ 10715}# #{w\ 11693}#)))))
                     (letrec ((#{parse\ 11716}#
                                (lambda (#{body\ 11717}#
                                         #{ids\ 11718}#
                                         #{labels\ 11719}#
                                         #{var-ids\ 11720}#
                                         #{vars\ 11721}#
                                         #{vals\ 11722}#
                                         #{bindings\ 11723}#)
                                  (if (null? #{body\ 11717}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 11691}#)
                                    (let ((#{e\ 11728}# (cdar #{body\ 11717}#))
                                          (#{er\ 11729}#
                                            (caar #{body\ 11717}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 10787}#
                                            #{e\ 11728}#
                                            #{er\ 11729}#
                                            '(())
                                            (#{source-annotation\ 10685}#
                                              #{er\ 11729}#)
                                            #{ribcage\ 11704}#
                                            #{mod\ 11694}#
                                            #f))
                                        (lambda (#{type\ 11731}#
                                                 #{value\ 11732}#
                                                 #{e\ 11733}#
                                                 #{w\ 11734}#
                                                 #{s\ 11735}#
                                                 #{mod\ 11736}#)
                                          (if (memv #{type\ 11731}#
                                                    '(define-form))
                                            (let ((#{id\ 11746}#
                                                    (#{wrap\ 10775}#
                                                      #{value\ 11732}#
                                                      #{w\ 11734}#
                                                      #{mod\ 11736}#))
                                                  (#{label\ 11747}#
                                                    (#{gen-label\ 10722}#)))
                                              (let ((#{var\ 11749}#
                                                      (#{gen-var\ 10819}#
                                                        #{id\ 11746}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 10751}#
                                                    #{ribcage\ 11704}#
                                                    #{id\ 11746}#
                                                    #{label\ 11747}#)
                                                  (#{parse\ 11716}#
                                                    (cdr #{body\ 11717}#)
                                                    (cons #{id\ 11746}#
                                                          #{ids\ 11718}#)
                                                    (cons #{label\ 11747}#
                                                          #{labels\ 11719}#)
                                                    (cons #{id\ 11746}#
                                                          #{var-ids\ 11720}#)
                                                    (cons #{var\ 11749}#
                                                          #{vars\ 11721}#)
                                                    (cons (cons #{er\ 11729}#
                                                                (#{wrap\ 10775}#
                                                                  #{e\ 11733}#
                                                                  #{w\ 11734}#
                                                                  #{mod\ 11736}#))
                                                          #{vals\ 11722}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 11749}#)
                                                          #{bindings\ 11723}#)))))
                                            (if (memv #{type\ 11731}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 11754}#
                                                      (#{wrap\ 10775}#
                                                        #{value\ 11732}#
                                                        #{w\ 11734}#
                                                        #{mod\ 11736}#))
                                                    (#{label\ 11755}#
                                                      (#{gen-label\ 10722}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 10751}#
                                                    #{ribcage\ 11704}#
                                                    #{id\ 11754}#
                                                    #{label\ 11755}#)
                                                  (#{parse\ 11716}#
                                                    (cdr #{body\ 11717}#)
                                                    (cons #{id\ 11754}#
                                                          #{ids\ 11718}#)
                                                    (cons #{label\ 11755}#
                                                          #{labels\ 11719}#)
                                                    #{var-ids\ 11720}#
                                                    #{vars\ 11721}#
                                                    #{vals\ 11722}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 11729}#
                                                                      (#{wrap\ 10775}#
                                                                        #{e\ 11733}#
                                                                        #{w\ 11734}#
                                                                        #{mod\ 11736}#)))
                                                          #{bindings\ 11723}#))))
                                              (if (memv #{type\ 11731}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 11758}#)
                                                   ((lambda (#{tmp\ 11759}#)
                                                      (if #{tmp\ 11759}#
                                                        (apply (lambda (#{_\ 11762}#
                                                                        #{e1\ 11763}#)
                                                                 (#{parse\ 11716}#
                                                                   (letrec ((#{f\ 11766}#
                                                                              (lambda (#{forms\ 11767}#)
                                                                                (if (null? #{forms\ 11767}#)
                                                                                  (cdr #{body\ 11717}#)
                                                                                  (cons (cons #{er\ 11729}#
                                                                                              (#{wrap\ 10775}#
                                                                                                (car #{forms\ 11767}#)
                                                                                                #{w\ 11734}#
                                                                                                #{mod\ 11736}#))
                                                                                        (#{f\ 11766}#
                                                                                          (cdr #{forms\ 11767}#)))))))
                                                                     (#{f\ 11766}#
                                                                       #{e1\ 11763}#))
                                                                   #{ids\ 11718}#
                                                                   #{labels\ 11719}#
                                                                   #{var-ids\ 11720}#
                                                                   #{vars\ 11721}#
                                                                   #{vals\ 11722}#
                                                                   #{bindings\ 11723}#))
                                                               #{tmp\ 11759}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 11758}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 11758}#
                                                      '(any . each-any))))
                                                 #{e\ 11733}#)
                                                (if (memv #{type\ 11731}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 10801}#
                                                    #{value\ 11732}#
                                                    #{e\ 11733}#
                                                    #{er\ 11729}#
                                                    #{w\ 11734}#
                                                    #{s\ 11735}#
                                                    #{mod\ 11736}#
                                                    (lambda (#{forms\ 11770}#
                                                             #{er\ 11771}#
                                                             #{w\ 11772}#
                                                             #{s\ 11773}#
                                                             #{mod\ 11774}#)
                                                      (#{parse\ 11716}#
                                                        (letrec ((#{f\ 11782}#
                                                                   (lambda (#{forms\ 11783}#)
                                                                     (if (null? #{forms\ 11783}#)
                                                                       (cdr #{body\ 11717}#)
                                                                       (cons (cons #{er\ 11771}#
                                                                                   (#{wrap\ 10775}#
                                                                                     (car #{forms\ 11783}#)
                                                                                     #{w\ 11772}#
                                                                                     #{mod\ 11774}#))
                                                                             (#{f\ 11782}#
                                                                               (cdr #{forms\ 11783}#)))))))
                                                          (#{f\ 11782}#
                                                            #{forms\ 11770}#))
                                                        #{ids\ 11718}#
                                                        #{labels\ 11719}#
                                                        #{var-ids\ 11720}#
                                                        #{vars\ 11721}#
                                                        #{vals\ 11722}#
                                                        #{bindings\ 11723}#)))
                                                  (if (null? #{ids\ 11718}#)
                                                    (#{build-sequence\ 10658}#
                                                      #f
                                                      (map (lambda (#{x\ 11786}#)
                                                             (#{chi\ 10791}#
                                                               (cdr #{x\ 11786}#)
                                                               (car #{x\ 11786}#)
                                                               '(())
                                                               #{mod\ 11736}#))
                                                           (cons (cons #{er\ 11729}#
                                                                       (#{source-wrap\ 10777}#
                                                                         #{e\ 11733}#
                                                                         #{w\ 11734}#
                                                                         #{s\ 11735}#
                                                                         #{mod\ 11736}#))
                                                                 (cdr #{body\ 11717}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 10769}#
                                                                 #{ids\ 11718}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 11691}#))
                                                      (letrec ((#{loop\ 11793}#
                                                                 (lambda (#{bs\ 11794}#
                                                                          #{er-cache\ 11795}#
                                                                          #{r-cache\ 11796}#)
                                                                   (if (not (null? #{bs\ 11794}#))
                                                                     (let ((#{b\ 11799}#
                                                                             (car #{bs\ 11794}#)))
                                                                       (if (eq? (car #{b\ 11799}#)
                                                                                'macro)
                                                                         (let ((#{er\ 11802}#
                                                                                 (cadr #{b\ 11799}#)))
                                                                           (let ((#{r-cache\ 11804}#
                                                                                   (if (eq? #{er\ 11802}#
                                                                                            #{er-cache\ 11795}#)
                                                                                     #{r-cache\ 11796}#
                                                                                     (#{macros-only-env\ 10698}#
                                                                                       #{er\ 11802}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 11799}#
                                                                                 (#{eval-local-transformer\ 10803}#
                                                                                   (#{chi\ 10791}#
                                                                                     (cddr #{b\ 11799}#)
                                                                                     #{r-cache\ 11804}#
                                                                                     '(())
                                                                                     #{mod\ 11736}#)
                                                                                   #{mod\ 11736}#))
                                                                               (#{loop\ 11793}#
                                                                                 (cdr #{bs\ 11794}#)
                                                                                 #{er\ 11802}#
                                                                                 #{r-cache\ 11804}#))))
                                                                         (#{loop\ 11793}#
                                                                           (cdr #{bs\ 11794}#)
                                                                           #{er-cache\ 11795}#
                                                                           #{r-cache\ 11796}#)))))))
                                                        (#{loop\ 11793}#
                                                          #{bindings\ 11723}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 11702}#
                                                        (#{extend-env\ 10694}#
                                                          #{labels\ 11719}#
                                                          #{bindings\ 11723}#
                                                          (cdr #{r\ 11702}#)))
                                                      (#{build-letrec\ 10664}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 11720}#)
                                                        #{vars\ 11721}#
                                                        (map (lambda (#{x\ 11807}#)
                                                               (#{chi\ 10791}#
                                                                 (cdr #{x\ 11807}#)
                                                                 (car #{x\ 11807}#)
                                                                 '(())
                                                                 #{mod\ 11736}#))
                                                             #{vals\ 11722}#)
                                                        (#{build-sequence\ 10658}#
                                                          #f
                                                          (map (lambda (#{x\ 11811}#)
                                                                 (#{chi\ 10791}#
                                                                   (cdr #{x\ 11811}#)
                                                                   (car #{x\ 11811}#)
                                                                   '(())
                                                                   #{mod\ 11736}#))
                                                               (cons (cons #{er\ 11729}#
                                                                           (#{source-wrap\ 10777}#
                                                                             #{e\ 11733}#
                                                                             #{w\ 11734}#
                                                                             #{s\ 11735}#
                                                                             #{mod\ 11736}#))
                                                                     (cdr #{body\ 11717}#))))))))))))))))))
                       (#{parse\ 11716}#
                         (map (lambda (#{x\ 11724}#)
                                (cons #{r\ 11702}#
                                      (#{wrap\ 10775}#
                                        #{x\ 11724}#
                                        #{w\ 11707}#
                                        #{mod\ 11694}#)))
                              #{body\ 11690}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 10797}#
             (lambda (#{p\ 11814}#
                      #{e\ 11815}#
                      #{r\ 11816}#
                      #{w\ 11817}#
                      #{rib\ 11818}#
                      #{mod\ 11819}#)
               (letrec ((#{rebuild-macro-output\ 11827}#
                          (lambda (#{x\ 11828}# #{m\ 11829}#)
                            (if (pair? #{x\ 11828}#)
                              (cons (#{rebuild-macro-output\ 11827}#
                                      (car #{x\ 11828}#)
                                      #{m\ 11829}#)
                                    (#{rebuild-macro-output\ 11827}#
                                      (cdr #{x\ 11828}#)
                                      #{m\ 11829}#))
                              (if (#{syntax-object?\ 10670}# #{x\ 11828}#)
                                (let ((#{w\ 11837}#
                                        (#{syntax-object-wrap\ 10674}#
                                          #{x\ 11828}#)))
                                  (let ((#{ms\ 11840}#
                                          (#{wrap-marks\ 10713}# #{w\ 11837}#))
                                        (#{s\ 11841}#
                                          (#{wrap-subst\ 10715}#
                                            #{w\ 11837}#)))
                                    (if (if (pair? #{ms\ 11840}#)
                                          (eq? (car #{ms\ 11840}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 10668}#
                                        (#{syntax-object-expression\ 10672}#
                                          #{x\ 11828}#)
                                        (#{make-wrap\ 10711}#
                                          (cdr #{ms\ 11840}#)
                                          (if #{rib\ 11818}#
                                            (cons #{rib\ 11818}#
                                                  (cdr #{s\ 11841}#))
                                            (cdr #{s\ 11841}#)))
                                        (#{syntax-object-module\ 10676}#
                                          #{x\ 11828}#))
                                      (#{make-syntax-object\ 10668}#
                                        (#{syntax-object-expression\ 10672}#
                                          #{x\ 11828}#)
                                        (#{make-wrap\ 10711}#
                                          (cons #{m\ 11829}# #{ms\ 11840}#)
                                          (if #{rib\ 11818}#
                                            (cons #{rib\ 11818}#
                                                  (cons 'shift
                                                        #{s\ 11841}#))
                                            (cons (quote shift) #{s\ 11841}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 11814}#))))))
                                (if (vector? #{x\ 11828}#)
                                  (let ((#{n\ 11849}#
                                          (vector-length #{x\ 11828}#)))
                                    (let ((#{v\ 11851}#
                                            (make-vector #{n\ 11849}#)))
                                      (letrec ((#{loop\ 11854}#
                                                 (lambda (#{i\ 11855}#)
                                                   (if (#{fx=\ 10611}#
                                                         #{i\ 11855}#
                                                         #{n\ 11849}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 11851}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 11851}#
                                                         #{i\ 11855}#
                                                         (#{rebuild-macro-output\ 11827}#
                                                           (vector-ref
                                                             #{x\ 11828}#
                                                             #{i\ 11855}#)
                                                           #{m\ 11829}#))
                                                       (#{loop\ 11854}#
                                                         (#{fx+\ 10607}#
                                                           #{i\ 11855}#
                                                           1)))))))
                                        (#{loop\ 11854}# 0))))
                                  (if (symbol? #{x\ 11828}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 10777}#
                                        #{e\ 11815}#
                                        #{w\ 11817}#
                                        (#{wrap-subst\ 10715}# #{w\ 11817}#)
                                        #{mod\ 11819}#)
                                      #{x\ 11828}#)
                                    #{x\ 11828}#)))))))
                 (#{rebuild-macro-output\ 11827}#
                   ((car #{p\ 11814}#)
                    (#{wrap\ 10775}#
                      #{e\ 11815}#
                      (#{anti-mark\ 10747}# #{w\ 11817}#)
                      #{mod\ 11819}#))
                   (gensym "m")))))
           (#{chi-application\ 10795}#
             (lambda (#{x\ 11862}#
                      #{e\ 11863}#
                      #{r\ 11864}#
                      #{w\ 11865}#
                      #{s\ 11866}#
                      #{mod\ 11867}#)
               ((lambda (#{tmp\ 11874}#)
                  ((lambda (#{tmp\ 11875}#)
                     (if #{tmp\ 11875}#
                       (apply (lambda (#{e0\ 11878}# #{e1\ 11879}#)
                                (#{build-application\ 10628}#
                                  #{s\ 11866}#
                                  #{x\ 11862}#
                                  (map (lambda (#{e\ 11880}#)
                                         (#{chi\ 10791}#
                                           #{e\ 11880}#
                                           #{r\ 11864}#
                                           #{w\ 11865}#
                                           #{mod\ 11867}#))
                                       #{e1\ 11879}#)))
                              #{tmp\ 11875}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 11874}#)))
                   ($sc-dispatch
                     #{tmp\ 11874}#
                     '(any . each-any))))
                #{e\ 11863}#)))
           (#{chi-expr\ 10793}#
             (lambda (#{type\ 11883}#
                      #{value\ 11884}#
                      #{e\ 11885}#
                      #{r\ 11886}#
                      #{w\ 11887}#
                      #{s\ 11888}#
                      #{mod\ 11889}#)
               (if (memv #{type\ 11883}# (quote (lexical)))
                 (#{build-lexical-reference\ 10634}#
                   'value
                   #{s\ 11888}#
                   #{e\ 11885}#
                   #{value\ 11884}#)
                 (if (memv #{type\ 11883}# (quote (core core-form)))
                   (#{value\ 11884}#
                     #{e\ 11885}#
                     #{r\ 11886}#
                     #{w\ 11887}#
                     #{s\ 11888}#
                     #{mod\ 11889}#)
                   (if (memv #{type\ 11883}# (quote (module-ref)))
                     (call-with-values
                       (lambda ()
                         (#{value\ 11884}#
                           #{e\ 11885}#
                           #{r\ 11886}#
                           #{w\ 11887}#))
                       (lambda (#{e\ 11900}#
                                #{r\ 11901}#
                                #{w\ 11902}#
                                #{s\ 11903}#
                                #{mod\ 11904}#)
                         (#{chi\ 10791}#
                           #{e\ 11900}#
                           #{r\ 11901}#
                           #{w\ 11902}#
                           #{mod\ 11904}#)))
                     (if (memv #{type\ 11883}# (quote (lexical-call)))
                       (#{chi-application\ 10795}#
                         (#{build-lexical-reference\ 10634}#
                           'fun
                           (#{source-annotation\ 10685}# (car #{e\ 11885}#))
                           (car #{e\ 11885}#)
                           #{value\ 11884}#)
                         #{e\ 11885}#
                         #{r\ 11886}#
                         #{w\ 11887}#
                         #{s\ 11888}#
                         #{mod\ 11889}#)
                       (if (memv #{type\ 11883}# (quote (global-call)))
                         (#{chi-application\ 10795}#
                           (#{build-global-reference\ 10640}#
                             (#{source-annotation\ 10685}# (car #{e\ 11885}#))
                             (if (#{syntax-object?\ 10670}# #{value\ 11884}#)
                               (#{syntax-object-expression\ 10672}#
                                 #{value\ 11884}#)
                               #{value\ 11884}#)
                             (if (#{syntax-object?\ 10670}# #{value\ 11884}#)
                               (#{syntax-object-module\ 10676}#
                                 #{value\ 11884}#)
                               #{mod\ 11889}#))
                           #{e\ 11885}#
                           #{r\ 11886}#
                           #{w\ 11887}#
                           #{s\ 11888}#
                           #{mod\ 11889}#)
                         (if (memv #{type\ 11883}# (quote (constant)))
                           (#{build-data\ 10656}#
                             #{s\ 11888}#
                             (#{strip\ 10817}#
                               (#{source-wrap\ 10777}#
                                 #{e\ 11885}#
                                 #{w\ 11887}#
                                 #{s\ 11888}#
                                 #{mod\ 11889}#)
                               '(())))
                           (if (memv #{type\ 11883}# (quote (global)))
                             (#{build-global-reference\ 10640}#
                               #{s\ 11888}#
                               #{value\ 11884}#
                               #{mod\ 11889}#)
                             (if (memv #{type\ 11883}# (quote (call)))
                               (#{chi-application\ 10795}#
                                 (#{chi\ 10791}#
                                   (car #{e\ 11885}#)
                                   #{r\ 11886}#
                                   #{w\ 11887}#
                                   #{mod\ 11889}#)
                                 #{e\ 11885}#
                                 #{r\ 11886}#
                                 #{w\ 11887}#
                                 #{s\ 11888}#
                                 #{mod\ 11889}#)
                               (if (memv #{type\ 11883}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 11917}#)
                                    ((lambda (#{tmp\ 11918}#)
                                       (if #{tmp\ 11918}#
                                         (apply (lambda (#{_\ 11922}#
                                                         #{e1\ 11923}#
                                                         #{e2\ 11924}#)
                                                  (#{chi-sequence\ 10779}#
                                                    (cons #{e1\ 11923}#
                                                          #{e2\ 11924}#)
                                                    #{r\ 11886}#
                                                    #{w\ 11887}#
                                                    #{s\ 11888}#
                                                    #{mod\ 11889}#))
                                                #{tmp\ 11918}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 11917}#)))
                                     ($sc-dispatch
                                       #{tmp\ 11917}#
                                       '(any any . each-any))))
                                  #{e\ 11885}#)
                                 (if (memv #{type\ 11883}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 10801}#
                                     #{value\ 11884}#
                                     #{e\ 11885}#
                                     #{r\ 11886}#
                                     #{w\ 11887}#
                                     #{s\ 11888}#
                                     #{mod\ 11889}#
                                     #{chi-sequence\ 10779}#)
                                   (if (memv #{type\ 11883}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 11928}#)
                                        ((lambda (#{tmp\ 11929}#)
                                           (if #{tmp\ 11929}#
                                             (apply (lambda (#{_\ 11934}#
                                                             #{x\ 11935}#
                                                             #{e1\ 11936}#
                                                             #{e2\ 11937}#)
                                                      (let ((#{when-list\ 11939}#
                                                              (#{chi-when-list\ 10785}#
                                                                #{e\ 11885}#
                                                                #{x\ 11935}#
                                                                #{w\ 11887}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 11939}#)
                                                          (#{chi-sequence\ 10779}#
                                                            (cons #{e1\ 11936}#
                                                                  #{e2\ 11937}#)
                                                            #{r\ 11886}#
                                                            #{w\ 11887}#
                                                            #{s\ 11888}#
                                                            #{mod\ 11889}#)
                                                          (#{chi-void\ 10805}#))))
                                                    #{tmp\ 11929}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 11928}#)))
                                         ($sc-dispatch
                                           #{tmp\ 11928}#
                                           '(any each-any any . each-any))))
                                      #{e\ 11885}#)
                                     (if (memv #{type\ 11883}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 11885}#
                                         (#{wrap\ 10775}#
                                           #{value\ 11884}#
                                           #{w\ 11887}#
                                           #{mod\ 11889}#))
                                       (if (memv #{type\ 11883}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 10777}#
                                             #{e\ 11885}#
                                             #{w\ 11887}#
                                             #{s\ 11888}#
                                             #{mod\ 11889}#))
                                         (if (memv #{type\ 11883}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 10777}#
                                               #{e\ 11885}#
                                               #{w\ 11887}#
                                               #{s\ 11888}#
                                               #{mod\ 11889}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 10777}#
                                               #{e\ 11885}#
                                               #{w\ 11887}#
                                               #{s\ 11888}#
                                               #{mod\ 11889}#))))))))))))))))))
           (#{chi\ 10791}#
             (lambda (#{e\ 11946}#
                      #{r\ 11947}#
                      #{w\ 11948}#
                      #{mod\ 11949}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 10787}#
                     #{e\ 11946}#
                     #{r\ 11947}#
                     #{w\ 11948}#
                     (#{source-annotation\ 10685}# #{e\ 11946}#)
                     #f
                     #{mod\ 11949}#
                     #f))
                 (lambda (#{type\ 11954}#
                          #{value\ 11955}#
                          #{e\ 11956}#
                          #{w\ 11957}#
                          #{s\ 11958}#
                          #{mod\ 11959}#)
                   (#{chi-expr\ 10793}#
                     #{type\ 11954}#
                     #{value\ 11955}#
                     #{e\ 11956}#
                     #{r\ 11947}#
                     #{w\ 11957}#
                     #{s\ 11958}#
                     #{mod\ 11959}#)))))
           (#{chi-top\ 10789}#
             (lambda (#{e\ 11966}#
                      #{r\ 11967}#
                      #{w\ 11968}#
                      #{m\ 11969}#
                      #{esew\ 11970}#
                      #{mod\ 11971}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 10787}#
                     #{e\ 11966}#
                     #{r\ 11967}#
                     #{w\ 11968}#
                     (#{source-annotation\ 10685}# #{e\ 11966}#)
                     #f
                     #{mod\ 11971}#
                     #f))
                 (lambda (#{type\ 11992}#
                          #{value\ 11993}#
                          #{e\ 11994}#
                          #{w\ 11995}#
                          #{s\ 11996}#
                          #{mod\ 11997}#)
                   (if (memv #{type\ 11992}# (quote (begin-form)))
                     ((lambda (#{tmp\ 12005}#)
                        ((lambda (#{tmp\ 12006}#)
                           (if #{tmp\ 12006}#
                             (apply (lambda (#{_\ 12008}#)
                                      (#{chi-void\ 10805}#))
                                    #{tmp\ 12006}#)
                             ((lambda (#{tmp\ 12009}#)
                                (if #{tmp\ 12009}#
                                  (apply (lambda (#{_\ 12013}#
                                                  #{e1\ 12014}#
                                                  #{e2\ 12015}#)
                                           (#{chi-top-sequence\ 10781}#
                                             (cons #{e1\ 12014}# #{e2\ 12015}#)
                                             #{r\ 11967}#
                                             #{w\ 11995}#
                                             #{s\ 11996}#
                                             #{m\ 11969}#
                                             #{esew\ 11970}#
                                             #{mod\ 11997}#))
                                         #{tmp\ 12009}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 12005}#)))
                              ($sc-dispatch
                                #{tmp\ 12005}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 12005}# (quote (any)))))
                      #{e\ 11994}#)
                     (if (memv #{type\ 11992}#
                               '(local-syntax-form))
                       (#{chi-local-syntax\ 10801}#
                         #{value\ 11993}#
                         #{e\ 11994}#
                         #{r\ 11967}#
                         #{w\ 11995}#
                         #{s\ 11996}#
                         #{mod\ 11997}#
                         (lambda (#{body\ 12018}#
                                  #{r\ 12019}#
                                  #{w\ 12020}#
                                  #{s\ 12021}#
                                  #{mod\ 12022}#)
                           (#{chi-top-sequence\ 10781}#
                             #{body\ 12018}#
                             #{r\ 12019}#
                             #{w\ 12020}#
                             #{s\ 12021}#
                             #{m\ 11969}#
                             #{esew\ 11970}#
                             #{mod\ 12022}#)))
                       (if (memv #{type\ 11992}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 12029}#)
                            ((lambda (#{tmp\ 12030}#)
                               (if #{tmp\ 12030}#
                                 (apply (lambda (#{_\ 12035}#
                                                 #{x\ 12036}#
                                                 #{e1\ 12037}#
                                                 #{e2\ 12038}#)
                                          (let ((#{when-list\ 12041}#
                                                  (#{chi-when-list\ 10785}#
                                                    #{e\ 11994}#
                                                    #{x\ 12036}#
                                                    #{w\ 11995}#))
                                                (#{body\ 12042}#
                                                  (cons #{e1\ 12037}#
                                                        #{e2\ 12038}#)))
                                            (if (eq? #{m\ 11969}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 12041}#)
                                                (#{chi-top-sequence\ 10781}#
                                                  #{body\ 12042}#
                                                  #{r\ 11967}#
                                                  #{w\ 11995}#
                                                  #{s\ 11996}#
                                                  (if (memq 'expand
                                                            #{when-list\ 12041}#)
                                                    'c&e
                                                    'e)
                                                  '(eval)
                                                  #{mod\ 11997}#)
                                                (begin
                                                  (if (memq 'expand
                                                            #{when-list\ 12041}#)
                                                    (#{top-level-eval-hook\ 10615}#
                                                      (#{chi-top-sequence\ 10781}#
                                                        #{body\ 12042}#
                                                        #{r\ 11967}#
                                                        #{w\ 11995}#
                                                        #{s\ 11996}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 11997}#)
                                                      #{mod\ 11997}#))
                                                  (#{chi-void\ 10805}#)))
                                              (if (memq 'load
                                                        #{when-list\ 12041}#)
                                                (if (let ((#{t\ 12051}#
                                                            (memq 'compile
                                                                  #{when-list\ 12041}#)))
                                                      (if #{t\ 12051}#
                                                        #{t\ 12051}#
                                                        (let ((#{t\ 12054}#
                                                                (memq 'expand
                                                                      #{when-list\ 12041}#)))
                                                          (if #{t\ 12054}#
                                                            #{t\ 12054}#
                                                            (if (eq? #{m\ 11969}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 12041}#)
                                                              #f)))))
                                                  (#{chi-top-sequence\ 10781}#
                                                    #{body\ 12042}#
                                                    #{r\ 11967}#
                                                    #{w\ 11995}#
                                                    #{s\ 11996}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 11997}#)
                                                  (if (memq #{m\ 11969}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 10781}#
                                                      #{body\ 12042}#
                                                      #{r\ 11967}#
                                                      #{w\ 11995}#
                                                      #{s\ 11996}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 11997}#)
                                                    (#{chi-void\ 10805}#)))
                                                (if (let ((#{t\ 12062}#
                                                            (memq 'compile
                                                                  #{when-list\ 12041}#)))
                                                      (if #{t\ 12062}#
                                                        #{t\ 12062}#
                                                        (let ((#{t\ 12065}#
                                                                (memq 'expand
                                                                      #{when-list\ 12041}#)))
                                                          (if #{t\ 12065}#
                                                            #{t\ 12065}#
                                                            (if (eq? #{m\ 11969}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 12041}#)
                                                              #f)))))
                                                  (begin
                                                    (#{top-level-eval-hook\ 10615}#
                                                      (#{chi-top-sequence\ 10781}#
                                                        #{body\ 12042}#
                                                        #{r\ 11967}#
                                                        #{w\ 11995}#
                                                        #{s\ 11996}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 11997}#)
                                                      #{mod\ 11997}#)
                                                    (#{chi-void\ 10805}#))
                                                  (#{chi-void\ 10805}#))))))
                                        #{tmp\ 12030}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 12029}#)))
                             ($sc-dispatch
                               #{tmp\ 12029}#
                               '(any each-any any . each-any))))
                          #{e\ 11994}#)
                         (if (memv #{type\ 11992}#
                                   '(define-syntax-form))
                           (let ((#{n\ 12073}#
                                   (#{id-var-name\ 10763}#
                                     #{value\ 11993}#
                                     #{w\ 11995}#))
                                 (#{r\ 12074}#
                                   (#{macros-only-env\ 10698}# #{r\ 11967}#)))
                             (if (memv #{m\ 11969}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 11970}#)
                                 (let ((#{e\ 12077}#
                                         (#{chi-install-global\ 10783}#
                                           #{n\ 12073}#
                                           (#{chi\ 10791}#
                                             #{e\ 11994}#
                                             #{r\ 12074}#
                                             #{w\ 11995}#
                                             #{mod\ 11997}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 10615}#
                                       #{e\ 12077}#
                                       #{mod\ 11997}#)
                                     (if (memq (quote load) #{esew\ 11970}#)
                                       #{e\ 12077}#
                                       (#{chi-void\ 10805}#))))
                                 (if (memq (quote load) #{esew\ 11970}#)
                                   (#{chi-install-global\ 10783}#
                                     #{n\ 12073}#
                                     (#{chi\ 10791}#
                                       #{e\ 11994}#
                                       #{r\ 12074}#
                                       #{w\ 11995}#
                                       #{mod\ 11997}#))
                                   (#{chi-void\ 10805}#)))
                               (if (memv #{m\ 11969}# (quote (c&e)))
                                 (let ((#{e\ 12080}#
                                         (#{chi-install-global\ 10783}#
                                           #{n\ 12073}#
                                           (#{chi\ 10791}#
                                             #{e\ 11994}#
                                             #{r\ 12074}#
                                             #{w\ 11995}#
                                             #{mod\ 11997}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 10615}#
                                       #{e\ 12080}#
                                       #{mod\ 11997}#)
                                     #{e\ 12080}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 11970}#)
                                     (#{top-level-eval-hook\ 10615}#
                                       (#{chi-install-global\ 10783}#
                                         #{n\ 12073}#
                                         (#{chi\ 10791}#
                                           #{e\ 11994}#
                                           #{r\ 12074}#
                                           #{w\ 11995}#
                                           #{mod\ 11997}#))
                                       #{mod\ 11997}#))
                                   (#{chi-void\ 10805}#)))))
                           (if (memv #{type\ 11992}# (quote (define-form)))
                             (let ((#{n\ 12085}#
                                     (#{id-var-name\ 10763}#
                                       #{value\ 11993}#
                                       #{w\ 11995}#)))
                               (let ((#{type\ 12087}#
                                       (#{binding-type\ 10689}#
                                         (#{lookup\ 10700}#
                                           #{n\ 12085}#
                                           #{r\ 11967}#
                                           #{mod\ 11997}#))))
                                 (if (memv #{type\ 12087}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (memq #{m\ 11969}#
                                                   '(c c&e))
                                           (if (not (module-local-variable
                                                      (current-module)
                                                      #{n\ 12085}#))
                                             (current-module)
                                             #f)
                                           #f)
                                       (let ((#{old\ 12093}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 12085}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 12085}#
                                           (if (variable? #{old\ 12093}#)
                                             (variable-ref #{old\ 12093}#)
                                             #f))))
                                     (let ((#{x\ 12096}#
                                             (#{build-global-definition\ 10646}#
                                               #{s\ 11996}#
                                               #{n\ 12085}#
                                               (#{chi\ 10791}#
                                                 #{e\ 11994}#
                                                 #{r\ 11967}#
                                                 #{w\ 11995}#
                                                 #{mod\ 11997}#))))
                                       (begin
                                         (if (eq? #{m\ 11969}# (quote c&e))
                                           (#{top-level-eval-hook\ 10615}#
                                             #{x\ 12096}#
                                             #{mod\ 11997}#))
                                         #{x\ 12096}#)))
                                   (if (memv #{type\ 12087}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 11994}#
                                       (#{wrap\ 10775}#
                                         #{value\ 11993}#
                                         #{w\ 11995}#
                                         #{mod\ 11997}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 11994}#
                                       (#{wrap\ 10775}#
                                         #{value\ 11993}#
                                         #{w\ 11995}#
                                         #{mod\ 11997}#))))))
                             (let ((#{x\ 12102}#
                                     (#{chi-expr\ 10793}#
                                       #{type\ 11992}#
                                       #{value\ 11993}#
                                       #{e\ 11994}#
                                       #{r\ 11967}#
                                       #{w\ 11995}#
                                       #{s\ 11996}#
                                       #{mod\ 11997}#)))
                               (begin
                                 (if (eq? #{m\ 11969}# (quote c&e))
                                   (#{top-level-eval-hook\ 10615}#
                                     #{x\ 12102}#
                                     #{mod\ 11997}#))
                                 #{x\ 12102}#)))))))))))
           (#{syntax-type\ 10787}#
             (lambda (#{e\ 12103}#
                      #{r\ 12104}#
                      #{w\ 12105}#
                      #{s\ 12106}#
                      #{rib\ 12107}#
                      #{mod\ 12108}#
                      #{for-car?\ 12109}#)
               (if (symbol? #{e\ 12103}#)
                 (let ((#{n\ 12121}#
                         (#{id-var-name\ 10763}#
                           #{e\ 12103}#
                           #{w\ 12105}#)))
                   (let ((#{b\ 12123}#
                           (#{lookup\ 10700}#
                             #{n\ 12121}#
                             #{r\ 12104}#
                             #{mod\ 12108}#)))
                     (let ((#{type\ 12125}#
                             (#{binding-type\ 10689}# #{b\ 12123}#)))
                       (if (memv #{type\ 12125}# (quote (lexical)))
                         (values
                           #{type\ 12125}#
                           (#{binding-value\ 10691}# #{b\ 12123}#)
                           #{e\ 12103}#
                           #{w\ 12105}#
                           #{s\ 12106}#
                           #{mod\ 12108}#)
                         (if (memv #{type\ 12125}# (quote (global)))
                           (values
                             #{type\ 12125}#
                             #{n\ 12121}#
                             #{e\ 12103}#
                             #{w\ 12105}#
                             #{s\ 12106}#
                             #{mod\ 12108}#)
                           (if (memv #{type\ 12125}# (quote (macro)))
                             (if #{for-car?\ 12109}#
                               (values
                                 #{type\ 12125}#
                                 (#{binding-value\ 10691}# #{b\ 12123}#)
                                 #{e\ 12103}#
                                 #{w\ 12105}#
                                 #{s\ 12106}#
                                 #{mod\ 12108}#)
                               (#{syntax-type\ 10787}#
                                 (#{chi-macro\ 10797}#
                                   (#{binding-value\ 10691}# #{b\ 12123}#)
                                   #{e\ 12103}#
                                   #{r\ 12104}#
                                   #{w\ 12105}#
                                   #{rib\ 12107}#
                                   #{mod\ 12108}#)
                                 #{r\ 12104}#
                                 '(())
                                 #{s\ 12106}#
                                 #{rib\ 12107}#
                                 #{mod\ 12108}#
                                 #f))
                             (values
                               #{type\ 12125}#
                               (#{binding-value\ 10691}# #{b\ 12123}#)
                               #{e\ 12103}#
                               #{w\ 12105}#
                               #{s\ 12106}#
                               #{mod\ 12108}#)))))))
                 (if (pair? #{e\ 12103}#)
                   (let ((#{first\ 12134}# (car #{e\ 12103}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 10787}#
                           #{first\ 12134}#
                           #{r\ 12104}#
                           #{w\ 12105}#
                           #{s\ 12106}#
                           #{rib\ 12107}#
                           #{mod\ 12108}#
                           #t))
                       (lambda (#{ftype\ 12135}#
                                #{fval\ 12136}#
                                #{fe\ 12137}#
                                #{fw\ 12138}#
                                #{fs\ 12139}#
                                #{fmod\ 12140}#)
                         (if (memv #{ftype\ 12135}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 12136}#
                             #{e\ 12103}#
                             #{w\ 12105}#
                             #{s\ 12106}#
                             #{mod\ 12108}#)
                           (if (memv #{ftype\ 12135}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 10668}#
                                 #{fval\ 12136}#
                                 #{w\ 12105}#
                                 #{fmod\ 12140}#)
                               #{e\ 12103}#
                               #{w\ 12105}#
                               #{s\ 12106}#
                               #{mod\ 12108}#)
                             (if (memv #{ftype\ 12135}# (quote (macro)))
                               (#{syntax-type\ 10787}#
                                 (#{chi-macro\ 10797}#
                                   #{fval\ 12136}#
                                   #{e\ 12103}#
                                   #{r\ 12104}#
                                   #{w\ 12105}#
                                   #{rib\ 12107}#
                                   #{mod\ 12108}#)
                                 #{r\ 12104}#
                                 '(())
                                 #{s\ 12106}#
                                 #{rib\ 12107}#
                                 #{mod\ 12108}#
                                 #{for-car?\ 12109}#)
                               (if (memv #{ftype\ 12135}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda ()
                                     (#{fval\ 12136}#
                                       #{e\ 12103}#
                                       #{r\ 12104}#
                                       #{w\ 12105}#))
                                   (lambda (#{e\ 12152}#
                                            #{r\ 12153}#
                                            #{w\ 12154}#
                                            #{s\ 12155}#
                                            #{mod\ 12156}#)
                                     (#{syntax-type\ 10787}#
                                       #{e\ 12152}#
                                       #{r\ 12153}#
                                       #{w\ 12154}#
                                       #{s\ 12155}#
                                       #{rib\ 12107}#
                                       #{mod\ 12156}#
                                       #{for-car?\ 12109}#)))
                                 (if (memv #{ftype\ 12135}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 12136}#
                                     #{e\ 12103}#
                                     #{w\ 12105}#
                                     #{s\ 12106}#
                                     #{mod\ 12108}#)
                                   (if (memv #{ftype\ 12135}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 12136}#
                                       #{e\ 12103}#
                                       #{w\ 12105}#
                                       #{s\ 12106}#
                                       #{mod\ 12108}#)
                                     (if (memv #{ftype\ 12135}#
                                               '(begin))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 12103}#
                                         #{w\ 12105}#
                                         #{s\ 12106}#
                                         #{mod\ 12108}#)
                                       (if (memv #{ftype\ 12135}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 12103}#
                                           #{w\ 12105}#
                                           #{s\ 12106}#
                                           #{mod\ 12108}#)
                                         (if (memv #{ftype\ 12135}#
                                                   '(define))
                                           ((lambda (#{tmp\ 12167}#)
                                              ((lambda (#{tmp\ 12168}#)
                                                 (if (if #{tmp\ 12168}#
                                                       (apply (lambda (#{_\ 12172}#
                                                                       #{name\ 12173}#
                                                                       #{val\ 12174}#)
                                                                (#{id?\ 10706}#
                                                                  #{name\ 12173}#))
                                                              #{tmp\ 12168}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 12178}#
                                                                   #{name\ 12179}#
                                                                   #{val\ 12180}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 12179}#
                                                              #{val\ 12180}#
                                                              #{w\ 12105}#
                                                              #{s\ 12106}#
                                                              #{mod\ 12108}#))
                                                          #{tmp\ 12168}#)
                                                   ((lambda (#{tmp\ 12181}#)
                                                      (if (if #{tmp\ 12181}#
                                                            (apply (lambda (#{_\ 12187}#
                                                                            #{name\ 12188}#
                                                                            #{args\ 12189}#
                                                                            #{e1\ 12190}#
                                                                            #{e2\ 12191}#)
                                                                     (if (#{id?\ 10706}#
                                                                           #{name\ 12188}#)
                                                                       (#{valid-bound-ids?\ 10769}#
                                                                         (#{lambda-var-list\ 10821}#
                                                                           #{args\ 12189}#))
                                                                       #f))
                                                                   #{tmp\ 12181}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 12199}#
                                                                        #{name\ 12200}#
                                                                        #{args\ 12201}#
                                                                        #{e1\ 12202}#
                                                                        #{e2\ 12203}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 10775}#
                                                                     #{name\ 12200}#
                                                                     #{w\ 12105}#
                                                                     #{mod\ 12108}#)
                                                                   (#{decorate-source\ 10624}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12194"
                                                                                   "i12195"
                                                                                   "i12196"
                                                                                   "i12197"
                                                                                   "i12198"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12141"
                                                                                   "i12142"
                                                                                   "i12143"
                                                                                   "i12144"
                                                                                   "i12145"
                                                                                   "i12146"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i12133"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i12110"
                                                                                   "i12111"
                                                                                   "i12112"
                                                                                   "i12113"
                                                                                   "i12114"
                                                                                   "i12115"
                                                                                   "i12116"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*
                                                                                   noexpand)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i10820"
                                                                                  "i10818"
                                                                                  "i10816"
                                                                                  "i10814"
                                                                                  "i10812"
                                                                                  "i10810"
                                                                                  "i10808"
                                                                                  "i10806"
                                                                                  "i10804"
                                                                                  "i10802"
                                                                                  "i10800"
                                                                                  "i10798"
                                                                                  "i10796"
                                                                                  "i10794"
                                                                                  "i10792"
                                                                                  "i10790"
                                                                                  "i10788"
                                                                                  "i10786"
                                                                                  "i10784"
                                                                                  "i10782"
                                                                                  "i10780"
                                                                                  "i10778"
                                                                                  "i10776"
                                                                                  "i10774"
                                                                                  "i10772"
                                                                                  "i10770"
                                                                                  "i10768"
                                                                                  "i10766"
                                                                                  "i10764"
                                                                                  "i10762"
                                                                                  "i10760"
                                                                                  "i10758"
                                                                                  "i10756"
                                                                                  "i10754"
                                                                                  "i10752"
                                                                                  "i10750"
                                                                                  "i10749"
                                                                                  "i10748"
                                                                                  "i10746"
                                                                                  "i10745"
                                                                                  "i10744"
                                                                                  "i10743"
                                                                                  "i10742"
                                                                                  "i10740"
                                                                                  "i10738"
                                                                                  "i10736"
                                                                                  "i10734"
                                                                                  "i10732"
                                                                                  "i10730"
                                                                                  "i10728"
                                                                                  "i10726"
                                                                                  "i10723"
                                                                                  "i10721"
                                                                                  "i10720"
                                                                                  "i10719"
                                                                                  "i10718"
                                                                                  "i10717"
                                                                                  "i10716"
                                                                                  "i10714"
                                                                                  "i10712"
                                                                                  "i10710"
                                                                                  "i10708"
                                                                                  "i10707"
                                                                                  "i10705"
                                                                                  "i10703"
                                                                                  "i10701"
                                                                                  "i10699"
                                                                                  "i10697"
                                                                                  "i10695"
                                                                                  "i10693"
                                                                                  "i10692"
                                                                                  "i10690"
                                                                                  "i10688"
                                                                                  "i10687"
                                                                                  "i10686"
                                                                                  "i10684"
                                                                                  "i10683"
                                                                                  "i10681"
                                                                                  "i10679"
                                                                                  "i10677"
                                                                                  "i10675"
                                                                                  "i10673"
                                                                                  "i10671"
                                                                                  "i10669"
                                                                                  "i10667"
                                                                                  "i10665"
                                                                                  "i10663"
                                                                                  "i10661"
                                                                                  "i10659"
                                                                                  "i10657"
                                                                                  "i10655"
                                                                                  "i10653"
                                                                                  "i10651"
                                                                                  "i10649"
                                                                                  "i10647"
                                                                                  "i10645"
                                                                                  "i10643"
                                                                                  "i10641"
                                                                                  "i10639"
                                                                                  "i10637"
                                                                                  "i10635"
                                                                                  "i10633"
                                                                                  "i10631"
                                                                                  "i10629"
                                                                                  "i10627"
                                                                                  "i10625"
                                                                                  "i10623"
                                                                                  "i10621"
                                                                                  "i10619"
                                                                                  "i10618"
                                                                                  "i10616"
                                                                                  "i10614"
                                                                                  "i10612"
                                                                                  "i10610"
                                                                                  "i10608"
                                                                                  "i10606"
                                                                                  "i10604"
                                                                                  "i10602"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i10505"
                                                                                  "i10503")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 10775}#
                                                                             (cons #{args\ 12201}#
                                                                                   (cons #{e1\ 12202}#
                                                                                         #{e2\ 12203}#))
                                                                             #{w\ 12105}#
                                                                             #{mod\ 12108}#))
                                                                     #{s\ 12106}#)
                                                                   '(())
                                                                   #{s\ 12106}#
                                                                   #{mod\ 12108}#))
                                                               #{tmp\ 12181}#)
                                                        ((lambda (#{tmp\ 12206}#)
                                                           (if (if #{tmp\ 12206}#
                                                                 (apply (lambda (#{_\ 12209}#
                                                                                 #{name\ 12210}#)
                                                                          (#{id?\ 10706}#
                                                                            #{name\ 12210}#))
                                                                        #{tmp\ 12206}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 12213}#
                                                                             #{name\ 12214}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 10775}#
                                                                          #{name\ 12214}#
                                                                          #{w\ 12105}#
                                                                          #{mod\ 12108}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i12211"
                                                                                 "i12212"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12141"
                                                                                 "i12142"
                                                                                 "i12143"
                                                                                 "i12144"
                                                                                 "i12145"
                                                                                 "i12146"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i12133"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12110"
                                                                                 "i12111"
                                                                                 "i12112"
                                                                                 "i12113"
                                                                                 "i12114"
                                                                                 "i12115"
                                                                                 "i12116"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i10820"
                                                                                "i10818"
                                                                                "i10816"
                                                                                "i10814"
                                                                                "i10812"
                                                                                "i10810"
                                                                                "i10808"
                                                                                "i10806"
                                                                                "i10804"
                                                                                "i10802"
                                                                                "i10800"
                                                                                "i10798"
                                                                                "i10796"
                                                                                "i10794"
                                                                                "i10792"
                                                                                "i10790"
                                                                                "i10788"
                                                                                "i10786"
                                                                                "i10784"
                                                                                "i10782"
                                                                                "i10780"
                                                                                "i10778"
                                                                                "i10776"
                                                                                "i10774"
                                                                                "i10772"
                                                                                "i10770"
                                                                                "i10768"
                                                                                "i10766"
                                                                                "i10764"
                                                                                "i10762"
                                                                                "i10760"
                                                                                "i10758"
                                                                                "i10756"
                                                                                "i10754"
                                                                                "i10752"
                                                                                "i10750"
                                                                                "i10749"
                                                                                "i10748"
                                                                                "i10746"
                                                                                "i10745"
                                                                                "i10744"
                                                                                "i10743"
                                                                                "i10742"
                                                                                "i10740"
                                                                                "i10738"
                                                                                "i10736"
                                                                                "i10734"
                                                                                "i10732"
                                                                                "i10730"
                                                                                "i10728"
                                                                                "i10726"
                                                                                "i10723"
                                                                                "i10721"
                                                                                "i10720"
                                                                                "i10719"
                                                                                "i10718"
                                                                                "i10717"
                                                                                "i10716"
                                                                                "i10714"
                                                                                "i10712"
                                                                                "i10710"
                                                                                "i10708"
                                                                                "i10707"
                                                                                "i10705"
                                                                                "i10703"
                                                                                "i10701"
                                                                                "i10699"
                                                                                "i10697"
                                                                                "i10695"
                                                                                "i10693"
                                                                                "i10692"
                                                                                "i10690"
                                                                                "i10688"
                                                                                "i10687"
                                                                                "i10686"
                                                                                "i10684"
                                                                                "i10683"
                                                                                "i10681"
                                                                                "i10679"
                                                                                "i10677"
                                                                                "i10675"
                                                                                "i10673"
                                                                                "i10671"
                                                                                "i10669"
                                                                                "i10667"
                                                                                "i10665"
                                                                                "i10663"
                                                                                "i10661"
                                                                                "i10659"
                                                                                "i10657"
                                                                                "i10655"
                                                                                "i10653"
                                                                                "i10651"
                                                                                "i10649"
                                                                                "i10647"
                                                                                "i10645"
                                                                                "i10643"
                                                                                "i10641"
                                                                                "i10639"
                                                                                "i10637"
                                                                                "i10635"
                                                                                "i10633"
                                                                                "i10631"
                                                                                "i10629"
                                                                                "i10627"
                                                                                "i10625"
                                                                                "i10623"
                                                                                "i10621"
                                                                                "i10619"
                                                                                "i10618"
                                                                                "i10616"
                                                                                "i10614"
                                                                                "i10612"
                                                                                "i10610"
                                                                                "i10608"
                                                                                "i10606"
                                                                                "i10604"
                                                                                "i10602"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i10505"
                                                                                "i10503")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i12211"
                                                                                 "i12212"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12141"
                                                                                 "i12142"
                                                                                 "i12143"
                                                                                 "i12144"
                                                                                 "i12145"
                                                                                 "i12146"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i12133"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12110"
                                                                                 "i12111"
                                                                                 "i12112"
                                                                                 "i12113"
                                                                                 "i12114"
                                                                                 "i12115"
                                                                                 "i12116"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i10820"
                                                                                "i10818"
                                                                                "i10816"
                                                                                "i10814"
                                                                                "i10812"
                                                                                "i10810"
                                                                                "i10808"
                                                                                "i10806"
                                                                                "i10804"
                                                                                "i10802"
                                                                                "i10800"
                                                                                "i10798"
                                                                                "i10796"
                                                                                "i10794"
                                                                                "i10792"
                                                                                "i10790"
                                                                                "i10788"
                                                                                "i10786"
                                                                                "i10784"
                                                                                "i10782"
                                                                                "i10780"
                                                                                "i10778"
                                                                                "i10776"
                                                                                "i10774"
                                                                                "i10772"
                                                                                "i10770"
                                                                                "i10768"
                                                                                "i10766"
                                                                                "i10764"
                                                                                "i10762"
                                                                                "i10760"
                                                                                "i10758"
                                                                                "i10756"
                                                                                "i10754"
                                                                                "i10752"
                                                                                "i10750"
                                                                                "i10749"
                                                                                "i10748"
                                                                                "i10746"
                                                                                "i10745"
                                                                                "i10744"
                                                                                "i10743"
                                                                                "i10742"
                                                                                "i10740"
                                                                                "i10738"
                                                                                "i10736"
                                                                                "i10734"
                                                                                "i10732"
                                                                                "i10730"
                                                                                "i10728"
                                                                                "i10726"
                                                                                "i10723"
                                                                                "i10721"
                                                                                "i10720"
                                                                                "i10719"
                                                                                "i10718"
                                                                                "i10717"
                                                                                "i10716"
                                                                                "i10714"
                                                                                "i10712"
                                                                                "i10710"
                                                                                "i10708"
                                                                                "i10707"
                                                                                "i10705"
                                                                                "i10703"
                                                                                "i10701"
                                                                                "i10699"
                                                                                "i10697"
                                                                                "i10695"
                                                                                "i10693"
                                                                                "i10692"
                                                                                "i10690"
                                                                                "i10688"
                                                                                "i10687"
                                                                                "i10686"
                                                                                "i10684"
                                                                                "i10683"
                                                                                "i10681"
                                                                                "i10679"
                                                                                "i10677"
                                                                                "i10675"
                                                                                "i10673"
                                                                                "i10671"
                                                                                "i10669"
                                                                                "i10667"
                                                                                "i10665"
                                                                                "i10663"
                                                                                "i10661"
                                                                                "i10659"
                                                                                "i10657"
                                                                                "i10655"
                                                                                "i10653"
                                                                                "i10651"
                                                                                "i10649"
                                                                                "i10647"
                                                                                "i10645"
                                                                                "i10643"
                                                                                "i10641"
                                                                                "i10639"
                                                                                "i10637"
                                                                                "i10635"
                                                                                "i10633"
                                                                                "i10631"
                                                                                "i10629"
                                                                                "i10627"
                                                                                "i10625"
                                                                                "i10623"
                                                                                "i10621"
                                                                                "i10619"
                                                                                "i10618"
                                                                                "i10616"
                                                                                "i10614"
                                                                                "i10612"
                                                                                "i10610"
                                                                                "i10608"
                                                                                "i10606"
                                                                                "i10604"
                                                                                "i10602"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i10505"
                                                                                "i10503")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i12211"
                                                                                 "i12212"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12141"
                                                                                 "i12142"
                                                                                 "i12143"
                                                                                 "i12144"
                                                                                 "i12145"
                                                                                 "i12146"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i12133"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i12110"
                                                                                 "i12111"
                                                                                 "i12112"
                                                                                 "i12113"
                                                                                 "i12114"
                                                                                 "i12115"
                                                                                 "i12116"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i10820"
                                                                                "i10818"
                                                                                "i10816"
                                                                                "i10814"
                                                                                "i10812"
                                                                                "i10810"
                                                                                "i10808"
                                                                                "i10806"
                                                                                "i10804"
                                                                                "i10802"
                                                                                "i10800"
                                                                                "i10798"
                                                                                "i10796"
                                                                                "i10794"
                                                                                "i10792"
                                                                                "i10790"
                                                                                "i10788"
                                                                                "i10786"
                                                                                "i10784"
                                                                                "i10782"
                                                                                "i10780"
                                                                                "i10778"
                                                                                "i10776"
                                                                                "i10774"
                                                                                "i10772"
                                                                                "i10770"
                                                                                "i10768"
                                                                                "i10766"
                                                                                "i10764"
                                                                                "i10762"
                                                                                "i10760"
                                                                                "i10758"
                                                                                "i10756"
                                                                                "i10754"
                                                                                "i10752"
                                                                                "i10750"
                                                                                "i10749"
                                                                                "i10748"
                                                                                "i10746"
                                                                                "i10745"
                                                                                "i10744"
                                                                                "i10743"
                                                                                "i10742"
                                                                                "i10740"
                                                                                "i10738"
                                                                                "i10736"
                                                                                "i10734"
                                                                                "i10732"
                                                                                "i10730"
                                                                                "i10728"
                                                                                "i10726"
                                                                                "i10723"
                                                                                "i10721"
                                                                                "i10720"
                                                                                "i10719"
                                                                                "i10718"
                                                                                "i10717"
                                                                                "i10716"
                                                                                "i10714"
                                                                                "i10712"
                                                                                "i10710"
                                                                                "i10708"
                                                                                "i10707"
                                                                                "i10705"
                                                                                "i10703"
                                                                                "i10701"
                                                                                "i10699"
                                                                                "i10697"
                                                                                "i10695"
                                                                                "i10693"
                                                                                "i10692"
                                                                                "i10690"
                                                                                "i10688"
                                                                                "i10687"
                                                                                "i10686"
                                                                                "i10684"
                                                                                "i10683"
                                                                                "i10681"
                                                                                "i10679"
                                                                                "i10677"
                                                                                "i10675"
                                                                                "i10673"
                                                                                "i10671"
                                                                                "i10669"
                                                                                "i10667"
                                                                                "i10665"
                                                                                "i10663"
                                                                                "i10661"
                                                                                "i10659"
                                                                                "i10657"
                                                                                "i10655"
                                                                                "i10653"
                                                                                "i10651"
                                                                                "i10649"
                                                                                "i10647"
                                                                                "i10645"
                                                                                "i10643"
                                                                                "i10641"
                                                                                "i10639"
                                                                                "i10637"
                                                                                "i10635"
                                                                                "i10633"
                                                                                "i10631"
                                                                                "i10629"
                                                                                "i10627"
                                                                                "i10625"
                                                                                "i10623"
                                                                                "i10621"
                                                                                "i10619"
                                                                                "i10618"
                                                                                "i10616"
                                                                                "i10614"
                                                                                "i10612"
                                                                                "i10610"
                                                                                "i10608"
                                                                                "i10606"
                                                                                "i10604"
                                                                                "i10602"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i10505"
                                                                                "i10503")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 12106}#
                                                                        #{mod\ 12108}#))
                                                                    #{tmp\ 12206}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 12167}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 12167}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 12167}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 12167}#
                                                 '(any any any))))
                                            #{e\ 12103}#)
                                           (if (memv #{ftype\ 12135}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 12217}#)
                                                ((lambda (#{tmp\ 12218}#)
                                                   (if (if #{tmp\ 12218}#
                                                         (apply (lambda (#{_\ 12222}#
                                                                         #{name\ 12223}#
                                                                         #{val\ 12224}#)
                                                                  (#{id?\ 10706}#
                                                                    #{name\ 12223}#))
                                                                #{tmp\ 12218}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 12228}#
                                                                     #{name\ 12229}#
                                                                     #{val\ 12230}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 12229}#
                                                                #{val\ 12230}#
                                                                #{w\ 12105}#
                                                                #{s\ 12106}#
                                                                #{mod\ 12108}#))
                                                            #{tmp\ 12218}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 12217}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 12217}#
                                                   '(any any any))))
                                              #{e\ 12103}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 12103}#
                                               #{w\ 12105}#
                                               #{s\ 12106}#
                                               #{mod\ 12108}#))))))))))))))
                   (if (#{syntax-object?\ 10670}# #{e\ 12103}#)
                     (#{syntax-type\ 10787}#
                       (#{syntax-object-expression\ 10672}#
                         #{e\ 12103}#)
                       #{r\ 12104}#
                       (#{join-wraps\ 10757}#
                         #{w\ 12105}#
                         (#{syntax-object-wrap\ 10674}# #{e\ 12103}#))
                       #{s\ 12106}#
                       #{rib\ 12107}#
                       (let ((#{t\ 12236}#
                               (#{syntax-object-module\ 10676}# #{e\ 12103}#)))
                         (if #{t\ 12236}# #{t\ 12236}# #{mod\ 12108}#))
                       #{for-car?\ 12109}#)
                     (if (self-evaluating? #{e\ 12103}#)
                       (values
                         'constant
                         #f
                         #{e\ 12103}#
                         #{w\ 12105}#
                         #{s\ 12106}#
                         #{mod\ 12108}#)
                       (values
                         'other
                         #f
                         #{e\ 12103}#
                         #{w\ 12105}#
                         #{s\ 12106}#
                         #{mod\ 12108}#)))))))
           (#{chi-when-list\ 10785}#
             (lambda (#{e\ 12241}# #{when-list\ 12242}# #{w\ 12243}#)
               (letrec ((#{f\ 12250}#
                          (lambda (#{when-list\ 12251}# #{situations\ 12252}#)
                            (if (null? #{when-list\ 12251}#)
                              #{situations\ 12252}#
                              (#{f\ 12250}#
                                (cdr #{when-list\ 12251}#)
                                (cons (let ((#{x\ 12254}#
                                              (car #{when-list\ 12251}#)))
                                        (if (#{free-id=?\ 10765}#
                                              #{x\ 12254}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i12253"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i12247"
                                                      "i12248"
                                                      "i12249"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i12244"
                                                      "i12245"
                                                      "i12246"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*
                                                      noexpand)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i10820"
                                                     "i10818"
                                                     "i10816"
                                                     "i10814"
                                                     "i10812"
                                                     "i10810"
                                                     "i10808"
                                                     "i10806"
                                                     "i10804"
                                                     "i10802"
                                                     "i10800"
                                                     "i10798"
                                                     "i10796"
                                                     "i10794"
                                                     "i10792"
                                                     "i10790"
                                                     "i10788"
                                                     "i10786"
                                                     "i10784"
                                                     "i10782"
                                                     "i10780"
                                                     "i10778"
                                                     "i10776"
                                                     "i10774"
                                                     "i10772"
                                                     "i10770"
                                                     "i10768"
                                                     "i10766"
                                                     "i10764"
                                                     "i10762"
                                                     "i10760"
                                                     "i10758"
                                                     "i10756"
                                                     "i10754"
                                                     "i10752"
                                                     "i10750"
                                                     "i10749"
                                                     "i10748"
                                                     "i10746"
                                                     "i10745"
                                                     "i10744"
                                                     "i10743"
                                                     "i10742"
                                                     "i10740"
                                                     "i10738"
                                                     "i10736"
                                                     "i10734"
                                                     "i10732"
                                                     "i10730"
                                                     "i10728"
                                                     "i10726"
                                                     "i10723"
                                                     "i10721"
                                                     "i10720"
                                                     "i10719"
                                                     "i10718"
                                                     "i10717"
                                                     "i10716"
                                                     "i10714"
                                                     "i10712"
                                                     "i10710"
                                                     "i10708"
                                                     "i10707"
                                                     "i10705"
                                                     "i10703"
                                                     "i10701"
                                                     "i10699"
                                                     "i10697"
                                                     "i10695"
                                                     "i10693"
                                                     "i10692"
                                                     "i10690"
                                                     "i10688"
                                                     "i10687"
                                                     "i10686"
                                                     "i10684"
                                                     "i10683"
                                                     "i10681"
                                                     "i10679"
                                                     "i10677"
                                                     "i10675"
                                                     "i10673"
                                                     "i10671"
                                                     "i10669"
                                                     "i10667"
                                                     "i10665"
                                                     "i10663"
                                                     "i10661"
                                                     "i10659"
                                                     "i10657"
                                                     "i10655"
                                                     "i10653"
                                                     "i10651"
                                                     "i10649"
                                                     "i10647"
                                                     "i10645"
                                                     "i10643"
                                                     "i10641"
                                                     "i10639"
                                                     "i10637"
                                                     "i10635"
                                                     "i10633"
                                                     "i10631"
                                                     "i10629"
                                                     "i10627"
                                                     "i10625"
                                                     "i10623"
                                                     "i10621"
                                                     "i10619"
                                                     "i10618"
                                                     "i10616"
                                                     "i10614"
                                                     "i10612"
                                                     "i10610"
                                                     "i10608"
                                                     "i10606"
                                                     "i10604"
                                                     "i10602"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i10505" "i10503")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 10765}#
                                                #{x\ 12254}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i12253"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i12247"
                                                        "i12248"
                                                        "i12249"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i12244"
                                                        "i12245"
                                                        "i12246"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i10820"
                                                       "i10818"
                                                       "i10816"
                                                       "i10814"
                                                       "i10812"
                                                       "i10810"
                                                       "i10808"
                                                       "i10806"
                                                       "i10804"
                                                       "i10802"
                                                       "i10800"
                                                       "i10798"
                                                       "i10796"
                                                       "i10794"
                                                       "i10792"
                                                       "i10790"
                                                       "i10788"
                                                       "i10786"
                                                       "i10784"
                                                       "i10782"
                                                       "i10780"
                                                       "i10778"
                                                       "i10776"
                                                       "i10774"
                                                       "i10772"
                                                       "i10770"
                                                       "i10768"
                                                       "i10766"
                                                       "i10764"
                                                       "i10762"
                                                       "i10760"
                                                       "i10758"
                                                       "i10756"
                                                       "i10754"
                                                       "i10752"
                                                       "i10750"
                                                       "i10749"
                                                       "i10748"
                                                       "i10746"
                                                       "i10745"
                                                       "i10744"
                                                       "i10743"
                                                       "i10742"
                                                       "i10740"
                                                       "i10738"
                                                       "i10736"
                                                       "i10734"
                                                       "i10732"
                                                       "i10730"
                                                       "i10728"
                                                       "i10726"
                                                       "i10723"
                                                       "i10721"
                                                       "i10720"
                                                       "i10719"
                                                       "i10718"
                                                       "i10717"
                                                       "i10716"
                                                       "i10714"
                                                       "i10712"
                                                       "i10710"
                                                       "i10708"
                                                       "i10707"
                                                       "i10705"
                                                       "i10703"
                                                       "i10701"
                                                       "i10699"
                                                       "i10697"
                                                       "i10695"
                                                       "i10693"
                                                       "i10692"
                                                       "i10690"
                                                       "i10688"
                                                       "i10687"
                                                       "i10686"
                                                       "i10684"
                                                       "i10683"
                                                       "i10681"
                                                       "i10679"
                                                       "i10677"
                                                       "i10675"
                                                       "i10673"
                                                       "i10671"
                                                       "i10669"
                                                       "i10667"
                                                       "i10665"
                                                       "i10663"
                                                       "i10661"
                                                       "i10659"
                                                       "i10657"
                                                       "i10655"
                                                       "i10653"
                                                       "i10651"
                                                       "i10649"
                                                       "i10647"
                                                       "i10645"
                                                       "i10643"
                                                       "i10641"
                                                       "i10639"
                                                       "i10637"
                                                       "i10635"
                                                       "i10633"
                                                       "i10631"
                                                       "i10629"
                                                       "i10627"
                                                       "i10625"
                                                       "i10623"
                                                       "i10621"
                                                       "i10619"
                                                       "i10618"
                                                       "i10616"
                                                       "i10614"
                                                       "i10612"
                                                       "i10610"
                                                       "i10608"
                                                       "i10606"
                                                       "i10604"
                                                       "i10602"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i10505" "i10503")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 10765}#
                                                  #{x\ 12254}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i12253"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i12247"
                                                          "i12248"
                                                          "i12249"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i12244"
                                                          "i12245"
                                                          "i12246"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*
                                                          noexpand)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i10820"
                                                         "i10818"
                                                         "i10816"
                                                         "i10814"
                                                         "i10812"
                                                         "i10810"
                                                         "i10808"
                                                         "i10806"
                                                         "i10804"
                                                         "i10802"
                                                         "i10800"
                                                         "i10798"
                                                         "i10796"
                                                         "i10794"
                                                         "i10792"
                                                         "i10790"
                                                         "i10788"
                                                         "i10786"
                                                         "i10784"
                                                         "i10782"
                                                         "i10780"
                                                         "i10778"
                                                         "i10776"
                                                         "i10774"
                                                         "i10772"
                                                         "i10770"
                                                         "i10768"
                                                         "i10766"
                                                         "i10764"
                                                         "i10762"
                                                         "i10760"
                                                         "i10758"
                                                         "i10756"
                                                         "i10754"
                                                         "i10752"
                                                         "i10750"
                                                         "i10749"
                                                         "i10748"
                                                         "i10746"
                                                         "i10745"
                                                         "i10744"
                                                         "i10743"
                                                         "i10742"
                                                         "i10740"
                                                         "i10738"
                                                         "i10736"
                                                         "i10734"
                                                         "i10732"
                                                         "i10730"
                                                         "i10728"
                                                         "i10726"
                                                         "i10723"
                                                         "i10721"
                                                         "i10720"
                                                         "i10719"
                                                         "i10718"
                                                         "i10717"
                                                         "i10716"
                                                         "i10714"
                                                         "i10712"
                                                         "i10710"
                                                         "i10708"
                                                         "i10707"
                                                         "i10705"
                                                         "i10703"
                                                         "i10701"
                                                         "i10699"
                                                         "i10697"
                                                         "i10695"
                                                         "i10693"
                                                         "i10692"
                                                         "i10690"
                                                         "i10688"
                                                         "i10687"
                                                         "i10686"
                                                         "i10684"
                                                         "i10683"
                                                         "i10681"
                                                         "i10679"
                                                         "i10677"
                                                         "i10675"
                                                         "i10673"
                                                         "i10671"
                                                         "i10669"
                                                         "i10667"
                                                         "i10665"
                                                         "i10663"
                                                         "i10661"
                                                         "i10659"
                                                         "i10657"
                                                         "i10655"
                                                         "i10653"
                                                         "i10651"
                                                         "i10649"
                                                         "i10647"
                                                         "i10645"
                                                         "i10643"
                                                         "i10641"
                                                         "i10639"
                                                         "i10637"
                                                         "i10635"
                                                         "i10633"
                                                         "i10631"
                                                         "i10629"
                                                         "i10627"
                                                         "i10625"
                                                         "i10623"
                                                         "i10621"
                                                         "i10619"
                                                         "i10618"
                                                         "i10616"
                                                         "i10614"
                                                         "i10612"
                                                         "i10610"
                                                         "i10608"
                                                         "i10606"
                                                         "i10604"
                                                         "i10602"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i10505" "i10503")))
                                                     (hygiene guile)))
                                              'eval
                                              (if (#{free-id=?\ 10765}#
                                                    #{x\ 12254}#
                                                    '#(syntax-object
                                                       expand
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i12253"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i12247"
                                                            "i12248"
                                                            "i12249"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i12244"
                                                            "i12245"
                                                            "i12246"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            chi-top
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            maybe-name-value!
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            *mode*
                                                            noexpand)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i10820"
                                                           "i10818"
                                                           "i10816"
                                                           "i10814"
                                                           "i10812"
                                                           "i10810"
                                                           "i10808"
                                                           "i10806"
                                                           "i10804"
                                                           "i10802"
                                                           "i10800"
                                                           "i10798"
                                                           "i10796"
                                                           "i10794"
                                                           "i10792"
                                                           "i10790"
                                                           "i10788"
                                                           "i10786"
                                                           "i10784"
                                                           "i10782"
                                                           "i10780"
                                                           "i10778"
                                                           "i10776"
                                                           "i10774"
                                                           "i10772"
                                                           "i10770"
                                                           "i10768"
                                                           "i10766"
                                                           "i10764"
                                                           "i10762"
                                                           "i10760"
                                                           "i10758"
                                                           "i10756"
                                                           "i10754"
                                                           "i10752"
                                                           "i10750"
                                                           "i10749"
                                                           "i10748"
                                                           "i10746"
                                                           "i10745"
                                                           "i10744"
                                                           "i10743"
                                                           "i10742"
                                                           "i10740"
                                                           "i10738"
                                                           "i10736"
                                                           "i10734"
                                                           "i10732"
                                                           "i10730"
                                                           "i10728"
                                                           "i10726"
                                                           "i10723"
                                                           "i10721"
                                                           "i10720"
                                                           "i10719"
                                                           "i10718"
                                                           "i10717"
                                                           "i10716"
                                                           "i10714"
                                                           "i10712"
                                                           "i10710"
                                                           "i10708"
                                                           "i10707"
                                                           "i10705"
                                                           "i10703"
                                                           "i10701"
                                                           "i10699"
                                                           "i10697"
                                                           "i10695"
                                                           "i10693"
                                                           "i10692"
                                                           "i10690"
                                                           "i10688"
                                                           "i10687"
                                                           "i10686"
                                                           "i10684"
                                                           "i10683"
                                                           "i10681"
                                                           "i10679"
                                                           "i10677"
                                                           "i10675"
                                                           "i10673"
                                                           "i10671"
                                                           "i10669"
                                                           "i10667"
                                                           "i10665"
                                                           "i10663"
                                                           "i10661"
                                                           "i10659"
                                                           "i10657"
                                                           "i10655"
                                                           "i10653"
                                                           "i10651"
                                                           "i10649"
                                                           "i10647"
                                                           "i10645"
                                                           "i10643"
                                                           "i10641"
                                                           "i10639"
                                                           "i10637"
                                                           "i10635"
                                                           "i10633"
                                                           "i10631"
                                                           "i10629"
                                                           "i10627"
                                                           "i10625"
                                                           "i10623"
                                                           "i10621"
                                                           "i10619"
                                                           "i10618"
                                                           "i10616"
                                                           "i10614"
                                                           "i10612"
                                                           "i10610"
                                                           "i10608"
                                                           "i10606"
                                                           "i10604"
                                                           "i10602"))
                                                        #(ribcage
                                                          (define-structure
                                                            and-map*)
                                                          ((top) (top))
                                                          ("i10505" "i10503")))
                                                       (hygiene guile)))
                                                'expand
                                                (syntax-violation
                                                  'eval-when
                                                  "invalid situation"
                                                  #{e\ 12241}#
                                                  (#{wrap\ 10775}#
                                                    #{x\ 12254}#
                                                    #{w\ 12243}#
                                                    #f)))))))
                                      #{situations\ 12252}#))))))
                 (#{f\ 12250}# #{when-list\ 12242}# (quote ())))))
           (#{chi-install-global\ 10783}#
             (lambda (#{name\ 12264}# #{e\ 12265}#)
               (#{build-global-definition\ 10646}#
                 #f
                 #{name\ 12264}#
                 (#{build-application\ 10628}#
                   #f
                   (#{build-primref\ 10654}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 10656}# #f #{name\ 12264}#)
                         (#{build-data\ 10656}# #f (quote macro))
                         (#{build-application\ 10628}#
                           #f
                           (#{build-primref\ 10654}# #f (quote cons))
                           (list #{e\ 12265}#
                                 (#{build-application\ 10628}#
                                   #f
                                   (#{build-primref\ 10654}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 10628}#
                                           #f
                                           (#{build-primref\ 10654}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 10781}#
             (lambda (#{body\ 12279}#
                      #{r\ 12280}#
                      #{w\ 12281}#
                      #{s\ 12282}#
                      #{m\ 12283}#
                      #{esew\ 12284}#
                      #{mod\ 12285}#)
               (#{build-sequence\ 10658}#
                 #{s\ 12282}#
                 (letrec ((#{dobody\ 12302}#
                            (lambda (#{body\ 12303}#
                                     #{r\ 12304}#
                                     #{w\ 12305}#
                                     #{m\ 12306}#
                                     #{esew\ 12307}#
                                     #{mod\ 12308}#
                                     #{module\ 12309}#
                                     #{out\ 12310}#)
                              (if (null? #{body\ 12303}#)
                                (reverse #{out\ 12310}#)
                                (let ((#{first\ 12313}#
                                        (#{chi-top\ 10789}#
                                          (car #{body\ 12303}#)
                                          #{r\ 12304}#
                                          #{w\ 12305}#
                                          #{m\ 12306}#
                                          #{esew\ 12307}#
                                          #{mod\ 12308}#)))
                                  (let ((#{new-module\ 12315}#
                                          (current-module)))
                                    (#{dobody\ 12302}#
                                      (cdr #{body\ 12303}#)
                                      #{r\ 12304}#
                                      #{w\ 12305}#
                                      #{m\ 12306}#
                                      #{esew\ 12307}#
                                      (if (eq? #{module\ 12309}#
                                               #{new-module\ 12315}#)
                                        #{mod\ 12308}#
                                        (cons 'hygiene
                                              (module-name
                                                #{new-module\ 12315}#)))
                                      #{new-module\ 12315}#
                                      (cons #{first\ 12313}#
                                            #{out\ 12310}#))))))))
                   (#{dobody\ 12302}#
                     #{body\ 12279}#
                     #{r\ 12280}#
                     #{w\ 12281}#
                     #{m\ 12283}#
                     #{esew\ 12284}#
                     #{mod\ 12285}#
                     (current-module)
                     '())))))
           (#{chi-sequence\ 10779}#
             (lambda (#{body\ 12316}#
                      #{r\ 12317}#
                      #{w\ 12318}#
                      #{s\ 12319}#
                      #{mod\ 12320}#)
               (#{build-sequence\ 10658}#
                 #{s\ 12319}#
                 (letrec ((#{dobody\ 12331}#
                            (lambda (#{body\ 12332}#
                                     #{r\ 12333}#
                                     #{w\ 12334}#
                                     #{mod\ 12335}#)
                              (if (null? #{body\ 12332}#)
                                '()
                                (let ((#{first\ 12337}#
                                        (#{chi\ 10791}#
                                          (car #{body\ 12332}#)
                                          #{r\ 12333}#
                                          #{w\ 12334}#
                                          #{mod\ 12335}#)))
                                  (cons #{first\ 12337}#
                                        (#{dobody\ 12331}#
                                          (cdr #{body\ 12332}#)
                                          #{r\ 12333}#
                                          #{w\ 12334}#
                                          #{mod\ 12335}#)))))))
                   (#{dobody\ 12331}#
                     #{body\ 12316}#
                     #{r\ 12317}#
                     #{w\ 12318}#
                     #{mod\ 12320}#)))))
           (#{source-wrap\ 10777}#
             (lambda (#{x\ 12338}#
                      #{w\ 12339}#
                      #{s\ 12340}#
                      #{defmod\ 12341}#)
               (#{wrap\ 10775}#
                 (#{decorate-source\ 10624}#
                   #{x\ 12338}#
                   #{s\ 12340}#)
                 #{w\ 12339}#
                 #{defmod\ 12341}#)))
           (#{wrap\ 10775}#
             (lambda (#{x\ 12346}# #{w\ 12347}# #{defmod\ 12348}#)
               (if (if (null? (#{wrap-marks\ 10713}# #{w\ 12347}#))
                     (null? (#{wrap-subst\ 10715}# #{w\ 12347}#))
                     #f)
                 #{x\ 12346}#
                 (if (#{syntax-object?\ 10670}# #{x\ 12346}#)
                   (#{make-syntax-object\ 10668}#
                     (#{syntax-object-expression\ 10672}#
                       #{x\ 12346}#)
                     (#{join-wraps\ 10757}#
                       #{w\ 12347}#
                       (#{syntax-object-wrap\ 10674}# #{x\ 12346}#))
                     (#{syntax-object-module\ 10676}# #{x\ 12346}#))
                   (if (null? #{x\ 12346}#)
                     #{x\ 12346}#
                     (#{make-syntax-object\ 10668}#
                       #{x\ 12346}#
                       #{w\ 12347}#
                       #{defmod\ 12348}#))))))
           (#{bound-id-member?\ 10773}#
             (lambda (#{x\ 12361}# #{list\ 12362}#)
               (if (not (null? #{list\ 12362}#))
                 (let ((#{t\ 12369}#
                         (#{bound-id=?\ 10767}#
                           #{x\ 12361}#
                           (car #{list\ 12362}#))))
                   (if #{t\ 12369}#
                     #{t\ 12369}#
                     (#{bound-id-member?\ 10773}#
                       #{x\ 12361}#
                       (cdr #{list\ 12362}#))))
                 #f)))
           (#{distinct-bound-ids?\ 10771}#
             (lambda (#{ids\ 12371}#)
               (letrec ((#{distinct?\ 12375}#
                          (lambda (#{ids\ 12376}#)
                            (let ((#{t\ 12379}# (null? #{ids\ 12376}#)))
                              (if #{t\ 12379}#
                                #{t\ 12379}#
                                (if (not (#{bound-id-member?\ 10773}#
                                           (car #{ids\ 12376}#)
                                           (cdr #{ids\ 12376}#)))
                                  (#{distinct?\ 12375}# (cdr #{ids\ 12376}#))
                                  #f))))))
                 (#{distinct?\ 12375}# #{ids\ 12371}#))))
           (#{valid-bound-ids?\ 10769}#
             (lambda (#{ids\ 12383}#)
               (if (letrec ((#{all-ids?\ 12388}#
                              (lambda (#{ids\ 12389}#)
                                (let ((#{t\ 12392}# (null? #{ids\ 12389}#)))
                                  (if #{t\ 12392}#
                                    #{t\ 12392}#
                                    (if (#{id?\ 10706}# (car #{ids\ 12389}#))
                                      (#{all-ids?\ 12388}#
                                        (cdr #{ids\ 12389}#))
                                      #f))))))
                     (#{all-ids?\ 12388}# #{ids\ 12383}#))
                 (#{distinct-bound-ids?\ 10771}# #{ids\ 12383}#)
                 #f)))
           (#{bound-id=?\ 10767}#
             (lambda (#{i\ 12397}# #{j\ 12398}#)
               (if (if (#{syntax-object?\ 10670}# #{i\ 12397}#)
                     (#{syntax-object?\ 10670}# #{j\ 12398}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 10672}#
                            #{i\ 12397}#)
                          (#{syntax-object-expression\ 10672}#
                            #{j\ 12398}#))
                   (#{same-marks?\ 10761}#
                     (#{wrap-marks\ 10713}#
                       (#{syntax-object-wrap\ 10674}# #{i\ 12397}#))
                     (#{wrap-marks\ 10713}#
                       (#{syntax-object-wrap\ 10674}# #{j\ 12398}#)))
                   #f)
                 (eq? #{i\ 12397}# #{j\ 12398}#))))
           (#{free-id=?\ 10765}#
             (lambda (#{i\ 12405}# #{j\ 12406}#)
               (if (eq? (let ((#{x\ 12412}# #{i\ 12405}#))
                          (if (#{syntax-object?\ 10670}# #{x\ 12412}#)
                            (#{syntax-object-expression\ 10672}#
                              #{x\ 12412}#)
                            #{x\ 12412}#))
                        (let ((#{x\ 12415}# #{j\ 12406}#))
                          (if (#{syntax-object?\ 10670}# #{x\ 12415}#)
                            (#{syntax-object-expression\ 10672}#
                              #{x\ 12415}#)
                            #{x\ 12415}#)))
                 (eq? (#{id-var-name\ 10763}#
                        #{i\ 12405}#
                        '(()))
                      (#{id-var-name\ 10763}#
                        #{j\ 12406}#
                        '(())))
                 #f)))
           (#{id-var-name\ 10763}#
             (lambda (#{id\ 12419}# #{w\ 12420}#)
               (letrec ((#{search-vector-rib\ 12429}#
                          (lambda (#{sym\ 12441}#
                                   #{subst\ 12442}#
                                   #{marks\ 12443}#
                                   #{symnames\ 12444}#
                                   #{ribcage\ 12445}#)
                            (let ((#{n\ 12452}#
                                    (vector-length #{symnames\ 12444}#)))
                              (letrec ((#{f\ 12455}#
                                         (lambda (#{i\ 12456}#)
                                           (if (#{fx=\ 10611}#
                                                 #{i\ 12456}#
                                                 #{n\ 12452}#)
                                             (#{search\ 12425}#
                                               #{sym\ 12441}#
                                               (cdr #{subst\ 12442}#)
                                               #{marks\ 12443}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 12444}#
                                                            #{i\ 12456}#)
                                                          #{sym\ 12441}#)
                                                   (#{same-marks?\ 10761}#
                                                     #{marks\ 12443}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 10733}#
                                                         #{ribcage\ 12445}#)
                                                       #{i\ 12456}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 10735}#
                                                     #{ribcage\ 12445}#)
                                                   #{i\ 12456}#)
                                                 #{marks\ 12443}#)
                                               (#{f\ 12455}#
                                                 (#{fx+\ 10607}#
                                                   #{i\ 12456}#
                                                   1)))))))
                                (#{f\ 12455}# 0)))))
                        (#{search-list-rib\ 12427}#
                          (lambda (#{sym\ 12464}#
                                   #{subst\ 12465}#
                                   #{marks\ 12466}#
                                   #{symnames\ 12467}#
                                   #{ribcage\ 12468}#)
                            (letrec ((#{f\ 12477}#
                                       (lambda (#{symnames\ 12478}#
                                                #{i\ 12479}#)
                                         (if (null? #{symnames\ 12478}#)
                                           (#{search\ 12425}#
                                             #{sym\ 12464}#
                                             (cdr #{subst\ 12465}#)
                                             #{marks\ 12466}#)
                                           (if (if (eq? (car #{symnames\ 12478}#)
                                                        #{sym\ 12464}#)
                                                 (#{same-marks?\ 10761}#
                                                   #{marks\ 12466}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 10733}#
                                                       #{ribcage\ 12468}#)
                                                     #{i\ 12479}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 10735}#
                                                   #{ribcage\ 12468}#)
                                                 #{i\ 12479}#)
                                               #{marks\ 12466}#)
                                             (#{f\ 12477}#
                                               (cdr #{symnames\ 12478}#)
                                               (#{fx+\ 10607}#
                                                 #{i\ 12479}#
                                                 1)))))))
                              (#{f\ 12477}# #{symnames\ 12467}# 0))))
                        (#{search\ 12425}#
                          (lambda (#{sym\ 12487}#
                                   #{subst\ 12488}#
                                   #{marks\ 12489}#)
                            (if (null? #{subst\ 12488}#)
                              (values #f #{marks\ 12489}#)
                              (let ((#{fst\ 12494}# (car #{subst\ 12488}#)))
                                (if (eq? #{fst\ 12494}# (quote shift))
                                  (#{search\ 12425}#
                                    #{sym\ 12487}#
                                    (cdr #{subst\ 12488}#)
                                    (cdr #{marks\ 12489}#))
                                  (let ((#{symnames\ 12496}#
                                          (#{ribcage-symnames\ 10731}#
                                            #{fst\ 12494}#)))
                                    (if (vector? #{symnames\ 12496}#)
                                      (#{search-vector-rib\ 12429}#
                                        #{sym\ 12487}#
                                        #{subst\ 12488}#
                                        #{marks\ 12489}#
                                        #{symnames\ 12496}#
                                        #{fst\ 12494}#)
                                      (#{search-list-rib\ 12427}#
                                        #{sym\ 12487}#
                                        #{subst\ 12488}#
                                        #{marks\ 12489}#
                                        #{symnames\ 12496}#
                                        #{fst\ 12494}#)))))))))
                 (if (symbol? #{id\ 12419}#)
                   (let ((#{t\ 12499}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 12425}#
                                 #{id\ 12419}#
                                 (#{wrap-subst\ 10715}# #{w\ 12420}#)
                                 (#{wrap-marks\ 10713}# #{w\ 12420}#)))
                             (lambda (#{x\ 12501}# . #{ignore\ 12502}#)
                               #{x\ 12501}#))))
                     (if #{t\ 12499}# #{t\ 12499}# #{id\ 12419}#))
                   (if (#{syntax-object?\ 10670}# #{id\ 12419}#)
                     (let ((#{id\ 12510}#
                             (#{syntax-object-expression\ 10672}#
                               #{id\ 12419}#))
                           (#{w1\ 12511}#
                             (#{syntax-object-wrap\ 10674}# #{id\ 12419}#)))
                       (let ((#{marks\ 12513}#
                               (#{join-marks\ 10759}#
                                 (#{wrap-marks\ 10713}# #{w\ 12420}#)
                                 (#{wrap-marks\ 10713}# #{w1\ 12511}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 12425}#
                               #{id\ 12510}#
                               (#{wrap-subst\ 10715}# #{w\ 12420}#)
                               #{marks\ 12513}#))
                           (lambda (#{new-id\ 12514}# #{marks\ 12515}#)
                             (let ((#{t\ 12520}# #{new-id\ 12514}#))
                               (if #{t\ 12520}#
                                 #{t\ 12520}#
                                 (let ((#{t\ 12523}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 12425}#
                                               #{id\ 12510}#
                                               (#{wrap-subst\ 10715}#
                                                 #{w1\ 12511}#)
                                               #{marks\ 12515}#))
                                           (lambda (#{x\ 12525}#
                                                    .
                                                    #{ignore\ 12526}#)
                                             #{x\ 12525}#))))
                                   (if #{t\ 12523}#
                                     #{t\ 12523}#
                                     #{id\ 12510}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 12419}#))))))
           (#{same-marks?\ 10761}#
             (lambda (#{x\ 12531}# #{y\ 12532}#)
               (let ((#{t\ 12537}# (eq? #{x\ 12531}# #{y\ 12532}#)))
                 (if #{t\ 12537}#
                   #{t\ 12537}#
                   (if (not (null? #{x\ 12531}#))
                     (if (not (null? #{y\ 12532}#))
                       (if (eq? (car #{x\ 12531}#) (car #{y\ 12532}#))
                         (#{same-marks?\ 10761}#
                           (cdr #{x\ 12531}#)
                           (cdr #{y\ 12532}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 10759}#
             (lambda (#{m1\ 12543}# #{m2\ 12544}#)
               (#{smart-append\ 10755}#
                 #{m1\ 12543}#
                 #{m2\ 12544}#)))
           (#{join-wraps\ 10757}#
             (lambda (#{w1\ 12547}# #{w2\ 12548}#)
               (let ((#{m1\ 12553}#
                       (#{wrap-marks\ 10713}# #{w1\ 12547}#))
                     (#{s1\ 12554}#
                       (#{wrap-subst\ 10715}# #{w1\ 12547}#)))
                 (if (null? #{m1\ 12553}#)
                   (if (null? #{s1\ 12554}#)
                     #{w2\ 12548}#
                     (#{make-wrap\ 10711}#
                       (#{wrap-marks\ 10713}# #{w2\ 12548}#)
                       (#{smart-append\ 10755}#
                         #{s1\ 12554}#
                         (#{wrap-subst\ 10715}# #{w2\ 12548}#))))
                   (#{make-wrap\ 10711}#
                     (#{smart-append\ 10755}#
                       #{m1\ 12553}#
                       (#{wrap-marks\ 10713}# #{w2\ 12548}#))
                     (#{smart-append\ 10755}#
                       #{s1\ 12554}#
                       (#{wrap-subst\ 10715}# #{w2\ 12548}#)))))))
           (#{smart-append\ 10755}#
             (lambda (#{m1\ 12555}# #{m2\ 12556}#)
               (if (null? #{m2\ 12556}#)
                 #{m1\ 12555}#
                 (append #{m1\ 12555}# #{m2\ 12556}#))))
           (#{make-binding-wrap\ 10753}#
             (lambda (#{ids\ 12559}# #{labels\ 12560}# #{w\ 12561}#)
               (if (null? #{ids\ 12559}#)
                 #{w\ 12561}#
                 (#{make-wrap\ 10711}#
                   (#{wrap-marks\ 10713}# #{w\ 12561}#)
                   (cons (let ((#{labelvec\ 12566}#
                                 (list->vector #{labels\ 12560}#)))
                           (let ((#{n\ 12568}#
                                   (vector-length #{labelvec\ 12566}#)))
                             (let ((#{symnamevec\ 12571}#
                                     (make-vector #{n\ 12568}#))
                                   (#{marksvec\ 12572}#
                                     (make-vector #{n\ 12568}#)))
                               (begin
                                 (letrec ((#{f\ 12576}#
                                            (lambda (#{ids\ 12577}#
                                                     #{i\ 12578}#)
                                              (if (not (null? #{ids\ 12577}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 10709}#
                                                      (car #{ids\ 12577}#)
                                                      #{w\ 12561}#))
                                                  (lambda (#{symname\ 12579}#
                                                           #{marks\ 12580}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 12571}#
                                                        #{i\ 12578}#
                                                        #{symname\ 12579}#)
                                                      (vector-set!
                                                        #{marksvec\ 12572}#
                                                        #{i\ 12578}#
                                                        #{marks\ 12580}#)
                                                      (#{f\ 12576}#
                                                        (cdr #{ids\ 12577}#)
                                                        (#{fx+\ 10607}#
                                                          #{i\ 12578}#
                                                          1)))))))))
                                   (#{f\ 12576}# #{ids\ 12559}# 0))
                                 (#{make-ribcage\ 10727}#
                                   #{symnamevec\ 12571}#
                                   #{marksvec\ 12572}#
                                   #{labelvec\ 12566}#)))))
                         (#{wrap-subst\ 10715}# #{w\ 12561}#))))))
           (#{extend-ribcage!\ 10751}#
             (lambda (#{ribcage\ 12583}#
                      #{id\ 12584}#
                      #{label\ 12585}#)
               (begin
                 (#{set-ribcage-symnames!\ 10737}#
                   #{ribcage\ 12583}#
                   (cons (#{syntax-object-expression\ 10672}#
                           #{id\ 12584}#)
                         (#{ribcage-symnames\ 10731}# #{ribcage\ 12583}#)))
                 (#{set-ribcage-marks!\ 10739}#
                   #{ribcage\ 12583}#
                   (cons (#{wrap-marks\ 10713}#
                           (#{syntax-object-wrap\ 10674}# #{id\ 12584}#))
                         (#{ribcage-marks\ 10733}# #{ribcage\ 12583}#)))
                 (#{set-ribcage-labels!\ 10741}#
                   #{ribcage\ 12583}#
                   (cons #{label\ 12585}#
                         (#{ribcage-labels\ 10735}# #{ribcage\ 12583}#))))))
           (#{anti-mark\ 10747}#
             (lambda (#{w\ 12589}#)
               (#{make-wrap\ 10711}#
                 (cons #f (#{wrap-marks\ 10713}# #{w\ 12589}#))
                 (cons 'shift
                       (#{wrap-subst\ 10715}# #{w\ 12589}#)))))
           (#{set-ribcage-labels!\ 10741}#
             (lambda (#{x\ 12592}# #{update\ 12593}#)
               (vector-set! #{x\ 12592}# 3 #{update\ 12593}#)))
           (#{set-ribcage-marks!\ 10739}#
             (lambda (#{x\ 12596}# #{update\ 12597}#)
               (vector-set! #{x\ 12596}# 2 #{update\ 12597}#)))
           (#{set-ribcage-symnames!\ 10737}#
             (lambda (#{x\ 12600}# #{update\ 12601}#)
               (vector-set! #{x\ 12600}# 1 #{update\ 12601}#)))
           (#{ribcage-labels\ 10735}#
             (lambda (#{x\ 12604}#)
               (vector-ref #{x\ 12604}# 3)))
           (#{ribcage-marks\ 10733}#
             (lambda (#{x\ 12606}#)
               (vector-ref #{x\ 12606}# 2)))
           (#{ribcage-symnames\ 10731}#
             (lambda (#{x\ 12608}#)
               (vector-ref #{x\ 12608}# 1)))
           (#{ribcage?\ 10729}#
             (lambda (#{x\ 12610}#)
               (if (vector? #{x\ 12610}#)
                 (if (= (vector-length #{x\ 12610}#) 4)
                   (eq? (vector-ref #{x\ 12610}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 10727}#
             (lambda (#{symnames\ 12615}#
                      #{marks\ 12616}#
                      #{labels\ 12617}#)
               (vector
                 'ribcage
                 #{symnames\ 12615}#
                 #{marks\ 12616}#
                 #{labels\ 12617}#)))
           (#{gen-labels\ 10724}#
             (lambda (#{ls\ 12621}#)
               (if (null? #{ls\ 12621}#)
                 '()
                 (cons (#{gen-label\ 10722}#)
                       (#{gen-labels\ 10724}# (cdr #{ls\ 12621}#))))))
           (#{gen-label\ 10722}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 10715}# cdr)
           (#{wrap-marks\ 10713}# car)
           (#{make-wrap\ 10711}# cons)
           (#{id-sym-name&marks\ 10709}#
             (lambda (#{x\ 12623}# #{w\ 12624}#)
               (if (#{syntax-object?\ 10670}# #{x\ 12623}#)
                 (values
                   (#{syntax-object-expression\ 10672}#
                     #{x\ 12623}#)
                   (#{join-marks\ 10759}#
                     (#{wrap-marks\ 10713}# #{w\ 12624}#)
                     (#{wrap-marks\ 10713}#
                       (#{syntax-object-wrap\ 10674}# #{x\ 12623}#))))
                 (values
                   #{x\ 12623}#
                   (#{wrap-marks\ 10713}# #{w\ 12624}#)))))
           (#{id?\ 10706}#
             (lambda (#{x\ 12627}#)
               (if (symbol? #{x\ 12627}#)
                 #t
                 (if (#{syntax-object?\ 10670}# #{x\ 12627}#)
                   (symbol?
                     (#{syntax-object-expression\ 10672}#
                       #{x\ 12627}#))
                   #f))))
           (#{nonsymbol-id?\ 10704}#
             (lambda (#{x\ 12634}#)
               (if (#{syntax-object?\ 10670}# #{x\ 12634}#)
                 (symbol?
                   (#{syntax-object-expression\ 10672}#
                     #{x\ 12634}#))
                 #f)))
           (#{global-extend\ 10702}#
             (lambda (#{type\ 12638}# #{sym\ 12639}# #{val\ 12640}#)
               (#{put-global-definition-hook\ 10620}#
                 #{sym\ 12639}#
                 #{type\ 12638}#
                 #{val\ 12640}#)))
           (#{lookup\ 10700}#
             (lambda (#{x\ 12644}# #{r\ 12645}# #{mod\ 12646}#)
               (let ((#{t\ 12652}# (assq #{x\ 12644}# #{r\ 12645}#)))
                 (if #{t\ 12652}#
                   (cdr #{t\ 12652}#)
                   (if (symbol? #{x\ 12644}#)
                     (let ((#{t\ 12658}#
                             (#{get-global-definition-hook\ 10622}#
                               #{x\ 12644}#
                               #{mod\ 12646}#)))
                       (if #{t\ 12658}# #{t\ 12658}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 10698}#
             (lambda (#{r\ 12663}#)
               (if (null? #{r\ 12663}#)
                 '()
                 (let ((#{a\ 12666}# (car #{r\ 12663}#)))
                   (if (eq? (cadr #{a\ 12666}#) (quote macro))
                     (cons #{a\ 12666}#
                           (#{macros-only-env\ 10698}# (cdr #{r\ 12663}#)))
                     (#{macros-only-env\ 10698}# (cdr #{r\ 12663}#)))))))
           (#{extend-var-env\ 10696}#
             (lambda (#{labels\ 12667}# #{vars\ 12668}# #{r\ 12669}#)
               (if (null? #{labels\ 12667}#)
                 #{r\ 12669}#
                 (#{extend-var-env\ 10696}#
                   (cdr #{labels\ 12667}#)
                   (cdr #{vars\ 12668}#)
                   (cons (cons (car #{labels\ 12667}#)
                               (cons (quote lexical) (car #{vars\ 12668}#)))
                         #{r\ 12669}#)))))
           (#{extend-env\ 10694}#
             (lambda (#{labels\ 12674}#
                      #{bindings\ 12675}#
                      #{r\ 12676}#)
               (if (null? #{labels\ 12674}#)
                 #{r\ 12676}#
                 (#{extend-env\ 10694}#
                   (cdr #{labels\ 12674}#)
                   (cdr #{bindings\ 12675}#)
                   (cons (cons (car #{labels\ 12674}#)
                               (car #{bindings\ 12675}#))
                         #{r\ 12676}#)))))
           (#{binding-value\ 10691}# cdr)
           (#{binding-type\ 10689}# car)
           (#{source-annotation\ 10685}#
             (lambda (#{x\ 12680}#)
               (if (#{syntax-object?\ 10670}# #{x\ 12680}#)
                 (#{source-annotation\ 10685}#
                   (#{syntax-object-expression\ 10672}#
                     #{x\ 12680}#))
                 (if (pair? #{x\ 12680}#)
                   (let ((#{props\ 12687}#
                           (source-properties #{x\ 12680}#)))
                     (if (pair? #{props\ 12687}#) #{props\ 12687}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 10682}#
             (lambda (#{x\ 12689}# #{update\ 12690}#)
               (vector-set! #{x\ 12689}# 3 #{update\ 12690}#)))
           (#{set-syntax-object-wrap!\ 10680}#
             (lambda (#{x\ 12693}# #{update\ 12694}#)
               (vector-set! #{x\ 12693}# 2 #{update\ 12694}#)))
           (#{set-syntax-object-expression!\ 10678}#
             (lambda (#{x\ 12697}# #{update\ 12698}#)
               (vector-set! #{x\ 12697}# 1 #{update\ 12698}#)))
           (#{syntax-object-module\ 10676}#
             (lambda (#{x\ 12701}#)
               (vector-ref #{x\ 12701}# 3)))
           (#{syntax-object-wrap\ 10674}#
             (lambda (#{x\ 12703}#)
               (vector-ref #{x\ 12703}# 2)))
           (#{syntax-object-expression\ 10672}#
             (lambda (#{x\ 12705}#)
               (vector-ref #{x\ 12705}# 1)))
           (#{syntax-object?\ 10670}#
             (lambda (#{x\ 12707}#)
               (if (vector? #{x\ 12707}#)
                 (if (= (vector-length #{x\ 12707}#) 4)
                   (eq? (vector-ref #{x\ 12707}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 10668}#
             (lambda (#{expression\ 12712}#
                      #{wrap\ 12713}#
                      #{module\ 12714}#)
               (vector
                 'syntax-object
                 #{expression\ 12712}#
                 #{wrap\ 12713}#
                 #{module\ 12714}#)))
           (#{build-letrec\ 10664}#
             (lambda (#{src\ 12718}#
                      #{ids\ 12719}#
                      #{vars\ 12720}#
                      #{val-exps\ 12721}#
                      #{body-exp\ 12722}#)
               (if (null? #{vars\ 12720}#)
                 #{body-exp\ 12722}#
                 (let ((#{atom-key\ 12730}#
                         (fluid-ref #{*mode*\ 10605}#)))
                   (if (memv #{atom-key\ 12730}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 10644}#
                         #{ids\ 12719}#
                         #{val-exps\ 12721}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 12718}#
                        #{ids\ 12719}#
                        #{vars\ 12720}#
                        #{val-exps\ 12721}#
                        #{body-exp\ 12722}#))
                     (#{decorate-source\ 10624}#
                       (list 'letrec
                             (map list #{vars\ 12720}# #{val-exps\ 12721}#)
                             #{body-exp\ 12722}#)
                       #{src\ 12718}#))))))
           (#{build-named-let\ 10662}#
             (lambda (#{src\ 12734}#
                      #{ids\ 12735}#
                      #{vars\ 12736}#
                      #{val-exps\ 12737}#
                      #{body-exp\ 12738}#)
               (let ((#{f\ 12748}# (car #{vars\ 12736}#))
                     (#{f-name\ 12749}# (car #{ids\ 12735}#))
                     (#{vars\ 12750}# (cdr #{vars\ 12736}#))
                     (#{ids\ 12751}# (cdr #{ids\ 12735}#)))
                 (let ((#{atom-key\ 12754}#
                         (fluid-ref #{*mode*\ 10605}#)))
                   (if (memv #{atom-key\ 12754}# (quote (c)))
                     (let ((#{proc\ 12757}#
                             (#{build-simple-lambda\ 10648}#
                               #{src\ 12734}#
                               #{ids\ 12751}#
                               #f
                               #{vars\ 12750}#
                               '()
                               #{body-exp\ 12738}#)))
                       (begin
                         (#{maybe-name-value!\ 10644}#
                           #{f-name\ 12749}#
                           #{proc\ 12757}#)
                         (for-each
                           #{maybe-name-value!\ 10644}#
                           #{ids\ 12751}#
                           #{val-exps\ 12737}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 12734}#
                          (list #{f-name\ 12749}#)
                          (list #{f\ 12748}#)
                          (list #{proc\ 12757}#)
                          (#{build-application\ 10628}#
                            #{src\ 12734}#
                            (#{build-lexical-reference\ 10634}#
                              'fun
                              #{src\ 12734}#
                              #{f-name\ 12749}#
                              #{f\ 12748}#)
                            #{val-exps\ 12737}#))))
                     (#{decorate-source\ 10624}#
                       (list 'letrec
                             (list (list #{f\ 12748}#
                                         (list 'lambda
                                               #{vars\ 12750}#
                                               #{body-exp\ 12738}#)))
                             (cons #{f\ 12748}# #{val-exps\ 12737}#))
                       #{src\ 12734}#))))))
           (#{build-let\ 10660}#
             (lambda (#{src\ 12760}#
                      #{ids\ 12761}#
                      #{vars\ 12762}#
                      #{val-exps\ 12763}#
                      #{body-exp\ 12764}#)
               (if (null? #{vars\ 12762}#)
                 #{body-exp\ 12764}#
                 (let ((#{atom-key\ 12772}#
                         (fluid-ref #{*mode*\ 10605}#)))
                   (if (memv #{atom-key\ 12772}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 10644}#
                         #{ids\ 12761}#
                         #{val-exps\ 12763}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 12760}#
                        #{ids\ 12761}#
                        #{vars\ 12762}#
                        #{val-exps\ 12763}#
                        #{body-exp\ 12764}#))
                     (#{decorate-source\ 10624}#
                       (list 'let
                             (map list #{vars\ 12762}# #{val-exps\ 12763}#)
                             #{body-exp\ 12764}#)
                       #{src\ 12760}#))))))
           (#{build-sequence\ 10658}#
             (lambda (#{src\ 12776}# #{exps\ 12777}#)
               (if (null? (cdr #{exps\ 12777}#))
                 (car #{exps\ 12777}#)
                 (let ((#{atom-key\ 12782}#
                         (fluid-ref #{*mode*\ 10605}#)))
                   (if (memv #{atom-key\ 12782}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 12776}#
                      #{exps\ 12777}#)
                     (#{decorate-source\ 10624}#
                       (cons (quote begin) #{exps\ 12777}#)
                       #{src\ 12776}#))))))
           (#{build-data\ 10656}#
             (lambda (#{src\ 12786}# #{exp\ 12787}#)
               (let ((#{atom-key\ 12792}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 12792}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 12786}#
                    #{exp\ 12787}#)
                   (#{decorate-source\ 10624}#
                     (if (if (self-evaluating? #{exp\ 12787}#)
                           (not (vector? #{exp\ 12787}#))
                           #f)
                       #{exp\ 12787}#
                       (list (quote quote) #{exp\ 12787}#))
                     #{src\ 12786}#)))))
           (#{build-primref\ 10654}#
             (lambda (#{src\ 12797}# #{name\ 12798}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 12803}#
                         (fluid-ref #{*mode*\ 10605}#)))
                   (if (memv #{atom-key\ 12803}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 12797}#
                      #{name\ 12798}#)
                     (#{decorate-source\ 10624}#
                       #{name\ 12798}#
                       #{src\ 12797}#)))
                 (let ((#{atom-key\ 12808}#
                         (fluid-ref #{*mode*\ 10605}#)))
                   (if (memv #{atom-key\ 12808}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 12797}#
                      '(guile)
                      #{name\ 12798}#
                      #f)
                     (#{decorate-source\ 10624}#
                       (list (quote @@) (quote (guile)) #{name\ 12798}#)
                       #{src\ 12797}#))))))
           (#{build-lambda-case\ 10652}#
             (lambda (#{src\ 12812}#
                      #{req\ 12813}#
                      #{opt\ 12814}#
                      #{rest\ 12815}#
                      #{kw\ 12816}#
                      #{inits\ 12817}#
                      #{vars\ 12818}#
                      #{body\ 12819}#
                      #{else-case\ 12820}#)
               (let ((#{atom-key\ 12832}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 12832}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 12812}#
                    #{req\ 12813}#
                    #{opt\ 12814}#
                    #{rest\ 12815}#
                    #{kw\ 12816}#
                    #{inits\ 12817}#
                    #{vars\ 12818}#
                    #{body\ 12819}#
                    #{else-case\ 12820}#)
                   (let ((#{nreq\ 12837}# (length #{req\ 12813}#)))
                     (let ((#{nopt\ 12839}#
                             (if #{opt\ 12814}# (length #{opt\ 12814}#) 0)))
                       (let ((#{rest-idx\ 12841}#
                               (if #{rest\ 12815}#
                                 (+ #{nreq\ 12837}# #{nopt\ 12839}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 12845}#
                                 (if #{kw\ 12816}# (car #{kw\ 12816}#) #f)))
                           (let ((#{kw-indices\ 12847}#
                                   (map (lambda (#{x\ 12848}#)
                                          (cons (car #{x\ 12848}#)
                                                (list-index
                                                  #{vars\ 12818}#
                                                  (caddr #{x\ 12848}#))))
                                        (if #{kw\ 12816}#
                                          (cdr #{kw\ 12816}#)
                                          '()))))
                             (let ((#{nargs\ 12851}#
                                     (apply max
                                            (+ #{nreq\ 12837}#
                                               #{nopt\ 12839}#
                                               (if #{rest\ 12815}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 12847}#)))))
                               (begin
                                 (let ((#{t\ 12854}#
                                         (= #{nargs\ 12851}#
                                            (length #{vars\ 12818}#)
                                            (+ #{nreq\ 12837}#
                                               (length #{inits\ 12817}#)
                                               (if #{rest\ 12815}# 1 0)))))
                                   (if #{t\ 12854}#
                                     #{t\ 12854}#
                                     (error "something went wrong"
                                            #{req\ 12813}#
                                            #{opt\ 12814}#
                                            #{rest\ 12815}#
                                            #{kw\ 12816}#
                                            #{inits\ 12817}#
                                            #{vars\ 12818}#
                                            #{nreq\ 12837}#
                                            #{nopt\ 12839}#
                                            #{kw-indices\ 12847}#
                                            #{nargs\ 12851}#)))
                                 (#{decorate-source\ 10624}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 12837}#
                                                                       #{nopt\ 12839}#
                                                                       #{rest-idx\ 12841}#
                                                                       #{nargs\ 12851}#
                                                                       #{allow-other-keys?\ 12845}#
                                                                       #{kw-indices\ 12847}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 12857}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 12818}#
                                                                                    #{i\ 12857}#))
                                                                            #{inits\ 12817}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 12818}#
                                                                       #{body\ 12819}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 12862}#
                                                 #{else-case\ 12820}#))
                                           (if #{t\ 12862}#
                                             #{t\ 12862}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 12812}#))))))))))))
           (#{build-case-lambda\ 10650}#
             (lambda (#{src\ 12865}# #{meta\ 12866}# #{body\ 12867}#)
               (let ((#{atom-key\ 12873}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 12873}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 12865}#
                    #{meta\ 12866}#
                    #{body\ 12867}#)
                   (#{decorate-source\ 10624}#
                     (list 'lambda
                           '%%args
                           (cons (quote cond) #{body\ 12867}#))
                     #{src\ 12865}#)))))
           (#{build-simple-lambda\ 10648}#
             (lambda (#{src\ 12877}#
                      #{req\ 12878}#
                      #{rest\ 12879}#
                      #{vars\ 12880}#
                      #{meta\ 12881}#
                      #{exp\ 12882}#)
               (let ((#{atom-key\ 12891}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 12891}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 12877}#
                    #{meta\ 12881}#
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 12877}#
                     #{req\ 12878}#
                     #f
                     #{rest\ 12879}#
                     #f
                     '()
                     #{vars\ 12880}#
                     #{exp\ 12882}#
                     #f))
                   (#{decorate-source\ 10624}#
                     (list 'lambda
                           (if #{rest\ 12879}#
                             (apply cons* #{vars\ 12880}#)
                             #{vars\ 12880}#)
                           #{exp\ 12882}#)
                     #{src\ 12877}#)))))
           (#{build-global-definition\ 10646}#
             (lambda (#{source\ 12895}# #{var\ 12896}# #{exp\ 12897}#)
               (let ((#{atom-key\ 12903}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 12903}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 10644}#
                       #{var\ 12896}#
                       #{exp\ 12897}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 12895}#
                      #{var\ 12896}#
                      #{exp\ 12897}#))
                   (#{decorate-source\ 10624}#
                     (list 'define
                           #{var\ 12896}#
                           #{exp\ 12897}#)
                     #{source\ 12895}#)))))
           (#{maybe-name-value!\ 10644}#
             (lambda (#{name\ 12907}# #{val\ 12908}#)
               (if ((@ (language tree-il) lambda?) #{val\ 12908}#)
                 (let ((#{meta\ 12914}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 12908}#)))
                   (if (not (assq (quote name) #{meta\ 12914}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 12908}#
                      (acons 'name
                             #{name\ 12907}#
                             #{meta\ 12914}#)))))))
           (#{build-global-assignment\ 10642}#
             (lambda (#{source\ 12915}#
                      #{var\ 12916}#
                      #{exp\ 12917}#
                      #{mod\ 12918}#)
               (#{analyze-variable\ 10638}#
                 #{mod\ 12918}#
                 #{var\ 12916}#
                 (lambda (#{mod\ 12923}#
                          #{var\ 12924}#
                          #{public?\ 12925}#)
                   (let ((#{atom-key\ 12931}#
                           (fluid-ref #{*mode*\ 10605}#)))
                     (if (memv #{atom-key\ 12931}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 12915}#
                        #{mod\ 12923}#
                        #{var\ 12924}#
                        #{public?\ 12925}#
                        #{exp\ 12917}#)
                       (#{decorate-source\ 10624}#
                         (list 'set!
                               (list (if #{public?\ 12925}#
                                       '@
                                       '@@)
                                     #{mod\ 12923}#
                                     #{var\ 12924}#)
                               #{exp\ 12917}#)
                         #{source\ 12915}#))))
                 (lambda (#{var\ 12935}#)
                   (let ((#{atom-key\ 12939}#
                           (fluid-ref #{*mode*\ 10605}#)))
                     (if (memv #{atom-key\ 12939}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 12915}#
                        #{var\ 12935}#
                        #{exp\ 12917}#)
                       (#{decorate-source\ 10624}#
                         (list (quote set!) #{var\ 12935}# #{exp\ 12917}#)
                         #{source\ 12915}#)))))))
           (#{build-global-reference\ 10640}#
             (lambda (#{source\ 12943}# #{var\ 12944}# #{mod\ 12945}#)
               (#{analyze-variable\ 10638}#
                 #{mod\ 12945}#
                 #{var\ 12944}#
                 (lambda (#{mod\ 12949}#
                          #{var\ 12950}#
                          #{public?\ 12951}#)
                   (let ((#{atom-key\ 12957}#
                           (fluid-ref #{*mode*\ 10605}#)))
                     (if (memv #{atom-key\ 12957}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 12943}#
                        #{mod\ 12949}#
                        #{var\ 12950}#
                        #{public?\ 12951}#)
                       (#{decorate-source\ 10624}#
                         (list (if #{public?\ 12951}# (quote @) (quote @@))
                               #{mod\ 12949}#
                               #{var\ 12950}#)
                         #{source\ 12943}#))))
                 (lambda (#{var\ 12960}#)
                   (let ((#{atom-key\ 12964}#
                           (fluid-ref #{*mode*\ 10605}#)))
                     (if (memv #{atom-key\ 12964}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 12943}#
                        #{var\ 12960}#)
                       (#{decorate-source\ 10624}#
                         #{var\ 12960}#
                         #{source\ 12943}#)))))))
           (#{analyze-variable\ 10638}#
             (lambda (#{mod\ 12967}#
                      #{var\ 12968}#
                      #{modref-cont\ 12969}#
                      #{bare-cont\ 12970}#)
               (if (not #{mod\ 12967}#)
                 (#{bare-cont\ 12970}# #{var\ 12968}#)
                 (let ((#{kind\ 12977}# (car #{mod\ 12967}#))
                       (#{mod\ 12978}# (cdr #{mod\ 12967}#)))
                   (if (memv #{kind\ 12977}# (quote (public)))
                     (#{modref-cont\ 12969}#
                       #{mod\ 12978}#
                       #{var\ 12968}#
                       #t)
                     (if (memv #{kind\ 12977}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 12978}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 12969}#
                           #{mod\ 12978}#
                           #{var\ 12968}#
                           #f)
                         (#{bare-cont\ 12970}# #{var\ 12968}#))
                       (if (memv #{kind\ 12977}# (quote (bare)))
                         (#{bare-cont\ 12970}# #{var\ 12968}#)
                         (if (memv #{kind\ 12977}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 12978}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 12978}#)
                                   #{var\ 12968}#)
                                 #f)
                             (#{modref-cont\ 12969}#
                               #{mod\ 12978}#
                               #{var\ 12968}#
                               #f)
                             (#{bare-cont\ 12970}# #{var\ 12968}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 12968}#
                             #{mod\ 12978}#)))))))))
           (#{build-lexical-assignment\ 10636}#
             (lambda (#{source\ 12986}#
                      #{name\ 12987}#
                      #{var\ 12988}#
                      #{exp\ 12989}#)
               (let ((#{atom-key\ 12996}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 12996}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 12986}#
                    #{name\ 12987}#
                    #{var\ 12988}#
                    #{exp\ 12989}#)
                   (#{decorate-source\ 10624}#
                     (list (quote set!) #{var\ 12988}# #{exp\ 12989}#)
                     #{source\ 12986}#)))))
           (#{build-lexical-reference\ 10634}#
             (lambda (#{type\ 13000}#
                      #{source\ 13001}#
                      #{name\ 13002}#
                      #{var\ 13003}#)
               (let ((#{atom-key\ 13010}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 13010}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 13001}#
                    #{name\ 13002}#
                    #{var\ 13003}#)
                   (#{decorate-source\ 10624}#
                     #{var\ 13003}#
                     #{source\ 13001}#)))))
           (#{build-dynlet\ 10632}#
             (lambda (#{source\ 13013}#
                      #{fluids\ 13014}#
                      #{vals\ 13015}#
                      #{body\ 13016}#)
               (let ((#{atom-key\ 13023}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 13023}# (quote (c)))
                   ((@ (language tree-il) make-dynlet)
                    #{source\ 13013}#
                    #{fluids\ 13014}#
                    #{vals\ 13015}#
                    #{body\ 13016}#)
                   (#{decorate-source\ 10624}#
                     (list 'with-fluids
                           (map list #{fluids\ 13014}# #{vals\ 13015}#)
                           #{body\ 13016}#)
                     #{source\ 13013}#)))))
           (#{build-conditional\ 10630}#
             (lambda (#{source\ 13027}#
                      #{test-exp\ 13028}#
                      #{then-exp\ 13029}#
                      #{else-exp\ 13030}#)
               (let ((#{atom-key\ 13037}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 13037}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 13027}#
                    #{test-exp\ 13028}#
                    #{then-exp\ 13029}#
                    #{else-exp\ 13030}#)
                   (#{decorate-source\ 10624}#
                     (if (equal? #{else-exp\ 13030}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 13028}#
                             #{then-exp\ 13029}#)
                       (list 'if
                             #{test-exp\ 13028}#
                             #{then-exp\ 13029}#
                             #{else-exp\ 13030}#))
                     #{source\ 13027}#)))))
           (#{build-application\ 10628}#
             (lambda (#{source\ 13042}#
                      #{fun-exp\ 13043}#
                      #{arg-exps\ 13044}#)
               (let ((#{atom-key\ 13050}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 13050}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 13042}#
                    #{fun-exp\ 13043}#
                    #{arg-exps\ 13044}#)
                   (#{decorate-source\ 10624}#
                     (cons #{fun-exp\ 13043}# #{arg-exps\ 13044}#)
                     #{source\ 13042}#)))))
           (#{build-void\ 10626}#
             (lambda (#{source\ 13054}#)
               (let ((#{atom-key\ 13058}#
                       (fluid-ref #{*mode*\ 10605}#)))
                 (if (memv #{atom-key\ 13058}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 13054}#)
                   (#{decorate-source\ 10624}#
                     '(if #f #f)
                     #{source\ 13054}#)))))
           (#{decorate-source\ 10624}#
             (lambda (#{e\ 13061}# #{s\ 13062}#)
               (begin
                 (if (if (pair? #{e\ 13061}#) #{s\ 13062}# #f)
                   (set-source-properties!
                     #{e\ 13061}#
                     #{s\ 13062}#))
                 #{e\ 13061}#)))
           (#{get-global-definition-hook\ 10622}#
             (lambda (#{symbol\ 13067}# #{module\ 13068}#)
               (begin
                 (if (if (not #{module\ 13068}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 13067}#))
                 (let ((#{v\ 13074}#
                         (module-variable
                           (if #{module\ 13068}#
                             (resolve-module (cdr #{module\ 13068}#))
                             (current-module))
                           #{symbol\ 13067}#)))
                   (if #{v\ 13074}#
                     (if (variable-bound? #{v\ 13074}#)
                       (let ((#{val\ 13079}# (variable-ref #{v\ 13074}#)))
                         (if (macro? #{val\ 13079}#)
                           (if (macro-type #{val\ 13079}#)
                             (cons (macro-type #{val\ 13079}#)
                                   (macro-binding #{val\ 13079}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 10620}#
             (lambda (#{symbol\ 13083}#
                      #{type\ 13084}#
                      #{val\ 13085}#)
               (module-define!
                 (current-module)
                 #{symbol\ 13083}#
                 (make-syntax-transformer
                   #{symbol\ 13083}#
                   #{type\ 13084}#
                   #{val\ 13085}#))))
           (#{local-eval-hook\ 10617}#
             (lambda (#{x\ 13089}# #{mod\ 13090}#)
               (primitive-eval
                 (list #{noexpand\ 10603}#
                       (let ((#{atom-key\ 13096}#
                               (fluid-ref #{*mode*\ 10605}#)))
                         (if (memv #{atom-key\ 13096}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 13089}#)
                           #{x\ 13089}#))))))
           (#{top-level-eval-hook\ 10615}#
             (lambda (#{x\ 13099}# #{mod\ 13100}#)
               (primitive-eval
                 (list #{noexpand\ 10603}#
                       (let ((#{atom-key\ 13106}#
                               (fluid-ref #{*mode*\ 10605}#)))
                         (if (memv #{atom-key\ 13106}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 13099}#)
                           #{x\ 13099}#))))))
           (#{fx<\ 10613}# <)
           (#{fx=\ 10611}# =)
           (#{fx-\ 10609}# -)
           (#{fx+\ 10607}# +)
           (#{*mode*\ 10605}# (make-fluid))
           (#{noexpand\ 10603}# "noexpand"))
    (begin
      (#{global-extend\ 10702}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 10702}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 10702}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 13109}#
                 #{r\ 13110}#
                 #{w\ 13111}#
                 #{s\ 13112}#
                 #{mod\ 13113}#)
          ((lambda (#{tmp\ 13119}#)
             ((lambda (#{tmp\ 13120}#)
                (if (if #{tmp\ 13120}#
                      (apply (lambda (#{_\ 13126}#
                                      #{var\ 13127}#
                                      #{val\ 13128}#
                                      #{e1\ 13129}#
                                      #{e2\ 13130}#)
                               (#{valid-bound-ids?\ 10769}# #{var\ 13127}#))
                             #{tmp\ 13120}#)
                      #f)
                  (apply (lambda (#{_\ 13137}#
                                  #{var\ 13138}#
                                  #{val\ 13139}#
                                  #{e1\ 13140}#
                                  #{e2\ 13141}#)
                           (let ((#{names\ 13143}#
                                   (map (lambda (#{x\ 13144}#)
                                          (#{id-var-name\ 10763}#
                                            #{x\ 13144}#
                                            #{w\ 13111}#))
                                        #{var\ 13138}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 13147}# #{n\ 13148}#)
                                   (let ((#{atom-key\ 13153}#
                                           (#{binding-type\ 10689}#
                                             (#{lookup\ 10700}#
                                               #{n\ 13148}#
                                               #{r\ 13110}#
                                               #{mod\ 13113}#))))
                                     (if (memv #{atom-key\ 13153}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 13109}#
                                         (#{source-wrap\ 10777}#
                                           #{id\ 13147}#
                                           #{w\ 13111}#
                                           #{s\ 13112}#
                                           #{mod\ 13113}#)))))
                                 #{var\ 13138}#
                                 #{names\ 13143}#)
                               (#{chi-body\ 10799}#
                                 (cons #{e1\ 13140}# #{e2\ 13141}#)
                                 (#{source-wrap\ 10777}#
                                   #{e\ 13109}#
                                   #{w\ 13111}#
                                   #{s\ 13112}#
                                   #{mod\ 13113}#)
                                 (#{extend-env\ 10694}#
                                   #{names\ 13143}#
                                   (let ((#{trans-r\ 13158}#
                                           (#{macros-only-env\ 10698}#
                                             #{r\ 13110}#)))
                                     (map (lambda (#{x\ 13159}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 10803}#
                                                    (#{chi\ 10791}#
                                                      #{x\ 13159}#
                                                      #{trans-r\ 13158}#
                                                      #{w\ 13111}#
                                                      #{mod\ 13113}#)
                                                    #{mod\ 13113}#)))
                                          #{val\ 13139}#))
                                   #{r\ 13110}#)
                                 #{w\ 13111}#
                                 #{mod\ 13113}#))))
                         #{tmp\ 13120}#)
                  ((lambda (#{_\ 13164}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 10777}#
                         #{e\ 13109}#
                         #{w\ 13111}#
                         #{s\ 13112}#
                         #{mod\ 13113}#)))
                   #{tmp\ 13119}#)))
              ($sc-dispatch
                #{tmp\ 13119}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 13109}#)))
      (#{global-extend\ 10702}#
        'core
        'quote
        (lambda (#{e\ 13165}#
                 #{r\ 13166}#
                 #{w\ 13167}#
                 #{s\ 13168}#
                 #{mod\ 13169}#)
          ((lambda (#{tmp\ 13175}#)
             ((lambda (#{tmp\ 13176}#)
                (if #{tmp\ 13176}#
                  (apply (lambda (#{_\ 13179}# #{e\ 13180}#)
                           (#{build-data\ 10656}#
                             #{s\ 13168}#
                             (#{strip\ 10817}# #{e\ 13180}# #{w\ 13167}#)))
                         #{tmp\ 13176}#)
                  ((lambda (#{_\ 13182}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 10777}#
                         #{e\ 13165}#
                         #{w\ 13167}#
                         #{s\ 13168}#
                         #{mod\ 13169}#)))
                   #{tmp\ 13175}#)))
              ($sc-dispatch #{tmp\ 13175}# (quote (any any)))))
           #{e\ 13165}#)))
      (#{global-extend\ 10702}#
        'core
        'syntax
        (letrec ((#{regen\ 13198}#
                   (lambda (#{x\ 13199}#)
                     (let ((#{atom-key\ 13203}# (car #{x\ 13199}#)))
                       (if (memv #{atom-key\ 13203}# (quote (ref)))
                         (#{build-lexical-reference\ 10634}#
                           'value
                           #f
                           (cadr #{x\ 13199}#)
                           (cadr #{x\ 13199}#))
                         (if (memv #{atom-key\ 13203}# (quote (primitive)))
                           (#{build-primref\ 10654}# #f (cadr #{x\ 13199}#))
                           (if (memv #{atom-key\ 13203}# (quote (quote)))
                             (#{build-data\ 10656}# #f (cadr #{x\ 13199}#))
                             (if (memv #{atom-key\ 13203}# (quote (lambda)))
                               (if (list? (cadr #{x\ 13199}#))
                                 (#{build-simple-lambda\ 10648}#
                                   #f
                                   (cadr #{x\ 13199}#)
                                   #f
                                   (cadr #{x\ 13199}#)
                                   '()
                                   (#{regen\ 13198}# (caddr #{x\ 13199}#)))
                                 (error "how did we get here" #{x\ 13199}#))
                               (#{build-application\ 10628}#
                                 #f
                                 (#{build-primref\ 10654}#
                                   #f
                                   (car #{x\ 13199}#))
                                 (map #{regen\ 13198}#
                                      (cdr #{x\ 13199}#))))))))))
                 (#{gen-vector\ 13196}#
                   (lambda (#{x\ 13215}#)
                     (if (eq? (car #{x\ 13215}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 13215}#))
                       (if (eq? (car #{x\ 13215}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 13215}#)))
                         (list (quote list->vector) #{x\ 13215}#)))))
                 (#{gen-append\ 13194}#
                   (lambda (#{x\ 13225}# #{y\ 13226}#)
                     (if (equal? #{y\ 13226}# (quote (quote ())))
                       #{x\ 13225}#
                       (list (quote append) #{x\ 13225}# #{y\ 13226}#))))
                 (#{gen-cons\ 13192}#
                   (lambda (#{x\ 13230}# #{y\ 13231}#)
                     (let ((#{atom-key\ 13236}# (car #{y\ 13231}#)))
                       (if (memv #{atom-key\ 13236}# (quote (quote)))
                         (if (eq? (car #{x\ 13230}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 13230}#)
                                       (cadr #{y\ 13231}#)))
                           (if (eq? (cadr #{y\ 13231}#) (quote ()))
                             (list (quote list) #{x\ 13230}#)
                             (list (quote cons) #{x\ 13230}# #{y\ 13231}#)))
                         (if (memv #{atom-key\ 13236}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 13230}# (cdr #{y\ 13231}#)))
                           (list (quote cons) #{x\ 13230}# #{y\ 13231}#))))))
                 (#{gen-map\ 13190}#
                   (lambda (#{e\ 13245}# #{map-env\ 13246}#)
                     (let ((#{formals\ 13251}# (map cdr #{map-env\ 13246}#))
                           (#{actuals\ 13252}#
                             (map (lambda (#{x\ 13253}#)
                                    (list (quote ref) (car #{x\ 13253}#)))
                                  #{map-env\ 13246}#)))
                       (if (eq? (car #{e\ 13245}#) (quote ref))
                         (car #{actuals\ 13252}#)
                         (if (and-map
                               (lambda (#{x\ 13260}#)
                                 (if (eq? (car #{x\ 13260}#) (quote ref))
                                   (memq (cadr #{x\ 13260}#)
                                         #{formals\ 13251}#)
                                   #f))
                               (cdr #{e\ 13245}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 13245}#))
                                       (map (let ((#{r\ 13266}#
                                                    (map cons
                                                         #{formals\ 13251}#
                                                         #{actuals\ 13252}#)))
                                              (lambda (#{x\ 13267}#)
                                                (cdr (assq (cadr #{x\ 13267}#)
                                                           #{r\ 13266}#))))
                                            (cdr #{e\ 13245}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 13251}#
                                             #{e\ 13245}#)
                                       #{actuals\ 13252}#)))))))
                 (#{gen-mappend\ 13188}#
                   (lambda (#{e\ 13271}# #{map-env\ 13272}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 13190}#
                             #{e\ 13271}#
                             #{map-env\ 13272}#))))
                 (#{gen-ref\ 13186}#
                   (lambda (#{src\ 13276}#
                            #{var\ 13277}#
                            #{level\ 13278}#
                            #{maps\ 13279}#)
                     (if (#{fx=\ 10611}# #{level\ 13278}# 0)
                       (values #{var\ 13277}# #{maps\ 13279}#)
                       (if (null? #{maps\ 13279}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 13276}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 13186}#
                               #{src\ 13276}#
                               #{var\ 13277}#
                               (#{fx-\ 10609}# #{level\ 13278}# 1)
                               (cdr #{maps\ 13279}#)))
                           (lambda (#{outer-var\ 13284}# #{outer-maps\ 13285}#)
                             (let ((#{b\ 13289}#
                                     (assq #{outer-var\ 13284}#
                                           (car #{maps\ 13279}#))))
                               (if #{b\ 13289}#
                                 (values (cdr #{b\ 13289}#) #{maps\ 13279}#)
                                 (let ((#{inner-var\ 13291}#
                                         (#{gen-var\ 10819}# (quote tmp))))
                                   (values
                                     #{inner-var\ 13291}#
                                     (cons (cons (cons #{outer-var\ 13284}#
                                                       #{inner-var\ 13291}#)
                                                 (car #{maps\ 13279}#))
                                           #{outer-maps\ 13285}#)))))))))))
                 (#{gen-syntax\ 13184}#
                   (lambda (#{src\ 13292}#
                            #{e\ 13293}#
                            #{r\ 13294}#
                            #{maps\ 13295}#
                            #{ellipsis?\ 13296}#
                            #{mod\ 13297}#)
                     (if (#{id?\ 10706}# #{e\ 13293}#)
                       (let ((#{label\ 13305}#
                               (#{id-var-name\ 10763}#
                                 #{e\ 13293}#
                                 '(()))))
                         (let ((#{b\ 13308}#
                                 (#{lookup\ 10700}#
                                   #{label\ 13305}#
                                   #{r\ 13294}#
                                   #{mod\ 13297}#)))
                           (if (eq? (#{binding-type\ 10689}# #{b\ 13308}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 13310}#
                                         (#{binding-value\ 10691}#
                                           #{b\ 13308}#)))
                                   (#{gen-ref\ 13186}#
                                     #{src\ 13292}#
                                     (car #{var.lev\ 13310}#)
                                     (cdr #{var.lev\ 13310}#)
                                     #{maps\ 13295}#)))
                               (lambda (#{var\ 13311}# #{maps\ 13312}#)
                                 (values
                                   (list (quote ref) #{var\ 13311}#)
                                   #{maps\ 13312}#)))
                             (if (#{ellipsis?\ 13296}# #{e\ 13293}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 13292}#)
                               (values
                                 (list (quote quote) #{e\ 13293}#)
                                 #{maps\ 13295}#)))))
                       ((lambda (#{tmp\ 13317}#)
                          ((lambda (#{tmp\ 13318}#)
                             (if (if #{tmp\ 13318}#
                                   (apply (lambda (#{dots\ 13321}#
                                                   #{e\ 13322}#)
                                            (#{ellipsis?\ 13296}#
                                              #{dots\ 13321}#))
                                          #{tmp\ 13318}#)
                                   #f)
                               (apply (lambda (#{dots\ 13325}# #{e\ 13326}#)
                                        (#{gen-syntax\ 13184}#
                                          #{src\ 13292}#
                                          #{e\ 13326}#
                                          #{r\ 13294}#
                                          #{maps\ 13295}#
                                          (lambda (#{x\ 13327}#) #f)
                                          #{mod\ 13297}#))
                                      #{tmp\ 13318}#)
                               ((lambda (#{tmp\ 13329}#)
                                  (if (if #{tmp\ 13329}#
                                        (apply (lambda (#{x\ 13333}#
                                                        #{dots\ 13334}#
                                                        #{y\ 13335}#)
                                                 (#{ellipsis?\ 13296}#
                                                   #{dots\ 13334}#))
                                               #{tmp\ 13329}#)
                                        #f)
                                    (apply (lambda (#{x\ 13339}#
                                                    #{dots\ 13340}#
                                                    #{y\ 13341}#)
                                             (letrec ((#{f\ 13345}#
                                                        (lambda (#{y\ 13346}#
                                                                 #{k\ 13347}#)
                                                          ((lambda (#{tmp\ 13354}#)
                                                             ((lambda (#{tmp\ 13355}#)
                                                                (if (if #{tmp\ 13355}#
                                                                      (apply (lambda (#{dots\ 13358}#
                                                                                      #{y\ 13359}#)
                                                                               (#{ellipsis?\ 13296}#
                                                                                 #{dots\ 13358}#))
                                                                             #{tmp\ 13355}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 13362}#
                                                                                  #{y\ 13363}#)
                                                                           (#{f\ 13345}#
                                                                             #{y\ 13363}#
                                                                             (lambda (#{maps\ 13364}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 13347}#
                                                                                     (cons '()
                                                                                           #{maps\ 13364}#)))
                                                                                 (lambda (#{x\ 13366}#
                                                                                          #{maps\ 13367}#)
                                                                                   (if (null? (car #{maps\ 13367}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 13292}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 13188}#
                                                                                         #{x\ 13366}#
                                                                                         (car #{maps\ 13367}#))
                                                                                       (cdr #{maps\ 13367}#))))))))
                                                                         #{tmp\ 13355}#)
                                                                  ((lambda (#{_\ 13371}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 13184}#
                                                                           #{src\ 13292}#
                                                                           #{y\ 13346}#
                                                                           #{r\ 13294}#
                                                                           #{maps\ 13295}#
                                                                           #{ellipsis?\ 13296}#
                                                                           #{mod\ 13297}#))
                                                                       (lambda (#{y\ 13372}#
                                                                                #{maps\ 13373}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 13347}#
                                                                               #{maps\ 13373}#))
                                                                           (lambda (#{x\ 13376}#
                                                                                    #{maps\ 13377}#)
                                                                             (values
                                                                               (#{gen-append\ 13194}#
                                                                                 #{x\ 13376}#
                                                                                 #{y\ 13372}#)
                                                                               #{maps\ 13377}#))))))
                                                                   #{tmp\ 13354}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 13354}#
                                                                '(any . any))))
                                                           #{y\ 13346}#))))
                                               (#{f\ 13345}#
                                                 #{y\ 13341}#
                                                 (lambda (#{maps\ 13348}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 13184}#
                                                         #{src\ 13292}#
                                                         #{x\ 13339}#
                                                         #{r\ 13294}#
                                                         (cons '()
                                                               #{maps\ 13348}#)
                                                         #{ellipsis?\ 13296}#
                                                         #{mod\ 13297}#))
                                                     (lambda (#{x\ 13350}#
                                                              #{maps\ 13351}#)
                                                       (if (null? (car #{maps\ 13351}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 13292}#)
                                                         (values
                                                           (#{gen-map\ 13190}#
                                                             #{x\ 13350}#
                                                             (car #{maps\ 13351}#))
                                                           (cdr #{maps\ 13351}#)))))))))
                                           #{tmp\ 13329}#)
                                    ((lambda (#{tmp\ 13380}#)
                                       (if #{tmp\ 13380}#
                                         (apply (lambda (#{x\ 13383}#
                                                         #{y\ 13384}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 13184}#
                                                        #{src\ 13292}#
                                                        #{x\ 13383}#
                                                        #{r\ 13294}#
                                                        #{maps\ 13295}#
                                                        #{ellipsis?\ 13296}#
                                                        #{mod\ 13297}#))
                                                    (lambda (#{x\ 13385}#
                                                             #{maps\ 13386}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 13184}#
                                                            #{src\ 13292}#
                                                            #{y\ 13384}#
                                                            #{r\ 13294}#
                                                            #{maps\ 13386}#
                                                            #{ellipsis?\ 13296}#
                                                            #{mod\ 13297}#))
                                                        (lambda (#{y\ 13389}#
                                                                 #{maps\ 13390}#)
                                                          (values
                                                            (#{gen-cons\ 13192}#
                                                              #{x\ 13385}#
                                                              #{y\ 13389}#)
                                                            #{maps\ 13390}#))))))
                                                #{tmp\ 13380}#)
                                         ((lambda (#{tmp\ 13393}#)
                                            (if #{tmp\ 13393}#
                                              (apply (lambda (#{e1\ 13396}#
                                                              #{e2\ 13397}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 13184}#
                                                             #{src\ 13292}#
                                                             (cons #{e1\ 13396}#
                                                                   #{e2\ 13397}#)
                                                             #{r\ 13294}#
                                                             #{maps\ 13295}#
                                                             #{ellipsis?\ 13296}#
                                                             #{mod\ 13297}#))
                                                         (lambda (#{e\ 13399}#
                                                                  #{maps\ 13400}#)
                                                           (values
                                                             (#{gen-vector\ 13196}#
                                                               #{e\ 13399}#)
                                                             #{maps\ 13400}#))))
                                                     #{tmp\ 13393}#)
                                              ((lambda (#{_\ 13404}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 13293}#)
                                                   #{maps\ 13295}#))
                                               #{tmp\ 13317}#)))
                                          ($sc-dispatch
                                            #{tmp\ 13317}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 13317}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 13317}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 13317}# (quote (any any)))))
                        #{e\ 13293}#)))))
          (lambda (#{e\ 13406}#
                   #{r\ 13407}#
                   #{w\ 13408}#
                   #{s\ 13409}#
                   #{mod\ 13410}#)
            (let ((#{e\ 13417}#
                    (#{source-wrap\ 10777}#
                      #{e\ 13406}#
                      #{w\ 13408}#
                      #{s\ 13409}#
                      #{mod\ 13410}#)))
              ((lambda (#{tmp\ 13418}#)
                 ((lambda (#{tmp\ 13419}#)
                    (if #{tmp\ 13419}#
                      (apply (lambda (#{_\ 13422}# #{x\ 13423}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 13184}#
                                     #{e\ 13417}#
                                     #{x\ 13423}#
                                     #{r\ 13407}#
                                     '()
                                     #{ellipsis?\ 10807}#
                                     #{mod\ 13410}#))
                                 (lambda (#{e\ 13424}# #{maps\ 13425}#)
                                   (#{regen\ 13198}# #{e\ 13424}#))))
                             #{tmp\ 13419}#)
                      ((lambda (#{_\ 13429}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 13417}#))
                       #{tmp\ 13418}#)))
                  ($sc-dispatch #{tmp\ 13418}# (quote (any any)))))
               #{e\ 13417}#)))))
      (#{global-extend\ 10702}#
        'core
        'lambda
        (lambda (#{e\ 13430}#
                 #{r\ 13431}#
                 #{w\ 13432}#
                 #{s\ 13433}#
                 #{mod\ 13434}#)
          ((lambda (#{tmp\ 13440}#)
             ((lambda (#{tmp\ 13441}#)
                (if #{tmp\ 13441}#
                  (apply (lambda (#{_\ 13446}#
                                  #{args\ 13447}#
                                  #{e1\ 13448}#
                                  #{e2\ 13449}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 10809}# #{args\ 13447}#))
                             (lambda (#{req\ 13450}#
                                      #{opt\ 13451}#
                                      #{rest\ 13452}#
                                      #{kw\ 13453}#)
                               (letrec ((#{lp\ 13461}#
                                          (lambda (#{body\ 13462}#
                                                   #{meta\ 13463}#)
                                            ((lambda (#{tmp\ 13465}#)
                                               ((lambda (#{tmp\ 13466}#)
                                                  (if (if #{tmp\ 13466}#
                                                        (apply (lambda (#{docstring\ 13470}#
                                                                        #{e1\ 13471}#
                                                                        #{e2\ 13472}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 13470}#)))
                                                               #{tmp\ 13466}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 13476}#
                                                                    #{e1\ 13477}#
                                                                    #{e2\ 13478}#)
                                                             (#{lp\ 13461}#
                                                               (cons #{e1\ 13477}#
                                                                     #{e2\ 13478}#)
                                                               (append
                                                                 #{meta\ 13463}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 13476}#))))))
                                                           #{tmp\ 13466}#)
                                                    ((lambda (#{tmp\ 13481}#)
                                                       (if #{tmp\ 13481}#
                                                         (apply (lambda (#{k\ 13486}#
                                                                         #{v\ 13487}#
                                                                         #{e1\ 13488}#
                                                                         #{e2\ 13489}#)
                                                                  (#{lp\ 13461}#
                                                                    (cons #{e1\ 13488}#
                                                                          #{e2\ 13489}#)
                                                                    (append
                                                                      #{meta\ 13463}#
                                                                      (syntax->datum
                                                                        (map cons
                                                                             #{k\ 13486}#
                                                                             #{v\ 13487}#)))))
                                                                #{tmp\ 13481}#)
                                                         ((lambda (#{_\ 13494}#)
                                                            (#{chi-simple-lambda\ 10811}#
                                                              #{e\ 13430}#
                                                              #{r\ 13431}#
                                                              #{w\ 13432}#
                                                              #{s\ 13433}#
                                                              #{mod\ 13434}#
                                                              #{req\ 13450}#
                                                              #{rest\ 13452}#
                                                              #{meta\ 13463}#
                                                              #{body\ 13462}#))
                                                          #{tmp\ 13465}#)))
                                                     ($sc-dispatch
                                                       #{tmp\ 13465}#
                                                       '(#(vector
                                                           #(each (any . any)))
                                                         any
                                                         .
                                                         each-any)))))
                                                ($sc-dispatch
                                                  #{tmp\ 13465}#
                                                  '(any any . each-any))))
                                             #{body\ 13462}#))))
                                 (#{lp\ 13461}#
                                   (cons #{e1\ 13448}# #{e2\ 13449}#)
                                   '())))))
                         #{tmp\ 13441}#)
                  ((lambda (#{_\ 13496}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 13430}#))
                   #{tmp\ 13440}#)))
              ($sc-dispatch
                #{tmp\ 13440}#
                '(any any any . each-any))))
           #{e\ 13430}#)))
      (#{global-extend\ 10702}#
        'core
        'lambda*
        (lambda (#{e\ 13497}#
                 #{r\ 13498}#
                 #{w\ 13499}#
                 #{s\ 13500}#
                 #{mod\ 13501}#)
          ((lambda (#{tmp\ 13507}#)
             ((lambda (#{tmp\ 13508}#)
                (if #{tmp\ 13508}#
                  (apply (lambda (#{_\ 13513}#
                                  #{args\ 13514}#
                                  #{e1\ 13515}#
                                  #{e2\ 13516}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 10815}#
                                 #{e\ 13497}#
                                 #{r\ 13498}#
                                 #{w\ 13499}#
                                 #{s\ 13500}#
                                 #{mod\ 13501}#
                                 #{lambda*-formals\ 10813}#
                                 (list (cons #{args\ 13514}#
                                             (cons #{e1\ 13515}#
                                                   #{e2\ 13516}#)))))
                             (lambda (#{meta\ 13518}# #{lcase\ 13519}#)
                               (#{build-case-lambda\ 10650}#
                                 #{s\ 13500}#
                                 #{meta\ 13518}#
                                 #{lcase\ 13519}#))))
                         #{tmp\ 13508}#)
                  ((lambda (#{_\ 13523}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 13497}#))
                   #{tmp\ 13507}#)))
              ($sc-dispatch
                #{tmp\ 13507}#
                '(any any any . each-any))))
           #{e\ 13497}#)))
      (#{global-extend\ 10702}#
        'core
        'case-lambda
        (lambda (#{e\ 13524}#
                 #{r\ 13525}#
                 #{w\ 13526}#
                 #{s\ 13527}#
                 #{mod\ 13528}#)
          ((lambda (#{tmp\ 13534}#)
             ((lambda (#{tmp\ 13535}#)
                (if #{tmp\ 13535}#
                  (apply (lambda (#{_\ 13543}#
                                  #{args\ 13544}#
                                  #{e1\ 13545}#
                                  #{e2\ 13546}#
                                  #{args*\ 13547}#
                                  #{e1*\ 13548}#
                                  #{e2*\ 13549}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 10815}#
                                 #{e\ 13524}#
                                 #{r\ 13525}#
                                 #{w\ 13526}#
                                 #{s\ 13527}#
                                 #{mod\ 13528}#
                                 #{lambda-formals\ 10809}#
                                 (cons (cons #{args\ 13544}#
                                             (cons #{e1\ 13545}#
                                                   #{e2\ 13546}#))
                                       (map (lambda (#{tmp\ 13553}#
                                                     #{tmp\ 13552}#
                                                     #{tmp\ 13551}#)
                                              (cons #{tmp\ 13551}#
                                                    (cons #{tmp\ 13552}#
                                                          #{tmp\ 13553}#)))
                                            #{e2*\ 13549}#
                                            #{e1*\ 13548}#
                                            #{args*\ 13547}#))))
                             (lambda (#{meta\ 13555}# #{lcase\ 13556}#)
                               (#{build-case-lambda\ 10650}#
                                 #{s\ 13527}#
                                 #{meta\ 13555}#
                                 #{lcase\ 13556}#))))
                         #{tmp\ 13535}#)
                  ((lambda (#{_\ 13560}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 13524}#))
                   #{tmp\ 13534}#)))
              ($sc-dispatch
                #{tmp\ 13534}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 13524}#)))
      (#{global-extend\ 10702}#
        'core
        'case-lambda*
        (lambda (#{e\ 13561}#
                 #{r\ 13562}#
                 #{w\ 13563}#
                 #{s\ 13564}#
                 #{mod\ 13565}#)
          ((lambda (#{tmp\ 13571}#)
             ((lambda (#{tmp\ 13572}#)
                (if #{tmp\ 13572}#
                  (apply (lambda (#{_\ 13580}#
                                  #{args\ 13581}#
                                  #{e1\ 13582}#
                                  #{e2\ 13583}#
                                  #{args*\ 13584}#
                                  #{e1*\ 13585}#
                                  #{e2*\ 13586}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 10815}#
                                 #{e\ 13561}#
                                 #{r\ 13562}#
                                 #{w\ 13563}#
                                 #{s\ 13564}#
                                 #{mod\ 13565}#
                                 #{lambda*-formals\ 10813}#
                                 (cons (cons #{args\ 13581}#
                                             (cons #{e1\ 13582}#
                                                   #{e2\ 13583}#))
                                       (map (lambda (#{tmp\ 13590}#
                                                     #{tmp\ 13589}#
                                                     #{tmp\ 13588}#)
                                              (cons #{tmp\ 13588}#
                                                    (cons #{tmp\ 13589}#
                                                          #{tmp\ 13590}#)))
                                            #{e2*\ 13586}#
                                            #{e1*\ 13585}#
                                            #{args*\ 13584}#))))
                             (lambda (#{meta\ 13592}# #{lcase\ 13593}#)
                               (#{build-case-lambda\ 10650}#
                                 #{s\ 13564}#
                                 #{meta\ 13592}#
                                 #{lcase\ 13593}#))))
                         #{tmp\ 13572}#)
                  ((lambda (#{_\ 13597}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 13561}#))
                   #{tmp\ 13571}#)))
              ($sc-dispatch
                #{tmp\ 13571}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 13561}#)))
      (#{global-extend\ 10702}#
        'core
        'let
        (letrec ((#{chi-let\ 13599}#
                   (lambda (#{e\ 13600}#
                            #{r\ 13601}#
                            #{w\ 13602}#
                            #{s\ 13603}#
                            #{mod\ 13604}#
                            #{constructor\ 13605}#
                            #{ids\ 13606}#
                            #{vals\ 13607}#
                            #{exps\ 13608}#)
                     (if (not (#{valid-bound-ids?\ 10769}# #{ids\ 13606}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 13600}#)
                       (let ((#{labels\ 13620}#
                               (#{gen-labels\ 10724}# #{ids\ 13606}#))
                             (#{new-vars\ 13621}#
                               (map #{gen-var\ 10819}# #{ids\ 13606}#)))
                         (let ((#{nw\ 13624}#
                                 (#{make-binding-wrap\ 10753}#
                                   #{ids\ 13606}#
                                   #{labels\ 13620}#
                                   #{w\ 13602}#))
                               (#{nr\ 13625}#
                                 (#{extend-var-env\ 10696}#
                                   #{labels\ 13620}#
                                   #{new-vars\ 13621}#
                                   #{r\ 13601}#)))
                           (#{constructor\ 13605}#
                             #{s\ 13603}#
                             (map syntax->datum #{ids\ 13606}#)
                             #{new-vars\ 13621}#
                             (map (lambda (#{x\ 13626}#)
                                    (#{chi\ 10791}#
                                      #{x\ 13626}#
                                      #{r\ 13601}#
                                      #{w\ 13602}#
                                      #{mod\ 13604}#))
                                  #{vals\ 13607}#)
                             (#{chi-body\ 10799}#
                               #{exps\ 13608}#
                               (#{source-wrap\ 10777}#
                                 #{e\ 13600}#
                                 #{nw\ 13624}#
                                 #{s\ 13603}#
                                 #{mod\ 13604}#)
                               #{nr\ 13625}#
                               #{nw\ 13624}#
                               #{mod\ 13604}#))))))))
          (lambda (#{e\ 13628}#
                   #{r\ 13629}#
                   #{w\ 13630}#
                   #{s\ 13631}#
                   #{mod\ 13632}#)
            ((lambda (#{tmp\ 13638}#)
               ((lambda (#{tmp\ 13639}#)
                  (if (if #{tmp\ 13639}#
                        (apply (lambda (#{_\ 13645}#
                                        #{id\ 13646}#
                                        #{val\ 13647}#
                                        #{e1\ 13648}#
                                        #{e2\ 13649}#)
                                 (and-map #{id?\ 10706}# #{id\ 13646}#))
                               #{tmp\ 13639}#)
                        #f)
                    (apply (lambda (#{_\ 13656}#
                                    #{id\ 13657}#
                                    #{val\ 13658}#
                                    #{e1\ 13659}#
                                    #{e2\ 13660}#)
                             (#{chi-let\ 13599}#
                               #{e\ 13628}#
                               #{r\ 13629}#
                               #{w\ 13630}#
                               #{s\ 13631}#
                               #{mod\ 13632}#
                               #{build-let\ 10660}#
                               #{id\ 13657}#
                               #{val\ 13658}#
                               (cons #{e1\ 13659}# #{e2\ 13660}#)))
                           #{tmp\ 13639}#)
                    ((lambda (#{tmp\ 13664}#)
                       (if (if #{tmp\ 13664}#
                             (apply (lambda (#{_\ 13671}#
                                             #{f\ 13672}#
                                             #{id\ 13673}#
                                             #{val\ 13674}#
                                             #{e1\ 13675}#
                                             #{e2\ 13676}#)
                                      (if (#{id?\ 10706}# #{f\ 13672}#)
                                        (and-map #{id?\ 10706}# #{id\ 13673}#)
                                        #f))
                                    #{tmp\ 13664}#)
                             #f)
                         (apply (lambda (#{_\ 13686}#
                                         #{f\ 13687}#
                                         #{id\ 13688}#
                                         #{val\ 13689}#
                                         #{e1\ 13690}#
                                         #{e2\ 13691}#)
                                  (#{chi-let\ 13599}#
                                    #{e\ 13628}#
                                    #{r\ 13629}#
                                    #{w\ 13630}#
                                    #{s\ 13631}#
                                    #{mod\ 13632}#
                                    #{build-named-let\ 10662}#
                                    (cons #{f\ 13687}# #{id\ 13688}#)
                                    #{val\ 13689}#
                                    (cons #{e1\ 13690}# #{e2\ 13691}#)))
                                #{tmp\ 13664}#)
                         ((lambda (#{_\ 13696}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 10777}#
                                #{e\ 13628}#
                                #{w\ 13630}#
                                #{s\ 13631}#
                                #{mod\ 13632}#)))
                          #{tmp\ 13638}#)))
                     ($sc-dispatch
                       #{tmp\ 13638}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 13638}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 13628}#))))
      (#{global-extend\ 10702}#
        'core
        'letrec
        (lambda (#{e\ 13697}#
                 #{r\ 13698}#
                 #{w\ 13699}#
                 #{s\ 13700}#
                 #{mod\ 13701}#)
          ((lambda (#{tmp\ 13707}#)
             ((lambda (#{tmp\ 13708}#)
                (if (if #{tmp\ 13708}#
                      (apply (lambda (#{_\ 13714}#
                                      #{id\ 13715}#
                                      #{val\ 13716}#
                                      #{e1\ 13717}#
                                      #{e2\ 13718}#)
                               (and-map #{id?\ 10706}# #{id\ 13715}#))
                             #{tmp\ 13708}#)
                      #f)
                  (apply (lambda (#{_\ 13725}#
                                  #{id\ 13726}#
                                  #{val\ 13727}#
                                  #{e1\ 13728}#
                                  #{e2\ 13729}#)
                           (let ((#{ids\ 13731}# #{id\ 13726}#))
                             (if (not (#{valid-bound-ids?\ 10769}#
                                        #{ids\ 13731}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 13697}#)
                               (let ((#{labels\ 13735}#
                                       (#{gen-labels\ 10724}# #{ids\ 13731}#))
                                     (#{new-vars\ 13736}#
                                       (map #{gen-var\ 10819}#
                                            #{ids\ 13731}#)))
                                 (let ((#{w\ 13739}#
                                         (#{make-binding-wrap\ 10753}#
                                           #{ids\ 13731}#
                                           #{labels\ 13735}#
                                           #{w\ 13699}#))
                                       (#{r\ 13740}#
                                         (#{extend-var-env\ 10696}#
                                           #{labels\ 13735}#
                                           #{new-vars\ 13736}#
                                           #{r\ 13698}#)))
                                   (#{build-letrec\ 10664}#
                                     #{s\ 13700}#
                                     (map syntax->datum #{ids\ 13731}#)
                                     #{new-vars\ 13736}#
                                     (map (lambda (#{x\ 13741}#)
                                            (#{chi\ 10791}#
                                              #{x\ 13741}#
                                              #{r\ 13740}#
                                              #{w\ 13739}#
                                              #{mod\ 13701}#))
                                          #{val\ 13727}#)
                                     (#{chi-body\ 10799}#
                                       (cons #{e1\ 13728}# #{e2\ 13729}#)
                                       (#{source-wrap\ 10777}#
                                         #{e\ 13697}#
                                         #{w\ 13739}#
                                         #{s\ 13700}#
                                         #{mod\ 13701}#)
                                       #{r\ 13740}#
                                       #{w\ 13739}#
                                       #{mod\ 13701}#)))))))
                         #{tmp\ 13708}#)
                  ((lambda (#{_\ 13746}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 10777}#
                         #{e\ 13697}#
                         #{w\ 13699}#
                         #{s\ 13700}#
                         #{mod\ 13701}#)))
                   #{tmp\ 13707}#)))
              ($sc-dispatch
                #{tmp\ 13707}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 13697}#)))
      (#{global-extend\ 10702}#
        'core
        'set!
        (lambda (#{e\ 13747}#
                 #{r\ 13748}#
                 #{w\ 13749}#
                 #{s\ 13750}#
                 #{mod\ 13751}#)
          ((lambda (#{tmp\ 13757}#)
             ((lambda (#{tmp\ 13758}#)
                (if (if #{tmp\ 13758}#
                      (apply (lambda (#{_\ 13762}#
                                      #{id\ 13763}#
                                      #{val\ 13764}#)
                               (#{id?\ 10706}# #{id\ 13763}#))
                             #{tmp\ 13758}#)
                      #f)
                  (apply (lambda (#{_\ 13768}# #{id\ 13769}# #{val\ 13770}#)
                           (let ((#{val\ 13773}#
                                   (#{chi\ 10791}#
                                     #{val\ 13770}#
                                     #{r\ 13748}#
                                     #{w\ 13749}#
                                     #{mod\ 13751}#))
                                 (#{n\ 13774}#
                                   (#{id-var-name\ 10763}#
                                     #{id\ 13769}#
                                     #{w\ 13749}#)))
                             (let ((#{b\ 13776}#
                                     (#{lookup\ 10700}#
                                       #{n\ 13774}#
                                       #{r\ 13748}#
                                       #{mod\ 13751}#)))
                               (let ((#{atom-key\ 13779}#
                                       (#{binding-type\ 10689}# #{b\ 13776}#)))
                                 (if (memv #{atom-key\ 13779}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 10636}#
                                     #{s\ 13750}#
                                     (syntax->datum #{id\ 13769}#)
                                     (#{binding-value\ 10691}# #{b\ 13776}#)
                                     #{val\ 13773}#)
                                   (if (memv #{atom-key\ 13779}#
                                             '(global))
                                     (#{build-global-assignment\ 10642}#
                                       #{s\ 13750}#
                                       #{n\ 13774}#
                                       #{val\ 13773}#
                                       #{mod\ 13751}#)
                                     (if (memv #{atom-key\ 13779}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 10775}#
                                           #{id\ 13769}#
                                           #{w\ 13749}#
                                           #{mod\ 13751}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 10777}#
                                           #{e\ 13747}#
                                           #{w\ 13749}#
                                           #{s\ 13750}#
                                           #{mod\ 13751}#)))))))))
                         #{tmp\ 13758}#)
                  ((lambda (#{tmp\ 13784}#)
                     (if #{tmp\ 13784}#
                       (apply (lambda (#{_\ 13789}#
                                       #{head\ 13790}#
                                       #{tail\ 13791}#
                                       #{val\ 13792}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 10787}#
                                      #{head\ 13790}#
                                      #{r\ 13748}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 13751}#
                                      #t))
                                  (lambda (#{type\ 13795}#
                                           #{value\ 13796}#
                                           #{ee\ 13797}#
                                           #{ww\ 13798}#
                                           #{ss\ 13799}#
                                           #{modmod\ 13800}#)
                                    (if (memv #{type\ 13795}#
                                              '(module-ref))
                                      (let ((#{val\ 13809}#
                                              (#{chi\ 10791}#
                                                #{val\ 13792}#
                                                #{r\ 13748}#
                                                #{w\ 13749}#
                                                #{mod\ 13751}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 13796}#
                                              (cons #{head\ 13790}#
                                                    #{tail\ 13791}#)
                                              #{r\ 13748}#
                                              #{w\ 13749}#))
                                          (lambda (#{e\ 13811}#
                                                   #{r\ 13812}#
                                                   #{w\ 13813}#
                                                   #{s*\ 13814}#
                                                   #{mod\ 13815}#)
                                            ((lambda (#{tmp\ 13821}#)
                                               ((lambda (#{tmp\ 13822}#)
                                                  (if (if #{tmp\ 13822}#
                                                        (apply (lambda (#{e\ 13824}#)
                                                                 (#{id?\ 10706}#
                                                                   #{e\ 13824}#))
                                                               #{tmp\ 13822}#)
                                                        #f)
                                                    (apply (lambda (#{e\ 13826}#)
                                                             (#{build-global-assignment\ 10642}#
                                                               #{s\ 13750}#
                                                               (syntax->datum
                                                                 #{e\ 13826}#)
                                                               #{val\ 13809}#
                                                               #{mod\ 13815}#))
                                                           #{tmp\ 13822}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 13821}#)))
                                                (list #{tmp\ 13821}#)))
                                             #{e\ 13811}#))))
                                      (#{build-application\ 10628}#
                                        #{s\ 13750}#
                                        (#{chi\ 10791}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i13801"
                                                        "i13802"
                                                        "i13803"
                                                        "i13804"
                                                        "i13805"
                                                        "i13806"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i13785"
                                                        "i13786"
                                                        "i13787"
                                                        "i13788"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i13752"
                                                        "i13753"
                                                        "i13754"
                                                        "i13755"
                                                        "i13756"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i10820"
                                                       "i10818"
                                                       "i10816"
                                                       "i10814"
                                                       "i10812"
                                                       "i10810"
                                                       "i10808"
                                                       "i10806"
                                                       "i10804"
                                                       "i10802"
                                                       "i10800"
                                                       "i10798"
                                                       "i10796"
                                                       "i10794"
                                                       "i10792"
                                                       "i10790"
                                                       "i10788"
                                                       "i10786"
                                                       "i10784"
                                                       "i10782"
                                                       "i10780"
                                                       "i10778"
                                                       "i10776"
                                                       "i10774"
                                                       "i10772"
                                                       "i10770"
                                                       "i10768"
                                                       "i10766"
                                                       "i10764"
                                                       "i10762"
                                                       "i10760"
                                                       "i10758"
                                                       "i10756"
                                                       "i10754"
                                                       "i10752"
                                                       "i10750"
                                                       "i10749"
                                                       "i10748"
                                                       "i10746"
                                                       "i10745"
                                                       "i10744"
                                                       "i10743"
                                                       "i10742"
                                                       "i10740"
                                                       "i10738"
                                                       "i10736"
                                                       "i10734"
                                                       "i10732"
                                                       "i10730"
                                                       "i10728"
                                                       "i10726"
                                                       "i10723"
                                                       "i10721"
                                                       "i10720"
                                                       "i10719"
                                                       "i10718"
                                                       "i10717"
                                                       "i10716"
                                                       "i10714"
                                                       "i10712"
                                                       "i10710"
                                                       "i10708"
                                                       "i10707"
                                                       "i10705"
                                                       "i10703"
                                                       "i10701"
                                                       "i10699"
                                                       "i10697"
                                                       "i10695"
                                                       "i10693"
                                                       "i10692"
                                                       "i10690"
                                                       "i10688"
                                                       "i10687"
                                                       "i10686"
                                                       "i10684"
                                                       "i10683"
                                                       "i10681"
                                                       "i10679"
                                                       "i10677"
                                                       "i10675"
                                                       "i10673"
                                                       "i10671"
                                                       "i10669"
                                                       "i10667"
                                                       "i10665"
                                                       "i10663"
                                                       "i10661"
                                                       "i10659"
                                                       "i10657"
                                                       "i10655"
                                                       "i10653"
                                                       "i10651"
                                                       "i10649"
                                                       "i10647"
                                                       "i10645"
                                                       "i10643"
                                                       "i10641"
                                                       "i10639"
                                                       "i10637"
                                                       "i10635"
                                                       "i10633"
                                                       "i10631"
                                                       "i10629"
                                                       "i10627"
                                                       "i10625"
                                                       "i10623"
                                                       "i10621"
                                                       "i10619"
                                                       "i10618"
                                                       "i10616"
                                                       "i10614"
                                                       "i10612"
                                                       "i10610"
                                                       "i10608"
                                                       "i10606"
                                                       "i10604"
                                                       "i10602"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i10505" "i10503")))
                                                   (hygiene guile))
                                                #{head\ 13790}#)
                                          #{r\ 13748}#
                                          #{w\ 13749}#
                                          #{mod\ 13751}#)
                                        (map (lambda (#{e\ 13828}#)
                                               (#{chi\ 10791}#
                                                 #{e\ 13828}#
                                                 #{r\ 13748}#
                                                 #{w\ 13749}#
                                                 #{mod\ 13751}#))
                                             (append
                                               #{tail\ 13791}#
                                               (list #{val\ 13792}#))))))))
                              #{tmp\ 13784}#)
                       ((lambda (#{_\ 13832}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 10777}#
                              #{e\ 13747}#
                              #{w\ 13749}#
                              #{s\ 13750}#
                              #{mod\ 13751}#)))
                        #{tmp\ 13757}#)))
                   ($sc-dispatch
                     #{tmp\ 13757}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 13757}#
                '(any any any))))
           #{e\ 13747}#)))
      (#{global-extend\ 10702}#
        'module-ref
        '@
        (lambda (#{e\ 13833}# #{r\ 13834}# #{w\ 13835}#)
          ((lambda (#{tmp\ 13839}#)
             ((lambda (#{tmp\ 13840}#)
                (if (if #{tmp\ 13840}#
                      (apply (lambda (#{_\ 13844}#
                                      #{mod\ 13845}#
                                      #{id\ 13846}#)
                               (if (and-map #{id?\ 10706}# #{mod\ 13845}#)
                                 (#{id?\ 10706}# #{id\ 13846}#)
                                 #f))
                             #{tmp\ 13840}#)
                      #f)
                  (apply (lambda (#{_\ 13853}# #{mod\ 13854}# #{id\ 13855}#)
                           (values
                             (syntax->datum #{id\ 13855}#)
                             #{r\ 13834}#
                             #{w\ 13835}#
                             #f
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i13850" "i13851" "i13852"))
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(e r w)
                                           #((top) (top) (top))
                                           #("i13836" "i13837" "i13838"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i10820"
                                            "i10818"
                                            "i10816"
                                            "i10814"
                                            "i10812"
                                            "i10810"
                                            "i10808"
                                            "i10806"
                                            "i10804"
                                            "i10802"
                                            "i10800"
                                            "i10798"
                                            "i10796"
                                            "i10794"
                                            "i10792"
                                            "i10790"
                                            "i10788"
                                            "i10786"
                                            "i10784"
                                            "i10782"
                                            "i10780"
                                            "i10778"
                                            "i10776"
                                            "i10774"
                                            "i10772"
                                            "i10770"
                                            "i10768"
                                            "i10766"
                                            "i10764"
                                            "i10762"
                                            "i10760"
                                            "i10758"
                                            "i10756"
                                            "i10754"
                                            "i10752"
                                            "i10750"
                                            "i10749"
                                            "i10748"
                                            "i10746"
                                            "i10745"
                                            "i10744"
                                            "i10743"
                                            "i10742"
                                            "i10740"
                                            "i10738"
                                            "i10736"
                                            "i10734"
                                            "i10732"
                                            "i10730"
                                            "i10728"
                                            "i10726"
                                            "i10723"
                                            "i10721"
                                            "i10720"
                                            "i10719"
                                            "i10718"
                                            "i10717"
                                            "i10716"
                                            "i10714"
                                            "i10712"
                                            "i10710"
                                            "i10708"
                                            "i10707"
                                            "i10705"
                                            "i10703"
                                            "i10701"
                                            "i10699"
                                            "i10697"
                                            "i10695"
                                            "i10693"
                                            "i10692"
                                            "i10690"
                                            "i10688"
                                            "i10687"
                                            "i10686"
                                            "i10684"
                                            "i10683"
                                            "i10681"
                                            "i10679"
                                            "i10677"
                                            "i10675"
                                            "i10673"
                                            "i10671"
                                            "i10669"
                                            "i10667"
                                            "i10665"
                                            "i10663"
                                            "i10661"
                                            "i10659"
                                            "i10657"
                                            "i10655"
                                            "i10653"
                                            "i10651"
                                            "i10649"
                                            "i10647"
                                            "i10645"
                                            "i10643"
                                            "i10641"
                                            "i10639"
                                            "i10637"
                                            "i10635"
                                            "i10633"
                                            "i10631"
                                            "i10629"
                                            "i10627"
                                            "i10625"
                                            "i10623"
                                            "i10621"
                                            "i10619"
                                            "i10618"
                                            "i10616"
                                            "i10614"
                                            "i10612"
                                            "i10610"
                                            "i10608"
                                            "i10606"
                                            "i10604"
                                            "i10602"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i10505" "i10503")))
                                        (hygiene guile))
                                     #{mod\ 13854}#))))
                         #{tmp\ 13840}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 13839}#)))
              ($sc-dispatch
                #{tmp\ 13839}#
                '(any each-any any))))
           #{e\ 13833}#)))
      (#{global-extend\ 10702}#
        'module-ref
        '@@
        (lambda (#{e\ 13857}# #{r\ 13858}# #{w\ 13859}#)
          (letrec ((#{remodulate\ 13864}#
                     (lambda (#{x\ 13865}# #{mod\ 13866}#)
                       (if (pair? #{x\ 13865}#)
                         (cons (#{remodulate\ 13864}#
                                 (car #{x\ 13865}#)
                                 #{mod\ 13866}#)
                               (#{remodulate\ 13864}#
                                 (cdr #{x\ 13865}#)
                                 #{mod\ 13866}#))
                         (if (#{syntax-object?\ 10670}# #{x\ 13865}#)
                           (#{make-syntax-object\ 10668}#
                             (#{remodulate\ 13864}#
                               (#{syntax-object-expression\ 10672}#
                                 #{x\ 13865}#)
                               #{mod\ 13866}#)
                             (#{syntax-object-wrap\ 10674}# #{x\ 13865}#)
                             #{mod\ 13866}#)
                           (if (vector? #{x\ 13865}#)
                             (let ((#{n\ 13877}# (vector-length #{x\ 13865}#)))
                               (let ((#{v\ 13879}# (make-vector #{n\ 13877}#)))
                                 (letrec ((#{loop\ 13882}#
                                            (lambda (#{i\ 13883}#)
                                              (if (#{fx=\ 10611}#
                                                    #{i\ 13883}#
                                                    #{n\ 13877}#)
                                                (begin (if #f #f) #{v\ 13879}#)
                                                (begin
                                                  (vector-set!
                                                    #{v\ 13879}#
                                                    #{i\ 13883}#
                                                    (#{remodulate\ 13864}#
                                                      (vector-ref
                                                        #{x\ 13865}#
                                                        #{i\ 13883}#)
                                                      #{mod\ 13866}#))
                                                  (#{loop\ 13882}#
                                                    (#{fx+\ 10607}#
                                                      #{i\ 13883}#
                                                      1)))))))
                                   (#{loop\ 13882}# 0))))
                             #{x\ 13865}#))))))
            ((lambda (#{tmp\ 13887}#)
               ((lambda (#{tmp\ 13888}#)
                  (if (if #{tmp\ 13888}#
                        (apply (lambda (#{_\ 13892}#
                                        #{mod\ 13893}#
                                        #{exp\ 13894}#)
                                 (and-map #{id?\ 10706}# #{mod\ 13893}#))
                               #{tmp\ 13888}#)
                        #f)
                    (apply (lambda (#{_\ 13899}# #{mod\ 13900}# #{exp\ 13901}#)
                             (let ((#{mod\ 13903}#
                                     (syntax->datum
                                       (cons '#(syntax-object
                                                private
                                                ((top)
                                                 #(ribcage
                                                   #(_ mod exp)
                                                   #((top) (top) (top))
                                                   #("i13896"
                                                     "i13897"
                                                     "i13898"))
                                                 #(ribcage
                                                   (remodulate)
                                                   ((top))
                                                   ("i13863"))
                                                 #(ribcage
                                                   #(e r w)
                                                   #((top) (top) (top))
                                                   #("i13860"
                                                     "i13861"
                                                     "i13862"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     chi-top
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     maybe-name-value!
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     *mode*
                                                     noexpand)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i10820"
                                                    "i10818"
                                                    "i10816"
                                                    "i10814"
                                                    "i10812"
                                                    "i10810"
                                                    "i10808"
                                                    "i10806"
                                                    "i10804"
                                                    "i10802"
                                                    "i10800"
                                                    "i10798"
                                                    "i10796"
                                                    "i10794"
                                                    "i10792"
                                                    "i10790"
                                                    "i10788"
                                                    "i10786"
                                                    "i10784"
                                                    "i10782"
                                                    "i10780"
                                                    "i10778"
                                                    "i10776"
                                                    "i10774"
                                                    "i10772"
                                                    "i10770"
                                                    "i10768"
                                                    "i10766"
                                                    "i10764"
                                                    "i10762"
                                                    "i10760"
                                                    "i10758"
                                                    "i10756"
                                                    "i10754"
                                                    "i10752"
                                                    "i10750"
                                                    "i10749"
                                                    "i10748"
                                                    "i10746"
                                                    "i10745"
                                                    "i10744"
                                                    "i10743"
                                                    "i10742"
                                                    "i10740"
                                                    "i10738"
                                                    "i10736"
                                                    "i10734"
                                                    "i10732"
                                                    "i10730"
                                                    "i10728"
                                                    "i10726"
                                                    "i10723"
                                                    "i10721"
                                                    "i10720"
                                                    "i10719"
                                                    "i10718"
                                                    "i10717"
                                                    "i10716"
                                                    "i10714"
                                                    "i10712"
                                                    "i10710"
                                                    "i10708"
                                                    "i10707"
                                                    "i10705"
                                                    "i10703"
                                                    "i10701"
                                                    "i10699"
                                                    "i10697"
                                                    "i10695"
                                                    "i10693"
                                                    "i10692"
                                                    "i10690"
                                                    "i10688"
                                                    "i10687"
                                                    "i10686"
                                                    "i10684"
                                                    "i10683"
                                                    "i10681"
                                                    "i10679"
                                                    "i10677"
                                                    "i10675"
                                                    "i10673"
                                                    "i10671"
                                                    "i10669"
                                                    "i10667"
                                                    "i10665"
                                                    "i10663"
                                                    "i10661"
                                                    "i10659"
                                                    "i10657"
                                                    "i10655"
                                                    "i10653"
                                                    "i10651"
                                                    "i10649"
                                                    "i10647"
                                                    "i10645"
                                                    "i10643"
                                                    "i10641"
                                                    "i10639"
                                                    "i10637"
                                                    "i10635"
                                                    "i10633"
                                                    "i10631"
                                                    "i10629"
                                                    "i10627"
                                                    "i10625"
                                                    "i10623"
                                                    "i10621"
                                                    "i10619"
                                                    "i10618"
                                                    "i10616"
                                                    "i10614"
                                                    "i10612"
                                                    "i10610"
                                                    "i10608"
                                                    "i10606"
                                                    "i10604"
                                                    "i10602"))
                                                 #(ribcage
                                                   (define-structure and-map*)
                                                   ((top) (top))
                                                   ("i10505" "i10503")))
                                                (hygiene guile))
                                             #{mod\ 13900}#))))
                               (values
                                 (#{remodulate\ 13864}#
                                   #{exp\ 13901}#
                                   #{mod\ 13903}#)
                                 #{r\ 13858}#
                                 #{w\ 13859}#
                                 (#{source-annotation\ 10685}# #{exp\ 13901}#)
                                 #{mod\ 13903}#)))
                           #{tmp\ 13888}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 13887}#)))
                ($sc-dispatch
                  #{tmp\ 13887}#
                  '(any each-any any))))
             #{e\ 13857}#))))
      (#{global-extend\ 10702}#
        'core
        'if
        (lambda (#{e\ 13905}#
                 #{r\ 13906}#
                 #{w\ 13907}#
                 #{s\ 13908}#
                 #{mod\ 13909}#)
          ((lambda (#{tmp\ 13915}#)
             ((lambda (#{tmp\ 13916}#)
                (if #{tmp\ 13916}#
                  (apply (lambda (#{_\ 13920}# #{test\ 13921}# #{then\ 13922}#)
                           (#{build-conditional\ 10630}#
                             #{s\ 13908}#
                             (#{chi\ 10791}#
                               #{test\ 13921}#
                               #{r\ 13906}#
                               #{w\ 13907}#
                               #{mod\ 13909}#)
                             (#{chi\ 10791}#
                               #{then\ 13922}#
                               #{r\ 13906}#
                               #{w\ 13907}#
                               #{mod\ 13909}#)
                             (#{build-void\ 10626}# #f)))
                         #{tmp\ 13916}#)
                  ((lambda (#{tmp\ 13924}#)
                     (if #{tmp\ 13924}#
                       (apply (lambda (#{_\ 13929}#
                                       #{test\ 13930}#
                                       #{then\ 13931}#
                                       #{else\ 13932}#)
                                (#{build-conditional\ 10630}#
                                  #{s\ 13908}#
                                  (#{chi\ 10791}#
                                    #{test\ 13930}#
                                    #{r\ 13906}#
                                    #{w\ 13907}#
                                    #{mod\ 13909}#)
                                  (#{chi\ 10791}#
                                    #{then\ 13931}#
                                    #{r\ 13906}#
                                    #{w\ 13907}#
                                    #{mod\ 13909}#)
                                  (#{chi\ 10791}#
                                    #{else\ 13932}#
                                    #{r\ 13906}#
                                    #{w\ 13907}#
                                    #{mod\ 13909}#)))
                              #{tmp\ 13924}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 13915}#)))
                   ($sc-dispatch
                     #{tmp\ 13915}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 13915}#
                '(any any any))))
           #{e\ 13905}#)))
      (#{global-extend\ 10702}#
        'core
        'with-fluids
        (lambda (#{e\ 13933}#
                 #{r\ 13934}#
                 #{w\ 13935}#
                 #{s\ 13936}#
                 #{mod\ 13937}#)
          ((lambda (#{tmp\ 13943}#)
             ((lambda (#{tmp\ 13944}#)
                (if #{tmp\ 13944}#
                  (apply (lambda (#{_\ 13950}#
                                  #{fluid\ 13951}#
                                  #{val\ 13952}#
                                  #{b\ 13953}#
                                  #{b*\ 13954}#)
                           (#{build-dynlet\ 10632}#
                             #{s\ 13936}#
                             (map (lambda (#{x\ 13955}#)
                                    (#{chi\ 10791}#
                                      #{x\ 13955}#
                                      #{r\ 13934}#
                                      #{w\ 13935}#
                                      #{mod\ 13937}#))
                                  #{fluid\ 13951}#)
                             (map (lambda (#{x\ 13958}#)
                                    (#{chi\ 10791}#
                                      #{x\ 13958}#
                                      #{r\ 13934}#
                                      #{w\ 13935}#
                                      #{mod\ 13937}#))
                                  #{val\ 13952}#)
                             (#{chi-body\ 10799}#
                               (cons #{b\ 13953}# #{b*\ 13954}#)
                               (#{source-wrap\ 10777}#
                                 #{e\ 13933}#
                                 #{w\ 13935}#
                                 #{s\ 13936}#
                                 #{mod\ 13937}#)
                               #{r\ 13934}#
                               #{w\ 13935}#
                               #{mod\ 13937}#)))
                         #{tmp\ 13944}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 13943}#)))
              ($sc-dispatch
                #{tmp\ 13943}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 13933}#)))
      (#{global-extend\ 10702}#
        'begin
        'begin
        '())
      (#{global-extend\ 10702}#
        'define
        'define
        '())
      (#{global-extend\ 10702}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 10702}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 10702}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 13969}#
                   (lambda (#{x\ 13970}#
                            #{keys\ 13971}#
                            #{clauses\ 13972}#
                            #{r\ 13973}#
                            #{mod\ 13974}#)
                     (if (null? #{clauses\ 13972}#)
                       (#{build-application\ 10628}#
                         #f
                         (#{build-primref\ 10654}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 10656}# #f #f)
                               (#{build-data\ 10656}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 13970}#))
                       ((lambda (#{tmp\ 13984}#)
                          ((lambda (#{tmp\ 13985}#)
                             (if #{tmp\ 13985}#
                               (apply (lambda (#{pat\ 13988}# #{exp\ 13989}#)
                                        (if (if (#{id?\ 10706}# #{pat\ 13988}#)
                                              (and-map
                                                (lambda (#{x\ 13992}#)
                                                  (not (#{free-id=?\ 10765}#
                                                         #{pat\ 13988}#
                                                         #{x\ 13992}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i13986"
                                                              "i13987"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i13975"
                                                              "i13976"
                                                              "i13977"
                                                              "i13978"
                                                              "i13979"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i13968"
                                                             "i13966"
                                                             "i13964"
                                                             "i13962"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*
                                                              noexpand)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i10820"
                                                             "i10818"
                                                             "i10816"
                                                             "i10814"
                                                             "i10812"
                                                             "i10810"
                                                             "i10808"
                                                             "i10806"
                                                             "i10804"
                                                             "i10802"
                                                             "i10800"
                                                             "i10798"
                                                             "i10796"
                                                             "i10794"
                                                             "i10792"
                                                             "i10790"
                                                             "i10788"
                                                             "i10786"
                                                             "i10784"
                                                             "i10782"
                                                             "i10780"
                                                             "i10778"
                                                             "i10776"
                                                             "i10774"
                                                             "i10772"
                                                             "i10770"
                                                             "i10768"
                                                             "i10766"
                                                             "i10764"
                                                             "i10762"
                                                             "i10760"
                                                             "i10758"
                                                             "i10756"
                                                             "i10754"
                                                             "i10752"
                                                             "i10750"
                                                             "i10749"
                                                             "i10748"
                                                             "i10746"
                                                             "i10745"
                                                             "i10744"
                                                             "i10743"
                                                             "i10742"
                                                             "i10740"
                                                             "i10738"
                                                             "i10736"
                                                             "i10734"
                                                             "i10732"
                                                             "i10730"
                                                             "i10728"
                                                             "i10726"
                                                             "i10723"
                                                             "i10721"
                                                             "i10720"
                                                             "i10719"
                                                             "i10718"
                                                             "i10717"
                                                             "i10716"
                                                             "i10714"
                                                             "i10712"
                                                             "i10710"
                                                             "i10708"
                                                             "i10707"
                                                             "i10705"
                                                             "i10703"
                                                             "i10701"
                                                             "i10699"
                                                             "i10697"
                                                             "i10695"
                                                             "i10693"
                                                             "i10692"
                                                             "i10690"
                                                             "i10688"
                                                             "i10687"
                                                             "i10686"
                                                             "i10684"
                                                             "i10683"
                                                             "i10681"
                                                             "i10679"
                                                             "i10677"
                                                             "i10675"
                                                             "i10673"
                                                             "i10671"
                                                             "i10669"
                                                             "i10667"
                                                             "i10665"
                                                             "i10663"
                                                             "i10661"
                                                             "i10659"
                                                             "i10657"
                                                             "i10655"
                                                             "i10653"
                                                             "i10651"
                                                             "i10649"
                                                             "i10647"
                                                             "i10645"
                                                             "i10643"
                                                             "i10641"
                                                             "i10639"
                                                             "i10637"
                                                             "i10635"
                                                             "i10633"
                                                             "i10631"
                                                             "i10629"
                                                             "i10627"
                                                             "i10625"
                                                             "i10623"
                                                             "i10621"
                                                             "i10619"
                                                             "i10618"
                                                             "i10616"
                                                             "i10614"
                                                             "i10612"
                                                             "i10610"
                                                             "i10608"
                                                             "i10606"
                                                             "i10604"
                                                             "i10602"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i10505"
                                                             "i10503")))
                                                         (hygiene guile))
                                                      #{keys\ 13971}#))
                                              #f)
                                          (let ((#{labels\ 13996}#
                                                  (list (#{gen-label\ 10722}#)))
                                                (#{var\ 13997}#
                                                  (#{gen-var\ 10819}#
                                                    #{pat\ 13988}#)))
                                            (#{build-application\ 10628}#
                                              #f
                                              (#{build-simple-lambda\ 10648}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 13988}#))
                                                #f
                                                (list #{var\ 13997}#)
                                                '()
                                                (#{chi\ 10791}#
                                                  #{exp\ 13989}#
                                                  (#{extend-env\ 10694}#
                                                    #{labels\ 13996}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 13997}#
                                                                      0)))
                                                    #{r\ 13973}#)
                                                  (#{make-binding-wrap\ 10753}#
                                                    (list #{pat\ 13988}#)
                                                    #{labels\ 13996}#
                                                    '(()))
                                                  #{mod\ 13974}#))
                                              (list #{x\ 13970}#)))
                                          (#{gen-clause\ 13967}#
                                            #{x\ 13970}#
                                            #{keys\ 13971}#
                                            (cdr #{clauses\ 13972}#)
                                            #{r\ 13973}#
                                            #{pat\ 13988}#
                                            #t
                                            #{exp\ 13989}#
                                            #{mod\ 13974}#)))
                                      #{tmp\ 13985}#)
                               ((lambda (#{tmp\ 14003}#)
                                  (if #{tmp\ 14003}#
                                    (apply (lambda (#{pat\ 14007}#
                                                    #{fender\ 14008}#
                                                    #{exp\ 14009}#)
                                             (#{gen-clause\ 13967}#
                                               #{x\ 13970}#
                                               #{keys\ 13971}#
                                               (cdr #{clauses\ 13972}#)
                                               #{r\ 13973}#
                                               #{pat\ 14007}#
                                               #{fender\ 14008}#
                                               #{exp\ 14009}#
                                               #{mod\ 13974}#))
                                           #{tmp\ 14003}#)
                                    ((lambda (#{_\ 14011}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 13972}#)))
                                     #{tmp\ 13984}#)))
                                ($sc-dispatch
                                  #{tmp\ 13984}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 13984}# (quote (any any)))))
                        (car #{clauses\ 13972}#)))))
                 (#{gen-clause\ 13967}#
                   (lambda (#{x\ 14012}#
                            #{keys\ 14013}#
                            #{clauses\ 14014}#
                            #{r\ 14015}#
                            #{pat\ 14016}#
                            #{fender\ 14017}#
                            #{exp\ 14018}#
                            #{mod\ 14019}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 13963}#
                           #{pat\ 14016}#
                           #{keys\ 14013}#))
                       (lambda (#{p\ 14028}# #{pvars\ 14029}#)
                         (if (not (#{distinct-bound-ids?\ 10771}#
                                    (map car #{pvars\ 14029}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 14016}#)
                           (if (not (and-map
                                      (lambda (#{x\ 14036}#)
                                        (not (#{ellipsis?\ 10807}#
                                               (car #{x\ 14036}#))))
                                      #{pvars\ 14029}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 14016}#)
                             (let ((#{y\ 14040}#
                                     (#{gen-var\ 10819}# (quote tmp))))
                               (#{build-application\ 10628}#
                                 #f
                                 (#{build-simple-lambda\ 10648}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 14040}#)
                                   '()
                                   (let ((#{y\ 14044}#
                                           (#{build-lexical-reference\ 10634}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 14040}#)))
                                     (#{build-conditional\ 10630}#
                                       #f
                                       ((lambda (#{tmp\ 14047}#)
                                          ((lambda (#{tmp\ 14048}#)
                                             (if #{tmp\ 14048}#
                                               (apply (lambda () #{y\ 14044}#)
                                                      #{tmp\ 14048}#)
                                               ((lambda (#{_\ 14050}#)
                                                  (#{build-conditional\ 10630}#
                                                    #f
                                                    #{y\ 14044}#
                                                    (#{build-dispatch-call\ 13965}#
                                                      #{pvars\ 14029}#
                                                      #{fender\ 14017}#
                                                      #{y\ 14044}#
                                                      #{r\ 14015}#
                                                      #{mod\ 14019}#)
                                                    (#{build-data\ 10656}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 14047}#)))
                                           ($sc-dispatch
                                             #{tmp\ 14047}#
                                             '#(atom #t))))
                                        #{fender\ 14017}#)
                                       (#{build-dispatch-call\ 13965}#
                                         #{pvars\ 14029}#
                                         #{exp\ 14018}#
                                         #{y\ 14044}#
                                         #{r\ 14015}#
                                         #{mod\ 14019}#)
                                       (#{gen-syntax-case\ 13969}#
                                         #{x\ 14012}#
                                         #{keys\ 14013}#
                                         #{clauses\ 14014}#
                                         #{r\ 14015}#
                                         #{mod\ 14019}#))))
                                 (list (if (eq? #{p\ 14028}# (quote any))
                                         (#{build-application\ 10628}#
                                           #f
                                           (#{build-primref\ 10654}#
                                             #f
                                             'list)
                                           (list #{x\ 14012}#))
                                         (#{build-application\ 10628}#
                                           #f
                                           (#{build-primref\ 10654}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 14012}#
                                                 (#{build-data\ 10656}#
                                                   #f
                                                   #{p\ 14028}#)))))))))))))
                 (#{build-dispatch-call\ 13965}#
                   (lambda (#{pvars\ 14058}#
                            #{exp\ 14059}#
                            #{y\ 14060}#
                            #{r\ 14061}#
                            #{mod\ 14062}#)
                     (let ((#{ids\ 14070}# (map car #{pvars\ 14058}#))
                           (#{levels\ 14071}# (map cdr #{pvars\ 14058}#)))
                       (let ((#{labels\ 14074}#
                               (#{gen-labels\ 10724}# #{ids\ 14070}#))
                             (#{new-vars\ 14075}#
                               (map #{gen-var\ 10819}# #{ids\ 14070}#)))
                         (#{build-application\ 10628}#
                           #f
                           (#{build-primref\ 10654}# #f (quote apply))
                           (list (#{build-simple-lambda\ 10648}#
                                   #f
                                   (map syntax->datum #{ids\ 14070}#)
                                   #f
                                   #{new-vars\ 14075}#
                                   '()
                                   (#{chi\ 10791}#
                                     #{exp\ 14059}#
                                     (#{extend-env\ 10694}#
                                       #{labels\ 14074}#
                                       (map (lambda (#{var\ 14079}#
                                                     #{level\ 14080}#)
                                              (cons 'syntax
                                                    (cons #{var\ 14079}#
                                                          #{level\ 14080}#)))
                                            #{new-vars\ 14075}#
                                            (map cdr #{pvars\ 14058}#))
                                       #{r\ 14061}#)
                                     (#{make-binding-wrap\ 10753}#
                                       #{ids\ 14070}#
                                       #{labels\ 14074}#
                                       '(()))
                                     #{mod\ 14062}#))
                                 #{y\ 14060}#))))))
                 (#{convert-pattern\ 13963}#
                   (lambda (#{pattern\ 14086}# #{keys\ 14087}#)
                     (letrec ((#{cvt\ 14093}#
                                (lambda (#{p\ 14094}#
                                         #{n\ 14095}#
                                         #{ids\ 14096}#)
                                  (if (#{id?\ 10706}# #{p\ 14094}#)
                                    (if (#{bound-id-member?\ 10773}#
                                          #{p\ 14094}#
                                          #{keys\ 14087}#)
                                      (values
                                        (vector (quote free-id) #{p\ 14094}#)
                                        #{ids\ 14096}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 14094}# #{n\ 14095}#)
                                              #{ids\ 14096}#)))
                                    ((lambda (#{tmp\ 14100}#)
                                       ((lambda (#{tmp\ 14101}#)
                                          (if (if #{tmp\ 14101}#
                                                (apply (lambda (#{x\ 14104}#
                                                                #{dots\ 14105}#)
                                                         (#{ellipsis?\ 10807}#
                                                           #{dots\ 14105}#))
                                                       #{tmp\ 14101}#)
                                                #f)
                                            (apply (lambda (#{x\ 14108}#
                                                            #{dots\ 14109}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 14093}#
                                                           #{x\ 14108}#
                                                           (#{fx+\ 10607}#
                                                             #{n\ 14095}#
                                                             1)
                                                           #{ids\ 14096}#))
                                                       (lambda (#{p\ 14110}#
                                                                #{ids\ 14111}#)
                                                         (values
                                                           (if (eq? #{p\ 14110}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 14110}#))
                                                           #{ids\ 14111}#))))
                                                   #{tmp\ 14101}#)
                                            ((lambda (#{tmp\ 14114}#)
                                               (if (if #{tmp\ 14114}#
                                                     (apply (lambda (#{x\ 14118}#
                                                                     #{dots\ 14119}#
                                                                     #{ys\ 14120}#)
                                                              (#{ellipsis?\ 10807}#
                                                                #{dots\ 14119}#))
                                                            #{tmp\ 14114}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 14124}#
                                                                 #{dots\ 14125}#
                                                                 #{ys\ 14126}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 14091}#
                                                                #{ys\ 14126}#
                                                                #{n\ 14095}#
                                                                #{ids\ 14096}#))
                                                            (lambda (#{ys\ 14128}#
                                                                     #{ids\ 14129}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 14093}#
                                                                    #{x\ 14124}#
                                                                    (+ #{n\ 14095}#
                                                                       1)
                                                                    #{ids\ 14129}#))
                                                                (lambda (#{x\ 14132}#
                                                                         #{ids\ 14133}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 14132}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 14128}#)
                                                                                        '(())))))
                                                                    #{ids\ 14133}#))))))
                                                        #{tmp\ 14114}#)
                                                 ((lambda (#{tmp\ 14137}#)
                                                    (if #{tmp\ 14137}#
                                                      (apply (lambda (#{x\ 14140}#
                                                                      #{y\ 14141}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 14093}#
                                                                     #{y\ 14141}#
                                                                     #{n\ 14095}#
                                                                     #{ids\ 14096}#))
                                                                 (lambda (#{y\ 14142}#
                                                                          #{ids\ 14143}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 14093}#
                                                                         #{x\ 14140}#
                                                                         #{n\ 14095}#
                                                                         #{ids\ 14143}#))
                                                                     (lambda (#{x\ 14146}#
                                                                              #{ids\ 14147}#)
                                                                       (values
                                                                         (cons #{x\ 14146}#
                                                                               #{y\ 14142}#)
                                                                         #{ids\ 14147}#))))))
                                                             #{tmp\ 14137}#)
                                                      ((lambda (#{tmp\ 14150}#)
                                                         (if #{tmp\ 14150}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 14096}#))
                                                                  #{tmp\ 14150}#)
                                                           ((lambda (#{tmp\ 14151}#)
                                                              (if #{tmp\ 14151}#
                                                                (apply (lambda (#{x\ 14153}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 14093}#
                                                                               #{x\ 14153}#
                                                                               #{n\ 14095}#
                                                                               #{ids\ 14096}#))
                                                                           (lambda (#{p\ 14155}#
                                                                                    #{ids\ 14156}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 14155}#)
                                                                               #{ids\ 14156}#))))
                                                                       #{tmp\ 14151}#)
                                                                ((lambda (#{x\ 14160}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 10817}#
                                                                         #{p\ 14094}#
                                                                         '(())))
                                                                     #{ids\ 14096}#))
                                                                 #{tmp\ 14100}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 14100}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 14100}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 14100}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 14100}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 14100}#
                                          '(any any))))
                                     #{p\ 14094}#))))
                              (#{cvt*\ 14091}#
                                (lambda (#{p*\ 14162}#
                                         #{n\ 14163}#
                                         #{ids\ 14164}#)
                                  (if (null? #{p*\ 14162}#)
                                    (values (quote ()) #{ids\ 14164}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 14091}#
                                          (cdr #{p*\ 14162}#)
                                          #{n\ 14163}#
                                          #{ids\ 14164}#))
                                      (lambda (#{y\ 14168}# #{ids\ 14169}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 14093}#
                                              (car #{p*\ 14162}#)
                                              #{n\ 14163}#
                                              #{ids\ 14169}#))
                                          (lambda (#{x\ 14172}# #{ids\ 14173}#)
                                            (values
                                              (cons #{x\ 14172}# #{y\ 14168}#)
                                              #{ids\ 14173}#)))))))))
                       (#{cvt\ 14093}# #{pattern\ 14086}# 0 (quote ()))))))
          (lambda (#{e\ 14176}#
                   #{r\ 14177}#
                   #{w\ 14178}#
                   #{s\ 14179}#
                   #{mod\ 14180}#)
            (let ((#{e\ 14187}#
                    (#{source-wrap\ 10777}#
                      #{e\ 14176}#
                      #{w\ 14178}#
                      #{s\ 14179}#
                      #{mod\ 14180}#)))
              ((lambda (#{tmp\ 14188}#)
                 ((lambda (#{tmp\ 14189}#)
                    (if #{tmp\ 14189}#
                      (apply (lambda (#{_\ 14194}#
                                      #{val\ 14195}#
                                      #{key\ 14196}#
                                      #{m\ 14197}#)
                               (if (and-map
                                     (lambda (#{x\ 14198}#)
                                       (if (#{id?\ 10706}# #{x\ 14198}#)
                                         (not (#{ellipsis?\ 10807}#
                                                #{x\ 14198}#))
                                         #f))
                                     #{key\ 14196}#)
                                 (let ((#{x\ 14204}#
                                         (#{gen-var\ 10819}# (quote tmp))))
                                   (#{build-application\ 10628}#
                                     #{s\ 14179}#
                                     (#{build-simple-lambda\ 10648}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 14204}#)
                                       '()
                                       (#{gen-syntax-case\ 13969}#
                                         (#{build-lexical-reference\ 10634}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 14204}#)
                                         #{key\ 14196}#
                                         #{m\ 14197}#
                                         #{r\ 14177}#
                                         #{mod\ 14180}#))
                                     (list (#{chi\ 10791}#
                                             #{val\ 14195}#
                                             #{r\ 14177}#
                                             '(())
                                             #{mod\ 14180}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 14187}#)))
                             #{tmp\ 14189}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 14188}#)))
                  ($sc-dispatch
                    #{tmp\ 14188}#
                    '(any any each-any . each-any))))
               #{e\ 14187}#)))))
      (set! macroexpand
        (lambda (#{x\ 14210}# . #{rest\ 14211}#)
          (if (if (pair? #{x\ 14210}#)
                (equal? (car #{x\ 14210}#) #{noexpand\ 10603}#)
                #f)
            (cadr #{x\ 14210}#)
            (let ((#{m\ 14218}#
                    (if (null? #{rest\ 14211}#)
                      'e
                      (car #{rest\ 14211}#)))
                  (#{esew\ 14219}#
                    (if (let ((#{t\ 14222}# (null? #{rest\ 14211}#)))
                          (if #{t\ 14222}#
                            #{t\ 14222}#
                            (null? (cdr #{rest\ 14211}#))))
                      '(eval)
                      (cadr #{rest\ 14211}#))))
              (with-fluids
                ((#{*mode*\ 10605}# #{m\ 14218}#))
                (#{chi-top\ 10789}#
                  #{x\ 14210}#
                  '()
                  '((top))
                  #{m\ 14218}#
                  #{esew\ 14219}#
                  (cons 'hygiene
                        (module-name (current-module)))))))))
      (set! identifier?
        (lambda (#{x\ 14226}#)
          (#{nonsymbol-id?\ 10704}# #{x\ 14226}#)))
      (set! datum->syntax
        (lambda (#{id\ 14228}# #{datum\ 14229}#)
          (#{make-syntax-object\ 10668}#
            #{datum\ 14229}#
            (#{syntax-object-wrap\ 10674}# #{id\ 14228}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 14232}#)
          (#{strip\ 10817}# #{x\ 14232}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 14235}#)
          (begin
            (let ((#{x\ 14239}# #{ls\ 14235}#))
              (if (not (list? #{x\ 14239}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 14239}#)))
            (map (lambda (#{x\ 14240}#)
                   (#{wrap\ 10775}# (gensym) (quote ((top))) #f))
                 #{ls\ 14235}#))))
      (set! free-identifier=?
        (lambda (#{x\ 14244}# #{y\ 14245}#)
          (begin
            (let ((#{x\ 14250}# #{x\ 14244}#))
              (if (not (#{nonsymbol-id?\ 10704}# #{x\ 14250}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 14250}#)))
            (let ((#{x\ 14253}# #{y\ 14245}#))
              (if (not (#{nonsymbol-id?\ 10704}# #{x\ 14253}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 14253}#)))
            (#{free-id=?\ 10765}# #{x\ 14244}# #{y\ 14245}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 14254}# #{y\ 14255}#)
          (begin
            (let ((#{x\ 14260}# #{x\ 14254}#))
              (if (not (#{nonsymbol-id?\ 10704}# #{x\ 14260}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 14260}#)))
            (let ((#{x\ 14263}# #{y\ 14255}#))
              (if (not (#{nonsymbol-id?\ 10704}# #{x\ 14263}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 14263}#)))
            (#{bound-id=?\ 10767}# #{x\ 14254}# #{y\ 14255}#))))
      (set! syntax-violation
        (lambda (#{who\ 14264}#
                 #{message\ 14265}#
                 #{form\ 14266}#
                 .
                 #{subform\ 14267}#)
          (begin
            (let ((#{x\ 14274}# #{who\ 14264}#))
              (if (not ((lambda (#{x\ 14275}#)
                          (let ((#{t\ 14279}# (not #{x\ 14275}#)))
                            (if #{t\ 14279}#
                              #{t\ 14279}#
                              (let ((#{t\ 14282}# (string? #{x\ 14275}#)))
                                (if #{t\ 14282}#
                                  #{t\ 14282}#
                                  (symbol? #{x\ 14275}#))))))
                        #{x\ 14274}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 14274}#)))
            (let ((#{x\ 14286}# #{message\ 14265}#))
              (if (not (string? #{x\ 14286}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 14286}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 14264}# "~a: " "")
                "~a "
                (if (null? #{subform\ 14267}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 14288}#
                      (cons #{message\ 14265}#
                            (map (lambda (#{x\ 14289}#)
                                   (#{strip\ 10817}#
                                     #{x\ 14289}#
                                     '(())))
                                 (append
                                   #{subform\ 14267}#
                                   (list #{form\ 14266}#))))))
                (if #{who\ 14264}#
                  (cons #{who\ 14264}# #{tail\ 14288}#)
                  #{tail\ 14288}#))
              #f))))
      (letrec ((#{match\ 14305}#
                 (lambda (#{e\ 14306}#
                          #{p\ 14307}#
                          #{w\ 14308}#
                          #{r\ 14309}#
                          #{mod\ 14310}#)
                   (if (not #{r\ 14309}#)
                     #f
                     (if (eq? #{p\ 14307}# (quote any))
                       (cons (#{wrap\ 10775}#
                               #{e\ 14306}#
                               #{w\ 14308}#
                               #{mod\ 14310}#)
                             #{r\ 14309}#)
                       (if (#{syntax-object?\ 10670}# #{e\ 14306}#)
                         (#{match*\ 14303}#
                           (#{syntax-object-expression\ 10672}#
                             #{e\ 14306}#)
                           #{p\ 14307}#
                           (#{join-wraps\ 10757}#
                             #{w\ 14308}#
                             (#{syntax-object-wrap\ 10674}# #{e\ 14306}#))
                           #{r\ 14309}#
                           (#{syntax-object-module\ 10676}# #{e\ 14306}#))
                         (#{match*\ 14303}#
                           #{e\ 14306}#
                           #{p\ 14307}#
                           #{w\ 14308}#
                           #{r\ 14309}#
                           #{mod\ 14310}#))))))
               (#{match*\ 14303}#
                 (lambda (#{e\ 14323}#
                          #{p\ 14324}#
                          #{w\ 14325}#
                          #{r\ 14326}#
                          #{mod\ 14327}#)
                   (if (null? #{p\ 14324}#)
                     (if (null? #{e\ 14323}#) #{r\ 14326}# #f)
                     (if (pair? #{p\ 14324}#)
                       (if (pair? #{e\ 14323}#)
                         (#{match\ 14305}#
                           (car #{e\ 14323}#)
                           (car #{p\ 14324}#)
                           #{w\ 14325}#
                           (#{match\ 14305}#
                             (cdr #{e\ 14323}#)
                             (cdr #{p\ 14324}#)
                             #{w\ 14325}#
                             #{r\ 14326}#
                             #{mod\ 14327}#)
                           #{mod\ 14327}#)
                         #f)
                       (if (eq? #{p\ 14324}# (quote each-any))
                         (let ((#{l\ 14344}#
                                 (#{match-each-any\ 14297}#
                                   #{e\ 14323}#
                                   #{w\ 14325}#
                                   #{mod\ 14327}#)))
                           (if #{l\ 14344}#
                             (cons #{l\ 14344}# #{r\ 14326}#)
                             #f))
                         (let ((#{atom-key\ 14350}#
                                 (vector-ref #{p\ 14324}# 0)))
                           (if (memv #{atom-key\ 14350}# (quote (each)))
                             (if (null? #{e\ 14323}#)
                               (#{match-empty\ 14299}#
                                 (vector-ref #{p\ 14324}# 1)
                                 #{r\ 14326}#)
                               (let ((#{l\ 14353}#
                                       (#{match-each\ 14293}#
                                         #{e\ 14323}#
                                         (vector-ref #{p\ 14324}# 1)
                                         #{w\ 14325}#
                                         #{mod\ 14327}#)))
                                 (if #{l\ 14353}#
                                   (letrec ((#{collect\ 14358}#
                                              (lambda (#{l\ 14359}#)
                                                (if (null? (car #{l\ 14359}#))
                                                  #{r\ 14326}#
                                                  (cons (map car #{l\ 14359}#)
                                                        (#{collect\ 14358}#
                                                          (map cdr
                                                               #{l\ 14359}#)))))))
                                     (#{collect\ 14358}# #{l\ 14353}#))
                                   #f)))
                             (if (memv #{atom-key\ 14350}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 14295}#
                                     #{e\ 14323}#
                                     (vector-ref #{p\ 14324}# 1)
                                     (vector-ref #{p\ 14324}# 2)
                                     (vector-ref #{p\ 14324}# 3)
                                     #{w\ 14325}#
                                     #{r\ 14326}#
                                     #{mod\ 14327}#))
                                 (lambda (#{xr*\ 14361}#
                                          #{y-pat\ 14362}#
                                          #{r\ 14363}#)
                                   (if #{r\ 14363}#
                                     (if (null? #{y-pat\ 14362}#)
                                       (if (null? #{xr*\ 14361}#)
                                         (#{match-empty\ 14299}#
                                           (vector-ref #{p\ 14324}# 1)
                                           #{r\ 14363}#)
                                         (#{combine\ 14301}#
                                           #{xr*\ 14361}#
                                           #{r\ 14363}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 14350}# (quote (free-id)))
                                 (if (#{id?\ 10706}# #{e\ 14323}#)
                                   (if (#{free-id=?\ 10765}#
                                         (#{wrap\ 10775}#
                                           #{e\ 14323}#
                                           #{w\ 14325}#
                                           #{mod\ 14327}#)
                                         (vector-ref #{p\ 14324}# 1))
                                     #{r\ 14326}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 14350}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 14324}# 1)
                                         (#{strip\ 10817}#
                                           #{e\ 14323}#
                                           #{w\ 14325}#))
                                     #{r\ 14326}#
                                     #f)
                                   (if (memv #{atom-key\ 14350}#
                                             '(vector))
                                     (if (vector? #{e\ 14323}#)
                                       (#{match\ 14305}#
                                         (vector->list #{e\ 14323}#)
                                         (vector-ref #{p\ 14324}# 1)
                                         #{w\ 14325}#
                                         #{r\ 14326}#
                                         #{mod\ 14327}#)
                                       #f))))))))))))
               (#{combine\ 14301}#
                 (lambda (#{r*\ 14380}# #{r\ 14381}#)
                   (if (null? (car #{r*\ 14380}#))
                     #{r\ 14381}#
                     (cons (map car #{r*\ 14380}#)
                           (#{combine\ 14301}#
                             (map cdr #{r*\ 14380}#)
                             #{r\ 14381}#)))))
               (#{match-empty\ 14299}#
                 (lambda (#{p\ 14384}# #{r\ 14385}#)
                   (if (null? #{p\ 14384}#)
                     #{r\ 14385}#
                     (if (eq? #{p\ 14384}# (quote any))
                       (cons (quote ()) #{r\ 14385}#)
                       (if (pair? #{p\ 14384}#)
                         (#{match-empty\ 14299}#
                           (car #{p\ 14384}#)
                           (#{match-empty\ 14299}#
                             (cdr #{p\ 14384}#)
                             #{r\ 14385}#))
                         (if (eq? #{p\ 14384}# (quote each-any))
                           (cons (quote ()) #{r\ 14385}#)
                           (let ((#{atom-key\ 14399}#
                                   (vector-ref #{p\ 14384}# 0)))
                             (if (memv #{atom-key\ 14399}# (quote (each)))
                               (#{match-empty\ 14299}#
                                 (vector-ref #{p\ 14384}# 1)
                                 #{r\ 14385}#)
                               (if (memv #{atom-key\ 14399}# (quote (each+)))
                                 (#{match-empty\ 14299}#
                                   (vector-ref #{p\ 14384}# 1)
                                   (#{match-empty\ 14299}#
                                     (reverse (vector-ref #{p\ 14384}# 2))
                                     (#{match-empty\ 14299}#
                                       (vector-ref #{p\ 14384}# 3)
                                       #{r\ 14385}#)))
                                 (if (memv #{atom-key\ 14399}#
                                           '(free-id atom))
                                   #{r\ 14385}#
                                   (if (memv #{atom-key\ 14399}#
                                             '(vector))
                                     (#{match-empty\ 14299}#
                                       (vector-ref #{p\ 14384}# 1)
                                       #{r\ 14385}#))))))))))))
               (#{match-each-any\ 14297}#
                 (lambda (#{e\ 14404}# #{w\ 14405}# #{mod\ 14406}#)
                   (if (pair? #{e\ 14404}#)
                     (let ((#{l\ 14413}#
                             (#{match-each-any\ 14297}#
                               (cdr #{e\ 14404}#)
                               #{w\ 14405}#
                               #{mod\ 14406}#)))
                       (if #{l\ 14413}#
                         (cons (#{wrap\ 10775}#
                                 (car #{e\ 14404}#)
                                 #{w\ 14405}#
                                 #{mod\ 14406}#)
                               #{l\ 14413}#)
                         #f))
                     (if (null? #{e\ 14404}#)
                       '()
                       (if (#{syntax-object?\ 10670}# #{e\ 14404}#)
                         (#{match-each-any\ 14297}#
                           (#{syntax-object-expression\ 10672}#
                             #{e\ 14404}#)
                           (#{join-wraps\ 10757}#
                             #{w\ 14405}#
                             (#{syntax-object-wrap\ 10674}# #{e\ 14404}#))
                           #{mod\ 14406}#)
                         #f)))))
               (#{match-each+\ 14295}#
                 (lambda (#{e\ 14421}#
                          #{x-pat\ 14422}#
                          #{y-pat\ 14423}#
                          #{z-pat\ 14424}#
                          #{w\ 14425}#
                          #{r\ 14426}#
                          #{mod\ 14427}#)
                   (letrec ((#{f\ 14438}#
                              (lambda (#{e\ 14439}# #{w\ 14440}#)
                                (if (pair? #{e\ 14439}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 14438}#
                                        (cdr #{e\ 14439}#)
                                        #{w\ 14440}#))
                                    (lambda (#{xr*\ 14443}#
                                             #{y-pat\ 14444}#
                                             #{r\ 14445}#)
                                      (if #{r\ 14445}#
                                        (if (null? #{y-pat\ 14444}#)
                                          (let ((#{xr\ 14450}#
                                                  (#{match\ 14305}#
                                                    (car #{e\ 14439}#)
                                                    #{x-pat\ 14422}#
                                                    #{w\ 14440}#
                                                    '()
                                                    #{mod\ 14427}#)))
                                            (if #{xr\ 14450}#
                                              (values
                                                (cons #{xr\ 14450}#
                                                      #{xr*\ 14443}#)
                                                #{y-pat\ 14444}#
                                                #{r\ 14445}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 14444}#)
                                            (#{match\ 14305}#
                                              (car #{e\ 14439}#)
                                              (car #{y-pat\ 14444}#)
                                              #{w\ 14440}#
                                              #{r\ 14445}#
                                              #{mod\ 14427}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 10670}# #{e\ 14439}#)
                                    (#{f\ 14438}#
                                      (#{syntax-object-expression\ 10672}#
                                        #{e\ 14439}#)
                                      (#{join-wraps\ 10757}#
                                        #{w\ 14440}#
                                        #{e\ 14439}#))
                                    (values
                                      '()
                                      #{y-pat\ 14423}#
                                      (#{match\ 14305}#
                                        #{e\ 14439}#
                                        #{z-pat\ 14424}#
                                        #{w\ 14440}#
                                        #{r\ 14426}#
                                        #{mod\ 14427}#)))))))
                     (#{f\ 14438}# #{e\ 14421}# #{w\ 14425}#))))
               (#{match-each\ 14293}#
                 (lambda (#{e\ 14454}#
                          #{p\ 14455}#
                          #{w\ 14456}#
                          #{mod\ 14457}#)
                   (if (pair? #{e\ 14454}#)
                     (let ((#{first\ 14465}#
                             (#{match\ 14305}#
                               (car #{e\ 14454}#)
                               #{p\ 14455}#
                               #{w\ 14456}#
                               '()
                               #{mod\ 14457}#)))
                       (if #{first\ 14465}#
                         (let ((#{rest\ 14469}#
                                 (#{match-each\ 14293}#
                                   (cdr #{e\ 14454}#)
                                   #{p\ 14455}#
                                   #{w\ 14456}#
                                   #{mod\ 14457}#)))
                           (if #{rest\ 14469}#
                             (cons #{first\ 14465}# #{rest\ 14469}#)
                             #f))
                         #f))
                     (if (null? #{e\ 14454}#)
                       '()
                       (if (#{syntax-object?\ 10670}# #{e\ 14454}#)
                         (#{match-each\ 14293}#
                           (#{syntax-object-expression\ 10672}#
                             #{e\ 14454}#)
                           #{p\ 14455}#
                           (#{join-wraps\ 10757}#
                             #{w\ 14456}#
                             (#{syntax-object-wrap\ 10674}# #{e\ 14454}#))
                           (#{syntax-object-module\ 10676}# #{e\ 14454}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 14477}# #{p\ 14478}#)
            (if (eq? #{p\ 14478}# (quote any))
              (list #{e\ 14477}#)
              (if (#{syntax-object?\ 10670}# #{e\ 14477}#)
                (#{match*\ 14303}#
                  (#{syntax-object-expression\ 10672}#
                    #{e\ 14477}#)
                  #{p\ 14478}#
                  (#{syntax-object-wrap\ 10674}# #{e\ 14477}#)
                  '()
                  (#{syntax-object-module\ 10676}# #{e\ 14477}#))
                (#{match*\ 14303}#
                  #{e\ 14477}#
                  #{p\ 14478}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 14487}#)
            ((lambda (#{tmp\ 14489}#)
               ((lambda (#{tmp\ 14490}#)
                  (if #{tmp\ 14490}#
                    (apply (lambda (#{_\ 14494}# #{e1\ 14495}# #{e2\ 14496}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i14491" "i14492" "i14493"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i14488")))
                                      (hygiene guile))
                                   (cons #{e1\ 14495}# #{e2\ 14496}#)))
                           #{tmp\ 14490}#)
                    ((lambda (#{tmp\ 14498}#)
                       (if #{tmp\ 14498}#
                         (apply (lambda (#{_\ 14504}#
                                         #{out\ 14505}#
                                         #{in\ 14506}#
                                         #{e1\ 14507}#
                                         #{e2\ 14508}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i14499"
                                                "i14500"
                                                "i14501"
                                                "i14502"
                                                "i14503"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i14488")))
                                           (hygiene guile))
                                        #{in\ 14506}#
                                        '()
                                        (list #{out\ 14505}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i14499"
                                                            "i14500"
                                                            "i14501"
                                                            "i14502"
                                                            "i14503"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i14488")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 14507}#
                                                          #{e2\ 14508}#)))))
                                #{tmp\ 14498}#)
                         ((lambda (#{tmp\ 14510}#)
                            (if #{tmp\ 14510}#
                              (apply (lambda (#{_\ 14516}#
                                              #{out\ 14517}#
                                              #{in\ 14518}#
                                              #{e1\ 14519}#
                                              #{e2\ 14520}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i14511"
                                                     "i14512"
                                                     "i14513"
                                                     "i14514"
                                                     "i14515"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i14488")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i14511"
                                                           "i14512"
                                                           "i14513"
                                                           "i14514"
                                                           "i14515"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i14488")))
                                                      (hygiene guile))
                                                   #{in\ 14518}#)
                                             '()
                                             (list #{out\ 14517}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i14511"
                                                                 "i14512"
                                                                 "i14513"
                                                                 "i14514"
                                                                 "i14515"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i14488")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 14519}#
                                                               #{e2\ 14520}#)))))
                                     #{tmp\ 14510}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 14489}#)))
                          ($sc-dispatch
                            #{tmp\ 14489}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 14489}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 14489}#
                  '(any () any . each-any))))
             #{x\ 14487}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 14524}#)
            ((lambda (#{tmp\ 14526}#)
               ((lambda (#{tmp\ 14527}#)
                  (if #{tmp\ 14527}#
                    (apply (lambda (#{_\ 14533}#
                                    #{k\ 14534}#
                                    #{keyword\ 14535}#
                                    #{pattern\ 14536}#
                                    #{template\ 14537}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i14528"
                                           "i14529"
                                           "i14530"
                                           "i14531"
                                           "i14532"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i14525")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i14528"
                                            "i14529"
                                            "i14530"
                                            "i14531"
                                            "i14532"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i14525")))
                                       (hygiene guile)))
                                   (vector
                                     '(#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i14528"
                                              "i14529"
                                              "i14530"
                                              "i14531"
                                              "i14532"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14525")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         syntax-rules
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i14528"
                                              "i14529"
                                              "i14530"
                                              "i14531"
                                              "i14532"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14525")))
                                         (hygiene guile)))
                                     (cons '#(syntax-object
                                              patterns
                                              ((top)
                                               #(ribcage
                                                 #(_
                                                   k
                                                   keyword
                                                   pattern
                                                   template)
                                                 #((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                 #("i14528"
                                                   "i14529"
                                                   "i14530"
                                                   "i14531"
                                                   "i14532"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i14525")))
                                              (hygiene guile))
                                           #{pattern\ 14536}#))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i14528"
                                                 "i14529"
                                                 "i14530"
                                                 "i14531"
                                                 "i14532"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i14525")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i14528"
                                                       "i14529"
                                                       "i14530"
                                                       "i14531"
                                                       "i14532"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i14525")))
                                                  (hygiene guile))
                                               (cons #{k\ 14534}#
                                                     (map (lambda (#{tmp\ 14541}#
                                                                   #{tmp\ 14540}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i14528"
                                                                                "i14529"
                                                                                "i14530"
                                                                                "i14531"
                                                                                "i14532"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i14525")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 14540}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i14528"
                                                                                "i14529"
                                                                                "i14530"
                                                                                "i14531"
                                                                                "i14532"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i14525")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 14541}#)))
                                                          #{template\ 14537}#
                                                          #{pattern\ 14536}#))))))
                           #{tmp\ 14527}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14526}#)))
                ($sc-dispatch
                  #{tmp\ 14526}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 14524}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 14542}#)
            ((lambda (#{tmp\ 14544}#)
               ((lambda (#{tmp\ 14545}#)
                  (if (if #{tmp\ 14545}#
                        (apply (lambda (#{let*\ 14551}#
                                        #{x\ 14552}#
                                        #{v\ 14553}#
                                        #{e1\ 14554}#
                                        #{e2\ 14555}#)
                                 (and-map identifier? #{x\ 14552}#))
                               #{tmp\ 14545}#)
                        #f)
                    (apply (lambda (#{let*\ 14562}#
                                    #{x\ 14563}#
                                    #{v\ 14564}#
                                    #{e1\ 14565}#
                                    #{e2\ 14566}#)
                             (letrec ((#{f\ 14569}#
                                        (lambda (#{bindings\ 14570}#)
                                          (if (null? #{bindings\ 14570}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i14567" "i14568"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i14557"
                                                          "i14558"
                                                          "i14559"
                                                          "i14560"
                                                          "i14561"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i14543")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 14565}#
                                                              #{e2\ 14566}#)))
                                            ((lambda (#{tmp\ 14575}#)
                                               ((lambda (#{tmp\ 14576}#)
                                                  (if #{tmp\ 14576}#
                                                    (apply (lambda (#{body\ 14579}#
                                                                    #{binding\ 14580}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i14577"
                                                                           "i14578"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i14567"
                                                                           "i14568"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i14557"
                                                                           "i14558"
                                                                           "i14559"
                                                                           "i14560"
                                                                           "i14561"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i14543")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 14580}#)
                                                                   #{body\ 14579}#))
                                                           #{tmp\ 14576}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 14575}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 14575}#
                                                  '(any any))))
                                             (list (#{f\ 14569}#
                                                     (cdr #{bindings\ 14570}#))
                                                   (car #{bindings\ 14570}#)))))))
                               (#{f\ 14569}#
                                 (map list #{x\ 14563}# #{v\ 14564}#))))
                           #{tmp\ 14545}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14544}#)))
                ($sc-dispatch
                  #{tmp\ 14544}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 14542}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 14581}#)
            ((lambda (#{tmp\ 14583}#)
               ((lambda (#{tmp\ 14584}#)
                  (if #{tmp\ 14584}#
                    (apply (lambda (#{_\ 14592}#
                                    #{var\ 14593}#
                                    #{init\ 14594}#
                                    #{step\ 14595}#
                                    #{e0\ 14596}#
                                    #{e1\ 14597}#
                                    #{c\ 14598}#)
                             ((lambda (#{tmp\ 14600}#)
                                ((lambda (#{tmp\ 14601}#)
                                   (if #{tmp\ 14601}#
                                     (apply (lambda (#{step\ 14603}#)
                                              ((lambda (#{tmp\ 14604}#)
                                                 ((lambda (#{tmp\ 14605}#)
                                                    (if #{tmp\ 14605}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i14602"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i14585"
                                                                             "i14586"
                                                                             "i14587"
                                                                             "i14588"
                                                                             "i14589"
                                                                             "i14590"
                                                                             "i14591"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i14582")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i14602"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i14585"
                                                                             "i14586"
                                                                             "i14587"
                                                                             "i14588"
                                                                             "i14589"
                                                                             "i14590"
                                                                             "i14591"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i14582")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 14593}#
                                                                          #{init\ 14594}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i14602"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i14585"
                                                                                   "i14586"
                                                                                   "i14587"
                                                                                   "i14588"
                                                                                   "i14589"
                                                                                   "i14590"
                                                                                   "i14591"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i14582")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i14602"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i14585"
                                                                                         "i14586"
                                                                                         "i14587"
                                                                                         "i14588"
                                                                                         "i14589"
                                                                                         "i14590"
                                                                                         "i14591"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i14582")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 14596}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i14602"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i14585"
                                                                                         "i14586"
                                                                                         "i14587"
                                                                                         "i14588"
                                                                                         "i14589"
                                                                                         "i14590"
                                                                                         "i14591"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i14582")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 14598}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i14602"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i14585"
                                                                                                       "i14586"
                                                                                                       "i14587"
                                                                                                       "i14588"
                                                                                                       "i14589"
                                                                                                       "i14590"
                                                                                                       "i14591"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i14582")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 14603}#)))))))
                                                             #{tmp\ 14605}#)
                                                      ((lambda (#{tmp\ 14610}#)
                                                         (if #{tmp\ 14610}#
                                                           (apply (lambda (#{e1\ 14613}#
                                                                           #{e2\ 14614}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i14611"
                                                                                  "i14612"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i14602"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i14585"
                                                                                  "i14586"
                                                                                  "i14587"
                                                                                  "i14588"
                                                                                  "i14589"
                                                                                  "i14590"
                                                                                  "i14591"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i14582")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i14611"
                                                                                  "i14612"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i14602"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i14585"
                                                                                  "i14586"
                                                                                  "i14587"
                                                                                  "i14588"
                                                                                  "i14589"
                                                                                  "i14590"
                                                                                  "i14591"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i14582")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 14593}#
                                                                               #{init\ 14594}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i14611"
                                                                                        "i14612"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i14602"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14585"
                                                                                        "i14586"
                                                                                        "i14587"
                                                                                        "i14588"
                                                                                        "i14589"
                                                                                        "i14590"
                                                                                        "i14591"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i14582")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 14596}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i14611"
                                                                                              "i14612"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i14602"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i14585"
                                                                                              "i14586"
                                                                                              "i14587"
                                                                                              "i14588"
                                                                                              "i14589"
                                                                                              "i14590"
                                                                                              "i14591"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i14582")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 14613}#
                                                                                            #{e2\ 14614}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i14611"
                                                                                              "i14612"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i14602"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i14585"
                                                                                              "i14586"
                                                                                              "i14587"
                                                                                              "i14588"
                                                                                              "i14589"
                                                                                              "i14590"
                                                                                              "i14591"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i14582")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 14598}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i14611"
                                                                                                            "i14612"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i14602"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i14585"
                                                                                                            "i14586"
                                                                                                            "i14587"
                                                                                                            "i14588"
                                                                                                            "i14589"
                                                                                                            "i14590"
                                                                                                            "i14591"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i14582")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 14603}#)))))))
                                                                  #{tmp\ 14610}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 14604}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 14604}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 14604}#
                                                    '())))
                                               #{e1\ 14597}#))
                                            #{tmp\ 14601}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 14600}#)))
                                 ($sc-dispatch
                                   #{tmp\ 14600}#
                                   'each-any)))
                              (map (lambda (#{v\ 14621}# #{s\ 14622}#)
                                     ((lambda (#{tmp\ 14625}#)
                                        ((lambda (#{tmp\ 14626}#)
                                           (if #{tmp\ 14626}#
                                             (apply (lambda () #{v\ 14621}#)
                                                    #{tmp\ 14626}#)
                                             ((lambda (#{tmp\ 14627}#)
                                                (if #{tmp\ 14627}#
                                                  (apply (lambda (#{e\ 14629}#)
                                                           #{e\ 14629}#)
                                                         #{tmp\ 14627}#)
                                                  ((lambda (#{_\ 14631}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 14581}#
                                                       #{s\ 14622}#))
                                                   #{tmp\ 14625}#)))
                                              ($sc-dispatch
                                                #{tmp\ 14625}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 14625}#
                                           '())))
                                      #{s\ 14622}#))
                                   #{var\ 14593}#
                                   #{step\ 14595}#)))
                           #{tmp\ 14584}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14583}#)))
                ($sc-dispatch
                  #{tmp\ 14583}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 14581}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 14638}#
                     (lambda (#{x\ 14642}# #{y\ 14643}#)
                       ((lambda (#{tmp\ 14647}#)
                          ((lambda (#{tmp\ 14648}#)
                             (if #{tmp\ 14648}#
                               (apply (lambda (#{x\ 14651}# #{y\ 14652}#)
                                        ((lambda (#{tmp\ 14653}#)
                                           ((lambda (#{tmp\ 14654}#)
                                              (if #{tmp\ 14654}#
                                                (apply (lambda (#{dy\ 14656}#)
                                                         ((lambda (#{tmp\ 14657}#)
                                                            ((lambda (#{tmp\ 14658}#)
                                                               (if #{tmp\ 14658}#
                                                                 (apply (lambda (#{dx\ 14660}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i14659"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i14655"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i14649"
                                                                                        "i14650"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i14644"
                                                                                        "i14645"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14634"
                                                                                        "i14635"
                                                                                        "i14636"
                                                                                        "i14637")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 14660}#
                                                                                      #{dy\ 14656}#)))
                                                                        #{tmp\ 14658}#)
                                                                 ((lambda (#{_\ 14662}#)
                                                                    (if (null? #{dy\ 14656}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i14661"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i14655"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i14649"
                                                                                    "i14650"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i14644"
                                                                                    "i14645"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i14634"
                                                                                    "i14635"
                                                                                    "i14636"
                                                                                    "i14637")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 14651}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i14661"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i14655"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i14649"
                                                                                    "i14650"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i14644"
                                                                                    "i14645"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i14634"
                                                                                    "i14635"
                                                                                    "i14636"
                                                                                    "i14637")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 14651}#
                                                                            #{y\ 14652}#)))
                                                                  #{tmp\ 14657}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 14657}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i14655"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i14649"
                                                                          "i14650"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i14644"
                                                                          "i14645"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i14634"
                                                                          "i14635"
                                                                          "i14636"
                                                                          "i14637")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 14651}#))
                                                       #{tmp\ 14654}#)
                                                ((lambda (#{tmp\ 14663}#)
                                                   (if #{tmp\ 14663}#
                                                     (apply (lambda (#{stuff\ 14665}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i14664"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i14649"
                                                                            "i14650"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i14644"
                                                                            "i14645"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i14634"
                                                                            "i14635"
                                                                            "i14636"
                                                                            "i14637")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 14651}#
                                                                          #{stuff\ 14665}#)))
                                                            #{tmp\ 14663}#)
                                                     ((lambda (#{else\ 14667}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i14666"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i14649"
                                                                      "i14650"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i14644"
                                                                      "i14645"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i14634"
                                                                      "i14635"
                                                                      "i14636"
                                                                      "i14637")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 14651}#
                                                              #{y\ 14652}#))
                                                      #{tmp\ 14653}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 14653}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i14649"
                                                              "i14650"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i14644"
                                                              "i14645"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i14634"
                                                              "i14635"
                                                              "i14636"
                                                              "i14637")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 14653}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i14649" "i14650"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i14644" "i14645"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i14634"
                                                         "i14635"
                                                         "i14636"
                                                         "i14637")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 14652}#))
                                      #{tmp\ 14648}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 14647}#)))
                           ($sc-dispatch #{tmp\ 14647}# (quote (any any)))))
                        (list #{x\ 14642}# #{y\ 14643}#))))
                   (#{quasiappend\ 14639}#
                     (lambda (#{x\ 14668}# #{y\ 14669}#)
                       ((lambda (#{tmp\ 14673}#)
                          ((lambda (#{tmp\ 14674}#)
                             (if #{tmp\ 14674}#
                               (apply (lambda (#{x\ 14677}# #{y\ 14678}#)
                                        ((lambda (#{tmp\ 14679}#)
                                           ((lambda (#{tmp\ 14680}#)
                                              (if #{tmp\ 14680}#
                                                (apply (lambda () #{x\ 14677}#)
                                                       #{tmp\ 14680}#)
                                                ((lambda (#{_\ 14682}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i14681"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i14675"
                                                                 "i14676"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i14670"
                                                                 "i14671"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i14634"
                                                                 "i14635"
                                                                 "i14636"
                                                                 "i14637")))
                                                            (hygiene guile))
                                                         #{x\ 14677}#
                                                         #{y\ 14678}#))
                                                 #{tmp\ 14679}#)))
                                            ($sc-dispatch
                                              #{tmp\ 14679}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i14675" "i14676"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i14670" "i14671"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i14634"
                                                         "i14635"
                                                         "i14636"
                                                         "i14637")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 14678}#))
                                      #{tmp\ 14674}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 14673}#)))
                           ($sc-dispatch #{tmp\ 14673}# (quote (any any)))))
                        (list #{x\ 14668}# #{y\ 14669}#))))
                   (#{quasivector\ 14640}#
                     (lambda (#{x\ 14683}#)
                       ((lambda (#{tmp\ 14686}#)
                          ((lambda (#{x\ 14688}#)
                             ((lambda (#{tmp\ 14689}#)
                                ((lambda (#{tmp\ 14690}#)
                                   (if #{tmp\ 14690}#
                                     (apply (lambda (#{x\ 14692}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i14691"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i14687"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i14684"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i14634"
                                                            "i14635"
                                                            "i14636"
                                                            "i14637")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 14692}#)))
                                            #{tmp\ 14690}#)
                                     ((lambda (#{tmp\ 14694}#)
                                        (if #{tmp\ 14694}#
                                          (apply (lambda (#{x\ 14696}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i14695"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i14687"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i14684"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i14634"
                                                                 "i14635"
                                                                 "i14636"
                                                                 "i14637")))
                                                            (hygiene guile))
                                                         #{x\ 14696}#))
                                                 #{tmp\ 14694}#)
                                          ((lambda (#{_\ 14699}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i14698"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i14687"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i14684"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i14634"
                                                           "i14635"
                                                           "i14636"
                                                           "i14637")))
                                                      (hygiene guile))
                                                   #{x\ 14688}#))
                                           #{tmp\ 14689}#)))
                                      ($sc-dispatch
                                        #{tmp\ 14689}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i14687"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i14684"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i14634"
                                                   "i14635"
                                                   "i14636"
                                                   "i14637")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 14689}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i14687"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14684"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i14634"
                                              "i14635"
                                              "i14636"
                                              "i14637")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 14688}#))
                           #{tmp\ 14686}#))
                        #{x\ 14683}#)))
                   (#{quasi\ 14641}#
                     (lambda (#{p\ 14700}# #{lev\ 14701}#)
                       ((lambda (#{tmp\ 14704}#)
                          ((lambda (#{tmp\ 14705}#)
                             (if #{tmp\ 14705}#
                               (apply (lambda (#{p\ 14707}#)
                                        (if (= #{lev\ 14701}# 0)
                                          #{p\ 14707}#
                                          (#{quasicons\ 14638}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i14706"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i14702" "i14703"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i14634"
                                                     "i14635"
                                                     "i14636"
                                                     "i14637")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i14706"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i14702" "i14703"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i14634"
                                                     "i14635"
                                                     "i14636"
                                                     "i14637")))
                                                (hygiene guile)))
                                            (#{quasi\ 14641}#
                                              (list #{p\ 14707}#)
                                              (- #{lev\ 14701}# 1)))))
                                      #{tmp\ 14705}#)
                               ((lambda (#{tmp\ 14708}#)
                                  (if (if #{tmp\ 14708}#
                                        (apply (lambda (#{args\ 14710}#)
                                                 (= #{lev\ 14701}# 0))
                                               #{tmp\ 14708}#)
                                        #f)
                                    (apply (lambda (#{args\ 14712}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 14700}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i14711"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i14702"
                                                             "i14703"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i14634"
                                                             "i14635"
                                                             "i14636"
                                                             "i14637")))
                                                        (hygiene guile))
                                                     #{args\ 14712}#)))
                                           #{tmp\ 14708}#)
                                    ((lambda (#{tmp\ 14713}#)
                                       (if #{tmp\ 14713}#
                                         (apply (lambda (#{p\ 14716}#
                                                         #{q\ 14717}#)
                                                  (if (= #{lev\ 14701}# 0)
                                                    (#{quasiappend\ 14639}#
                                                      #{p\ 14716}#
                                                      (#{quasi\ 14641}#
                                                        #{q\ 14717}#
                                                        #{lev\ 14701}#))
                                                    (#{quasicons\ 14638}#
                                                      (#{quasicons\ 14638}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i14714"
                                                                 "i14715"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i14702"
                                                                 "i14703"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i14634"
                                                                 "i14635"
                                                                 "i14636"
                                                                 "i14637")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i14714"
                                                                 "i14715"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i14702"
                                                                 "i14703"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i14634"
                                                                 "i14635"
                                                                 "i14636"
                                                                 "i14637")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 14641}#
                                                          (list #{p\ 14716}#)
                                                          (- #{lev\ 14701}#
                                                             1)))
                                                      (#{quasi\ 14641}#
                                                        #{q\ 14717}#
                                                        #{lev\ 14701}#))))
                                                #{tmp\ 14713}#)
                                         ((lambda (#{tmp\ 14718}#)
                                            (if (if #{tmp\ 14718}#
                                                  (apply (lambda (#{args\ 14721}#
                                                                  #{q\ 14722}#)
                                                           (= #{lev\ 14701}#
                                                              0))
                                                         #{tmp\ 14718}#)
                                                  #f)
                                              (apply (lambda (#{args\ 14725}#
                                                              #{q\ 14726}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 14700}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i14723"
                                                                       "i14724"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i14702"
                                                                       "i14703"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i14634"
                                                                       "i14635"
                                                                       "i14636"
                                                                       "i14637")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 14725}#)))
                                                     #{tmp\ 14718}#)
                                              ((lambda (#{tmp\ 14727}#)
                                                 (if #{tmp\ 14727}#
                                                   (apply (lambda (#{p\ 14729}#)
                                                            (#{quasicons\ 14638}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i14728"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i14702"
                                                                       "i14703"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i14634"
                                                                       "i14635"
                                                                       "i14636"
                                                                       "i14637")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i14728"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i14702"
                                                                       "i14703"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i14634"
                                                                       "i14635"
                                                                       "i14636"
                                                                       "i14637")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 14641}#
                                                                (list #{p\ 14729}#)
                                                                (+ #{lev\ 14701}#
                                                                   1))))
                                                          #{tmp\ 14727}#)
                                                   ((lambda (#{tmp\ 14730}#)
                                                      (if #{tmp\ 14730}#
                                                        (apply (lambda (#{p\ 14733}#
                                                                        #{q\ 14734}#)
                                                                 (#{quasicons\ 14638}#
                                                                   (#{quasi\ 14641}#
                                                                     #{p\ 14733}#
                                                                     #{lev\ 14701}#)
                                                                   (#{quasi\ 14641}#
                                                                     #{q\ 14734}#
                                                                     #{lev\ 14701}#)))
                                                               #{tmp\ 14730}#)
                                                        ((lambda (#{tmp\ 14735}#)
                                                           (if #{tmp\ 14735}#
                                                             (apply (lambda (#{x\ 14737}#)
                                                                      (#{quasivector\ 14640}#
                                                                        (#{quasi\ 14641}#
                                                                          #{x\ 14737}#
                                                                          #{lev\ 14701}#)))
                                                                    #{tmp\ 14735}#)
                                                             ((lambda (#{p\ 14740}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i14739"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i14702"
                                                                              "i14703"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i14634"
                                                                              "i14635"
                                                                              "i14636"
                                                                              "i14637")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 14740}#))
                                                              #{tmp\ 14704}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 14704}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 14704}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 14704}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i14702" "i14703"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i14634"
                                                            "i14635"
                                                            "i14636"
                                                            "i14637")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 14704}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i14702" "i14703"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i14634"
                                                        "i14635"
                                                        "i14636"
                                                        "i14637")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 14704}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i14702" "i14703"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i14634"
                                                   "i14635"
                                                   "i14636"
                                                   "i14637")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 14704}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i14702" "i14703"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i14634"
                                             "i14635"
                                             "i14636"
                                             "i14637")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 14704}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i14702" "i14703"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i14634" "i14635" "i14636" "i14637")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 14700}#))))
            (lambda (#{x\ 14741}#)
              ((lambda (#{tmp\ 14743}#)
                 ((lambda (#{tmp\ 14744}#)
                    (if #{tmp\ 14744}#
                      (apply (lambda (#{_\ 14747}# #{e\ 14748}#)
                               (#{quasi\ 14641}# #{e\ 14748}# 0))
                             #{tmp\ 14744}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 14743}#)))
                  ($sc-dispatch #{tmp\ 14743}# (quote (any any)))))
               #{x\ 14741}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 14749}#)
            (letrec ((#{read-file\ 14752}#
                       (lambda (#{fn\ 14753}# #{k\ 14754}#)
                         (let ((#{p\ 14758}# (open-input-file #{fn\ 14753}#)))
                           (letrec ((#{f\ 14762}#
                                      (lambda (#{x\ 14763}# #{result\ 14764}#)
                                        (if (eof-object? #{x\ 14763}#)
                                          (begin
                                            (close-input-port #{p\ 14758}#)
                                            (reverse #{result\ 14764}#))
                                          (#{f\ 14762}#
                                            (read #{p\ 14758}#)
                                            (cons (datum->syntax
                                                    #{k\ 14754}#
                                                    #{x\ 14763}#)
                                                  #{result\ 14764}#))))))
                             (#{f\ 14762}# (read #{p\ 14758}#) (quote ())))))))
              ((lambda (#{tmp\ 14765}#)
                 ((lambda (#{tmp\ 14766}#)
                    (if #{tmp\ 14766}#
                      (apply (lambda (#{k\ 14769}# #{filename\ 14770}#)
                               (let ((#{fn\ 14772}#
                                       (syntax->datum #{filename\ 14770}#)))
                                 ((lambda (#{tmp\ 14774}#)
                                    ((lambda (#{tmp\ 14775}#)
                                       (if #{tmp\ 14775}#
                                         (apply (lambda (#{exp\ 14777}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i14776"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i14771"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i14767"
                                                                "i14768"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i14751"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i14750")))
                                                           (hygiene guile))
                                                        #{exp\ 14777}#))
                                                #{tmp\ 14775}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 14774}#)))
                                     ($sc-dispatch
                                       #{tmp\ 14774}#
                                       'each-any)))
                                  (#{read-file\ 14752}#
                                    #{fn\ 14772}#
                                    #{k\ 14769}#))))
                             #{tmp\ 14766}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 14765}#)))
                  ($sc-dispatch #{tmp\ 14765}# (quote (any any)))))
               #{x\ 14749}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 14779}#)
            ((lambda (#{tmp\ 14781}#)
               ((lambda (#{tmp\ 14782}#)
                  (if #{tmp\ 14782}#
                    (apply (lambda (#{k\ 14785}# #{filename\ 14786}#)
                             (let ((#{fn\ 14788}#
                                     (syntax->datum #{filename\ 14786}#)))
                               ((lambda (#{tmp\ 14790}#)
                                  ((lambda (#{fn\ 14792}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i14791"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i14787"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i14783" "i14784"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i14780")))
                                              (hygiene guile))
                                           #{fn\ 14792}#))
                                   #{tmp\ 14790}#))
                                (let ((#{t\ 14795}#
                                        (%search-load-path #{fn\ 14788}#)))
                                  (if #{t\ 14795}#
                                    #{t\ 14795}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 14779}#
                                      #{filename\ 14786}#))))))
                           #{tmp\ 14782}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14781}#)))
                ($sc-dispatch #{tmp\ 14781}# (quote (any any)))))
             #{x\ 14779}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 14797}#)
            ((lambda (#{tmp\ 14799}#)
               ((lambda (#{tmp\ 14800}#)
                  (if #{tmp\ 14800}#
                    (apply (lambda (#{_\ 14803}# #{e\ 14804}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 14797}#))
                           #{tmp\ 14800}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14799}#)))
                ($sc-dispatch #{tmp\ 14799}# (quote (any any)))))
             #{x\ 14797}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 14805}#)
            ((lambda (#{tmp\ 14807}#)
               ((lambda (#{tmp\ 14808}#)
                  (if #{tmp\ 14808}#
                    (apply (lambda (#{_\ 14811}# #{e\ 14812}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 14805}#))
                           #{tmp\ 14808}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14807}#)))
                ($sc-dispatch #{tmp\ 14807}# (quote (any any)))))
             #{x\ 14805}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 14813}#)
            ((lambda (#{tmp\ 14815}#)
               ((lambda (#{tmp\ 14816}#)
                  (if #{tmp\ 14816}#
                    (apply (lambda (#{_\ 14821}#
                                    #{e\ 14822}#
                                    #{m1\ 14823}#
                                    #{m2\ 14824}#)
                             ((lambda (#{tmp\ 14826}#)
                                ((lambda (#{body\ 14828}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i14827"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i14817"
                                                 "i14818"
                                                 "i14819"
                                                 "i14820"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i14814")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i14827"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i14817"
                                                             "i14818"
                                                             "i14819"
                                                             "i14820"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i14814")))
                                                        (hygiene guile))
                                                     #{e\ 14822}#))
                                         #{body\ 14828}#))
                                 #{tmp\ 14826}#))
                              (letrec ((#{f\ 14832}#
                                         (lambda (#{clause\ 14833}#
                                                  #{clauses\ 14834}#)
                                           (if (null? #{clauses\ 14834}#)
                                             ((lambda (#{tmp\ 14836}#)
                                                ((lambda (#{tmp\ 14837}#)
                                                   (if #{tmp\ 14837}#
                                                     (apply (lambda (#{e1\ 14840}#
                                                                     #{e2\ 14841}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i14838"
                                                                            "i14839"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i14829"
                                                                            "i14830"
                                                                            "i14831"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i14817"
                                                                            "i14818"
                                                                            "i14819"
                                                                            "i14820"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i14814")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 14840}#
                                                                          #{e2\ 14841}#)))
                                                            #{tmp\ 14837}#)
                                                     ((lambda (#{tmp\ 14843}#)
                                                        (if #{tmp\ 14843}#
                                                          (apply (lambda (#{k\ 14847}#
                                                                          #{e1\ 14848}#
                                                                          #{e2\ 14849}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14844"
                                                                                 "i14845"
                                                                                 "i14846"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14829"
                                                                                 "i14830"
                                                                                 "i14831"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14817"
                                                                                 "i14818"
                                                                                 "i14819"
                                                                                 "i14820"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i14814")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14844"
                                                                                       "i14845"
                                                                                       "i14846"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14829"
                                                                                       "i14830"
                                                                                       "i14831"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14817"
                                                                                       "i14818"
                                                                                       "i14819"
                                                                                       "i14820"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i14814")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14844"
                                                                                       "i14845"
                                                                                       "i14846"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14829"
                                                                                       "i14830"
                                                                                       "i14831"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14817"
                                                                                       "i14818"
                                                                                       "i14819"
                                                                                       "i14820"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i14814")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i14844"
                                                                                             "i14845"
                                                                                             "i14846"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i14829"
                                                                                             "i14830"
                                                                                             "i14831"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i14817"
                                                                                             "i14818"
                                                                                             "i14819"
                                                                                             "i14820"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i14814")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 14847}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14844"
                                                                                       "i14845"
                                                                                       "i14846"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14829"
                                                                                       "i14830"
                                                                                       "i14831"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i14817"
                                                                                       "i14818"
                                                                                       "i14819"
                                                                                       "i14820"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i14814")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 14848}#
                                                                                     #{e2\ 14849}#))))
                                                                 #{tmp\ 14843}#)
                                                          ((lambda (#{_\ 14853}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 14813}#
                                                               #{clause\ 14833}#))
                                                           #{tmp\ 14836}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 14836}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 14836}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i14829"
                                                              "i14830"
                                                              "i14831"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i14817"
                                                              "i14818"
                                                              "i14819"
                                                              "i14820"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i14814")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 14833}#)
                                             ((lambda (#{tmp\ 14855}#)
                                                ((lambda (#{rest\ 14857}#)
                                                   ((lambda (#{tmp\ 14858}#)
                                                      ((lambda (#{tmp\ 14859}#)
                                                         (if #{tmp\ 14859}#
                                                           (apply (lambda (#{k\ 14863}#
                                                                           #{e1\ 14864}#
                                                                           #{e2\ 14865}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i14860"
                                                                                  "i14861"
                                                                                  "i14862"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i14856"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i14829"
                                                                                  "i14830"
                                                                                  "i14831"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i14817"
                                                                                  "i14818"
                                                                                  "i14819"
                                                                                  "i14820"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i14814")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14860"
                                                                                        "i14861"
                                                                                        "i14862"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i14856"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14829"
                                                                                        "i14830"
                                                                                        "i14831"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14817"
                                                                                        "i14818"
                                                                                        "i14819"
                                                                                        "i14820"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i14814")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14860"
                                                                                        "i14861"
                                                                                        "i14862"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i14856"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14829"
                                                                                        "i14830"
                                                                                        "i14831"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14817"
                                                                                        "i14818"
                                                                                        "i14819"
                                                                                        "i14820"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i14814")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i14860"
                                                                                              "i14861"
                                                                                              "i14862"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i14856"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i14829"
                                                                                              "i14830"
                                                                                              "i14831"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i14817"
                                                                                              "i14818"
                                                                                              "i14819"
                                                                                              "i14820"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i14814")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 14863}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14860"
                                                                                        "i14861"
                                                                                        "i14862"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i14856"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14829"
                                                                                        "i14830"
                                                                                        "i14831"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i14817"
                                                                                        "i14818"
                                                                                        "i14819"
                                                                                        "i14820"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i14814")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 14864}#
                                                                                      #{e2\ 14865}#))
                                                                          #{rest\ 14857}#))
                                                                  #{tmp\ 14859}#)
                                                           ((lambda (#{_\ 14869}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 14813}#
                                                                #{clause\ 14833}#))
                                                            #{tmp\ 14858}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 14858}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 14833}#))
                                                 #{tmp\ 14855}#))
                                              (#{f\ 14832}#
                                                (car #{clauses\ 14834}#)
                                                (cdr #{clauses\ 14834}#)))))))
                                (#{f\ 14832}# #{m1\ 14823}# #{m2\ 14824}#))))
                           #{tmp\ 14816}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14815}#)))
                ($sc-dispatch
                  #{tmp\ 14815}#
                  '(any any any . each-any))))
             #{x\ 14813}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 14870}#)
            ((lambda (#{tmp\ 14872}#)
               ((lambda (#{tmp\ 14873}#)
                  (if #{tmp\ 14873}#
                    (apply (lambda (#{_\ 14876}# #{e\ 14877}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i14874" "i14875"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i14871")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i14874" "i14875"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i14871")))
                                       (hygiene guile)))
                                   '#((#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i14874" "i14875"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14871")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         identifier-syntax
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i14874" "i14875"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i14871")))
                                         (hygiene guile))))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i14874" "i14875"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i14871")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i14874" "i14875"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i14871")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i14874" "i14875"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i14871")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i14874" "i14875"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i14871")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i14874" "i14875"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i14871")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i14874" "i14875"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i14871")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i14874"
                                                             "i14875"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i14871")))
                                                        (hygiene guile))
                                                     #{e\ 14877}#))
                                         (list (cons #{_\ 14876}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i14874"
                                                              "i14875"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i14871")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i14874"
                                                              "i14875"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i14871")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i14874"
                                                             "i14875"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i14871")))
                                                        (hygiene guile))
                                                     (cons #{e\ 14877}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i14874"
                                                                    "i14875"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i14871")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i14874"
                                                                    "i14875"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i14871")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 14873}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 14872}#)))
                ($sc-dispatch #{tmp\ 14872}# (quote (any any)))))
             #{x\ 14870}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 14878}#)
            ((lambda (#{tmp\ 14880}#)
               ((lambda (#{tmp\ 14881}#)
                  (if #{tmp\ 14881}#
                    (apply (lambda (#{_\ 14887}#
                                    #{id\ 14888}#
                                    #{args\ 14889}#
                                    #{b0\ 14890}#
                                    #{b1\ 14891}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i14882"
                                           "i14883"
                                           "i14884"
                                           "i14885"
                                           "i14886"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i14879")))
                                      (hygiene guile))
                                   #{id\ 14888}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i14882"
                                                 "i14883"
                                                 "i14884"
                                                 "i14885"
                                                 "i14886"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i14879")))
                                            (hygiene guile))
                                         (cons #{args\ 14889}#
                                               (cons #{b0\ 14890}#
                                                     #{b1\ 14891}#)))))
                           #{tmp\ 14881}#)
                    ((lambda (#{tmp\ 14893}#)
                       (if (if #{tmp\ 14893}#
                             (apply (lambda (#{_\ 14897}#
                                             #{id\ 14898}#
                                             #{val\ 14899}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i14894" "i14895" "i14896"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i14879")))
                                           (hygiene guile))))
                                    #{tmp\ 14893}#)
                             #f)
                         (apply (lambda (#{_\ 14903}#
                                         #{id\ 14904}#
                                         #{val\ 14905}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i14900" "i14901" "i14902"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i14879")))
                                           (hygiene guile))
                                        #{id\ 14904}#
                                        #{val\ 14905}#))
                                #{tmp\ 14893}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 14880}#)))
                     ($sc-dispatch
                       #{tmp\ 14880}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 14880}#
                  '(any (any . any) any . each-any))))
             #{x\ 14878}#))
          (module-name (current-module)))))

