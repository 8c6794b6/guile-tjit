(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec*
  ((#{make-void 208}#
     (lambda (#{src 779}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 0)
         #{src 779}#)))
   (#{make-const 210}#
     (lambda (#{src 781}# #{exp 782}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 1)
         #{src 781}#
         #{exp 782}#)))
   (#{make-lexical-ref 214}#
     (lambda (#{src 789}# #{name 790}# #{gensym 791}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 3)
         #{src 789}#
         #{name 790}#
         #{gensym 791}#)))
   (#{make-lexical-set 216}#
     (lambda (#{src 795}#
              #{name 796}#
              #{gensym 797}#
              #{exp 798}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 4)
         #{src 795}#
         #{name 796}#
         #{gensym 797}#
         #{exp 798}#)))
   (#{make-module-ref 218}#
     (lambda (#{src 803}#
              #{mod 804}#
              #{name 805}#
              #{public? 806}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 5)
         #{src 803}#
         #{mod 804}#
         #{name 805}#
         #{public? 806}#)))
   (#{make-module-set 220}#
     (lambda (#{src 811}#
              #{mod 812}#
              #{name 813}#
              #{public? 814}#
              #{exp 815}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 6)
         #{src 811}#
         #{mod 812}#
         #{name 813}#
         #{public? 814}#
         #{exp 815}#)))
   (#{make-toplevel-ref 222}#
     (lambda (#{src 821}# #{name 822}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 7)
         #{src 821}#
         #{name 822}#)))
   (#{make-toplevel-set 224}#
     (lambda (#{src 825}# #{name 826}# #{exp 827}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 8)
         #{src 825}#
         #{name 826}#
         #{exp 827}#)))
   (#{make-toplevel-define 226}#
     (lambda (#{src 831}# #{name 832}# #{exp 833}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 9)
         #{src 831}#
         #{name 832}#
         #{exp 833}#)))
   (#{make-conditional 228}#
     (lambda (#{src 837}#
              #{test 838}#
              #{consequent 839}#
              #{alternate 840}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 10)
         #{src 837}#
         #{test 838}#
         #{consequent 839}#
         #{alternate 840}#)))
   (#{make-application 230}#
     (lambda (#{src 845}# #{proc 846}# #{args 847}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 11)
         #{src 845}#
         #{proc 846}#
         #{args 847}#)))
   (#{make-sequence 232}#
     (lambda (#{src 851}# #{exps 852}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 12)
         #{src 851}#
         #{exps 852}#)))
   (#{make-lambda 234}#
     (lambda (#{src 855}# #{meta 856}# #{body 857}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 13)
         #{src 855}#
         #{meta 856}#
         #{body 857}#)))
   (#{make-lambda-case 236}#
     (lambda (#{src 861}#
              #{req 862}#
              #{opt 863}#
              #{rest 864}#
              #{kw 865}#
              #{inits 866}#
              #{gensyms 867}#
              #{body 868}#
              #{alternate 869}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 14)
         #{src 861}#
         #{req 862}#
         #{opt 863}#
         #{rest 864}#
         #{kw 865}#
         #{inits 866}#
         #{gensyms 867}#
         #{body 868}#
         #{alternate 869}#)))
   (#{make-let 238}#
     (lambda (#{src 879}#
              #{names 880}#
              #{gensyms 881}#
              #{vals 882}#
              #{body 883}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 15)
         #{src 879}#
         #{names 880}#
         #{gensyms 881}#
         #{vals 882}#
         #{body 883}#)))
   (#{make-letrec 240}#
     (lambda (#{src 889}#
              #{in-order? 890}#
              #{names 891}#
              #{gensyms 892}#
              #{vals 893}#
              #{body 894}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 16)
         #{src 889}#
         #{in-order? 890}#
         #{names 891}#
         #{gensyms 892}#
         #{vals 893}#
         #{body 894}#)))
   (#{make-dynlet 242}#
     (lambda (#{src 901}#
              #{fluids 902}#
              #{vals 903}#
              #{body 904}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 17)
         #{src 901}#
         #{fluids 902}#
         #{vals 903}#
         #{body 904}#)))
   (#{lambda? 245}#
     (lambda (#{x 909}#)
       (if (struct? #{x 909}#)
         (eq? (struct-vtable #{x 909}#)
              (vector-ref %expanded-vtables 13))
         #f)))
   (#{lambda-meta 247}#
     (lambda (#{x 913}#) (struct-ref #{x 913}# 1)))
   (#{set-lambda-meta! 249}#
     (lambda (#{x 915}# #{v 916}#)
       (struct-set! #{x 915}# 1 #{v 916}#)))
   (#{top-level-eval-hook 255}#
     (lambda (#{x 919}# #{mod 920}#)
       (primitive-eval #{x 919}#)))
   (#{local-eval-hook 257}#
     (lambda (#{x 923}# #{mod 924}#)
       (primitive-eval #{x 923}#)))
   (#{put-global-definition-hook 261}#
     (lambda (#{symbol 927}# #{type 928}# #{val 929}#)
       (module-define!
         (current-module)
         #{symbol 927}#
         (make-syntax-transformer
           #{symbol 927}#
           #{type 928}#
           #{val 929}#))))
   (#{get-global-definition-hook 263}#
     (lambda (#{symbol 933}# #{module 934}#)
       (begin
         (if (if (not #{module 934}#) (current-module) #f)
           (warn "module system is booted, we should have a module"
                 #{symbol 933}#))
         (let ((#{v 940}# (module-variable
                            (if #{module 934}#
                              (resolve-module (cdr #{module 934}#))
                              (current-module))
                            #{symbol 933}#)))
           (if #{v 940}#
             (if (variable-bound? #{v 940}#)
               (let ((#{val 945}# (variable-ref #{v 940}#)))
                 (if (macro? #{val 945}#)
                   (if (macro-type #{val 945}#)
                     (cons (macro-type #{val 945}#)
                           (macro-binding #{val 945}#))
                     #f)
                   #f))
               #f)
             #f)))))
   (#{decorate-source 265}#
     (lambda (#{e 949}# #{s 950}#)
       (begin
         (if (if (pair? #{e 949}#) #{s 950}# #f)
           (set-source-properties! #{e 949}# #{s 950}#))
         #{e 949}#)))
   (#{maybe-name-value! 267}#
     (lambda (#{name 955}# #{val 956}#)
       (if (#{lambda? 245}# #{val 956}#)
         (let ((#{meta 960}# (#{lambda-meta 247}# #{val 956}#)))
           (if (not (assq 'name #{meta 960}#))
             (#{set-lambda-meta! 249}#
               #{val 956}#
               (cons (cons 'name #{name 955}#) #{meta 960}#)))))))
   (#{build-void 269}#
     (lambda (#{source 961}#)
       (#{make-void 208}# #{source 961}#)))
   (#{build-application 271}#
     (lambda (#{source 963}# #{fun-exp 964}# #{arg-exps 965}#)
       (#{make-application 230}#
         #{source 963}#
         #{fun-exp 964}#
         #{arg-exps 965}#)))
   (#{build-conditional 273}#
     (lambda (#{source 969}#
              #{test-exp 970}#
              #{then-exp 971}#
              #{else-exp 972}#)
       (#{make-conditional 228}#
         #{source 969}#
         #{test-exp 970}#
         #{then-exp 971}#
         #{else-exp 972}#)))
   (#{build-lexical-reference 277}#
     (lambda (#{type 985}#
              #{source 986}#
              #{name 987}#
              #{var 988}#)
       (#{make-lexical-ref 214}#
         #{source 986}#
         #{name 987}#
         #{var 988}#)))
   (#{analyze-variable 281}#
     (lambda (#{mod 1001}#
              #{var 1002}#
              #{modref-cont 1003}#
              #{bare-cont 1004}#)
       (if (not #{mod 1001}#)
         (#{bare-cont 1004}# #{var 1002}#)
         (let ((#{kind 1011}# (car #{mod 1001}#))
               (#{mod 1012}# (cdr #{mod 1001}#)))
           (if (memv #{kind 1011}# '(public))
             (#{modref-cont 1003}#
               #{mod 1012}#
               #{var 1002}#
               #t)
             (if (memv #{kind 1011}# '(private))
               (if (not (equal?
                          #{mod 1012}#
                          (module-name (current-module))))
                 (#{modref-cont 1003}#
                   #{mod 1012}#
                   #{var 1002}#
                   #f)
                 (#{bare-cont 1004}# #{var 1002}#))
               (if (memv #{kind 1011}# '(bare))
                 (#{bare-cont 1004}# #{var 1002}#)
                 (if (memv #{kind 1011}# '(hygiene))
                   (if (if (not (equal?
                                  #{mod 1012}#
                                  (module-name (current-module))))
                         (module-variable
                           (resolve-module #{mod 1012}#)
                           #{var 1002}#)
                         #f)
                     (#{modref-cont 1003}#
                       #{mod 1012}#
                       #{var 1002}#
                       #f)
                     (#{bare-cont 1004}# #{var 1002}#))
                   (syntax-violation
                     #f
                     "bad module kind"
                     #{var 1002}#
                     #{mod 1012}#)))))))))
   (#{build-global-reference 283}#
     (lambda (#{source 1020}# #{var 1021}# #{mod 1022}#)
       (#{analyze-variable 281}#
         #{mod 1022}#
         #{var 1021}#
         (lambda (#{mod 1026}# #{var 1027}# #{public? 1028}#)
           (#{make-module-ref 218}#
             #{source 1020}#
             #{mod 1026}#
             #{var 1027}#
             #{public? 1028}#))
         (lambda (#{var 1032}#)
           (#{make-toplevel-ref 222}#
             #{source 1020}#
             #{var 1032}#)))))
   (#{build-global-assignment 285}#
     (lambda (#{source 1034}#
              #{var 1035}#
              #{exp 1036}#
              #{mod 1037}#)
       (begin
         (#{maybe-name-value! 267}#
           #{var 1035}#
           #{exp 1036}#)
         (#{analyze-variable 281}#
           #{mod 1037}#
           #{var 1035}#
           (lambda (#{mod 1042}# #{var 1043}# #{public? 1044}#)
             (#{make-module-set 220}#
               #{source 1034}#
               #{mod 1042}#
               #{var 1043}#
               #{public? 1044}#
               #{exp 1036}#))
           (lambda (#{var 1048}#)
             (#{make-toplevel-set 224}#
               #{source 1034}#
               #{var 1048}#
               #{exp 1036}#))))))
   (#{build-global-definition 287}#
     (lambda (#{source 1050}# #{var 1051}# #{exp 1052}#)
       (begin
         (#{maybe-name-value! 267}#
           #{var 1051}#
           #{exp 1052}#)
         (#{make-toplevel-define 226}#
           #{source 1050}#
           #{var 1051}#
           #{exp 1052}#))))
   (#{build-simple-lambda 289}#
     (lambda (#{src 1056}#
              #{req 1057}#
              #{rest 1058}#
              #{vars 1059}#
              #{meta 1060}#
              #{exp 1061}#)
       (#{make-lambda 234}#
         #{src 1056}#
         #{meta 1060}#
         (#{make-lambda-case 236}#
           #{src 1056}#
           #{req 1057}#
           #f
           #{rest 1058}#
           #f
           '()
           #{vars 1059}#
           #{exp 1061}#
           #f))))
   (#{build-lambda-case 293}#
     (lambda (#{src 1074}#
              #{req 1075}#
              #{opt 1076}#
              #{rest 1077}#
              #{kw 1078}#
              #{inits 1079}#
              #{vars 1080}#
              #{body 1081}#
              #{else-case 1082}#)
       (#{make-lambda-case 236}#
         #{src 1074}#
         #{req 1075}#
         #{opt 1076}#
         #{rest 1077}#
         #{kw 1078}#
         #{inits 1079}#
         #{vars 1080}#
         #{body 1081}#
         #{else-case 1082}#)))
   (#{build-primref 295}#
     (lambda (#{src 1092}# #{name 1093}#)
       (if (equal? (module-name (current-module)) '(guile))
         (#{make-toplevel-ref 222}#
           #{src 1092}#
           #{name 1093}#)
         (#{make-module-ref 218}#
           #{src 1092}#
           '(guile)
           #{name 1093}#
           #f))))
   (#{build-data 297}#
     (lambda (#{src 1096}# #{exp 1097}#)
       (#{make-const 210}# #{src 1096}# #{exp 1097}#)))
   (#{build-sequence 299}#
     (lambda (#{src 1100}# #{exps 1101}#)
       (if (null? (cdr #{exps 1101}#))
         (car #{exps 1101}#)
         (#{make-sequence 232}#
           #{src 1100}#
           #{exps 1101}#))))
   (#{build-letrec 305}#
     (lambda (#{src 1134}#
              #{in-order? 1135}#
              #{ids 1136}#
              #{vars 1137}#
              #{val-exps 1138}#
              #{body-exp 1139}#)
       (if (null? #{vars 1137}#)
         #{body-exp 1139}#
         (begin
           (for-each
             #{maybe-name-value! 267}#
             #{ids 1136}#
             #{val-exps 1138}#)
           (#{make-letrec 240}#
             #{src 1134}#
             #{in-order? 1135}#
             #{ids 1136}#
             #{vars 1137}#
             #{val-exps 1138}#
             #{body-exp 1139}#)))))
   (#{make-syntax-object 310}#
     (lambda (#{expression 1146}#
              #{wrap 1147}#
              #{module 1148}#)
       (vector
         'syntax-object
         #{expression 1146}#
         #{wrap 1147}#
         #{module 1148}#)))
   (#{syntax-object? 312}#
     (lambda (#{x 1152}#)
       (if (vector? #{x 1152}#)
         (if (= (vector-length #{x 1152}#) 4)
           (eq? (vector-ref #{x 1152}# 0) 'syntax-object)
           #f)
         #f)))
   (#{syntax-object-expression 314}#
     (lambda (#{x 1157}#) (vector-ref #{x 1157}# 1)))
   (#{syntax-object-wrap 316}#
     (lambda (#{x 1159}#) (vector-ref #{x 1159}# 2)))
   (#{syntax-object-module 318}#
     (lambda (#{x 1161}#) (vector-ref #{x 1161}# 3)))
   (#{source-annotation 327}#
     (lambda (#{x 1175}#)
       (if (#{syntax-object? 312}# #{x 1175}#)
         (#{source-annotation 327}#
           (#{syntax-object-expression 314}# #{x 1175}#))
         (if (pair? #{x 1175}#)
           (let ((#{props 1182}# (source-properties #{x 1175}#)))
             (if (pair? #{props 1182}#) #{props 1182}# #f))
           #f))))
   (#{extend-env 337}#
     (lambda (#{labels 1184}# #{bindings 1185}# #{r 1186}#)
       (if (null? #{labels 1184}#)
         #{r 1186}#
         (#{extend-env 337}#
           (cdr #{labels 1184}#)
           (cdr #{bindings 1185}#)
           (cons (cons (car #{labels 1184}#)
                       (car #{bindings 1185}#))
                 #{r 1186}#)))))
   (#{extend-var-env 339}#
     (lambda (#{labels 1190}# #{vars 1191}# #{r 1192}#)
       (if (null? #{labels 1190}#)
         #{r 1192}#
         (#{extend-var-env 339}#
           (cdr #{labels 1190}#)
           (cdr #{vars 1191}#)
           (cons (cons (car #{labels 1190}#)
                       (cons 'lexical (car #{vars 1191}#)))
                 #{r 1192}#)))))
   (#{macros-only-env 341}#
     (lambda (#{r 1197}#)
       (if (null? #{r 1197}#)
         '()
         (let ((#{a 1200}# (car #{r 1197}#)))
           (if (eq? (car (cdr #{a 1200}#)) 'macro)
             (cons #{a 1200}#
                   (#{macros-only-env 341}# (cdr #{r 1197}#)))
             (#{macros-only-env 341}# (cdr #{r 1197}#)))))))
   (#{lookup 343}#
     (lambda (#{x 1201}# #{r 1202}# #{mod 1203}#)
       (let ((#{t 1209}# (assq #{x 1201}# #{r 1202}#)))
         (if #{t 1209}#
           (cdr #{t 1209}#)
           (if (symbol? #{x 1201}#)
             (let ((#{t 1215}#
                     (#{get-global-definition-hook 263}#
                       #{x 1201}#
                       #{mod 1203}#)))
               (if #{t 1215}# #{t 1215}# '(global)))
             '(displaced-lexical))))))
   (#{global-extend 345}#
     (lambda (#{type 1220}# #{sym 1221}# #{val 1222}#)
       (#{put-global-definition-hook 261}#
         #{sym 1221}#
         #{type 1220}#
         #{val 1222}#)))
   (#{nonsymbol-id? 347}#
     (lambda (#{x 1226}#)
       (if (#{syntax-object? 312}# #{x 1226}#)
         (symbol?
           (#{syntax-object-expression 314}# #{x 1226}#))
         #f)))
   (#{id? 349}#
     (lambda (#{x 1230}#)
       (if (symbol? #{x 1230}#)
         #t
         (if (#{syntax-object? 312}# #{x 1230}#)
           (symbol?
             (#{syntax-object-expression 314}# #{x 1230}#))
           #f))))
   (#{id-sym-name&marks 353}#
     (lambda (#{x 1237}# #{w 1238}#)
       (if (#{syntax-object? 312}# #{x 1237}#)
         (values
           (#{syntax-object-expression 314}# #{x 1237}#)
           (#{join-marks 407}#
             (car #{w 1238}#)
             (car (#{syntax-object-wrap 316}# #{x 1237}#))))
         (values #{x 1237}# (car #{w 1238}#)))))
   (#{gen-label 367}#
     (lambda () (symbol->string (gensym "i"))))
   (#{gen-labels 369}#
     (lambda (#{ls 1244}#)
       (if (null? #{ls 1244}#)
         '()
         (cons (#{gen-label 367}#)
               (#{gen-labels 369}# (cdr #{ls 1244}#))))))
   (#{make-ribcage 372}#
     (lambda (#{symnames 1246}#
              #{marks 1247}#
              #{labels 1248}#)
       (vector
         'ribcage
         #{symnames 1246}#
         #{marks 1247}#
         #{labels 1248}#)))
   (#{ribcage-symnames 376}#
     (lambda (#{x 1257}#) (vector-ref #{x 1257}# 1)))
   (#{ribcage-marks 378}#
     (lambda (#{x 1259}#) (vector-ref #{x 1259}# 2)))
   (#{ribcage-labels 380}#
     (lambda (#{x 1261}#) (vector-ref #{x 1261}# 3)))
   (#{set-ribcage-symnames! 382}#
     (lambda (#{x 1263}# #{update 1264}#)
       (vector-set! #{x 1263}# 1 #{update 1264}#)))
   (#{set-ribcage-marks! 384}#
     (lambda (#{x 1267}# #{update 1268}#)
       (vector-set! #{x 1267}# 2 #{update 1268}#)))
   (#{set-ribcage-labels! 386}#
     (lambda (#{x 1271}# #{update 1272}#)
       (vector-set! #{x 1271}# 3 #{update 1272}#)))
   (#{anti-mark 393}#
     (lambda (#{w 1275}#)
       (cons (cons #f (car #{w 1275}#))
             (cons 'shift (cdr #{w 1275}#)))))
   (#{extend-ribcage! 399}#
     (lambda (#{ribcage 1281}# #{id 1282}# #{label 1283}#)
       (begin
         (#{set-ribcage-symnames! 382}#
           #{ribcage 1281}#
           (cons (#{syntax-object-expression 314}# #{id 1282}#)
                 (#{ribcage-symnames 376}# #{ribcage 1281}#)))
         (#{set-ribcage-marks! 384}#
           #{ribcage 1281}#
           (cons (car (#{syntax-object-wrap 316}# #{id 1282}#))
                 (#{ribcage-marks 378}# #{ribcage 1281}#)))
         (#{set-ribcage-labels! 386}#
           #{ribcage 1281}#
           (cons #{label 1283}#
                 (#{ribcage-labels 380}# #{ribcage 1281}#))))))
   (#{make-binding-wrap 401}#
     (lambda (#{ids 1288}# #{labels 1289}# #{w 1290}#)
       (if (null? #{ids 1288}#)
         #{w 1290}#
         (cons (car #{w 1290}#)
               (cons (let ((#{labelvec 1297}#
                             (list->vector #{labels 1289}#)))
                       (let ((#{n 1299}# (vector-length #{labelvec 1297}#)))
                         (let ((#{symnamevec 1302}# (make-vector #{n 1299}#))
                               (#{marksvec 1303}# (make-vector #{n 1299}#)))
                           (begin
                             (letrec*
                               ((#{f 1307}#
                                  (lambda (#{ids 1308}# #{i 1309}#)
                                    (if (not (null? #{ids 1308}#))
                                      (call-with-values
                                        (lambda ()
                                          (#{id-sym-name&marks 353}#
                                            (car #{ids 1308}#)
                                            #{w 1290}#))
                                        (lambda (#{symname 1310}#
                                                 #{marks 1311}#)
                                          (begin
                                            (vector-set!
                                              #{symnamevec 1302}#
                                              #{i 1309}#
                                              #{symname 1310}#)
                                            (vector-set!
                                              #{marksvec 1303}#
                                              #{i 1309}#
                                              #{marks 1311}#)
                                            (#{f 1307}#
                                              (cdr #{ids 1308}#)
                                              (#{1+}# #{i 1309}#)))))))))
                               (#{f 1307}# #{ids 1288}# 0))
                             (#{make-ribcage 372}#
                               #{symnamevec 1302}#
                               #{marksvec 1303}#
                               #{labelvec 1297}#)))))
                     (cdr #{w 1290}#))))))
   (#{smart-append 403}#
     (lambda (#{m1 1316}# #{m2 1317}#)
       (if (null? #{m2 1317}#)
         #{m1 1316}#
         (append #{m1 1316}# #{m2 1317}#))))
   (#{join-wraps 405}#
     (lambda (#{w1 1320}# #{w2 1321}#)
       (let ((#{m1 1326}# (car #{w1 1320}#))
             (#{s1 1327}# (cdr #{w1 1320}#)))
         (if (null? #{m1 1326}#)
           (if (null? #{s1 1327}#)
             #{w2 1321}#
             (cons (car #{w2 1321}#)
                   (#{smart-append 403}#
                     #{s1 1327}#
                     (cdr #{w2 1321}#))))
           (cons (#{smart-append 403}#
                   #{m1 1326}#
                   (car #{w2 1321}#))
                 (#{smart-append 403}#
                   #{s1 1327}#
                   (cdr #{w2 1321}#)))))))
   (#{join-marks 407}#
     (lambda (#{m1 1336}# #{m2 1337}#)
       (#{smart-append 403}# #{m1 1336}# #{m2 1337}#)))
   (#{same-marks? 409}#
     (lambda (#{x 1340}# #{y 1341}#)
       (if (eq? #{x 1340}# #{y 1341}#)
         (eq? #{x 1340}# #{y 1341}#)
         (if (not (null? #{x 1340}#))
           (if (not (null? #{y 1341}#))
             (if (eq? (car #{x 1340}#) (car #{y 1341}#))
               (#{same-marks? 409}#
                 (cdr #{x 1340}#)
                 (cdr #{y 1341}#))
               #f)
             #f)
           #f))))
   (#{id-var-name 411}#
     (lambda (#{id 1352}# #{w 1353}#)
       (letrec*
         ((#{search 1359}#
            (lambda (#{sym 1375}# #{subst 1376}# #{marks 1377}#)
              (if (null? #{subst 1376}#)
                (values #f #{marks 1377}#)
                (let ((#{fst 1382}# (car #{subst 1376}#)))
                  (if (eq? #{fst 1382}# 'shift)
                    (#{search 1359}#
                      #{sym 1375}#
                      (cdr #{subst 1376}#)
                      (cdr #{marks 1377}#))
                    (let ((#{symnames 1384}#
                            (#{ribcage-symnames 376}# #{fst 1382}#)))
                      (if (vector? #{symnames 1384}#)
                        (#{search-vector-rib 1363}#
                          #{sym 1375}#
                          #{subst 1376}#
                          #{marks 1377}#
                          #{symnames 1384}#
                          #{fst 1382}#)
                        (#{search-list-rib 1361}#
                          #{sym 1375}#
                          #{subst 1376}#
                          #{marks 1377}#
                          #{symnames 1384}#
                          #{fst 1382}#))))))))
          (#{search-list-rib 1361}#
            (lambda (#{sym 1385}#
                     #{subst 1386}#
                     #{marks 1387}#
                     #{symnames 1388}#
                     #{ribcage 1389}#)
              (letrec*
                ((#{f 1398}#
                   (lambda (#{symnames 1399}# #{i 1400}#)
                     (if (null? #{symnames 1399}#)
                       (#{search 1359}#
                         #{sym 1385}#
                         (cdr #{subst 1386}#)
                         #{marks 1387}#)
                       (if (if (eq? (car #{symnames 1399}#) #{sym 1385}#)
                             (#{same-marks? 409}#
                               #{marks 1387}#
                               (list-ref
                                 (#{ribcage-marks 378}# #{ribcage 1389}#)
                                 #{i 1400}#))
                             #f)
                         (values
                           (list-ref
                             (#{ribcage-labels 380}# #{ribcage 1389}#)
                             #{i 1400}#)
                           #{marks 1387}#)
                         (#{f 1398}#
                           (cdr #{symnames 1399}#)
                           (#{1+}# #{i 1400}#)))))))
                (#{f 1398}# #{symnames 1388}# 0))))
          (#{search-vector-rib 1363}#
            (lambda (#{sym 1409}#
                     #{subst 1410}#
                     #{marks 1411}#
                     #{symnames 1412}#
                     #{ribcage 1413}#)
              (let ((#{n 1420}# (vector-length #{symnames 1412}#)))
                (letrec*
                  ((#{f 1423}#
                     (lambda (#{i 1424}#)
                       (if (= #{i 1424}# #{n 1420}#)
                         (#{search 1359}#
                           #{sym 1409}#
                           (cdr #{subst 1410}#)
                           #{marks 1411}#)
                         (if (if (eq? (vector-ref #{symnames 1412}# #{i 1424}#)
                                      #{sym 1409}#)
                               (#{same-marks? 409}#
                                 #{marks 1411}#
                                 (vector-ref
                                   (#{ribcage-marks 378}# #{ribcage 1413}#)
                                   #{i 1424}#))
                               #f)
                           (values
                             (vector-ref
                               (#{ribcage-labels 380}# #{ribcage 1413}#)
                               #{i 1424}#)
                             #{marks 1411}#)
                           (#{f 1423}# (#{1+}# #{i 1424}#)))))))
                  (#{f 1423}# 0))))))
         (if (symbol? #{id 1352}#)
           (let ((#{t 1436}#
                   (#{search 1359}#
                     #{id 1352}#
                     (cdr #{w 1353}#)
                     (car #{w 1353}#))))
             (if #{t 1436}# #{t 1436}# #{id 1352}#))
           (if (#{syntax-object? 312}# #{id 1352}#)
             (let ((#{id 1445}#
                     (#{syntax-object-expression 314}# #{id 1352}#))
                   (#{w1 1446}#
                     (#{syntax-object-wrap 316}# #{id 1352}#)))
               (let ((#{marks 1448}#
                       (#{join-marks 407}#
                         (car #{w 1353}#)
                         (car #{w1 1446}#))))
                 (call-with-values
                   (lambda ()
                     (#{search 1359}#
                       #{id 1445}#
                       (cdr #{w 1353}#)
                       #{marks 1448}#))
                   (lambda (#{new-id 1452}# #{marks 1453}#)
                     (if #{new-id 1452}#
                       #{new-id 1452}#
                       (let ((#{t 1461}#
                               (#{search 1359}#
                                 #{id 1445}#
                                 (cdr #{w1 1446}#)
                                 #{marks 1453}#)))
                         (if #{t 1461}# #{t 1461}# #{id 1445}#)))))))
             (syntax-violation
               'id-var-name
               "invalid id"
               #{id 1352}#))))))
   (#{free-id=? 413}#
     (lambda (#{i 1466}# #{j 1467}#)
       (if (eq? (if (#{syntax-object? 312}# #{i 1466}#)
                  (#{syntax-object-expression 314}# #{i 1466}#)
                  #{i 1466}#)
                (if (#{syntax-object? 312}# #{j 1467}#)
                  (#{syntax-object-expression 314}# #{j 1467}#)
                  #{j 1467}#))
         (eq? (#{id-var-name 411}# #{i 1466}# '(()))
              (#{id-var-name 411}# #{j 1467}# '(())))
         #f)))
   (#{bound-id=? 415}#
     (lambda (#{i 1480}# #{j 1481}#)
       (if (if (#{syntax-object? 312}# #{i 1480}#)
             (#{syntax-object? 312}# #{j 1481}#)
             #f)
         (if (eq? (#{syntax-object-expression 314}# #{i 1480}#)
                  (#{syntax-object-expression 314}# #{j 1481}#))
           (#{same-marks? 409}#
             (car (#{syntax-object-wrap 316}# #{i 1480}#))
             (car (#{syntax-object-wrap 316}# #{j 1481}#)))
           #f)
         (eq? #{i 1480}# #{j 1481}#))))
   (#{valid-bound-ids? 417}#
     (lambda (#{ids 1490}#)
       (if (letrec*
             ((#{all-ids? 1495}#
                (lambda (#{ids 1496}#)
                  (if (null? #{ids 1496}#)
                    (null? #{ids 1496}#)
                    (if (#{id? 349}# (car #{ids 1496}#))
                      (#{all-ids? 1495}# (cdr #{ids 1496}#))
                      #f)))))
             (#{all-ids? 1495}# #{ids 1490}#))
         (#{distinct-bound-ids? 419}# #{ids 1490}#)
         #f)))
   (#{distinct-bound-ids? 419}#
     (lambda (#{ids 1504}#)
       (letrec*
         ((#{distinct? 1508}#
            (lambda (#{ids 1509}#)
              (if (null? #{ids 1509}#)
                (null? #{ids 1509}#)
                (if (not (#{bound-id-member? 421}#
                           (car #{ids 1509}#)
                           (cdr #{ids 1509}#)))
                  (#{distinct? 1508}# (cdr #{ids 1509}#))
                  #f)))))
         (#{distinct? 1508}# #{ids 1504}#))))
   (#{bound-id-member? 421}#
     (lambda (#{x 1516}# #{list 1517}#)
       (if (not (null? #{list 1517}#))
         (let ((#{t 1524}#
                 (#{bound-id=? 415}#
                   #{x 1516}#
                   (car #{list 1517}#))))
           (if #{t 1524}#
             #{t 1524}#
             (#{bound-id-member? 421}#
               #{x 1516}#
               (cdr #{list 1517}#))))
         #f)))
   (#{wrap 423}#
     (lambda (#{x 1526}# #{w 1527}# #{defmod 1528}#)
       (if (if (null? (car #{w 1527}#))
             (null? (cdr #{w 1527}#))
             #f)
         #{x 1526}#
         (if (#{syntax-object? 312}# #{x 1526}#)
           (#{make-syntax-object 310}#
             (#{syntax-object-expression 314}# #{x 1526}#)
             (#{join-wraps 405}#
               #{w 1527}#
               (#{syntax-object-wrap 316}# #{x 1526}#))
             (#{syntax-object-module 318}# #{x 1526}#))
           (if (null? #{x 1526}#)
             #{x 1526}#
             (#{make-syntax-object 310}#
               #{x 1526}#
               #{w 1527}#
               #{defmod 1528}#))))))
   (#{source-wrap 425}#
     (lambda (#{x 1543}#
              #{w 1544}#
              #{s 1545}#
              #{defmod 1546}#)
       (#{wrap 423}#
         (#{decorate-source 265}# #{x 1543}# #{s 1545}#)
         #{w 1544}#
         #{defmod 1546}#)))
   (#{chi-sequence 427}#
     (lambda (#{body 1551}#
              #{r 1552}#
              #{w 1553}#
              #{s 1554}#
              #{mod 1555}#)
       (#{build-sequence 299}#
         #{s 1554}#
         (letrec*
           ((#{dobody 1566}#
              (lambda (#{body 1567}#
                       #{r 1568}#
                       #{w 1569}#
                       #{mod 1570}#)
                (if (null? #{body 1567}#)
                  '()
                  (let ((#{first 1572}#
                          (#{chi 437}#
                            (car #{body 1567}#)
                            #{r 1568}#
                            #{w 1569}#
                            #{mod 1570}#)))
                    (cons #{first 1572}#
                          (#{dobody 1566}#
                            (cdr #{body 1567}#)
                            #{r 1568}#
                            #{w 1569}#
                            #{mod 1570}#)))))))
           (#{dobody 1566}#
             #{body 1551}#
             #{r 1552}#
             #{w 1553}#
             #{mod 1555}#)))))
   (#{chi-top-sequence 429}#
     (lambda (#{body 1573}#
              #{r 1574}#
              #{w 1575}#
              #{s 1576}#
              #{m 1577}#
              #{esew 1578}#
              #{mod 1579}#)
       (letrec*
         ((#{scan 1588}#
            (lambda (#{body 1589}#
                     #{r 1590}#
                     #{w 1591}#
                     #{s 1592}#
                     #{m 1593}#
                     #{esew 1594}#
                     #{mod 1595}#
                     #{exps 1596}#)
              (if (null? #{body 1589}#)
                #{exps 1596}#
                (call-with-values
                  (lambda ()
                    (call-with-values
                      (lambda ()
                        (let ((#{e 1609}# (car #{body 1589}#)))
                          (#{syntax-type 435}#
                            #{e 1609}#
                            #{r 1590}#
                            #{w 1591}#
                            (let ((#{t 1612}#
                                    (#{source-annotation 327}# #{e 1609}#)))
                              (if #{t 1612}# #{t 1612}# #{s 1592}#))
                            #f
                            #{mod 1595}#
                            #f)))
                      (lambda (#{type 1614}#
                               #{value 1615}#
                               #{e 1616}#
                               #{w 1617}#
                               #{s 1618}#
                               #{mod 1619}#)
                        (if (memv #{type 1614}# '(begin-form))
                          (let ((#{tmp 1628}# ($sc-dispatch #{e 1616}# '(_))))
                            (if #{tmp 1628}#
                              (@apply (lambda () #{exps 1596}#) #{tmp 1628}#)
                              (let ((#{tmp 1629}#
                                      ($sc-dispatch
                                        #{e 1616}#
                                        '(_ any . each-any))))
                                (if #{tmp 1629}#
                                  (@apply
                                    (lambda (#{e1 1632}# #{e2 1633}#)
                                      (#{scan 1588}#
                                        (cons #{e1 1632}# #{e2 1633}#)
                                        #{r 1590}#
                                        #{w 1617}#
                                        #{s 1618}#
                                        #{m 1593}#
                                        #{esew 1594}#
                                        #{mod 1619}#
                                        #{exps 1596}#))
                                    #{tmp 1629}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{e 1616}#)))))
                          (if (memv #{type 1614}# '(local-syntax-form))
                            (#{chi-local-syntax 447}#
                              #{value 1615}#
                              #{e 1616}#
                              #{r 1590}#
                              #{w 1617}#
                              #{s 1618}#
                              #{mod 1619}#
                              (lambda (#{body 1636}#
                                       #{r 1637}#
                                       #{w 1638}#
                                       #{s 1639}#
                                       #{mod 1640}#)
                                (#{scan 1588}#
                                  #{body 1636}#
                                  #{r 1637}#
                                  #{w 1638}#
                                  #{s 1639}#
                                  #{m 1593}#
                                  #{esew 1594}#
                                  #{mod 1640}#
                                  #{exps 1596}#)))
                            (if (memv #{type 1614}# '(eval-when-form))
                              (let ((#{tmp 1648}#
                                      ($sc-dispatch
                                        #{e 1616}#
                                        '(_ each-any any . each-any))))
                                (if #{tmp 1648}#
                                  (@apply
                                    (lambda (#{x 1652}#
                                             #{e1 1653}#
                                             #{e2 1654}#)
                                      (let ((#{when-list 1657}#
                                              (#{chi-when-list 433}#
                                                #{e 1616}#
                                                #{x 1652}#
                                                #{w 1617}#))
                                            (#{body 1658}#
                                              (cons #{e1 1653}# #{e2 1654}#)))
                                        (if (eq? #{m 1593}# 'e)
                                          (if (memq 'eval #{when-list 1657}#)
                                            (#{scan 1588}#
                                              #{body 1658}#
                                              #{r 1590}#
                                              #{w 1617}#
                                              #{s 1618}#
                                              (if (memq 'expand
                                                        #{when-list 1657}#)
                                                'c&e
                                                'e)
                                              '(eval)
                                              #{mod 1619}#
                                              #{exps 1596}#)
                                            (begin
                                              (if (memq 'expand
                                                        #{when-list 1657}#)
                                                (#{top-level-eval-hook 255}#
                                                  (#{chi-top-sequence 429}#
                                                    #{body 1658}#
                                                    #{r 1590}#
                                                    #{w 1617}#
                                                    #{s 1618}#
                                                    'e
                                                    '(eval)
                                                    #{mod 1619}#)
                                                  #{mod 1619}#))
                                              (values #{exps 1596}#)))
                                          (if (memq 'load #{when-list 1657}#)
                                            (if (let ((#{t 1667}#
                                                        (memq 'compile
                                                              #{when-list 1657}#)))
                                                  (if #{t 1667}#
                                                    #{t 1667}#
                                                    (let ((#{t 1670}#
                                                            (memq 'expand
                                                                  #{when-list 1657}#)))
                                                      (if #{t 1670}#
                                                        #{t 1670}#
                                                        (if (eq? #{m 1593}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list 1657}#)
                                                          #f)))))
                                              (#{scan 1588}#
                                                #{body 1658}#
                                                #{r 1590}#
                                                #{w 1617}#
                                                #{s 1618}#
                                                'c&e
                                                '(compile load)
                                                #{mod 1619}#
                                                #{exps 1596}#)
                                              (if (memq #{m 1593}# '(c c&e))
                                                (#{scan 1588}#
                                                  #{body 1658}#
                                                  #{r 1590}#
                                                  #{w 1617}#
                                                  #{s 1618}#
                                                  'c
                                                  '(load)
                                                  #{mod 1619}#
                                                  #{exps 1596}#)
                                                (values #{exps 1596}#)))
                                            (if (let ((#{t 1678}#
                                                        (memq 'compile
                                                              #{when-list 1657}#)))
                                                  (if #{t 1678}#
                                                    #{t 1678}#
                                                    (let ((#{t 1681}#
                                                            (memq 'expand
                                                                  #{when-list 1657}#)))
                                                      (if #{t 1681}#
                                                        #{t 1681}#
                                                        (if (eq? #{m 1593}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list 1657}#)
                                                          #f)))))
                                              (begin
                                                (#{top-level-eval-hook 255}#
                                                  (#{chi-top-sequence 429}#
                                                    #{body 1658}#
                                                    #{r 1590}#
                                                    #{w 1617}#
                                                    #{s 1618}#
                                                    'e
                                                    '(eval)
                                                    #{mod 1619}#)
                                                  #{mod 1619}#)
                                                (values #{exps 1596}#))
                                              (values #{exps 1596}#))))))
                                    #{tmp 1648}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{e 1616}#)))
                              (if (memv #{type 1614}# '(define-syntax-form))
                                (let ((#{n 1689}#
                                        (#{id-var-name 411}#
                                          #{value 1615}#
                                          #{w 1617}#))
                                      (#{r 1690}#
                                        (#{macros-only-env 341}# #{r 1590}#)))
                                  (if (memv #{m 1593}# '(c))
                                    (if (memq 'compile #{esew 1594}#)
                                      (let ((#{e 1693}#
                                              (#{chi-install-global 431}#
                                                #{n 1689}#
                                                (#{chi 437}#
                                                  #{e 1616}#
                                                  #{r 1690}#
                                                  #{w 1617}#
                                                  #{mod 1619}#))))
                                        (begin
                                          (#{top-level-eval-hook 255}#
                                            #{e 1693}#
                                            #{mod 1619}#)
                                          (if (memq 'load #{esew 1594}#)
                                            (values
                                              (cons #{e 1693}# #{exps 1596}#))
                                            (values #{exps 1596}#))))
                                      (if (memq 'load #{esew 1594}#)
                                        (values
                                          (cons (#{chi-install-global 431}#
                                                  #{n 1689}#
                                                  (#{chi 437}#
                                                    #{e 1616}#
                                                    #{r 1690}#
                                                    #{w 1617}#
                                                    #{mod 1619}#))
                                                #{exps 1596}#))
                                        (values #{exps 1596}#)))
                                    (if (memv #{m 1593}# '(c&e))
                                      (let ((#{e 1696}#
                                              (#{chi-install-global 431}#
                                                #{n 1689}#
                                                (#{chi 437}#
                                                  #{e 1616}#
                                                  #{r 1690}#
                                                  #{w 1617}#
                                                  #{mod 1619}#))))
                                        (begin
                                          (#{top-level-eval-hook 255}#
                                            #{e 1696}#
                                            #{mod 1619}#)
                                          (values
                                            (cons #{e 1696}# #{exps 1596}#))))
                                      (begin
                                        (if (memq 'eval #{esew 1594}#)
                                          (#{top-level-eval-hook 255}#
                                            (#{chi-install-global 431}#
                                              #{n 1689}#
                                              (#{chi 437}#
                                                #{e 1616}#
                                                #{r 1690}#
                                                #{w 1617}#
                                                #{mod 1619}#))
                                            #{mod 1619}#))
                                        (values #{exps 1596}#)))))
                                (if (memv #{type 1614}# '(define-form))
                                  (let ((#{n 1701}#
                                          (#{id-var-name 411}#
                                            #{value 1615}#
                                            #{w 1617}#)))
                                    (let ((#{type 1703}#
                                            (car (#{lookup 343}#
                                                   #{n 1701}#
                                                   #{r 1590}#
                                                   #{mod 1619}#))))
                                      (if (memv #{type 1703}#
                                                '(global
                                                   core
                                                   macro
                                                   module-ref))
                                        (begin
                                          (if (if (memq #{m 1593}# '(c c&e))
                                                (if (not (module-local-variable
                                                           (current-module)
                                                           #{n 1701}#))
                                                  (current-module)
                                                  #f)
                                                #f)
                                            (let ((#{old 1710}#
                                                    (module-variable
                                                      (current-module)
                                                      #{n 1701}#)))
                                              (if (if (variable? #{old 1710}#)
                                                    (variable-bound?
                                                      #{old 1710}#)
                                                    #f)
                                                (module-define!
                                                  (current-module)
                                                  #{n 1701}#
                                                  (variable-ref #{old 1710}#))
                                                (module-add!
                                                  (current-module)
                                                  #{n 1701}#
                                                  (make-undefined-variable)))))
                                          (values
                                            (cons (if (eq? #{m 1593}# 'c&e)
                                                    (let ((#{x 1714}#
                                                            (#{build-global-definition 287}#
                                                              #{s 1618}#
                                                              #{n 1701}#
                                                              (#{chi 437}#
                                                                #{e 1616}#
                                                                #{r 1590}#
                                                                #{w 1617}#
                                                                #{mod 1619}#))))
                                                      (begin
                                                        (#{top-level-eval-hook 255}#
                                                          #{x 1714}#
                                                          #{mod 1619}#)
                                                        #{x 1714}#))
                                                    (lambda ()
                                                      (#{build-global-definition 287}#
                                                        #{s 1618}#
                                                        #{n 1701}#
                                                        (#{chi 437}#
                                                          #{e 1616}#
                                                          #{r 1590}#
                                                          #{w 1617}#
                                                          #{mod 1619}#))))
                                                  #{exps 1596}#)))
                                        (if (memv #{type 1703}#
                                                  '(displaced-lexical))
                                          (syntax-violation
                                            #f
                                            "identifier out of context"
                                            #{e 1616}#
                                            (#{wrap 423}#
                                              #{value 1615}#
                                              #{w 1617}#
                                              #{mod 1619}#))
                                          (syntax-violation
                                            #f
                                            "cannot define keyword at top level"
                                            #{e 1616}#
                                            (#{wrap 423}#
                                              #{value 1615}#
                                              #{w 1617}#
                                              #{mod 1619}#))))))
                                  (values
                                    (cons (if (eq? #{m 1593}# 'c&e)
                                            (let ((#{x 1719}#
                                                    (#{chi-expr 439}#
                                                      #{type 1614}#
                                                      #{value 1615}#
                                                      #{e 1616}#
                                                      #{r 1590}#
                                                      #{w 1617}#
                                                      #{s 1618}#
                                                      #{mod 1619}#)))
                                              (begin
                                                (#{top-level-eval-hook 255}#
                                                  #{x 1719}#
                                                  #{mod 1619}#)
                                                #{x 1719}#))
                                            (lambda ()
                                              (#{chi-expr 439}#
                                                #{type 1614}#
                                                #{value 1615}#
                                                #{e 1616}#
                                                #{r 1590}#
                                                #{w 1617}#
                                                #{s 1618}#
                                                #{mod 1619}#)))
                                          #{exps 1596}#))))))))))
                  (lambda (#{exps 1720}#)
                    (#{scan 1588}#
                      (cdr #{body 1589}#)
                      #{r 1590}#
                      #{w 1591}#
                      #{s 1592}#
                      #{m 1593}#
                      #{esew 1594}#
                      #{mod 1595}#
                      #{exps 1720}#)))))))
         (call-with-values
           (lambda ()
             (#{scan 1588}#
               #{body 1573}#
               #{r 1574}#
               #{w 1575}#
               #{s 1576}#
               #{m 1577}#
               #{esew 1578}#
               #{mod 1579}#
               '()))
           (lambda (#{exps 1722}#)
             (if (null? #{exps 1722}#)
               (#{build-void 269}# #{s 1576}#)
               (#{build-sequence 299}#
                 #{s 1576}#
                 (letrec*
                   ((#{lp 1727}#
                      (lambda (#{in 1728}# #{out 1729}#)
                        (if (null? #{in 1728}#)
                          #{out 1729}#
                          (let ((#{e 1731}# (car #{in 1728}#)))
                            (#{lp 1727}#
                              (cdr #{in 1728}#)
                              (cons (if (procedure? #{e 1731}#)
                                      (#{e 1731}#)
                                      #{e 1731}#)
                                    #{out 1729}#)))))))
                   (#{lp 1727}# #{exps 1722}# '())))))))))
   (#{chi-install-global 431}#
     (lambda (#{name 1732}# #{e 1733}#)
       (#{build-global-definition 287}#
         #f
         #{name 1732}#
         (#{build-application 271}#
           #f
           (#{build-primref 295}#
             #f
             'make-syntax-transformer)
           (list (#{build-data 297}# #f #{name 1732}#)
                 (#{build-data 297}# #f 'macro)
                 #{e 1733}#)))))
   (#{chi-when-list 433}#
     (lambda (#{e 1741}# #{when-list 1742}# #{w 1743}#)
       (letrec*
         ((#{f 1750}#
            (lambda (#{when-list 1751}# #{situations 1752}#)
              (if (null? #{when-list 1751}#)
                #{situations 1752}#
                (#{f 1750}#
                  (cdr #{when-list 1751}#)
                  (cons (let ((#{x 1754}# (car #{when-list 1751}#)))
                          (if (#{free-id=? 413}#
                                #{x 1754}#
                                '#(syntax-object
                                   compile
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage () () ())
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i1753"))
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(f when-list situations)
                                      #((top) (top) (top))
                                      #("i1747" "i1748" "i1749"))
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(e when-list w)
                                      #((top) (top) (top))
                                      #("i1744" "i1745" "i1746"))
                                    #(ribcage
                                      (lambda-var-list
                                        gen-var
                                        strip
                                        chi-lambda-case
                                        lambda*-formals
                                        chi-simple-lambda
                                        lambda-formals
                                        ellipsis?
                                        chi-void
                                        eval-local-transformer
                                        chi-local-syntax
                                        chi-body
                                        chi-macro
                                        chi-application
                                        chi-expr
                                        chi
                                        syntax-type
                                        chi-when-list
                                        chi-install-global
                                        chi-top-sequence
                                        chi-sequence
                                        source-wrap
                                        wrap
                                        bound-id-member?
                                        distinct-bound-ids?
                                        valid-bound-ids?
                                        bound-id=?
                                        free-id=?
                                        id-var-name
                                        same-marks?
                                        join-marks
                                        join-wraps
                                        smart-append
                                        make-binding-wrap
                                        extend-ribcage!
                                        make-empty-ribcage
                                        new-mark
                                        anti-mark
                                        the-anti-mark
                                        top-marked?
                                        top-wrap
                                        empty-wrap
                                        set-ribcage-labels!
                                        set-ribcage-marks!
                                        set-ribcage-symnames!
                                        ribcage-labels
                                        ribcage-marks
                                        ribcage-symnames
                                        ribcage?
                                        make-ribcage
                                        gen-labels
                                        gen-label
                                        make-rename
                                        rename-marks
                                        rename-new
                                        rename-old
                                        subst-rename?
                                        wrap-subst
                                        wrap-marks
                                        make-wrap
                                        id-sym-name&marks
                                        id-sym-name
                                        id?
                                        nonsymbol-id?
                                        global-extend
                                        lookup
                                        macros-only-env
                                        extend-var-env
                                        extend-env
                                        null-env
                                        binding-value
                                        binding-type
                                        make-binding
                                        arg-check
                                        source-annotation
                                        no-source
                                        set-syntax-object-module!
                                        set-syntax-object-wrap!
                                        set-syntax-object-expression!
                                        syntax-object-module
                                        syntax-object-wrap
                                        syntax-object-expression
                                        syntax-object?
                                        make-syntax-object
                                        build-lexical-var
                                        build-letrec
                                        build-named-let
                                        build-let
                                        build-sequence
                                        build-data
                                        build-primref
                                        build-lambda-case
                                        build-case-lambda
                                        build-simple-lambda
                                        build-global-definition
                                        build-global-assignment
                                        build-global-reference
                                        analyze-variable
                                        build-lexical-assignment
                                        build-lexical-reference
                                        build-dynlet
                                        build-conditional
                                        build-application
                                        build-void
                                        maybe-name-value!
                                        decorate-source
                                        get-global-definition-hook
                                        put-global-definition-hook
                                        gensym-hook
                                        local-eval-hook
                                        top-level-eval-hook
                                        fx<
                                        fx=
                                        fx-
                                        fx+
                                        set-lambda-meta!
                                        lambda-meta
                                        lambda?
                                        make-dynlet
                                        make-letrec
                                        make-let
                                        make-lambda-case
                                        make-lambda
                                        make-sequence
                                        make-application
                                        make-conditional
                                        make-toplevel-define
                                        make-toplevel-set
                                        make-toplevel-ref
                                        make-module-set
                                        make-module-ref
                                        make-lexical-set
                                        make-lexical-ref
                                        make-primitive-ref
                                        make-const
                                        make-void)
                                      ((top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top))
                                      ("i466"
                                       "i464"
                                       "i462"
                                       "i460"
                                       "i458"
                                       "i456"
                                       "i454"
                                       "i452"
                                       "i450"
                                       "i448"
                                       "i446"
                                       "i444"
                                       "i442"
                                       "i440"
                                       "i438"
                                       "i436"
                                       "i434"
                                       "i432"
                                       "i430"
                                       "i428"
                                       "i426"
                                       "i424"
                                       "i422"
                                       "i420"
                                       "i418"
                                       "i416"
                                       "i414"
                                       "i412"
                                       "i410"
                                       "i408"
                                       "i406"
                                       "i404"
                                       "i402"
                                       "i400"
                                       "i398"
                                       "i397"
                                       "i395"
                                       "i392"
                                       "i391"
                                       "i390"
                                       "i388"
                                       "i387"
                                       "i385"
                                       "i383"
                                       "i381"
                                       "i379"
                                       "i377"
                                       "i375"
                                       "i373"
                                       "i371"
                                       "i368"
                                       "i366"
                                       "i365"
                                       "i363"
                                       "i361"
                                       "i359"
                                       "i357"
                                       "i356"
                                       "i355"
                                       "i354"
                                       "i352"
                                       "i351"
                                       "i348"
                                       "i346"
                                       "i344"
                                       "i342"
                                       "i340"
                                       "i338"
                                       "i336"
                                       "i335"
                                       "i334"
                                       "i332"
                                       "i330"
                                       "i329"
                                       "i326"
                                       "i325"
                                       "i323"
                                       "i321"
                                       "i319"
                                       "i317"
                                       "i315"
                                       "i313"
                                       "i311"
                                       "i309"
                                       "i307"
                                       "i304"
                                       "i302"
                                       "i300"
                                       "i298"
                                       "i296"
                                       "i294"
                                       "i292"
                                       "i290"
                                       "i288"
                                       "i286"
                                       "i284"
                                       "i282"
                                       "i280"
                                       "i278"
                                       "i276"
                                       "i274"
                                       "i272"
                                       "i270"
                                       "i268"
                                       "i266"
                                       "i264"
                                       "i262"
                                       "i260"
                                       "i259"
                                       "i256"
                                       "i254"
                                       "i253"
                                       "i252"
                                       "i251"
                                       "i250"
                                       "i248"
                                       "i246"
                                       "i244"
                                       "i241"
                                       "i239"
                                       "i237"
                                       "i235"
                                       "i233"
                                       "i231"
                                       "i229"
                                       "i227"
                                       "i225"
                                       "i223"
                                       "i221"
                                       "i219"
                                       "i217"
                                       "i215"
                                       "i213"
                                       "i211"
                                       "i209"
                                       "i207"))
                                    #(ribcage
                                      (define-structure
                                        define-expansion-accessors
                                        define-expansion-constructors)
                                      ((top) (top) (top))
                                      ("i45" "i44" "i43")))
                                   (hygiene guile)))
                            'compile
                            (if (#{free-id=? 413}#
                                  #{x 1754}#
                                  '#(syntax-object
                                     load
                                     ((top)
                                      #(ribcage () () ())
                                      #(ribcage () () ())
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i1753"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(f when-list situations)
                                        #((top) (top) (top))
                                        #("i1747" "i1748" "i1749"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(e when-list w)
                                        #((top) (top) (top))
                                        #("i1744" "i1745" "i1746"))
                                      #(ribcage
                                        (lambda-var-list
                                          gen-var
                                          strip
                                          chi-lambda-case
                                          lambda*-formals
                                          chi-simple-lambda
                                          lambda-formals
                                          ellipsis?
                                          chi-void
                                          eval-local-transformer
                                          chi-local-syntax
                                          chi-body
                                          chi-macro
                                          chi-application
                                          chi-expr
                                          chi
                                          syntax-type
                                          chi-when-list
                                          chi-install-global
                                          chi-top-sequence
                                          chi-sequence
                                          source-wrap
                                          wrap
                                          bound-id-member?
                                          distinct-bound-ids?
                                          valid-bound-ids?
                                          bound-id=?
                                          free-id=?
                                          id-var-name
                                          same-marks?
                                          join-marks
                                          join-wraps
                                          smart-append
                                          make-binding-wrap
                                          extend-ribcage!
                                          make-empty-ribcage
                                          new-mark
                                          anti-mark
                                          the-anti-mark
                                          top-marked?
                                          top-wrap
                                          empty-wrap
                                          set-ribcage-labels!
                                          set-ribcage-marks!
                                          set-ribcage-symnames!
                                          ribcage-labels
                                          ribcage-marks
                                          ribcage-symnames
                                          ribcage?
                                          make-ribcage
                                          gen-labels
                                          gen-label
                                          make-rename
                                          rename-marks
                                          rename-new
                                          rename-old
                                          subst-rename?
                                          wrap-subst
                                          wrap-marks
                                          make-wrap
                                          id-sym-name&marks
                                          id-sym-name
                                          id?
                                          nonsymbol-id?
                                          global-extend
                                          lookup
                                          macros-only-env
                                          extend-var-env
                                          extend-env
                                          null-env
                                          binding-value
                                          binding-type
                                          make-binding
                                          arg-check
                                          source-annotation
                                          no-source
                                          set-syntax-object-module!
                                          set-syntax-object-wrap!
                                          set-syntax-object-expression!
                                          syntax-object-module
                                          syntax-object-wrap
                                          syntax-object-expression
                                          syntax-object?
                                          make-syntax-object
                                          build-lexical-var
                                          build-letrec
                                          build-named-let
                                          build-let
                                          build-sequence
                                          build-data
                                          build-primref
                                          build-lambda-case
                                          build-case-lambda
                                          build-simple-lambda
                                          build-global-definition
                                          build-global-assignment
                                          build-global-reference
                                          analyze-variable
                                          build-lexical-assignment
                                          build-lexical-reference
                                          build-dynlet
                                          build-conditional
                                          build-application
                                          build-void
                                          maybe-name-value!
                                          decorate-source
                                          get-global-definition-hook
                                          put-global-definition-hook
                                          gensym-hook
                                          local-eval-hook
                                          top-level-eval-hook
                                          fx<
                                          fx=
                                          fx-
                                          fx+
                                          set-lambda-meta!
                                          lambda-meta
                                          lambda?
                                          make-dynlet
                                          make-letrec
                                          make-let
                                          make-lambda-case
                                          make-lambda
                                          make-sequence
                                          make-application
                                          make-conditional
                                          make-toplevel-define
                                          make-toplevel-set
                                          make-toplevel-ref
                                          make-module-set
                                          make-module-ref
                                          make-lexical-set
                                          make-lexical-ref
                                          make-primitive-ref
                                          make-const
                                          make-void)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i466"
                                         "i464"
                                         "i462"
                                         "i460"
                                         "i458"
                                         "i456"
                                         "i454"
                                         "i452"
                                         "i450"
                                         "i448"
                                         "i446"
                                         "i444"
                                         "i442"
                                         "i440"
                                         "i438"
                                         "i436"
                                         "i434"
                                         "i432"
                                         "i430"
                                         "i428"
                                         "i426"
                                         "i424"
                                         "i422"
                                         "i420"
                                         "i418"
                                         "i416"
                                         "i414"
                                         "i412"
                                         "i410"
                                         "i408"
                                         "i406"
                                         "i404"
                                         "i402"
                                         "i400"
                                         "i398"
                                         "i397"
                                         "i395"
                                         "i392"
                                         "i391"
                                         "i390"
                                         "i388"
                                         "i387"
                                         "i385"
                                         "i383"
                                         "i381"
                                         "i379"
                                         "i377"
                                         "i375"
                                         "i373"
                                         "i371"
                                         "i368"
                                         "i366"
                                         "i365"
                                         "i363"
                                         "i361"
                                         "i359"
                                         "i357"
                                         "i356"
                                         "i355"
                                         "i354"
                                         "i352"
                                         "i351"
                                         "i348"
                                         "i346"
                                         "i344"
                                         "i342"
                                         "i340"
                                         "i338"
                                         "i336"
                                         "i335"
                                         "i334"
                                         "i332"
                                         "i330"
                                         "i329"
                                         "i326"
                                         "i325"
                                         "i323"
                                         "i321"
                                         "i319"
                                         "i317"
                                         "i315"
                                         "i313"
                                         "i311"
                                         "i309"
                                         "i307"
                                         "i304"
                                         "i302"
                                         "i300"
                                         "i298"
                                         "i296"
                                         "i294"
                                         "i292"
                                         "i290"
                                         "i288"
                                         "i286"
                                         "i284"
                                         "i282"
                                         "i280"
                                         "i278"
                                         "i276"
                                         "i274"
                                         "i272"
                                         "i270"
                                         "i268"
                                         "i266"
                                         "i264"
                                         "i262"
                                         "i260"
                                         "i259"
                                         "i256"
                                         "i254"
                                         "i253"
                                         "i252"
                                         "i251"
                                         "i250"
                                         "i248"
                                         "i246"
                                         "i244"
                                         "i241"
                                         "i239"
                                         "i237"
                                         "i235"
                                         "i233"
                                         "i231"
                                         "i229"
                                         "i227"
                                         "i225"
                                         "i223"
                                         "i221"
                                         "i219"
                                         "i217"
                                         "i215"
                                         "i213"
                                         "i211"
                                         "i209"
                                         "i207"))
                                      #(ribcage
                                        (define-structure
                                          define-expansion-accessors
                                          define-expansion-constructors)
                                        ((top) (top) (top))
                                        ("i45" "i44" "i43")))
                                     (hygiene guile)))
                              'load
                              (if (#{free-id=? 413}#
                                    #{x 1754}#
                                    '#(syntax-object
                                       eval
                                       ((top)
                                        #(ribcage () () ())
                                        #(ribcage () () ())
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i1753"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(f when-list situations)
                                          #((top) (top) (top))
                                          #("i1747" "i1748" "i1749"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(e when-list w)
                                          #((top) (top) (top))
                                          #("i1744" "i1745" "i1746"))
                                        #(ribcage
                                          (lambda-var-list
                                            gen-var
                                            strip
                                            chi-lambda-case
                                            lambda*-formals
                                            chi-simple-lambda
                                            lambda-formals
                                            ellipsis?
                                            chi-void
                                            eval-local-transformer
                                            chi-local-syntax
                                            chi-body
                                            chi-macro
                                            chi-application
                                            chi-expr
                                            chi
                                            syntax-type
                                            chi-when-list
                                            chi-install-global
                                            chi-top-sequence
                                            chi-sequence
                                            source-wrap
                                            wrap
                                            bound-id-member?
                                            distinct-bound-ids?
                                            valid-bound-ids?
                                            bound-id=?
                                            free-id=?
                                            id-var-name
                                            same-marks?
                                            join-marks
                                            join-wraps
                                            smart-append
                                            make-binding-wrap
                                            extend-ribcage!
                                            make-empty-ribcage
                                            new-mark
                                            anti-mark
                                            the-anti-mark
                                            top-marked?
                                            top-wrap
                                            empty-wrap
                                            set-ribcage-labels!
                                            set-ribcage-marks!
                                            set-ribcage-symnames!
                                            ribcage-labels
                                            ribcage-marks
                                            ribcage-symnames
                                            ribcage?
                                            make-ribcage
                                            gen-labels
                                            gen-label
                                            make-rename
                                            rename-marks
                                            rename-new
                                            rename-old
                                            subst-rename?
                                            wrap-subst
                                            wrap-marks
                                            make-wrap
                                            id-sym-name&marks
                                            id-sym-name
                                            id?
                                            nonsymbol-id?
                                            global-extend
                                            lookup
                                            macros-only-env
                                            extend-var-env
                                            extend-env
                                            null-env
                                            binding-value
                                            binding-type
                                            make-binding
                                            arg-check
                                            source-annotation
                                            no-source
                                            set-syntax-object-module!
                                            set-syntax-object-wrap!
                                            set-syntax-object-expression!
                                            syntax-object-module
                                            syntax-object-wrap
                                            syntax-object-expression
                                            syntax-object?
                                            make-syntax-object
                                            build-lexical-var
                                            build-letrec
                                            build-named-let
                                            build-let
                                            build-sequence
                                            build-data
                                            build-primref
                                            build-lambda-case
                                            build-case-lambda
                                            build-simple-lambda
                                            build-global-definition
                                            build-global-assignment
                                            build-global-reference
                                            analyze-variable
                                            build-lexical-assignment
                                            build-lexical-reference
                                            build-dynlet
                                            build-conditional
                                            build-application
                                            build-void
                                            maybe-name-value!
                                            decorate-source
                                            get-global-definition-hook
                                            put-global-definition-hook
                                            gensym-hook
                                            local-eval-hook
                                            top-level-eval-hook
                                            fx<
                                            fx=
                                            fx-
                                            fx+
                                            set-lambda-meta!
                                            lambda-meta
                                            lambda?
                                            make-dynlet
                                            make-letrec
                                            make-let
                                            make-lambda-case
                                            make-lambda
                                            make-sequence
                                            make-application
                                            make-conditional
                                            make-toplevel-define
                                            make-toplevel-set
                                            make-toplevel-ref
                                            make-module-set
                                            make-module-ref
                                            make-lexical-set
                                            make-lexical-ref
                                            make-primitive-ref
                                            make-const
                                            make-void)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i466"
                                           "i464"
                                           "i462"
                                           "i460"
                                           "i458"
                                           "i456"
                                           "i454"
                                           "i452"
                                           "i450"
                                           "i448"
                                           "i446"
                                           "i444"
                                           "i442"
                                           "i440"
                                           "i438"
                                           "i436"
                                           "i434"
                                           "i432"
                                           "i430"
                                           "i428"
                                           "i426"
                                           "i424"
                                           "i422"
                                           "i420"
                                           "i418"
                                           "i416"
                                           "i414"
                                           "i412"
                                           "i410"
                                           "i408"
                                           "i406"
                                           "i404"
                                           "i402"
                                           "i400"
                                           "i398"
                                           "i397"
                                           "i395"
                                           "i392"
                                           "i391"
                                           "i390"
                                           "i388"
                                           "i387"
                                           "i385"
                                           "i383"
                                           "i381"
                                           "i379"
                                           "i377"
                                           "i375"
                                           "i373"
                                           "i371"
                                           "i368"
                                           "i366"
                                           "i365"
                                           "i363"
                                           "i361"
                                           "i359"
                                           "i357"
                                           "i356"
                                           "i355"
                                           "i354"
                                           "i352"
                                           "i351"
                                           "i348"
                                           "i346"
                                           "i344"
                                           "i342"
                                           "i340"
                                           "i338"
                                           "i336"
                                           "i335"
                                           "i334"
                                           "i332"
                                           "i330"
                                           "i329"
                                           "i326"
                                           "i325"
                                           "i323"
                                           "i321"
                                           "i319"
                                           "i317"
                                           "i315"
                                           "i313"
                                           "i311"
                                           "i309"
                                           "i307"
                                           "i304"
                                           "i302"
                                           "i300"
                                           "i298"
                                           "i296"
                                           "i294"
                                           "i292"
                                           "i290"
                                           "i288"
                                           "i286"
                                           "i284"
                                           "i282"
                                           "i280"
                                           "i278"
                                           "i276"
                                           "i274"
                                           "i272"
                                           "i270"
                                           "i268"
                                           "i266"
                                           "i264"
                                           "i262"
                                           "i260"
                                           "i259"
                                           "i256"
                                           "i254"
                                           "i253"
                                           "i252"
                                           "i251"
                                           "i250"
                                           "i248"
                                           "i246"
                                           "i244"
                                           "i241"
                                           "i239"
                                           "i237"
                                           "i235"
                                           "i233"
                                           "i231"
                                           "i229"
                                           "i227"
                                           "i225"
                                           "i223"
                                           "i221"
                                           "i219"
                                           "i217"
                                           "i215"
                                           "i213"
                                           "i211"
                                           "i209"
                                           "i207"))
                                        #(ribcage
                                          (define-structure
                                            define-expansion-accessors
                                            define-expansion-constructors)
                                          ((top) (top) (top))
                                          ("i45" "i44" "i43")))
                                       (hygiene guile)))
                                'eval
                                (if (#{free-id=? 413}#
                                      #{x 1754}#
                                      '#(syntax-object
                                         expand
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i1753"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(f when-list situations)
                                            #((top) (top) (top))
                                            #("i1747" "i1748" "i1749"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(e when-list w)
                                            #((top) (top) (top))
                                            #("i1744" "i1745" "i1746"))
                                          #(ribcage
                                            (lambda-var-list
                                              gen-var
                                              strip
                                              chi-lambda-case
                                              lambda*-formals
                                              chi-simple-lambda
                                              lambda-formals
                                              ellipsis?
                                              chi-void
                                              eval-local-transformer
                                              chi-local-syntax
                                              chi-body
                                              chi-macro
                                              chi-application
                                              chi-expr
                                              chi
                                              syntax-type
                                              chi-when-list
                                              chi-install-global
                                              chi-top-sequence
                                              chi-sequence
                                              source-wrap
                                              wrap
                                              bound-id-member?
                                              distinct-bound-ids?
                                              valid-bound-ids?
                                              bound-id=?
                                              free-id=?
                                              id-var-name
                                              same-marks?
                                              join-marks
                                              join-wraps
                                              smart-append
                                              make-binding-wrap
                                              extend-ribcage!
                                              make-empty-ribcage
                                              new-mark
                                              anti-mark
                                              the-anti-mark
                                              top-marked?
                                              top-wrap
                                              empty-wrap
                                              set-ribcage-labels!
                                              set-ribcage-marks!
                                              set-ribcage-symnames!
                                              ribcage-labels
                                              ribcage-marks
                                              ribcage-symnames
                                              ribcage?
                                              make-ribcage
                                              gen-labels
                                              gen-label
                                              make-rename
                                              rename-marks
                                              rename-new
                                              rename-old
                                              subst-rename?
                                              wrap-subst
                                              wrap-marks
                                              make-wrap
                                              id-sym-name&marks
                                              id-sym-name
                                              id?
                                              nonsymbol-id?
                                              global-extend
                                              lookup
                                              macros-only-env
                                              extend-var-env
                                              extend-env
                                              null-env
                                              binding-value
                                              binding-type
                                              make-binding
                                              arg-check
                                              source-annotation
                                              no-source
                                              set-syntax-object-module!
                                              set-syntax-object-wrap!
                                              set-syntax-object-expression!
                                              syntax-object-module
                                              syntax-object-wrap
                                              syntax-object-expression
                                              syntax-object?
                                              make-syntax-object
                                              build-lexical-var
                                              build-letrec
                                              build-named-let
                                              build-let
                                              build-sequence
                                              build-data
                                              build-primref
                                              build-lambda-case
                                              build-case-lambda
                                              build-simple-lambda
                                              build-global-definition
                                              build-global-assignment
                                              build-global-reference
                                              analyze-variable
                                              build-lexical-assignment
                                              build-lexical-reference
                                              build-dynlet
                                              build-conditional
                                              build-application
                                              build-void
                                              maybe-name-value!
                                              decorate-source
                                              get-global-definition-hook
                                              put-global-definition-hook
                                              gensym-hook
                                              local-eval-hook
                                              top-level-eval-hook
                                              fx<
                                              fx=
                                              fx-
                                              fx+
                                              set-lambda-meta!
                                              lambda-meta
                                              lambda?
                                              make-dynlet
                                              make-letrec
                                              make-let
                                              make-lambda-case
                                              make-lambda
                                              make-sequence
                                              make-application
                                              make-conditional
                                              make-toplevel-define
                                              make-toplevel-set
                                              make-toplevel-ref
                                              make-module-set
                                              make-module-ref
                                              make-lexical-set
                                              make-lexical-ref
                                              make-primitive-ref
                                              make-const
                                              make-void)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i466"
                                             "i464"
                                             "i462"
                                             "i460"
                                             "i458"
                                             "i456"
                                             "i454"
                                             "i452"
                                             "i450"
                                             "i448"
                                             "i446"
                                             "i444"
                                             "i442"
                                             "i440"
                                             "i438"
                                             "i436"
                                             "i434"
                                             "i432"
                                             "i430"
                                             "i428"
                                             "i426"
                                             "i424"
                                             "i422"
                                             "i420"
                                             "i418"
                                             "i416"
                                             "i414"
                                             "i412"
                                             "i410"
                                             "i408"
                                             "i406"
                                             "i404"
                                             "i402"
                                             "i400"
                                             "i398"
                                             "i397"
                                             "i395"
                                             "i392"
                                             "i391"
                                             "i390"
                                             "i388"
                                             "i387"
                                             "i385"
                                             "i383"
                                             "i381"
                                             "i379"
                                             "i377"
                                             "i375"
                                             "i373"
                                             "i371"
                                             "i368"
                                             "i366"
                                             "i365"
                                             "i363"
                                             "i361"
                                             "i359"
                                             "i357"
                                             "i356"
                                             "i355"
                                             "i354"
                                             "i352"
                                             "i351"
                                             "i348"
                                             "i346"
                                             "i344"
                                             "i342"
                                             "i340"
                                             "i338"
                                             "i336"
                                             "i335"
                                             "i334"
                                             "i332"
                                             "i330"
                                             "i329"
                                             "i326"
                                             "i325"
                                             "i323"
                                             "i321"
                                             "i319"
                                             "i317"
                                             "i315"
                                             "i313"
                                             "i311"
                                             "i309"
                                             "i307"
                                             "i304"
                                             "i302"
                                             "i300"
                                             "i298"
                                             "i296"
                                             "i294"
                                             "i292"
                                             "i290"
                                             "i288"
                                             "i286"
                                             "i284"
                                             "i282"
                                             "i280"
                                             "i278"
                                             "i276"
                                             "i274"
                                             "i272"
                                             "i270"
                                             "i268"
                                             "i266"
                                             "i264"
                                             "i262"
                                             "i260"
                                             "i259"
                                             "i256"
                                             "i254"
                                             "i253"
                                             "i252"
                                             "i251"
                                             "i250"
                                             "i248"
                                             "i246"
                                             "i244"
                                             "i241"
                                             "i239"
                                             "i237"
                                             "i235"
                                             "i233"
                                             "i231"
                                             "i229"
                                             "i227"
                                             "i225"
                                             "i223"
                                             "i221"
                                             "i219"
                                             "i217"
                                             "i215"
                                             "i213"
                                             "i211"
                                             "i209"
                                             "i207"))
                                          #(ribcage
                                            (define-structure
                                              define-expansion-accessors
                                              define-expansion-constructors)
                                            ((top) (top) (top))
                                            ("i45" "i44" "i43")))
                                         (hygiene guile)))
                                  'expand
                                  (syntax-violation
                                    'eval-when
                                    "invalid situation"
                                    #{e 1741}#
                                    (#{wrap 423}#
                                      #{x 1754}#
                                      #{w 1743}#
                                      #f)))))))
                        #{situations 1752}#))))))
         (#{f 1750}# #{when-list 1742}# '()))))
   (#{syntax-type 435}#
     (lambda (#{e 1764}#
              #{r 1765}#
              #{w 1766}#
              #{s 1767}#
              #{rib 1768}#
              #{mod 1769}#
              #{for-car? 1770}#)
       (if (symbol? #{e 1764}#)
         (let ((#{n 1782}#
                 (#{id-var-name 411}# #{e 1764}# #{w 1766}#)))
           (let ((#{b 1784}#
                   (#{lookup 343}#
                     #{n 1782}#
                     #{r 1765}#
                     #{mod 1769}#)))
             (let ((#{type 1786}# (car #{b 1784}#)))
               (if (memv #{type 1786}# '(lexical))
                 (values
                   #{type 1786}#
                   (cdr #{b 1784}#)
                   #{e 1764}#
                   #{w 1766}#
                   #{s 1767}#
                   #{mod 1769}#)
                 (if (memv #{type 1786}# '(global))
                   (values
                     #{type 1786}#
                     #{n 1782}#
                     #{e 1764}#
                     #{w 1766}#
                     #{s 1767}#
                     #{mod 1769}#)
                   (if (memv #{type 1786}# '(macro))
                     (if #{for-car? 1770}#
                       (values
                         #{type 1786}#
                         (cdr #{b 1784}#)
                         #{e 1764}#
                         #{w 1766}#
                         #{s 1767}#
                         #{mod 1769}#)
                       (#{syntax-type 435}#
                         (#{chi-macro 443}#
                           (cdr #{b 1784}#)
                           #{e 1764}#
                           #{r 1765}#
                           #{w 1766}#
                           #{s 1767}#
                           #{rib 1768}#
                           #{mod 1769}#)
                         #{r 1765}#
                         '(())
                         #{s 1767}#
                         #{rib 1768}#
                         #{mod 1769}#
                         #f))
                     (values
                       #{type 1786}#
                       (cdr #{b 1784}#)
                       #{e 1764}#
                       #{w 1766}#
                       #{s 1767}#
                       #{mod 1769}#)))))))
         (if (pair? #{e 1764}#)
           (let ((#{first 1800}# (car #{e 1764}#)))
             (call-with-values
               (lambda ()
                 (#{syntax-type 435}#
                   #{first 1800}#
                   #{r 1765}#
                   #{w 1766}#
                   #{s 1767}#
                   #{rib 1768}#
                   #{mod 1769}#
                   #t))
               (lambda (#{ftype 1801}#
                        #{fval 1802}#
                        #{fe 1803}#
                        #{fw 1804}#
                        #{fs 1805}#
                        #{fmod 1806}#)
                 (if (memv #{ftype 1801}# '(lexical))
                   (values
                     'lexical-call
                     #{fval 1802}#
                     #{e 1764}#
                     #{w 1766}#
                     #{s 1767}#
                     #{mod 1769}#)
                   (if (memv #{ftype 1801}# '(global))
                     (values
                       'global-call
                       (#{make-syntax-object 310}#
                         #{fval 1802}#
                         #{w 1766}#
                         #{fmod 1806}#)
                       #{e 1764}#
                       #{w 1766}#
                       #{s 1767}#
                       #{mod 1769}#)
                     (if (memv #{ftype 1801}# '(macro))
                       (#{syntax-type 435}#
                         (#{chi-macro 443}#
                           #{fval 1802}#
                           #{e 1764}#
                           #{r 1765}#
                           #{w 1766}#
                           #{s 1767}#
                           #{rib 1768}#
                           #{mod 1769}#)
                         #{r 1765}#
                         '(())
                         #{s 1767}#
                         #{rib 1768}#
                         #{mod 1769}#
                         #{for-car? 1770}#)
                       (if (memv #{ftype 1801}# '(module-ref))
                         (call-with-values
                           (lambda ()
                             (#{fval 1802}# #{e 1764}# #{r 1765}# #{w 1766}#))
                           (lambda (#{e 1818}#
                                    #{r 1819}#
                                    #{w 1820}#
                                    #{s 1821}#
                                    #{mod 1822}#)
                             (#{syntax-type 435}#
                               #{e 1818}#
                               #{r 1819}#
                               #{w 1820}#
                               #{s 1821}#
                               #{rib 1768}#
                               #{mod 1822}#
                               #{for-car? 1770}#)))
                         (if (memv #{ftype 1801}# '(core))
                           (values
                             'core-form
                             #{fval 1802}#
                             #{e 1764}#
                             #{w 1766}#
                             #{s 1767}#
                             #{mod 1769}#)
                           (if (memv #{ftype 1801}# '(local-syntax))
                             (values
                               'local-syntax-form
                               #{fval 1802}#
                               #{e 1764}#
                               #{w 1766}#
                               #{s 1767}#
                               #{mod 1769}#)
                             (if (memv #{ftype 1801}# '(begin))
                               (values
                                 'begin-form
                                 #f
                                 #{e 1764}#
                                 #{w 1766}#
                                 #{s 1767}#
                                 #{mod 1769}#)
                               (if (memv #{ftype 1801}# '(eval-when))
                                 (values
                                   'eval-when-form
                                   #f
                                   #{e 1764}#
                                   #{w 1766}#
                                   #{s 1767}#
                                   #{mod 1769}#)
                                 (if (memv #{ftype 1801}# '(define))
                                   (let ((#{tmp 1834}#
                                           ($sc-dispatch
                                             #{e 1764}#
                                             '(_ any any))))
                                     (if (if #{tmp 1834}#
                                           (@apply
                                             (lambda (#{name 1837}#
                                                      #{val 1838}#)
                                               (#{id? 349}# #{name 1837}#))
                                             #{tmp 1834}#)
                                           #f)
                                       (@apply
                                         (lambda (#{name 1841}# #{val 1842}#)
                                           (values
                                             'define-form
                                             #{name 1841}#
                                             #{val 1842}#
                                             #{w 1766}#
                                             #{s 1767}#
                                             #{mod 1769}#))
                                         #{tmp 1834}#)
                                       (let ((#{tmp 1843}#
                                               ($sc-dispatch
                                                 #{e 1764}#
                                                 '(_ (any . any)
                                                     any
                                                     .
                                                     each-any))))
                                         (if (if #{tmp 1843}#
                                               (@apply
                                                 (lambda (#{name 1848}#
                                                          #{args 1849}#
                                                          #{e1 1850}#
                                                          #{e2 1851}#)
                                                   (if (#{id? 349}#
                                                         #{name 1848}#)
                                                     (#{valid-bound-ids? 417}#
                                                       (#{lambda-var-list 467}#
                                                         #{args 1849}#))
                                                     #f))
                                                 #{tmp 1843}#)
                                               #f)
                                           (@apply
                                             (lambda (#{name 1858}#
                                                      #{args 1859}#
                                                      #{e1 1860}#
                                                      #{e2 1861}#)
                                               (values
                                                 'define-form
                                                 (#{wrap 423}#
                                                   #{name 1858}#
                                                   #{w 1766}#
                                                   #{mod 1769}#)
                                                 (#{decorate-source 265}#
                                                   (cons '#(syntax-object
                                                            lambda
                                                            ((top)
                                                             #(ribcage
                                                               #(name
                                                                 args
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i1854"
                                                                 "i1855"
                                                                 "i1856"
                                                                 "i1857"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(ftype
                                                                 fval
                                                                 fe
                                                                 fw
                                                                 fs
                                                                 fmod)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i1807"
                                                                 "i1808"
                                                                 "i1809"
                                                                 "i1810"
                                                                 "i1811"
                                                                 "i1812"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(first)
                                                               #((top))
                                                               #("i1799"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(e
                                                                 r
                                                                 w
                                                                 s
                                                                 rib
                                                                 mod
                                                                 for-car?)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i1771"
                                                                 "i1772"
                                                                 "i1773"
                                                                 "i1774"
                                                                 "i1775"
                                                                 "i1776"
                                                                 "i1777"))
                                                             #(ribcage
                                                               (lambda-var-list
                                                                 gen-var
                                                                 strip
                                                                 chi-lambda-case
                                                                 lambda*-formals
                                                                 chi-simple-lambda
                                                                 lambda-formals
                                                                 ellipsis?
                                                                 chi-void
                                                                 eval-local-transformer
                                                                 chi-local-syntax
                                                                 chi-body
                                                                 chi-macro
                                                                 chi-application
                                                                 chi-expr
                                                                 chi
                                                                 syntax-type
                                                                 chi-when-list
                                                                 chi-install-global
                                                                 chi-top-sequence
                                                                 chi-sequence
                                                                 source-wrap
                                                                 wrap
                                                                 bound-id-member?
                                                                 distinct-bound-ids?
                                                                 valid-bound-ids?
                                                                 bound-id=?
                                                                 free-id=?
                                                                 id-var-name
                                                                 same-marks?
                                                                 join-marks
                                                                 join-wraps
                                                                 smart-append
                                                                 make-binding-wrap
                                                                 extend-ribcage!
                                                                 make-empty-ribcage
                                                                 new-mark
                                                                 anti-mark
                                                                 the-anti-mark
                                                                 top-marked?
                                                                 top-wrap
                                                                 empty-wrap
                                                                 set-ribcage-labels!
                                                                 set-ribcage-marks!
                                                                 set-ribcage-symnames!
                                                                 ribcage-labels
                                                                 ribcage-marks
                                                                 ribcage-symnames
                                                                 ribcage?
                                                                 make-ribcage
                                                                 gen-labels
                                                                 gen-label
                                                                 make-rename
                                                                 rename-marks
                                                                 rename-new
                                                                 rename-old
                                                                 subst-rename?
                                                                 wrap-subst
                                                                 wrap-marks
                                                                 make-wrap
                                                                 id-sym-name&marks
                                                                 id-sym-name
                                                                 id?
                                                                 nonsymbol-id?
                                                                 global-extend
                                                                 lookup
                                                                 macros-only-env
                                                                 extend-var-env
                                                                 extend-env
                                                                 null-env
                                                                 binding-value
                                                                 binding-type
                                                                 make-binding
                                                                 arg-check
                                                                 source-annotation
                                                                 no-source
                                                                 set-syntax-object-module!
                                                                 set-syntax-object-wrap!
                                                                 set-syntax-object-expression!
                                                                 syntax-object-module
                                                                 syntax-object-wrap
                                                                 syntax-object-expression
                                                                 syntax-object?
                                                                 make-syntax-object
                                                                 build-lexical-var
                                                                 build-letrec
                                                                 build-named-let
                                                                 build-let
                                                                 build-sequence
                                                                 build-data
                                                                 build-primref
                                                                 build-lambda-case
                                                                 build-case-lambda
                                                                 build-simple-lambda
                                                                 build-global-definition
                                                                 build-global-assignment
                                                                 build-global-reference
                                                                 analyze-variable
                                                                 build-lexical-assignment
                                                                 build-lexical-reference
                                                                 build-dynlet
                                                                 build-conditional
                                                                 build-application
                                                                 build-void
                                                                 maybe-name-value!
                                                                 decorate-source
                                                                 get-global-definition-hook
                                                                 put-global-definition-hook
                                                                 gensym-hook
                                                                 local-eval-hook
                                                                 top-level-eval-hook
                                                                 fx<
                                                                 fx=
                                                                 fx-
                                                                 fx+
                                                                 set-lambda-meta!
                                                                 lambda-meta
                                                                 lambda?
                                                                 make-dynlet
                                                                 make-letrec
                                                                 make-let
                                                                 make-lambda-case
                                                                 make-lambda
                                                                 make-sequence
                                                                 make-application
                                                                 make-conditional
                                                                 make-toplevel-define
                                                                 make-toplevel-set
                                                                 make-toplevel-ref
                                                                 make-module-set
                                                                 make-module-ref
                                                                 make-lexical-set
                                                                 make-lexical-ref
                                                                 make-primitive-ref
                                                                 make-const
                                                                 make-void)
                                                               ((top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top))
                                                               ("i466"
                                                                "i464"
                                                                "i462"
                                                                "i460"
                                                                "i458"
                                                                "i456"
                                                                "i454"
                                                                "i452"
                                                                "i450"
                                                                "i448"
                                                                "i446"
                                                                "i444"
                                                                "i442"
                                                                "i440"
                                                                "i438"
                                                                "i436"
                                                                "i434"
                                                                "i432"
                                                                "i430"
                                                                "i428"
                                                                "i426"
                                                                "i424"
                                                                "i422"
                                                                "i420"
                                                                "i418"
                                                                "i416"
                                                                "i414"
                                                                "i412"
                                                                "i410"
                                                                "i408"
                                                                "i406"
                                                                "i404"
                                                                "i402"
                                                                "i400"
                                                                "i398"
                                                                "i397"
                                                                "i395"
                                                                "i392"
                                                                "i391"
                                                                "i390"
                                                                "i388"
                                                                "i387"
                                                                "i385"
                                                                "i383"
                                                                "i381"
                                                                "i379"
                                                                "i377"
                                                                "i375"
                                                                "i373"
                                                                "i371"
                                                                "i368"
                                                                "i366"
                                                                "i365"
                                                                "i363"
                                                                "i361"
                                                                "i359"
                                                                "i357"
                                                                "i356"
                                                                "i355"
                                                                "i354"
                                                                "i352"
                                                                "i351"
                                                                "i348"
                                                                "i346"
                                                                "i344"
                                                                "i342"
                                                                "i340"
                                                                "i338"
                                                                "i336"
                                                                "i335"
                                                                "i334"
                                                                "i332"
                                                                "i330"
                                                                "i329"
                                                                "i326"
                                                                "i325"
                                                                "i323"
                                                                "i321"
                                                                "i319"
                                                                "i317"
                                                                "i315"
                                                                "i313"
                                                                "i311"
                                                                "i309"
                                                                "i307"
                                                                "i304"
                                                                "i302"
                                                                "i300"
                                                                "i298"
                                                                "i296"
                                                                "i294"
                                                                "i292"
                                                                "i290"
                                                                "i288"
                                                                "i286"
                                                                "i284"
                                                                "i282"
                                                                "i280"
                                                                "i278"
                                                                "i276"
                                                                "i274"
                                                                "i272"
                                                                "i270"
                                                                "i268"
                                                                "i266"
                                                                "i264"
                                                                "i262"
                                                                "i260"
                                                                "i259"
                                                                "i256"
                                                                "i254"
                                                                "i253"
                                                                "i252"
                                                                "i251"
                                                                "i250"
                                                                "i248"
                                                                "i246"
                                                                "i244"
                                                                "i241"
                                                                "i239"
                                                                "i237"
                                                                "i235"
                                                                "i233"
                                                                "i231"
                                                                "i229"
                                                                "i227"
                                                                "i225"
                                                                "i223"
                                                                "i221"
                                                                "i219"
                                                                "i217"
                                                                "i215"
                                                                "i213"
                                                                "i211"
                                                                "i209"
                                                                "i207"))
                                                             #(ribcage
                                                               (define-structure
                                                                 define-expansion-accessors
                                                                 define-expansion-constructors)
                                                               ((top)
                                                                (top)
                                                                (top))
                                                               ("i45"
                                                                "i44"
                                                                "i43")))
                                                            (hygiene guile))
                                                         (#{wrap 423}#
                                                           (cons #{args 1859}#
                                                                 (cons #{e1 1860}#
                                                                       #{e2 1861}#))
                                                           #{w 1766}#
                                                           #{mod 1769}#))
                                                   #{s 1767}#)
                                                 '(())
                                                 #{s 1767}#
                                                 #{mod 1769}#))
                                             #{tmp 1843}#)
                                           (let ((#{tmp 1864}#
                                                   ($sc-dispatch
                                                     #{e 1764}#
                                                     '(_ any))))
                                             (if (if #{tmp 1864}#
                                                   (@apply
                                                     (lambda (#{name 1866}#)
                                                       (#{id? 349}#
                                                         #{name 1866}#))
                                                     #{tmp 1864}#)
                                                   #f)
                                               (@apply
                                                 (lambda (#{name 1868}#)
                                                   (values
                                                     'define-form
                                                     (#{wrap 423}#
                                                       #{name 1868}#
                                                       #{w 1766}#
                                                       #{mod 1769}#)
                                                     '(#(syntax-object
                                                         if
                                                         ((top)
                                                          #(ribcage
                                                            #(name)
                                                            #((top))
                                                            #("i1867"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(ftype
                                                              fval
                                                              fe
                                                              fw
                                                              fs
                                                              fmod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1807"
                                                              "i1808"
                                                              "i1809"
                                                              "i1810"
                                                              "i1811"
                                                              "i1812"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(first)
                                                            #((top))
                                                            #("i1799"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e
                                                              r
                                                              w
                                                              s
                                                              rib
                                                              mod
                                                              for-car?)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1771"
                                                              "i1772"
                                                              "i1773"
                                                              "i1774"
                                                              "i1775"
                                                              "i1776"
                                                              "i1777"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i466"
                                                             "i464"
                                                             "i462"
                                                             "i460"
                                                             "i458"
                                                             "i456"
                                                             "i454"
                                                             "i452"
                                                             "i450"
                                                             "i448"
                                                             "i446"
                                                             "i444"
                                                             "i442"
                                                             "i440"
                                                             "i438"
                                                             "i436"
                                                             "i434"
                                                             "i432"
                                                             "i430"
                                                             "i428"
                                                             "i426"
                                                             "i424"
                                                             "i422"
                                                             "i420"
                                                             "i418"
                                                             "i416"
                                                             "i414"
                                                             "i412"
                                                             "i410"
                                                             "i408"
                                                             "i406"
                                                             "i404"
                                                             "i402"
                                                             "i400"
                                                             "i398"
                                                             "i397"
                                                             "i395"
                                                             "i392"
                                                             "i391"
                                                             "i390"
                                                             "i388"
                                                             "i387"
                                                             "i385"
                                                             "i383"
                                                             "i381"
                                                             "i379"
                                                             "i377"
                                                             "i375"
                                                             "i373"
                                                             "i371"
                                                             "i368"
                                                             "i366"
                                                             "i365"
                                                             "i363"
                                                             "i361"
                                                             "i359"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i354"
                                                             "i352"
                                                             "i351"
                                                             "i348"
                                                             "i346"
                                                             "i344"
                                                             "i342"
                                                             "i340"
                                                             "i338"
                                                             "i336"
                                                             "i335"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i329"
                                                             "i326"
                                                             "i325"
                                                             "i323"
                                                             "i321"
                                                             "i319"
                                                             "i317"
                                                             "i315"
                                                             "i313"
                                                             "i311"
                                                             "i309"
                                                             "i307"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i288"
                                                             "i286"
                                                             "i284"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i264"
                                                             "i262"
                                                             "i260"
                                                             "i259"
                                                             "i256"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i241"
                                                             "i239"
                                                             "i237"
                                                             "i235"
                                                             "i233"
                                                             "i231"
                                                             "i229"
                                                             "i227"
                                                             "i225"
                                                             "i223"
                                                             "i221"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i45"
                                                             "i44"
                                                             "i43")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         #f
                                                         ((top)
                                                          #(ribcage
                                                            #(name)
                                                            #((top))
                                                            #("i1867"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(ftype
                                                              fval
                                                              fe
                                                              fw
                                                              fs
                                                              fmod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1807"
                                                              "i1808"
                                                              "i1809"
                                                              "i1810"
                                                              "i1811"
                                                              "i1812"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(first)
                                                            #((top))
                                                            #("i1799"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e
                                                              r
                                                              w
                                                              s
                                                              rib
                                                              mod
                                                              for-car?)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1771"
                                                              "i1772"
                                                              "i1773"
                                                              "i1774"
                                                              "i1775"
                                                              "i1776"
                                                              "i1777"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i466"
                                                             "i464"
                                                             "i462"
                                                             "i460"
                                                             "i458"
                                                             "i456"
                                                             "i454"
                                                             "i452"
                                                             "i450"
                                                             "i448"
                                                             "i446"
                                                             "i444"
                                                             "i442"
                                                             "i440"
                                                             "i438"
                                                             "i436"
                                                             "i434"
                                                             "i432"
                                                             "i430"
                                                             "i428"
                                                             "i426"
                                                             "i424"
                                                             "i422"
                                                             "i420"
                                                             "i418"
                                                             "i416"
                                                             "i414"
                                                             "i412"
                                                             "i410"
                                                             "i408"
                                                             "i406"
                                                             "i404"
                                                             "i402"
                                                             "i400"
                                                             "i398"
                                                             "i397"
                                                             "i395"
                                                             "i392"
                                                             "i391"
                                                             "i390"
                                                             "i388"
                                                             "i387"
                                                             "i385"
                                                             "i383"
                                                             "i381"
                                                             "i379"
                                                             "i377"
                                                             "i375"
                                                             "i373"
                                                             "i371"
                                                             "i368"
                                                             "i366"
                                                             "i365"
                                                             "i363"
                                                             "i361"
                                                             "i359"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i354"
                                                             "i352"
                                                             "i351"
                                                             "i348"
                                                             "i346"
                                                             "i344"
                                                             "i342"
                                                             "i340"
                                                             "i338"
                                                             "i336"
                                                             "i335"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i329"
                                                             "i326"
                                                             "i325"
                                                             "i323"
                                                             "i321"
                                                             "i319"
                                                             "i317"
                                                             "i315"
                                                             "i313"
                                                             "i311"
                                                             "i309"
                                                             "i307"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i288"
                                                             "i286"
                                                             "i284"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i264"
                                                             "i262"
                                                             "i260"
                                                             "i259"
                                                             "i256"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i241"
                                                             "i239"
                                                             "i237"
                                                             "i235"
                                                             "i233"
                                                             "i231"
                                                             "i229"
                                                             "i227"
                                                             "i225"
                                                             "i223"
                                                             "i221"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i45"
                                                             "i44"
                                                             "i43")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         #f
                                                         ((top)
                                                          #(ribcage
                                                            #(name)
                                                            #((top))
                                                            #("i1867"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(ftype
                                                              fval
                                                              fe
                                                              fw
                                                              fs
                                                              fmod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1807"
                                                              "i1808"
                                                              "i1809"
                                                              "i1810"
                                                              "i1811"
                                                              "i1812"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(first)
                                                            #((top))
                                                            #("i1799"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e
                                                              r
                                                              w
                                                              s
                                                              rib
                                                              mod
                                                              for-car?)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1771"
                                                              "i1772"
                                                              "i1773"
                                                              "i1774"
                                                              "i1775"
                                                              "i1776"
                                                              "i1777"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i466"
                                                             "i464"
                                                             "i462"
                                                             "i460"
                                                             "i458"
                                                             "i456"
                                                             "i454"
                                                             "i452"
                                                             "i450"
                                                             "i448"
                                                             "i446"
                                                             "i444"
                                                             "i442"
                                                             "i440"
                                                             "i438"
                                                             "i436"
                                                             "i434"
                                                             "i432"
                                                             "i430"
                                                             "i428"
                                                             "i426"
                                                             "i424"
                                                             "i422"
                                                             "i420"
                                                             "i418"
                                                             "i416"
                                                             "i414"
                                                             "i412"
                                                             "i410"
                                                             "i408"
                                                             "i406"
                                                             "i404"
                                                             "i402"
                                                             "i400"
                                                             "i398"
                                                             "i397"
                                                             "i395"
                                                             "i392"
                                                             "i391"
                                                             "i390"
                                                             "i388"
                                                             "i387"
                                                             "i385"
                                                             "i383"
                                                             "i381"
                                                             "i379"
                                                             "i377"
                                                             "i375"
                                                             "i373"
                                                             "i371"
                                                             "i368"
                                                             "i366"
                                                             "i365"
                                                             "i363"
                                                             "i361"
                                                             "i359"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i354"
                                                             "i352"
                                                             "i351"
                                                             "i348"
                                                             "i346"
                                                             "i344"
                                                             "i342"
                                                             "i340"
                                                             "i338"
                                                             "i336"
                                                             "i335"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i329"
                                                             "i326"
                                                             "i325"
                                                             "i323"
                                                             "i321"
                                                             "i319"
                                                             "i317"
                                                             "i315"
                                                             "i313"
                                                             "i311"
                                                             "i309"
                                                             "i307"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i288"
                                                             "i286"
                                                             "i284"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i264"
                                                             "i262"
                                                             "i260"
                                                             "i259"
                                                             "i256"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i241"
                                                             "i239"
                                                             "i237"
                                                             "i235"
                                                             "i233"
                                                             "i231"
                                                             "i229"
                                                             "i227"
                                                             "i225"
                                                             "i223"
                                                             "i221"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i45"
                                                             "i44"
                                                             "i43")))
                                                         (hygiene guile)))
                                                     '(())
                                                     #{s 1767}#
                                                     #{mod 1769}#))
                                                 #{tmp 1864}#)
                                               (syntax-violation
                                                 #f
                                                 "source expression failed to match any pattern"
                                                 #{e 1764}#)))))))
                                   (if (memv #{ftype 1801}# '(define-syntax))
                                     (let ((#{tmp 1872}#
                                             ($sc-dispatch
                                               #{e 1764}#
                                               '(_ any any))))
                                       (if (if #{tmp 1872}#
                                             (@apply
                                               (lambda (#{name 1875}#
                                                        #{val 1876}#)
                                                 (#{id? 349}# #{name 1875}#))
                                               #{tmp 1872}#)
                                             #f)
                                         (@apply
                                           (lambda (#{name 1879}# #{val 1880}#)
                                             (values
                                               'define-syntax-form
                                               #{name 1879}#
                                               #{val 1880}#
                                               #{w 1766}#
                                               #{s 1767}#
                                               #{mod 1769}#))
                                           #{tmp 1872}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{e 1764}#)))
                                     (values
                                       'call
                                       #f
                                       #{e 1764}#
                                       #{w 1766}#
                                       #{s 1767}#
                                       #{mod 1769}#))))))))))))))
           (if (#{syntax-object? 312}# #{e 1764}#)
             (#{syntax-type 435}#
               (#{syntax-object-expression 314}# #{e 1764}#)
               #{r 1765}#
               (#{join-wraps 405}#
                 #{w 1766}#
                 (#{syntax-object-wrap 316}# #{e 1764}#))
               (let ((#{t 1886}#
                       (#{source-annotation 327}# #{e 1764}#)))
                 (if #{t 1886}# #{t 1886}# #{s 1767}#))
               #{rib 1768}#
               (let ((#{t 1890}#
                       (#{syntax-object-module 318}# #{e 1764}#)))
                 (if #{t 1890}# #{t 1890}# #{mod 1769}#))
               #{for-car? 1770}#)
             (if (self-evaluating? #{e 1764}#)
               (values
                 'constant
                 #f
                 #{e 1764}#
                 #{w 1766}#
                 #{s 1767}#
                 #{mod 1769}#)
               (values
                 'other
                 #f
                 #{e 1764}#
                 #{w 1766}#
                 #{s 1767}#
                 #{mod 1769}#)))))))
   (#{chi 437}#
     (lambda (#{e 1895}# #{r 1896}# #{w 1897}# #{mod 1898}#)
       (call-with-values
         (lambda ()
           (#{syntax-type 435}#
             #{e 1895}#
             #{r 1896}#
             #{w 1897}#
             (#{source-annotation 327}# #{e 1895}#)
             #f
             #{mod 1898}#
             #f))
         (lambda (#{type 1903}#
                  #{value 1904}#
                  #{e 1905}#
                  #{w 1906}#
                  #{s 1907}#
                  #{mod 1908}#)
           (#{chi-expr 439}#
             #{type 1903}#
             #{value 1904}#
             #{e 1905}#
             #{r 1896}#
             #{w 1906}#
             #{s 1907}#
             #{mod 1908}#)))))
   (#{chi-expr 439}#
     (lambda (#{type 1915}#
              #{value 1916}#
              #{e 1917}#
              #{r 1918}#
              #{w 1919}#
              #{s 1920}#
              #{mod 1921}#)
       (if (memv #{type 1915}# '(lexical))
         (#{build-lexical-reference 277}#
           'value
           #{s 1920}#
           #{e 1917}#
           #{value 1916}#)
         (if (memv #{type 1915}# '(core core-form))
           (#{value 1916}#
             #{e 1917}#
             #{r 1918}#
             #{w 1919}#
             #{s 1920}#
             #{mod 1921}#)
           (if (memv #{type 1915}# '(module-ref))
             (call-with-values
               (lambda ()
                 (#{value 1916}# #{e 1917}# #{r 1918}# #{w 1919}#))
               (lambda (#{e 1932}#
                        #{r 1933}#
                        #{w 1934}#
                        #{s 1935}#
                        #{mod 1936}#)
                 (#{chi 437}#
                   #{e 1932}#
                   #{r 1933}#
                   #{w 1934}#
                   #{mod 1936}#)))
             (if (memv #{type 1915}# '(lexical-call))
               (#{chi-application 441}#
                 (let ((#{id 1944}# (car #{e 1917}#)))
                   (#{build-lexical-reference 277}#
                     'fun
                     (#{source-annotation 327}# #{id 1944}#)
                     (if (#{syntax-object? 312}# #{id 1944}#)
                       (syntax->datum #{id 1944}#)
                       #{id 1944}#)
                     #{value 1916}#))
                 #{e 1917}#
                 #{r 1918}#
                 #{w 1919}#
                 #{s 1920}#
                 #{mod 1921}#)
               (if (memv #{type 1915}# '(global-call))
                 (#{chi-application 441}#
                   (#{build-global-reference 283}#
                     (#{source-annotation 327}# (car #{e 1917}#))
                     (if (#{syntax-object? 312}# #{value 1916}#)
                       (#{syntax-object-expression 314}# #{value 1916}#)
                       #{value 1916}#)
                     (if (#{syntax-object? 312}# #{value 1916}#)
                       (#{syntax-object-module 318}# #{value 1916}#)
                       #{mod 1921}#))
                   #{e 1917}#
                   #{r 1918}#
                   #{w 1919}#
                   #{s 1920}#
                   #{mod 1921}#)
                 (if (memv #{type 1915}# '(constant))
                   (#{build-data 297}#
                     #{s 1920}#
                     (#{strip 463}#
                       (#{source-wrap 425}#
                         #{e 1917}#
                         #{w 1919}#
                         #{s 1920}#
                         #{mod 1921}#)
                       '(())))
                   (if (memv #{type 1915}# '(global))
                     (#{build-global-reference 283}#
                       #{s 1920}#
                       #{value 1916}#
                       #{mod 1921}#)
                     (if (memv #{type 1915}# '(call))
                       (#{chi-application 441}#
                         (#{chi 437}#
                           (car #{e 1917}#)
                           #{r 1918}#
                           #{w 1919}#
                           #{mod 1921}#)
                         #{e 1917}#
                         #{r 1918}#
                         #{w 1919}#
                         #{s 1920}#
                         #{mod 1921}#)
                       (if (memv #{type 1915}# '(begin-form))
                         (let ((#{tmp 1952}#
                                 ($sc-dispatch
                                   #{e 1917}#
                                   '(_ any . each-any))))
                           (if #{tmp 1952}#
                             (@apply
                               (lambda (#{e1 1955}# #{e2 1956}#)
                                 (#{chi-sequence 427}#
                                   (cons #{e1 1955}# #{e2 1956}#)
                                   #{r 1918}#
                                   #{w 1919}#
                                   #{s 1920}#
                                   #{mod 1921}#))
                               #{tmp 1952}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{e 1917}#)))
                         (if (memv #{type 1915}# '(local-syntax-form))
                           (#{chi-local-syntax 447}#
                             #{value 1916}#
                             #{e 1917}#
                             #{r 1918}#
                             #{w 1919}#
                             #{s 1920}#
                             #{mod 1921}#
                             #{chi-sequence 427}#)
                           (if (memv #{type 1915}# '(eval-when-form))
                             (let ((#{tmp 1961}#
                                     ($sc-dispatch
                                       #{e 1917}#
                                       '(_ each-any any . each-any))))
                               (if #{tmp 1961}#
                                 (@apply
                                   (lambda (#{x 1965}# #{e1 1966}# #{e2 1967}#)
                                     (let ((#{when-list 1969}#
                                             (#{chi-when-list 433}#
                                               #{e 1917}#
                                               #{x 1965}#
                                               #{w 1919}#)))
                                       (if (memq 'eval #{when-list 1969}#)
                                         (#{chi-sequence 427}#
                                           (cons #{e1 1966}# #{e2 1967}#)
                                           #{r 1918}#
                                           #{w 1919}#
                                           #{s 1920}#
                                           #{mod 1921}#)
                                         (#{chi-void 451}#))))
                                   #{tmp 1961}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{e 1917}#)))
                             (if (memv #{type 1915}#
                                       '(define-form define-syntax-form))
                               (syntax-violation
                                 #f
                                 "definition in expression context"
                                 #{e 1917}#
                                 (#{wrap 423}#
                                   #{value 1916}#
                                   #{w 1919}#
                                   #{mod 1921}#))
                               (if (memv #{type 1915}# '(syntax))
                                 (syntax-violation
                                   #f
                                   "reference to pattern variable outside syntax form"
                                   (#{source-wrap 425}#
                                     #{e 1917}#
                                     #{w 1919}#
                                     #{s 1920}#
                                     #{mod 1921}#))
                                 (if (memv #{type 1915}# '(displaced-lexical))
                                   (syntax-violation
                                     #f
                                     "reference to identifier outside its scope"
                                     (#{source-wrap 425}#
                                       #{e 1917}#
                                       #{w 1919}#
                                       #{s 1920}#
                                       #{mod 1921}#))
                                   (syntax-violation
                                     #f
                                     "unexpected syntax"
                                     (#{source-wrap 425}#
                                       #{e 1917}#
                                       #{w 1919}#
                                       #{s 1920}#
                                       #{mod 1921}#))))))))))))))))))
   (#{chi-application 441}#
     (lambda (#{x 1976}#
              #{e 1977}#
              #{r 1978}#
              #{w 1979}#
              #{s 1980}#
              #{mod 1981}#)
       (let ((#{tmp 1989}#
               ($sc-dispatch #{e 1977}# '(any . each-any))))
         (if #{tmp 1989}#
           (@apply
             (lambda (#{e0 1992}# #{e1 1993}#)
               (#{build-application 271}#
                 #{s 1980}#
                 #{x 1976}#
                 (map (lambda (#{e 1994}#)
                        (#{chi 437}#
                          #{e 1994}#
                          #{r 1978}#
                          #{w 1979}#
                          #{mod 1981}#))
                      #{e1 1993}#)))
             #{tmp 1989}#)
           (syntax-violation
             #f
             "source expression failed to match any pattern"
             #{e 1977}#)))))
   (#{chi-macro 443}#
     (lambda (#{p 1997}#
              #{e 1998}#
              #{r 1999}#
              #{w 2000}#
              #{s 2001}#
              #{rib 2002}#
              #{mod 2003}#)
       (letrec*
         ((#{rebuild-macro-output 2012}#
            (lambda (#{x 2013}# #{m 2014}#)
              (if (pair? #{x 2013}#)
                (#{decorate-source 265}#
                  (cons (#{rebuild-macro-output 2012}#
                          (car #{x 2013}#)
                          #{m 2014}#)
                        (#{rebuild-macro-output 2012}#
                          (cdr #{x 2013}#)
                          #{m 2014}#))
                  #{s 2001}#)
                (if (#{syntax-object? 312}# #{x 2013}#)
                  (let ((#{w 2022}#
                          (#{syntax-object-wrap 316}# #{x 2013}#)))
                    (let ((#{ms 2025}# (car #{w 2022}#))
                          (#{s 2026}# (cdr #{w 2022}#)))
                      (if (if (pair? #{ms 2025}#)
                            (eq? (car #{ms 2025}#) #f)
                            #f)
                        (#{make-syntax-object 310}#
                          (#{syntax-object-expression 314}# #{x 2013}#)
                          (cons (cdr #{ms 2025}#)
                                (if #{rib 2002}#
                                  (cons #{rib 2002}# (cdr #{s 2026}#))
                                  (cdr #{s 2026}#)))
                          (#{syntax-object-module 318}# #{x 2013}#))
                        (#{make-syntax-object 310}#
                          (#{decorate-source 265}#
                            (#{syntax-object-expression 314}# #{x 2013}#)
                            #{s 2026}#)
                          (cons (cons #{m 2014}# #{ms 2025}#)
                                (if #{rib 2002}#
                                  (cons #{rib 2002}# (cons 'shift #{s 2026}#))
                                  (cons 'shift #{s 2026}#)))
                          (#{syntax-object-module 318}# #{x 2013}#)))))
                  (if (vector? #{x 2013}#)
                    (let ((#{n 2038}# (vector-length #{x 2013}#)))
                      (let ((#{v 2040}#
                              (#{decorate-source 265}#
                                (make-vector #{n 2038}#)
                                #{x 2013}#)))
                        (letrec*
                          ((#{loop 2043}#
                             (lambda (#{i 2044}#)
                               (if (= #{i 2044}# #{n 2038}#)
                                 #{v 2040}#
                                 (begin
                                   (vector-set!
                                     #{v 2040}#
                                     #{i 2044}#
                                     (#{rebuild-macro-output 2012}#
                                       (vector-ref #{x 2013}# #{i 2044}#)
                                       #{m 2014}#))
                                   (#{loop 2043}# (#{1+}# #{i 2044}#)))))))
                          (#{loop 2043}# 0))))
                    (if (symbol? #{x 2013}#)
                      (syntax-violation
                        #f
                        "encountered raw symbol in macro output"
                        (#{source-wrap 425}#
                          #{e 1998}#
                          #{w 2000}#
                          (cdr #{w 2000}#)
                          #{mod 2003}#)
                        #{x 2013}#)
                      (#{decorate-source 265}# #{x 2013}# #{s 2001}#))))))))
         (#{rebuild-macro-output 2012}#
           (#{p 1997}#
             (#{source-wrap 425}#
               #{e 1998}#
               (#{anti-mark 393}# #{w 2000}#)
               #{s 2001}#
               #{mod 2003}#))
           (gensym "m")))))
   (#{chi-body 445}#
     (lambda (#{body 2054}#
              #{outer-form 2055}#
              #{r 2056}#
              #{w 2057}#
              #{mod 2058}#)
       (let ((#{r 2066}#
               (cons '("placeholder" placeholder) #{r 2056}#)))
         (let ((#{ribcage 2068}#
                 (#{make-ribcage 372}# '() '() '())))
           (let ((#{w 2071}#
                   (cons (car #{w 2057}#)
                         (cons #{ribcage 2068}# (cdr #{w 2057}#)))))
             (letrec*
               ((#{parse 2083}#
                  (lambda (#{body 2084}#
                           #{ids 2085}#
                           #{labels 2086}#
                           #{var-ids 2087}#
                           #{vars 2088}#
                           #{vals 2089}#
                           #{bindings 2090}#)
                    (if (null? #{body 2084}#)
                      (syntax-violation
                        #f
                        "no expressions in body"
                        #{outer-form 2055}#)
                      (let ((#{e 2095}# (cdr (car #{body 2084}#)))
                            (#{er 2096}# (car (car #{body 2084}#))))
                        (call-with-values
                          (lambda ()
                            (#{syntax-type 435}#
                              #{e 2095}#
                              #{er 2096}#
                              '(())
                              (#{source-annotation 327}# #{er 2096}#)
                              #{ribcage 2068}#
                              #{mod 2058}#
                              #f))
                          (lambda (#{type 2098}#
                                   #{value 2099}#
                                   #{e 2100}#
                                   #{w 2101}#
                                   #{s 2102}#
                                   #{mod 2103}#)
                            (if (memv #{type 2098}# '(define-form))
                              (let ((#{id 2113}#
                                      (#{wrap 423}#
                                        #{value 2099}#
                                        #{w 2101}#
                                        #{mod 2103}#))
                                    (#{label 2114}# (#{gen-label 367}#)))
                                (let ((#{var 2116}#
                                        (#{gen-var 465}# #{id 2113}#)))
                                  (begin
                                    (#{extend-ribcage! 399}#
                                      #{ribcage 2068}#
                                      #{id 2113}#
                                      #{label 2114}#)
                                    (#{parse 2083}#
                                      (cdr #{body 2084}#)
                                      (cons #{id 2113}# #{ids 2085}#)
                                      (cons #{label 2114}# #{labels 2086}#)
                                      (cons #{id 2113}# #{var-ids 2087}#)
                                      (cons #{var 2116}# #{vars 2088}#)
                                      (cons (cons #{er 2096}#
                                                  (#{wrap 423}#
                                                    #{e 2100}#
                                                    #{w 2101}#
                                                    #{mod 2103}#))
                                            #{vals 2089}#)
                                      (cons (cons 'lexical #{var 2116}#)
                                            #{bindings 2090}#)))))
                              (if (memv #{type 2098}# '(define-syntax-form))
                                (let ((#{id 2121}#
                                        (#{wrap 423}#
                                          #{value 2099}#
                                          #{w 2101}#
                                          #{mod 2103}#))
                                      (#{label 2122}# (#{gen-label 367}#)))
                                  (begin
                                    (#{extend-ribcage! 399}#
                                      #{ribcage 2068}#
                                      #{id 2121}#
                                      #{label 2122}#)
                                    (#{parse 2083}#
                                      (cdr #{body 2084}#)
                                      (cons #{id 2121}# #{ids 2085}#)
                                      (cons #{label 2122}# #{labels 2086}#)
                                      #{var-ids 2087}#
                                      #{vars 2088}#
                                      #{vals 2089}#
                                      (cons (cons 'macro
                                                  (cons #{er 2096}#
                                                        (#{wrap 423}#
                                                          #{e 2100}#
                                                          #{w 2101}#
                                                          #{mod 2103}#)))
                                            #{bindings 2090}#))))
                                (if (memv #{type 2098}# '(begin-form))
                                  (let ((#{tmp 2126}#
                                          ($sc-dispatch
                                            #{e 2100}#
                                            '(_ . each-any))))
                                    (if #{tmp 2126}#
                                      (@apply
                                        (lambda (#{e1 2128}#)
                                          (#{parse 2083}#
                                            (letrec*
                                              ((#{f 2131}#
                                                 (lambda (#{forms 2132}#)
                                                   (if (null? #{forms 2132}#)
                                                     (cdr #{body 2084}#)
                                                     (cons (cons #{er 2096}#
                                                                 (#{wrap 423}#
                                                                   (car #{forms 2132}#)
                                                                   #{w 2101}#
                                                                   #{mod 2103}#))
                                                           (#{f 2131}#
                                                             (cdr #{forms 2132}#)))))))
                                              (#{f 2131}# #{e1 2128}#))
                                            #{ids 2085}#
                                            #{labels 2086}#
                                            #{var-ids 2087}#
                                            #{vars 2088}#
                                            #{vals 2089}#
                                            #{bindings 2090}#))
                                        #{tmp 2126}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{e 2100}#)))
                                  (if (memv #{type 2098}# '(local-syntax-form))
                                    (#{chi-local-syntax 447}#
                                      #{value 2099}#
                                      #{e 2100}#
                                      #{er 2096}#
                                      #{w 2101}#
                                      #{s 2102}#
                                      #{mod 2103}#
                                      (lambda (#{forms 2135}#
                                               #{er 2136}#
                                               #{w 2137}#
                                               #{s 2138}#
                                               #{mod 2139}#)
                                        (#{parse 2083}#
                                          (letrec*
                                            ((#{f 2147}#
                                               (lambda (#{forms 2148}#)
                                                 (if (null? #{forms 2148}#)
                                                   (cdr #{body 2084}#)
                                                   (cons (cons #{er 2136}#
                                                               (#{wrap 423}#
                                                                 (car #{forms 2148}#)
                                                                 #{w 2137}#
                                                                 #{mod 2139}#))
                                                         (#{f 2147}#
                                                           (cdr #{forms 2148}#)))))))
                                            (#{f 2147}# #{forms 2135}#))
                                          #{ids 2085}#
                                          #{labels 2086}#
                                          #{var-ids 2087}#
                                          #{vars 2088}#
                                          #{vals 2089}#
                                          #{bindings 2090}#)))
                                    (if (null? #{ids 2085}#)
                                      (#{build-sequence 299}#
                                        #f
                                        (map (lambda (#{x 2151}#)
                                               (#{chi 437}#
                                                 (cdr #{x 2151}#)
                                                 (car #{x 2151}#)
                                                 '(())
                                                 #{mod 2103}#))
                                             (cons (cons #{er 2096}#
                                                         (#{source-wrap 425}#
                                                           #{e 2100}#
                                                           #{w 2101}#
                                                           #{s 2102}#
                                                           #{mod 2103}#))
                                                   (cdr #{body 2084}#))))
                                      (begin
                                        (if (not (#{valid-bound-ids? 417}#
                                                   #{ids 2085}#))
                                          (syntax-violation
                                            #f
                                            "invalid or duplicate identifier in definition"
                                            #{outer-form 2055}#))
                                        (letrec*
                                          ((#{loop 2158}#
                                             (lambda (#{bs 2159}#
                                                      #{er-cache 2160}#
                                                      #{r-cache 2161}#)
                                               (if (not (null? #{bs 2159}#))
                                                 (let ((#{b 2164}#
                                                         (car #{bs 2159}#)))
                                                   (if (eq? (car #{b 2164}#)
                                                            'macro)
                                                     (let ((#{er 2167}#
                                                             (car (cdr #{b 2164}#))))
                                                       (let ((#{r-cache 2169}#
                                                               (if (eq? #{er 2167}#
                                                                        #{er-cache 2160}#)
                                                                 #{r-cache 2161}#
                                                                 (#{macros-only-env 341}#
                                                                   #{er 2167}#))))
                                                         (begin
                                                           (set-cdr!
                                                             #{b 2164}#
                                                             (#{eval-local-transformer 449}#
                                                               (#{chi 437}#
                                                                 (cdr (cdr #{b 2164}#))
                                                                 #{r-cache 2169}#
                                                                 '(())
                                                                 #{mod 2103}#)
                                                               #{mod 2103}#))
                                                           (#{loop 2158}#
                                                             (cdr #{bs 2159}#)
                                                             #{er 2167}#
                                                             #{r-cache 2169}#))))
                                                     (#{loop 2158}#
                                                       (cdr #{bs 2159}#)
                                                       #{er-cache 2160}#
                                                       #{r-cache 2161}#)))))))
                                          (#{loop 2158}#
                                            #{bindings 2090}#
                                            #f
                                            #f))
                                        (set-cdr!
                                          #{r 2066}#
                                          (#{extend-env 337}#
                                            #{labels 2086}#
                                            #{bindings 2090}#
                                            (cdr #{r 2066}#)))
                                        (#{build-letrec 305}#
                                          #f
                                          #t
                                          (reverse
                                            (map syntax->datum
                                                 #{var-ids 2087}#))
                                          (reverse #{vars 2088}#)
                                          (map (lambda (#{x 2172}#)
                                                 (#{chi 437}#
                                                   (cdr #{x 2172}#)
                                                   (car #{x 2172}#)
                                                   '(())
                                                   #{mod 2103}#))
                                               (reverse #{vals 2089}#))
                                          (#{build-sequence 299}#
                                            #f
                                            (map (lambda (#{x 2176}#)
                                                   (#{chi 437}#
                                                     (cdr #{x 2176}#)
                                                     (car #{x 2176}#)
                                                     '(())
                                                     #{mod 2103}#))
                                                 (cons (cons #{er 2096}#
                                                             (#{source-wrap 425}#
                                                               #{e 2100}#
                                                               #{w 2101}#
                                                               #{s 2102}#
                                                               #{mod 2103}#))
                                                       (cdr #{body 2084}#))))))))))))))))))
               (#{parse 2083}#
                 (map (lambda (#{x 2091}#)
                        (cons #{r 2066}#
                              (#{wrap 423}#
                                #{x 2091}#
                                #{w 2071}#
                                #{mod 2058}#)))
                      #{body 2054}#)
                 '()
                 '()
                 '()
                 '()
                 '()
                 '())))))))
   (#{chi-local-syntax 447}#
     (lambda (#{rec? 2179}#
              #{e 2180}#
              #{r 2181}#
              #{w 2182}#
              #{s 2183}#
              #{mod 2184}#
              #{k 2185}#)
       (let ((#{tmp 2194}#
               ($sc-dispatch
                 #{e 2180}#
                 '(_ #(each (any any)) any . each-any))))
         (if #{tmp 2194}#
           (@apply
             (lambda (#{id 2199}#
                      #{val 2200}#
                      #{e1 2201}#
                      #{e2 2202}#)
               (if (not (#{valid-bound-ids? 417}# #{id 2199}#))
                 (syntax-violation
                   #f
                   "duplicate bound keyword"
                   #{e 2180}#)
                 (let ((#{labels 2207}#
                         (#{gen-labels 369}# #{id 2199}#)))
                   (let ((#{new-w 2209}#
                           (#{make-binding-wrap 401}#
                             #{id 2199}#
                             #{labels 2207}#
                             #{w 2182}#)))
                     (#{k 2185}#
                       (cons #{e1 2201}# #{e2 2202}#)
                       (#{extend-env 337}#
                         #{labels 2207}#
                         (let ((#{trans-r 2214}#
                                 (#{macros-only-env 341}# #{r 2181}#)))
                           (begin
                             (if #{rec? 2179}# (if #f #f))
                             (map (lambda (#{x 2215}#)
                                    (cons 'macro
                                          (#{eval-local-transformer 449}#
                                            (#{chi 437}#
                                              #{x 2215}#
                                              #{trans-r 2214}#
                                              (if #{rec? 2179}#
                                                #{new-w 2209}#
                                                #{w 2182}#)
                                              #{mod 2184}#)
                                            #{mod 2184}#)))
                                  #{val 2200}#)))
                         #{r 2181}#)
                       #{new-w 2209}#
                       #{s 2183}#
                       #{mod 2184}#)))))
             #{tmp 2194}#)
           (syntax-violation
             #f
             "bad local syntax definition"
             (#{source-wrap 425}#
               #{e 2180}#
               #{w 2182}#
               #{s 2183}#
               #{mod 2184}#))))))
   (#{eval-local-transformer 449}#
     (lambda (#{expanded 2221}# #{mod 2222}#)
       (let ((#{p 2226}#
               (#{local-eval-hook 257}#
                 #{expanded 2221}#
                 #{mod 2222}#)))
         (if (procedure? #{p 2226}#)
           #{p 2226}#
           (syntax-violation
             #f
             "nonprocedure transformer"
             #{p 2226}#)))))
   (#{chi-void 451}#
     (lambda () (#{build-void 269}# #f)))
   (#{ellipsis? 453}#
     (lambda (#{x 2228}#)
       (if (#{nonsymbol-id? 347}# #{x 2228}#)
         (#{free-id=? 413}#
           #{x 2228}#
           '#(syntax-object
              ...
              ((top)
               #(ribcage () () ())
               #(ribcage () () ())
               #(ribcage #(x) #((top)) #("i2229"))
               #(ribcage
                 (lambda-var-list
                   gen-var
                   strip
                   chi-lambda-case
                   lambda*-formals
                   chi-simple-lambda
                   lambda-formals
                   ellipsis?
                   chi-void
                   eval-local-transformer
                   chi-local-syntax
                   chi-body
                   chi-macro
                   chi-application
                   chi-expr
                   chi
                   syntax-type
                   chi-when-list
                   chi-install-global
                   chi-top-sequence
                   chi-sequence
                   source-wrap
                   wrap
                   bound-id-member?
                   distinct-bound-ids?
                   valid-bound-ids?
                   bound-id=?
                   free-id=?
                   id-var-name
                   same-marks?
                   join-marks
                   join-wraps
                   smart-append
                   make-binding-wrap
                   extend-ribcage!
                   make-empty-ribcage
                   new-mark
                   anti-mark
                   the-anti-mark
                   top-marked?
                   top-wrap
                   empty-wrap
                   set-ribcage-labels!
                   set-ribcage-marks!
                   set-ribcage-symnames!
                   ribcage-labels
                   ribcage-marks
                   ribcage-symnames
                   ribcage?
                   make-ribcage
                   gen-labels
                   gen-label
                   make-rename
                   rename-marks
                   rename-new
                   rename-old
                   subst-rename?
                   wrap-subst
                   wrap-marks
                   make-wrap
                   id-sym-name&marks
                   id-sym-name
                   id?
                   nonsymbol-id?
                   global-extend
                   lookup
                   macros-only-env
                   extend-var-env
                   extend-env
                   null-env
                   binding-value
                   binding-type
                   make-binding
                   arg-check
                   source-annotation
                   no-source
                   set-syntax-object-module!
                   set-syntax-object-wrap!
                   set-syntax-object-expression!
                   syntax-object-module
                   syntax-object-wrap
                   syntax-object-expression
                   syntax-object?
                   make-syntax-object
                   build-lexical-var
                   build-letrec
                   build-named-let
                   build-let
                   build-sequence
                   build-data
                   build-primref
                   build-lambda-case
                   build-case-lambda
                   build-simple-lambda
                   build-global-definition
                   build-global-assignment
                   build-global-reference
                   analyze-variable
                   build-lexical-assignment
                   build-lexical-reference
                   build-dynlet
                   build-conditional
                   build-application
                   build-void
                   maybe-name-value!
                   decorate-source
                   get-global-definition-hook
                   put-global-definition-hook
                   gensym-hook
                   local-eval-hook
                   top-level-eval-hook
                   fx<
                   fx=
                   fx-
                   fx+
                   set-lambda-meta!
                   lambda-meta
                   lambda?
                   make-dynlet
                   make-letrec
                   make-let
                   make-lambda-case
                   make-lambda
                   make-sequence
                   make-application
                   make-conditional
                   make-toplevel-define
                   make-toplevel-set
                   make-toplevel-ref
                   make-module-set
                   make-module-ref
                   make-lexical-set
                   make-lexical-ref
                   make-primitive-ref
                   make-const
                   make-void)
                 ((top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top)
                  (top))
                 ("i466"
                  "i464"
                  "i462"
                  "i460"
                  "i458"
                  "i456"
                  "i454"
                  "i452"
                  "i450"
                  "i448"
                  "i446"
                  "i444"
                  "i442"
                  "i440"
                  "i438"
                  "i436"
                  "i434"
                  "i432"
                  "i430"
                  "i428"
                  "i426"
                  "i424"
                  "i422"
                  "i420"
                  "i418"
                  "i416"
                  "i414"
                  "i412"
                  "i410"
                  "i408"
                  "i406"
                  "i404"
                  "i402"
                  "i400"
                  "i398"
                  "i397"
                  "i395"
                  "i392"
                  "i391"
                  "i390"
                  "i388"
                  "i387"
                  "i385"
                  "i383"
                  "i381"
                  "i379"
                  "i377"
                  "i375"
                  "i373"
                  "i371"
                  "i368"
                  "i366"
                  "i365"
                  "i363"
                  "i361"
                  "i359"
                  "i357"
                  "i356"
                  "i355"
                  "i354"
                  "i352"
                  "i351"
                  "i348"
                  "i346"
                  "i344"
                  "i342"
                  "i340"
                  "i338"
                  "i336"
                  "i335"
                  "i334"
                  "i332"
                  "i330"
                  "i329"
                  "i326"
                  "i325"
                  "i323"
                  "i321"
                  "i319"
                  "i317"
                  "i315"
                  "i313"
                  "i311"
                  "i309"
                  "i307"
                  "i304"
                  "i302"
                  "i300"
                  "i298"
                  "i296"
                  "i294"
                  "i292"
                  "i290"
                  "i288"
                  "i286"
                  "i284"
                  "i282"
                  "i280"
                  "i278"
                  "i276"
                  "i274"
                  "i272"
                  "i270"
                  "i268"
                  "i266"
                  "i264"
                  "i262"
                  "i260"
                  "i259"
                  "i256"
                  "i254"
                  "i253"
                  "i252"
                  "i251"
                  "i250"
                  "i248"
                  "i246"
                  "i244"
                  "i241"
                  "i239"
                  "i237"
                  "i235"
                  "i233"
                  "i231"
                  "i229"
                  "i227"
                  "i225"
                  "i223"
                  "i221"
                  "i219"
                  "i217"
                  "i215"
                  "i213"
                  "i211"
                  "i209"
                  "i207"))
               #(ribcage
                 (define-structure
                   define-expansion-accessors
                   define-expansion-constructors)
                 ((top) (top) (top))
                 ("i45" "i44" "i43")))
              (hygiene guile)))
         #f)))
   (#{lambda-formals 455}#
     (lambda (#{orig-args 2232}#)
       (letrec*
         ((#{req 2235}#
            (lambda (#{args 2238}# #{rreq 2239}#)
              (let ((#{tmp 2243}# ($sc-dispatch #{args 2238}# '())))
                (if #{tmp 2243}#
                  (@apply
                    (lambda ()
                      (#{check 2237}# (reverse #{rreq 2239}#) #f))
                    #{tmp 2243}#)
                  (let ((#{tmp 2244}#
                          ($sc-dispatch #{args 2238}# '(any . any))))
                    (if (if #{tmp 2244}#
                          (@apply
                            (lambda (#{a 2247}# #{b 2248}#)
                              (#{id? 349}# #{a 2247}#))
                            #{tmp 2244}#)
                          #f)
                      (@apply
                        (lambda (#{a 2251}# #{b 2252}#)
                          (#{req 2235}#
                            #{b 2252}#
                            (cons #{a 2251}# #{rreq 2239}#)))
                        #{tmp 2244}#)
                      (let ((#{tmp 2253}# (list #{args 2238}#)))
                        (if (if #{tmp 2253}#
                              (@apply
                                (lambda (#{r 2255}#) (#{id? 349}# #{r 2255}#))
                                #{tmp 2253}#)
                              #f)
                          (@apply
                            (lambda (#{r 2257}#)
                              (#{check 2237}#
                                (reverse #{rreq 2239}#)
                                #{r 2257}#))
                            #{tmp 2253}#)
                          (syntax-violation
                            'lambda
                            "invalid argument list"
                            #{orig-args 2232}#
                            #{args 2238}#)))))))))
          (#{check 2237}#
            (lambda (#{req 2260}# #{rest 2261}#)
              (if (#{distinct-bound-ids? 419}#
                    (if #{rest 2261}#
                      (cons #{rest 2261}# #{req 2260}#)
                      #{req 2260}#))
                (values #{req 2260}# #f #{rest 2261}# #f)
                (syntax-violation
                  'lambda
                  "duplicate identifier in argument list"
                  #{orig-args 2232}#)))))
         (#{req 2235}# #{orig-args 2232}# '()))))
   (#{lambda*-formals 459}#
     (lambda (#{orig-args 2294}#)
       (letrec*
         ((#{req 2297}#
            (lambda (#{args 2306}# #{rreq 2307}#)
              (let ((#{tmp 2311}# ($sc-dispatch #{args 2306}# '())))
                (if #{tmp 2311}#
                  (@apply
                    (lambda ()
                      (#{check 2305}#
                        (reverse #{rreq 2307}#)
                        '()
                        #f
                        '()))
                    #{tmp 2311}#)
                  (let ((#{tmp 2312}#
                          ($sc-dispatch #{args 2306}# '(any . any))))
                    (if (if #{tmp 2312}#
                          (@apply
                            (lambda (#{a 2315}# #{b 2316}#)
                              (#{id? 349}# #{a 2315}#))
                            #{tmp 2312}#)
                          #f)
                      (@apply
                        (lambda (#{a 2319}# #{b 2320}#)
                          (#{req 2297}#
                            #{b 2320}#
                            (cons #{a 2319}# #{rreq 2307}#)))
                        #{tmp 2312}#)
                      (let ((#{tmp 2321}#
                              ($sc-dispatch #{args 2306}# '(any . any))))
                        (if (if #{tmp 2321}#
                              (@apply
                                (lambda (#{a 2324}# #{b 2325}#)
                                  (eq? (syntax->datum #{a 2324}#) #:optional))
                                #{tmp 2321}#)
                              #f)
                          (@apply
                            (lambda (#{a 2328}# #{b 2329}#)
                              (#{opt 2299}#
                                #{b 2329}#
                                (reverse #{rreq 2307}#)
                                '()))
                            #{tmp 2321}#)
                          (let ((#{tmp 2330}#
                                  ($sc-dispatch #{args 2306}# '(any . any))))
                            (if (if #{tmp 2330}#
                                  (@apply
                                    (lambda (#{a 2333}# #{b 2334}#)
                                      (eq? (syntax->datum #{a 2333}#) #:key))
                                    #{tmp 2330}#)
                                  #f)
                              (@apply
                                (lambda (#{a 2337}# #{b 2338}#)
                                  (#{key 2301}#
                                    #{b 2338}#
                                    (reverse #{rreq 2307}#)
                                    '()
                                    '()))
                                #{tmp 2330}#)
                              (let ((#{tmp 2339}#
                                      ($sc-dispatch #{args 2306}# '(any any))))
                                (if (if #{tmp 2339}#
                                      (@apply
                                        (lambda (#{a 2342}# #{b 2343}#)
                                          (eq? (syntax->datum #{a 2342}#)
                                               #:rest))
                                        #{tmp 2339}#)
                                      #f)
                                  (@apply
                                    (lambda (#{a 2346}# #{b 2347}#)
                                      (#{rest 2303}#
                                        #{b 2347}#
                                        (reverse #{rreq 2307}#)
                                        '()
                                        '()))
                                    #{tmp 2339}#)
                                  (let ((#{tmp 2348}# (list #{args 2306}#)))
                                    (if (if #{tmp 2348}#
                                          (@apply
                                            (lambda (#{r 2350}#)
                                              (#{id? 349}# #{r 2350}#))
                                            #{tmp 2348}#)
                                          #f)
                                      (@apply
                                        (lambda (#{r 2352}#)
                                          (#{rest 2303}#
                                            #{r 2352}#
                                            (reverse #{rreq 2307}#)
                                            '()
                                            '()))
                                        #{tmp 2348}#)
                                      (syntax-violation
                                        'lambda*
                                        "invalid argument list"
                                        #{orig-args 2294}#
                                        #{args 2306}#)))))))))))))))
          (#{opt 2299}#
            (lambda (#{args 2355}# #{req 2356}# #{ropt 2357}#)
              (let ((#{tmp 2362}# ($sc-dispatch #{args 2355}# '())))
                (if #{tmp 2362}#
                  (@apply
                    (lambda ()
                      (#{check 2305}#
                        #{req 2356}#
                        (reverse #{ropt 2357}#)
                        #f
                        '()))
                    #{tmp 2362}#)
                  (let ((#{tmp 2363}#
                          ($sc-dispatch #{args 2355}# '(any . any))))
                    (if (if #{tmp 2363}#
                          (@apply
                            (lambda (#{a 2366}# #{b 2367}#)
                              (#{id? 349}# #{a 2366}#))
                            #{tmp 2363}#)
                          #f)
                      (@apply
                        (lambda (#{a 2370}# #{b 2371}#)
                          (#{opt 2299}#
                            #{b 2371}#
                            #{req 2356}#
                            (cons (cons #{a 2370}#
                                        '(#(syntax-object
                                            #f
                                            ((top)
                                             #(ribcage
                                               #(a b)
                                               #((top) (top))
                                               #("i2368" "i2369"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(args req ropt)
                                               #((top) (top) (top))
                                               #("i2358" "i2359" "i2360"))
                                             #(ribcage
                                               (check rest key opt req)
                                               ((top) (top) (top) (top) (top))
                                               ("i2304"
                                                "i2302"
                                                "i2300"
                                                "i2298"
                                                "i2296"))
                                             #(ribcage
                                               #(orig-args)
                                               #((top))
                                               #("i2295"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i466"
                                                "i464"
                                                "i462"
                                                "i460"
                                                "i458"
                                                "i456"
                                                "i454"
                                                "i452"
                                                "i450"
                                                "i448"
                                                "i446"
                                                "i444"
                                                "i442"
                                                "i440"
                                                "i438"
                                                "i436"
                                                "i434"
                                                "i432"
                                                "i430"
                                                "i428"
                                                "i426"
                                                "i424"
                                                "i422"
                                                "i420"
                                                "i418"
                                                "i416"
                                                "i414"
                                                "i412"
                                                "i410"
                                                "i408"
                                                "i406"
                                                "i404"
                                                "i402"
                                                "i400"
                                                "i398"
                                                "i397"
                                                "i395"
                                                "i392"
                                                "i391"
                                                "i390"
                                                "i388"
                                                "i387"
                                                "i385"
                                                "i383"
                                                "i381"
                                                "i379"
                                                "i377"
                                                "i375"
                                                "i373"
                                                "i371"
                                                "i368"
                                                "i366"
                                                "i365"
                                                "i363"
                                                "i361"
                                                "i359"
                                                "i357"
                                                "i356"
                                                "i355"
                                                "i354"
                                                "i352"
                                                "i351"
                                                "i348"
                                                "i346"
                                                "i344"
                                                "i342"
                                                "i340"
                                                "i338"
                                                "i336"
                                                "i335"
                                                "i334"
                                                "i332"
                                                "i330"
                                                "i329"
                                                "i326"
                                                "i325"
                                                "i323"
                                                "i321"
                                                "i319"
                                                "i317"
                                                "i315"
                                                "i313"
                                                "i311"
                                                "i309"
                                                "i307"
                                                "i304"
                                                "i302"
                                                "i300"
                                                "i298"
                                                "i296"
                                                "i294"
                                                "i292"
                                                "i290"
                                                "i288"
                                                "i286"
                                                "i284"
                                                "i282"
                                                "i280"
                                                "i278"
                                                "i276"
                                                "i274"
                                                "i272"
                                                "i270"
                                                "i268"
                                                "i266"
                                                "i264"
                                                "i262"
                                                "i260"
                                                "i259"
                                                "i256"
                                                "i254"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i250"
                                                "i248"
                                                "i246"
                                                "i244"
                                                "i241"
                                                "i239"
                                                "i237"
                                                "i235"
                                                "i233"
                                                "i231"
                                                "i229"
                                                "i227"
                                                "i225"
                                                "i223"
                                                "i221"
                                                "i219"
                                                "i217"
                                                "i215"
                                                "i213"
                                                "i211"
                                                "i209"
                                                "i207"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i45" "i44" "i43")))
                                            (hygiene guile))))
                                  #{ropt 2357}#)))
                        #{tmp 2363}#)
                      (let ((#{tmp 2372}#
                              ($sc-dispatch #{args 2355}# '((any any) . any))))
                        (if (if #{tmp 2372}#
                              (@apply
                                (lambda (#{a 2376}# #{init 2377}# #{b 2378}#)
                                  (#{id? 349}# #{a 2376}#))
                                #{tmp 2372}#)
                              #f)
                          (@apply
                            (lambda (#{a 2382}# #{init 2383}# #{b 2384}#)
                              (#{opt 2299}#
                                #{b 2384}#
                                #{req 2356}#
                                (cons (list #{a 2382}# #{init 2383}#)
                                      #{ropt 2357}#)))
                            #{tmp 2372}#)
                          (let ((#{tmp 2385}#
                                  ($sc-dispatch #{args 2355}# '(any . any))))
                            (if (if #{tmp 2385}#
                                  (@apply
                                    (lambda (#{a 2388}# #{b 2389}#)
                                      (eq? (syntax->datum #{a 2388}#) #:key))
                                    #{tmp 2385}#)
                                  #f)
                              (@apply
                                (lambda (#{a 2392}# #{b 2393}#)
                                  (#{key 2301}#
                                    #{b 2393}#
                                    #{req 2356}#
                                    (reverse #{ropt 2357}#)
                                    '()))
                                #{tmp 2385}#)
                              (let ((#{tmp 2394}#
                                      ($sc-dispatch #{args 2355}# '(any any))))
                                (if (if #{tmp 2394}#
                                      (@apply
                                        (lambda (#{a 2397}# #{b 2398}#)
                                          (eq? (syntax->datum #{a 2397}#)
                                               #:rest))
                                        #{tmp 2394}#)
                                      #f)
                                  (@apply
                                    (lambda (#{a 2401}# #{b 2402}#)
                                      (#{rest 2303}#
                                        #{b 2402}#
                                        #{req 2356}#
                                        (reverse #{ropt 2357}#)
                                        '()))
                                    #{tmp 2394}#)
                                  (let ((#{tmp 2403}# (list #{args 2355}#)))
                                    (if (if #{tmp 2403}#
                                          (@apply
                                            (lambda (#{r 2405}#)
                                              (#{id? 349}# #{r 2405}#))
                                            #{tmp 2403}#)
                                          #f)
                                      (@apply
                                        (lambda (#{r 2407}#)
                                          (#{rest 2303}#
                                            #{r 2407}#
                                            #{req 2356}#
                                            (reverse #{ropt 2357}#)
                                            '()))
                                        #{tmp 2403}#)
                                      (syntax-violation
                                        'lambda*
                                        "invalid optional argument list"
                                        #{orig-args 2294}#
                                        #{args 2355}#)))))))))))))))
          (#{key 2301}#
            (lambda (#{args 2410}#
                     #{req 2411}#
                     #{opt 2412}#
                     #{rkey 2413}#)
              (let ((#{tmp 2419}# ($sc-dispatch #{args 2410}# '())))
                (if #{tmp 2419}#
                  (@apply
                    (lambda ()
                      (#{check 2305}#
                        #{req 2411}#
                        #{opt 2412}#
                        #f
                        (cons #f (reverse #{rkey 2413}#))))
                    #{tmp 2419}#)
                  (let ((#{tmp 2420}#
                          ($sc-dispatch #{args 2410}# '(any . any))))
                    (if (if #{tmp 2420}#
                          (@apply
                            (lambda (#{a 2423}# #{b 2424}#)
                              (#{id? 349}# #{a 2423}#))
                            #{tmp 2420}#)
                          #f)
                      (@apply
                        (lambda (#{a 2427}# #{b 2428}#)
                          (let ((#{tmp 2430}#
                                  (symbol->keyword
                                    (syntax->datum #{a 2427}#))))
                            (#{key 2301}#
                              #{b 2428}#
                              #{req 2411}#
                              #{opt 2412}#
                              (cons (cons #{tmp 2430}#
                                          (cons #{a 2427}#
                                                '(#(syntax-object
                                                    #f
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(k)
                                                       #((top))
                                                       #("i2431"))
                                                     #(ribcage
                                                       #(a b)
                                                       #((top) (top))
                                                       #("i2425" "i2426"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(args req opt rkey)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i2414"
                                                         "i2415"
                                                         "i2416"
                                                         "i2417"))
                                                     #(ribcage
                                                       (check rest key opt req)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i2304"
                                                        "i2302"
                                                        "i2300"
                                                        "i2298"
                                                        "i2296"))
                                                     #(ribcage
                                                       #(orig-args)
                                                       #((top))
                                                       #("i2295"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i466"
                                                        "i464"
                                                        "i462"
                                                        "i460"
                                                        "i458"
                                                        "i456"
                                                        "i454"
                                                        "i452"
                                                        "i450"
                                                        "i448"
                                                        "i446"
                                                        "i444"
                                                        "i442"
                                                        "i440"
                                                        "i438"
                                                        "i436"
                                                        "i434"
                                                        "i432"
                                                        "i430"
                                                        "i428"
                                                        "i426"
                                                        "i424"
                                                        "i422"
                                                        "i420"
                                                        "i418"
                                                        "i416"
                                                        "i414"
                                                        "i412"
                                                        "i410"
                                                        "i408"
                                                        "i406"
                                                        "i404"
                                                        "i402"
                                                        "i400"
                                                        "i398"
                                                        "i397"
                                                        "i395"
                                                        "i392"
                                                        "i391"
                                                        "i390"
                                                        "i388"
                                                        "i387"
                                                        "i385"
                                                        "i383"
                                                        "i381"
                                                        "i379"
                                                        "i377"
                                                        "i375"
                                                        "i373"
                                                        "i371"
                                                        "i368"
                                                        "i366"
                                                        "i365"
                                                        "i363"
                                                        "i361"
                                                        "i359"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i354"
                                                        "i352"
                                                        "i351"
                                                        "i348"
                                                        "i346"
                                                        "i344"
                                                        "i342"
                                                        "i340"
                                                        "i338"
                                                        "i336"
                                                        "i335"
                                                        "i334"
                                                        "i332"
                                                        "i330"
                                                        "i329"
                                                        "i326"
                                                        "i325"
                                                        "i323"
                                                        "i321"
                                                        "i319"
                                                        "i317"
                                                        "i315"
                                                        "i313"
                                                        "i311"
                                                        "i309"
                                                        "i307"
                                                        "i304"
                                                        "i302"
                                                        "i300"
                                                        "i298"
                                                        "i296"
                                                        "i294"
                                                        "i292"
                                                        "i290"
                                                        "i288"
                                                        "i286"
                                                        "i284"
                                                        "i282"
                                                        "i280"
                                                        "i278"
                                                        "i276"
                                                        "i274"
                                                        "i272"
                                                        "i270"
                                                        "i268"
                                                        "i266"
                                                        "i264"
                                                        "i262"
                                                        "i260"
                                                        "i259"
                                                        "i256"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i250"
                                                        "i248"
                                                        "i246"
                                                        "i244"
                                                        "i241"
                                                        "i239"
                                                        "i237"
                                                        "i235"
                                                        "i233"
                                                        "i231"
                                                        "i229"
                                                        "i227"
                                                        "i225"
                                                        "i223"
                                                        "i221"
                                                        "i219"
                                                        "i217"
                                                        "i215"
                                                        "i213"
                                                        "i211"
                                                        "i209"
                                                        "i207"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i45" "i44" "i43")))
                                                    (hygiene guile)))))
                                    #{rkey 2413}#))))
                        #{tmp 2420}#)
                      (let ((#{tmp 2433}#
                              ($sc-dispatch #{args 2410}# '((any any) . any))))
                        (if (if #{tmp 2433}#
                              (@apply
                                (lambda (#{a 2437}# #{init 2438}# #{b 2439}#)
                                  (#{id? 349}# #{a 2437}#))
                                #{tmp 2433}#)
                              #f)
                          (@apply
                            (lambda (#{a 2443}# #{init 2444}# #{b 2445}#)
                              (let ((#{tmp 2447}#
                                      (symbol->keyword
                                        (syntax->datum #{a 2443}#))))
                                (#{key 2301}#
                                  #{b 2445}#
                                  #{req 2411}#
                                  #{opt 2412}#
                                  (cons (list #{tmp 2447}#
                                              #{a 2443}#
                                              #{init 2444}#)
                                        #{rkey 2413}#))))
                            #{tmp 2433}#)
                          (let ((#{tmp 2450}#
                                  ($sc-dispatch
                                    #{args 2410}#
                                    '((any any any) . any))))
                            (if (if #{tmp 2450}#
                                  (@apply
                                    (lambda (#{a 2455}#
                                             #{init 2456}#
                                             #{k 2457}#
                                             #{b 2458}#)
                                      (if (#{id? 349}# #{a 2455}#)
                                        (keyword? (syntax->datum #{k 2457}#))
                                        #f))
                                    #{tmp 2450}#)
                                  #f)
                              (@apply
                                (lambda (#{a 2465}#
                                         #{init 2466}#
                                         #{k 2467}#
                                         #{b 2468}#)
                                  (#{key 2301}#
                                    #{b 2468}#
                                    #{req 2411}#
                                    #{opt 2412}#
                                    (cons (list #{k 2467}#
                                                #{a 2465}#
                                                #{init 2466}#)
                                          #{rkey 2413}#)))
                                #{tmp 2450}#)
                              (let ((#{tmp 2469}#
                                      ($sc-dispatch #{args 2410}# '(any))))
                                (if (if #{tmp 2469}#
                                      (@apply
                                        (lambda (#{aok 2471}#)
                                          (eq? (syntax->datum #{aok 2471}#)
                                               #:allow-other-keys))
                                        #{tmp 2469}#)
                                      #f)
                                  (@apply
                                    (lambda (#{aok 2473}#)
                                      (#{check 2305}#
                                        #{req 2411}#
                                        #{opt 2412}#
                                        #f
                                        (cons #t (reverse #{rkey 2413}#))))
                                    #{tmp 2469}#)
                                  (let ((#{tmp 2474}#
                                          ($sc-dispatch
                                            #{args 2410}#
                                            '(any any any))))
                                    (if (if #{tmp 2474}#
                                          (@apply
                                            (lambda (#{aok 2478}#
                                                     #{a 2479}#
                                                     #{b 2480}#)
                                              (if (eq? (syntax->datum
                                                         #{aok 2478}#)
                                                       #:allow-other-keys)
                                                (eq? (syntax->datum #{a 2479}#)
                                                     #:rest)
                                                #f))
                                            #{tmp 2474}#)
                                          #f)
                                      (@apply
                                        (lambda (#{aok 2486}#
                                                 #{a 2487}#
                                                 #{b 2488}#)
                                          (#{rest 2303}#
                                            #{b 2488}#
                                            #{req 2411}#
                                            #{opt 2412}#
                                            (cons #t (reverse #{rkey 2413}#))))
                                        #{tmp 2474}#)
                                      (let ((#{tmp 2489}#
                                              ($sc-dispatch
                                                #{args 2410}#
                                                '(any . any))))
                                        (if (if #{tmp 2489}#
                                              (@apply
                                                (lambda (#{aok 2492}#
                                                         #{r 2493}#)
                                                  (if (eq? (syntax->datum
                                                             #{aok 2492}#)
                                                           #:allow-other-keys)
                                                    (#{id? 349}# #{r 2493}#)
                                                    #f))
                                                #{tmp 2489}#)
                                              #f)
                                          (@apply
                                            (lambda (#{aok 2498}# #{r 2499}#)
                                              (#{rest 2303}#
                                                #{r 2499}#
                                                #{req 2411}#
                                                #{opt 2412}#
                                                (cons #t
                                                      (reverse
                                                        #{rkey 2413}#))))
                                            #{tmp 2489}#)
                                          (let ((#{tmp 2500}#
                                                  ($sc-dispatch
                                                    #{args 2410}#
                                                    '(any any))))
                                            (if (if #{tmp 2500}#
                                                  (@apply
                                                    (lambda (#{a 2503}#
                                                             #{b 2504}#)
                                                      (eq? (syntax->datum
                                                             #{a 2503}#)
                                                           #:rest))
                                                    #{tmp 2500}#)
                                                  #f)
                                              (@apply
                                                (lambda (#{a 2507}# #{b 2508}#)
                                                  (#{rest 2303}#
                                                    #{b 2508}#
                                                    #{req 2411}#
                                                    #{opt 2412}#
                                                    (cons #f
                                                          (reverse
                                                            #{rkey 2413}#))))
                                                #{tmp 2500}#)
                                              (let ((#{tmp 2509}#
                                                      (list #{args 2410}#)))
                                                (if (if #{tmp 2509}#
                                                      (@apply
                                                        (lambda (#{r 2511}#)
                                                          (#{id? 349}#
                                                            #{r 2511}#))
                                                        #{tmp 2509}#)
                                                      #f)
                                                  (@apply
                                                    (lambda (#{r 2513}#)
                                                      (#{rest 2303}#
                                                        #{r 2513}#
                                                        #{req 2411}#
                                                        #{opt 2412}#
                                                        (cons #f
                                                              (reverse
                                                                #{rkey 2413}#))))
                                                    #{tmp 2509}#)
                                                  (syntax-violation
                                                    'lambda*
                                                    "invalid keyword argument list"
                                                    #{orig-args 2294}#
                                                    #{args 2410}#)))))))))))))))))))))
          (#{rest 2303}#
            (lambda (#{args 2516}#
                     #{req 2517}#
                     #{opt 2518}#
                     #{kw 2519}#)
              (let ((#{tmp 2525}# (list #{args 2516}#)))
                (if (if #{tmp 2525}#
                      (@apply
                        (lambda (#{r 2527}#) (#{id? 349}# #{r 2527}#))
                        #{tmp 2525}#)
                      #f)
                  (@apply
                    (lambda (#{r 2529}#)
                      (#{check 2305}#
                        #{req 2517}#
                        #{opt 2518}#
                        #{r 2529}#
                        #{kw 2519}#))
                    #{tmp 2525}#)
                  (syntax-violation
                    'lambda*
                    "invalid rest argument"
                    #{orig-args 2294}#
                    #{args 2516}#)))))
          (#{check 2305}#
            (lambda (#{req 2532}#
                     #{opt 2533}#
                     #{rest 2534}#
                     #{kw 2535}#)
              (if (#{distinct-bound-ids? 419}#
                    (append
                      #{req 2532}#
                      (map car #{opt 2533}#)
                      (if #{rest 2534}# (list #{rest 2534}#) '())
                      (if (pair? #{kw 2535}#)
                        (map cadr (cdr #{kw 2535}#))
                        '())))
                (values
                  #{req 2532}#
                  #{opt 2533}#
                  #{rest 2534}#
                  #{kw 2535}#)
                (syntax-violation
                  'lambda*
                  "duplicate identifier in argument list"
                  #{orig-args 2294}#)))))
         (#{req 2297}# #{orig-args 2294}# '()))))
   (#{chi-lambda-case 461}#
     (lambda (#{e 2543}#
              #{r 2544}#
              #{w 2545}#
              #{s 2546}#
              #{mod 2547}#
              #{get-formals 2548}#
              #{clauses 2549}#)
       (letrec*
         ((#{expand-opt 2560}#
            (lambda (#{req 2583}#
                     #{opt 2584}#
                     #{rest 2585}#
                     #{kw 2586}#
                     #{body 2587}#
                     #{vars 2588}#
                     #{r* 2589}#
                     #{w* 2590}#
                     #{out 2591}#
                     #{inits 2592}#)
              (if (pair? #{opt 2584}#)
                (let ((#{tmp 2605}# (car #{opt 2584}#)))
                  (let ((#{tmp 2606}#
                          ($sc-dispatch #{tmp 2605}# '(any any))))
                    (if #{tmp 2606}#
                      (@apply
                        (lambda (#{id 2609}# #{i 2610}#)
                          (let ((#{v 2613}# (#{gen-var 465}# #{id 2609}#)))
                            (let ((#{l 2615}#
                                    (#{gen-labels 369}# (list #{v 2613}#))))
                              (let ((#{r** 2617}#
                                      (#{extend-var-env 339}#
                                        #{l 2615}#
                                        (list #{v 2613}#)
                                        #{r* 2589}#)))
                                (let ((#{w** 2619}#
                                        (#{make-binding-wrap 401}#
                                          (list #{id 2609}#)
                                          #{l 2615}#
                                          #{w* 2590}#)))
                                  (#{expand-opt 2560}#
                                    #{req 2583}#
                                    (cdr #{opt 2584}#)
                                    #{rest 2585}#
                                    #{kw 2586}#
                                    #{body 2587}#
                                    (cons #{v 2613}# #{vars 2588}#)
                                    #{r** 2617}#
                                    #{w** 2619}#
                                    (cons (syntax->datum #{id 2609}#)
                                          #{out 2591}#)
                                    (cons (#{chi 437}#
                                            #{i 2610}#
                                            #{r* 2589}#
                                            #{w* 2590}#
                                            #{mod 2547}#)
                                          #{inits 2592}#)))))))
                        #{tmp 2606}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp 2605}#))))
                (if #{rest 2585}#
                  (let ((#{v 2624}# (#{gen-var 465}# #{rest 2585}#)))
                    (let ((#{l 2626}#
                            (#{gen-labels 369}# (list #{v 2624}#))))
                      (let ((#{r* 2628}#
                              (#{extend-var-env 339}#
                                #{l 2626}#
                                (list #{v 2624}#)
                                #{r* 2589}#)))
                        (let ((#{w* 2630}#
                                (#{make-binding-wrap 401}#
                                  (list #{rest 2585}#)
                                  #{l 2626}#
                                  #{w* 2590}#)))
                          (#{expand-kw 2562}#
                            #{req 2583}#
                            (if (pair? #{out 2591}#)
                              (reverse #{out 2591}#)
                              #f)
                            (syntax->datum #{rest 2585}#)
                            (if (pair? #{kw 2586}#)
                              (cdr #{kw 2586}#)
                              #{kw 2586}#)
                            #{body 2587}#
                            (cons #{v 2624}# #{vars 2588}#)
                            #{r* 2628}#
                            #{w* 2630}#
                            (if (pair? #{kw 2586}#) (car #{kw 2586}#) #f)
                            '()
                            #{inits 2592}#)))))
                  (#{expand-kw 2562}#
                    #{req 2583}#
                    (if (pair? #{out 2591}#)
                      (reverse #{out 2591}#)
                      #f)
                    #f
                    (if (pair? #{kw 2586}#)
                      (cdr #{kw 2586}#)
                      #{kw 2586}#)
                    #{body 2587}#
                    #{vars 2588}#
                    #{r* 2589}#
                    #{w* 2590}#
                    (if (pair? #{kw 2586}#) (car #{kw 2586}#) #f)
                    '()
                    #{inits 2592}#)))))
          (#{expand-kw 2562}#
            (lambda (#{req 2632}#
                     #{opt 2633}#
                     #{rest 2634}#
                     #{kw 2635}#
                     #{body 2636}#
                     #{vars 2637}#
                     #{r* 2638}#
                     #{w* 2639}#
                     #{aok 2640}#
                     #{out 2641}#
                     #{inits 2642}#)
              (if (pair? #{kw 2635}#)
                (let ((#{tmp 2656}# (car #{kw 2635}#)))
                  (let ((#{tmp 2657}#
                          ($sc-dispatch #{tmp 2656}# '(any any any))))
                    (if #{tmp 2657}#
                      (@apply
                        (lambda (#{k 2661}# #{id 2662}# #{i 2663}#)
                          (let ((#{v 2666}# (#{gen-var 465}# #{id 2662}#)))
                            (let ((#{l 2668}#
                                    (#{gen-labels 369}# (list #{v 2666}#))))
                              (let ((#{r** 2670}#
                                      (#{extend-var-env 339}#
                                        #{l 2668}#
                                        (list #{v 2666}#)
                                        #{r* 2638}#)))
                                (let ((#{w** 2672}#
                                        (#{make-binding-wrap 401}#
                                          (list #{id 2662}#)
                                          #{l 2668}#
                                          #{w* 2639}#)))
                                  (#{expand-kw 2562}#
                                    #{req 2632}#
                                    #{opt 2633}#
                                    #{rest 2634}#
                                    (cdr #{kw 2635}#)
                                    #{body 2636}#
                                    (cons #{v 2666}# #{vars 2637}#)
                                    #{r** 2670}#
                                    #{w** 2672}#
                                    #{aok 2640}#
                                    (cons (list (syntax->datum #{k 2661}#)
                                                (syntax->datum #{id 2662}#)
                                                #{v 2666}#)
                                          #{out 2641}#)
                                    (cons (#{chi 437}#
                                            #{i 2663}#
                                            #{r* 2638}#
                                            #{w* 2639}#
                                            #{mod 2547}#)
                                          #{inits 2642}#)))))))
                        #{tmp 2657}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp 2656}#))))
                (#{expand-body 2564}#
                  #{req 2632}#
                  #{opt 2633}#
                  #{rest 2634}#
                  (if (if #{aok 2640}#
                        #{aok 2640}#
                        (pair? #{out 2641}#))
                    (cons #{aok 2640}# (reverse #{out 2641}#))
                    #f)
                  #{body 2636}#
                  (reverse #{vars 2637}#)
                  #{r* 2638}#
                  #{w* 2639}#
                  (reverse #{inits 2642}#)
                  '()))))
          (#{expand-body 2564}#
            (lambda (#{req 2678}#
                     #{opt 2679}#
                     #{rest 2680}#
                     #{kw 2681}#
                     #{body 2682}#
                     #{vars 2683}#
                     #{r* 2684}#
                     #{w* 2685}#
                     #{inits 2686}#
                     #{meta 2687}#)
              (let ((#{tmp 2699}#
                      ($sc-dispatch
                        #{body 2682}#
                        '(any any . each-any))))
                (if (if #{tmp 2699}#
                      (@apply
                        (lambda (#{docstring 2703}# #{e1 2704}# #{e2 2705}#)
                          (string? (syntax->datum #{docstring 2703}#)))
                        #{tmp 2699}#)
                      #f)
                  (@apply
                    (lambda (#{docstring 2709}# #{e1 2710}# #{e2 2711}#)
                      (#{expand-body 2564}#
                        #{req 2678}#
                        #{opt 2679}#
                        #{rest 2680}#
                        #{kw 2681}#
                        (cons #{e1 2710}# #{e2 2711}#)
                        #{vars 2683}#
                        #{r* 2684}#
                        #{w* 2685}#
                        #{inits 2686}#
                        (append
                          #{meta 2687}#
                          (list (cons 'documentation
                                      (syntax->datum #{docstring 2709}#))))))
                    #{tmp 2699}#)
                  (let ((#{tmp 2714}#
                          ($sc-dispatch
                            #{body 2682}#
                            '(#(vector #(each (any . any))) any . each-any))))
                    (if #{tmp 2714}#
                      (@apply
                        (lambda (#{k 2719}# #{v 2720}# #{e1 2721}# #{e2 2722}#)
                          (#{expand-body 2564}#
                            #{req 2678}#
                            #{opt 2679}#
                            #{rest 2680}#
                            #{kw 2681}#
                            (cons #{e1 2721}# #{e2 2722}#)
                            #{vars 2683}#
                            #{r* 2684}#
                            #{w* 2685}#
                            #{inits 2686}#
                            (append
                              #{meta 2687}#
                              (syntax->datum
                                (map cons #{k 2719}# #{v 2720}#)))))
                        #{tmp 2714}#)
                      (let ((#{tmp 2726}#
                              ($sc-dispatch #{body 2682}# '(any . each-any))))
                        (if #{tmp 2726}#
                          (@apply
                            (lambda (#{e1 2729}# #{e2 2730}#)
                              (values
                                #{meta 2687}#
                                #{req 2678}#
                                #{opt 2679}#
                                #{rest 2680}#
                                #{kw 2681}#
                                #{inits 2686}#
                                #{vars 2683}#
                                (#{chi-body 445}#
                                  (cons #{e1 2729}# #{e2 2730}#)
                                  (#{source-wrap 425}#
                                    #{e 2543}#
                                    #{w 2545}#
                                    #{s 2546}#
                                    #{mod 2547}#)
                                  #{r* 2684}#
                                  #{w* 2685}#
                                  #{mod 2547}#)))
                            #{tmp 2726}#)
                          (syntax-violation
                            #f
                            "source expression failed to match any pattern"
                            #{body 2682}#))))))))))
         (let ((#{tmp 2733}#
                 ($sc-dispatch #{clauses 2549}# '())))
           (if #{tmp 2733}#
             (@apply (lambda () (values '() #f)) #{tmp 2733}#)
             (let ((#{tmp 2734}#
                     ($sc-dispatch
                       #{clauses 2549}#
                       '((any any . each-any)
                         .
                         #(each (any any . each-any))))))
               (if #{tmp 2734}#
                 (@apply
                   (lambda (#{args 2741}#
                            #{e1 2742}#
                            #{e2 2743}#
                            #{args* 2744}#
                            #{e1* 2745}#
                            #{e2* 2746}#)
                     (call-with-values
                       (lambda () (#{get-formals 2548}# #{args 2741}#))
                       (lambda (#{req 2747}#
                                #{opt 2748}#
                                #{rest 2749}#
                                #{kw 2750}#)
                         (call-with-values
                           (lambda ()
                             (let ((#{body 4788}#
                                     (cons #{e1 2742}# #{e2 2743}#)))
                               (let ((#{vars 4789}#
                                       (map #{gen-var 465}# #{req 2747}#))
                                     (#{labels 4790}#
                                       (#{gen-labels 369}# #{req 2747}#)))
                                 (let ((#{r* 4791}#
                                         (#{extend-var-env 339}#
                                           #{labels 4790}#
                                           #{vars 4789}#
                                           #{r 2544}#))
                                       (#{w* 4792}#
                                         (#{make-binding-wrap 401}#
                                           #{req 2747}#
                                           #{labels 4790}#
                                           #{w 2545}#)))
                                   (#{expand-opt 2560}#
                                     (map syntax->datum #{req 2747}#)
                                     #{opt 2748}#
                                     #{rest 2749}#
                                     #{kw 2750}#
                                     #{body 4788}#
                                     (reverse #{vars 4789}#)
                                     #{r* 4791}#
                                     #{w* 4792}#
                                     '()
                                     '())))))
                           (lambda (#{meta 2756}#
                                    #{req 2757}#
                                    #{opt 2758}#
                                    #{rest 2759}#
                                    #{kw 2760}#
                                    #{inits 2761}#
                                    #{vars 2762}#
                                    #{body 2763}#)
                             (call-with-values
                               (lambda ()
                                 (#{chi-lambda-case 461}#
                                   #{e 2543}#
                                   #{r 2544}#
                                   #{w 2545}#
                                   #{s 2546}#
                                   #{mod 2547}#
                                   #{get-formals 2548}#
                                   (map (lambda (#{tmp 2774}#
                                                 #{tmp 2773}#
                                                 #{tmp 2772}#)
                                          (cons #{tmp 2772}#
                                                (cons #{tmp 2773}#
                                                      #{tmp 2774}#)))
                                        #{e2* 2746}#
                                        #{e1* 2745}#
                                        #{args* 2744}#)))
                               (lambda (#{meta* 2776}# #{else* 2777}#)
                                 (values
                                   (append #{meta 2756}# #{meta* 2776}#)
                                   (#{build-lambda-case 293}#
                                     #{s 2546}#
                                     #{req 2757}#
                                     #{opt 2758}#
                                     #{rest 2759}#
                                     #{kw 2760}#
                                     #{inits 2761}#
                                     #{vars 2762}#
                                     #{body 2763}#
                                     #{else* 2777}#)))))))))
                   #{tmp 2734}#)
                 (syntax-violation
                   #f
                   "source expression failed to match any pattern"
                   #{clauses 2549}#))))))))
   (#{strip 463}#
     (lambda (#{x 2780}# #{w 2781}#)
       (if (memq 'top (car #{w 2781}#))
         #{x 2780}#
         (letrec*
           ((#{f 2788}#
              (lambda (#{x 2789}#)
                (if (#{syntax-object? 312}# #{x 2789}#)
                  (#{strip 463}#
                    (#{syntax-object-expression 314}# #{x 2789}#)
                    (#{syntax-object-wrap 316}# #{x 2789}#))
                  (if (pair? #{x 2789}#)
                    (let ((#{a 2796}# (#{f 2788}# (car #{x 2789}#)))
                          (#{d 2797}# (#{f 2788}# (cdr #{x 2789}#))))
                      (if (if (eq? #{a 2796}# (car #{x 2789}#))
                            (eq? #{d 2797}# (cdr #{x 2789}#))
                            #f)
                        #{x 2789}#
                        (cons #{a 2796}# #{d 2797}#)))
                    (if (vector? #{x 2789}#)
                      (let ((#{old 2803}# (vector->list #{x 2789}#)))
                        (let ((#{new 2805}# (map #{f 2788}# #{old 2803}#)))
                          (letrec*
                            ((#{lp 2809}#
                               (lambda (#{l1 2810}# #{l2 2811}#)
                                 (if (null? #{l1 2810}#)
                                   #{x 2789}#
                                   (if (eq? (car #{l1 2810}#)
                                            (car #{l2 2811}#))
                                     (#{lp 2809}#
                                       (cdr #{l1 2810}#)
                                       (cdr #{l2 2811}#))
                                     (list->vector #{new 2805}#))))))
                            (#{lp 2809}# #{old 2803}# #{new 2805}#))))
                      #{x 2789}#))))))
           (#{f 2788}# #{x 2780}#)))))
   (#{gen-var 465}#
     (lambda (#{id 2813}#)
       (let ((#{id 2816}#
               (if (#{syntax-object? 312}# #{id 2813}#)
                 (#{syntax-object-expression 314}# #{id 2813}#)
                 #{id 2813}#)))
         (gensym
           (string-append (symbol->string #{id 2816}#) " ")))))
   (#{lambda-var-list 467}#
     (lambda (#{vars 2818}#)
       (letrec*
         ((#{lvl 2824}#
            (lambda (#{vars 2825}# #{ls 2826}# #{w 2827}#)
              (if (pair? #{vars 2825}#)
                (#{lvl 2824}#
                  (cdr #{vars 2825}#)
                  (cons (#{wrap 423}# (car #{vars 2825}#) #{w 2827}# #f)
                        #{ls 2826}#)
                  #{w 2827}#)
                (if (#{id? 349}# #{vars 2825}#)
                  (cons (#{wrap 423}# #{vars 2825}# #{w 2827}# #f)
                        #{ls 2826}#)
                  (if (null? #{vars 2825}#)
                    #{ls 2826}#
                    (if (#{syntax-object? 312}# #{vars 2825}#)
                      (#{lvl 2824}#
                        (#{syntax-object-expression 314}# #{vars 2825}#)
                        #{ls 2826}#
                        (#{join-wraps 405}#
                          #{w 2827}#
                          (#{syntax-object-wrap 316}# #{vars 2825}#)))
                      (cons #{vars 2825}# #{ls 2826}#))))))))
         (#{lvl 2824}# #{vars 2818}# '() '(()))))))
  (begin
    (module-define!
      (current-module)
      'letrec-syntax
      (make-syntax-transformer
        'letrec-syntax
        'local-syntax
        #t))
    (module-define!
      (current-module)
      'let-syntax
      (make-syntax-transformer
        'let-syntax
        'local-syntax
        #f))
    (#{global-extend 345}#
      'core
      'fluid-let-syntax
      (lambda (#{e 2838}#
               #{r 2839}#
               #{w 2840}#
               #{s 2841}#
               #{mod 2842}#)
        (let ((#{tmp 2849}#
                ($sc-dispatch
                  #{e 2838}#
                  '(_ #(each (any any)) any . each-any))))
          (if (if #{tmp 2849}#
                (@apply
                  (lambda (#{var 2854}#
                           #{val 2855}#
                           #{e1 2856}#
                           #{e2 2857}#)
                    (#{valid-bound-ids? 417}# #{var 2854}#))
                  #{tmp 2849}#)
                #f)
            (@apply
              (lambda (#{var 2863}#
                       #{val 2864}#
                       #{e1 2865}#
                       #{e2 2866}#)
                (let ((#{names 2868}#
                        (map (lambda (#{x 2869}#)
                               (#{id-var-name 411}# #{x 2869}# #{w 2840}#))
                             #{var 2863}#)))
                  (begin
                    (for-each
                      (lambda (#{id 2872}# #{n 2873}#)
                        (let ((#{atom-key 2878}#
                                (car (let ((#{t 5036}#
                                             (assq #{n 2873}# #{r 2839}#)))
                                       (if #{t 5036}#
                                         (cdr #{t 5036}#)
                                         (if (symbol? #{n 2873}#)
                                           (let ((#{t 5037}#
                                                   (#{get-global-definition-hook 263}#
                                                     #{n 2873}#
                                                     #{mod 2842}#)))
                                             (if #{t 5037}#
                                               #{t 5037}#
                                               '(global)))
                                           '(displaced-lexical)))))))
                          (if (memv #{atom-key 2878}# '(displaced-lexical))
                            (syntax-violation
                              'fluid-let-syntax
                              "identifier out of context"
                              #{e 2838}#
                              (#{wrap 423}#
                                (begin
                                  (if (if (pair? #{id 2872}#) #{s 2841}# #f)
                                    (set-source-properties!
                                      #{id 2872}#
                                      #{s 2841}#))
                                  #{id 2872}#)
                                #{w 2840}#
                                #{mod 2842}#)))))
                      #{var 2863}#
                      #{names 2868}#)
                    (#{chi-body 445}#
                      (cons #{e1 2865}# #{e2 2866}#)
                      (#{wrap 423}#
                        (begin
                          (if (if (pair? #{e 2838}#) #{s 2841}# #f)
                            (set-source-properties! #{e 2838}# #{s 2841}#))
                          #{e 2838}#)
                        #{w 2840}#
                        #{mod 2842}#)
                      (#{extend-env 337}#
                        #{names 2868}#
                        (let ((#{trans-r 2884}#
                                (#{macros-only-env 341}# #{r 2839}#)))
                          (map (lambda (#{x 2885}#)
                                 (cons 'macro
                                       (#{eval-local-transformer 449}#
                                         (#{chi 437}#
                                           #{x 2885}#
                                           #{trans-r 2884}#
                                           #{w 2840}#
                                           #{mod 2842}#)
                                         #{mod 2842}#)))
                               #{val 2864}#))
                        #{r 2839}#)
                      #{w 2840}#
                      #{mod 2842}#))))
              #{tmp 2849}#)
            (syntax-violation
              'fluid-let-syntax
              "bad syntax"
              (#{wrap 423}#
                (begin
                  (if (if (pair? #{e 2838}#) #{s 2841}# #f)
                    (set-source-properties! #{e 2838}# #{s 2841}#))
                  #{e 2838}#)
                #{w 2840}#
                #{mod 2842}#))))))
    (module-define!
      (current-module)
      'quote
      (make-syntax-transformer
        'quote
        'core
        (lambda (#{e 2891}#
                 #{r 2892}#
                 #{w 2893}#
                 #{s 2894}#
                 #{mod 2895}#)
          (let ((#{tmp 2902}# ($sc-dispatch #{e 2891}# '(_ any))))
            (if #{tmp 2902}#
              (@apply
                (lambda (#{e 2904}#)
                  (let ((#{exp 5266}#
                          (#{strip 463}# #{e 2904}# #{w 2893}#)))
                    (make-struct/no-tail
                      (vector-ref %expanded-vtables 1)
                      #{s 2894}#
                      #{exp 5266}#)))
                #{tmp 2902}#)
              (syntax-violation
                'quote
                "bad syntax"
                (#{wrap 423}#
                  (begin
                    (if (if (pair? #{e 2891}#) #{s 2894}# #f)
                      (set-source-properties! #{e 2891}# #{s 2894}#))
                    #{e 2891}#)
                  #{w 2893}#
                  #{mod 2895}#)))))))
    (#{global-extend 345}#
      'core
      'syntax
      (letrec*
        ((#{gen-syntax 2908}#
           (lambda (#{src 2923}#
                    #{e 2924}#
                    #{r 2925}#
                    #{maps 2926}#
                    #{ellipsis? 2927}#
                    #{mod 2928}#)
             (if (if (symbol? #{e 2924}#)
                   #t
                   (if (if (vector? #{e 2924}#)
                         (if (= (vector-length #{e 2924}#) 4)
                           (eq? (vector-ref #{e 2924}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{e 2924}# 1))
                     #f))
               (let ((#{label 2936}#
                       (#{id-var-name 411}# #{e 2924}# '(()))))
                 (let ((#{b 2939}#
                         (let ((#{t 5329}# (assq #{label 2936}# #{r 2925}#)))
                           (if #{t 5329}#
                             (cdr #{t 5329}#)
                             (if (symbol? #{label 2936}#)
                               (let ((#{t 5330}#
                                       (#{get-global-definition-hook 263}#
                                         #{label 2936}#
                                         #{mod 2928}#)))
                                 (if #{t 5330}# #{t 5330}# '(global)))
                               '(displaced-lexical))))))
                   (if (eq? (car #{b 2939}#) 'syntax)
                     (call-with-values
                       (lambda ()
                         (let ((#{var.lev 2942}# (cdr #{b 2939}#)))
                           (#{gen-ref 2910}#
                             #{src 2923}#
                             (car #{var.lev 2942}#)
                             (cdr #{var.lev 2942}#)
                             #{maps 2926}#)))
                       (lambda (#{var 2944}# #{maps 2945}#)
                         (values (list 'ref #{var 2944}#) #{maps 2945}#)))
                     (if (#{ellipsis? 2927}# #{e 2924}#)
                       (syntax-violation
                         'syntax
                         "misplaced ellipsis"
                         #{src 2923}#)
                       (values (list 'quote #{e 2924}#) #{maps 2926}#)))))
               (let ((#{tmp 2951}#
                       ($sc-dispatch #{e 2924}# '(any any))))
                 (if (if #{tmp 2951}#
                       (@apply
                         (lambda (#{dots 2954}# #{e 2955}#)
                           (#{ellipsis? 2927}# #{dots 2954}#))
                         #{tmp 2951}#)
                       #f)
                   (@apply
                     (lambda (#{dots 2958}# #{e 2959}#)
                       (#{gen-syntax 2908}#
                         #{src 2923}#
                         #{e 2959}#
                         #{r 2925}#
                         #{maps 2926}#
                         (lambda (#{x 2960}#) #f)
                         #{mod 2928}#))
                     #{tmp 2951}#)
                   (let ((#{tmp 2962}#
                           ($sc-dispatch #{e 2924}# '(any any . any))))
                     (if (if #{tmp 2962}#
                           (@apply
                             (lambda (#{x 2966}# #{dots 2967}# #{y 2968}#)
                               (#{ellipsis? 2927}# #{dots 2967}#))
                             #{tmp 2962}#)
                           #f)
                       (@apply
                         (lambda (#{x 2972}# #{dots 2973}# #{y 2974}#)
                           (letrec*
                             ((#{f 2978}#
                                (lambda (#{y 2979}# #{k 2980}#)
                                  (let ((#{tmp 2988}#
                                          ($sc-dispatch
                                            #{y 2979}#
                                            '(any . any))))
                                    (if (if #{tmp 2988}#
                                          (@apply
                                            (lambda (#{dots 2991}# #{y 2992}#)
                                              (#{ellipsis? 2927}#
                                                #{dots 2991}#))
                                            #{tmp 2988}#)
                                          #f)
                                      (@apply
                                        (lambda (#{dots 2995}# #{y 2996}#)
                                          (#{f 2978}#
                                            #{y 2996}#
                                            (lambda (#{maps 2997}#)
                                              (call-with-values
                                                (lambda ()
                                                  (#{k 2980}#
                                                    (cons '() #{maps 2997}#)))
                                                (lambda (#{x 2999}#
                                                         #{maps 3000}#)
                                                  (if (null? (car #{maps 3000}#))
                                                    (syntax-violation
                                                      'syntax
                                                      "extra ellipsis"
                                                      #{src 2923}#)
                                                    (values
                                                      (#{gen-mappend 2912}#
                                                        #{x 2999}#
                                                        (car #{maps 3000}#))
                                                      (cdr #{maps 3000}#))))))))
                                        #{tmp 2988}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{gen-syntax 2908}#
                                            #{src 2923}#
                                            #{y 2979}#
                                            #{r 2925}#
                                            #{maps 2926}#
                                            #{ellipsis? 2927}#
                                            #{mod 2928}#))
                                        (lambda (#{y 3005}# #{maps 3006}#)
                                          (call-with-values
                                            (lambda ()
                                              (#{k 2980}# #{maps 3006}#))
                                            (lambda (#{x 3009}# #{maps 3010}#)
                                              (values
                                                (#{gen-append 2918}#
                                                  #{x 3009}#
                                                  #{y 3005}#)
                                                #{maps 3010}#))))))))))
                             (#{f 2978}#
                               #{y 2974}#
                               (lambda (#{maps 2981}#)
                                 (call-with-values
                                   (lambda ()
                                     (#{gen-syntax 2908}#
                                       #{src 2923}#
                                       #{x 2972}#
                                       #{r 2925}#
                                       (cons '() #{maps 2981}#)
                                       #{ellipsis? 2927}#
                                       #{mod 2928}#))
                                   (lambda (#{x 2983}# #{maps 2984}#)
                                     (if (null? (car #{maps 2984}#))
                                       (syntax-violation
                                         'syntax
                                         "extra ellipsis"
                                         #{src 2923}#)
                                       (values
                                         (#{gen-map 2914}#
                                           #{x 2983}#
                                           (car #{maps 2984}#))
                                         (cdr #{maps 2984}#)))))))))
                         #{tmp 2962}#)
                       (let ((#{tmp 3013}#
                               ($sc-dispatch #{e 2924}# '(any . any))))
                         (if #{tmp 3013}#
                           (@apply
                             (lambda (#{x 3016}# #{y 3017}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax 2908}#
                                     #{src 2923}#
                                     #{x 3016}#
                                     #{r 2925}#
                                     #{maps 2926}#
                                     #{ellipsis? 2927}#
                                     #{mod 2928}#))
                                 (lambda (#{x 3018}# #{maps 3019}#)
                                   (call-with-values
                                     (lambda ()
                                       (#{gen-syntax 2908}#
                                         #{src 2923}#
                                         #{y 3017}#
                                         #{r 2925}#
                                         #{maps 3019}#
                                         #{ellipsis? 2927}#
                                         #{mod 2928}#))
                                     (lambda (#{y 3022}# #{maps 3023}#)
                                       (values
                                         (#{gen-cons 2916}#
                                           #{x 3018}#
                                           #{y 3022}#)
                                         #{maps 3023}#))))))
                             #{tmp 3013}#)
                           (let ((#{tmp 3026}#
                                   ($sc-dispatch
                                     #{e 2924}#
                                     '#(vector (any . each-any)))))
                             (if #{tmp 3026}#
                               (@apply
                                 (lambda (#{e1 3029}# #{e2 3030}#)
                                   (call-with-values
                                     (lambda ()
                                       (#{gen-syntax 2908}#
                                         #{src 2923}#
                                         (cons #{e1 3029}# #{e2 3030}#)
                                         #{r 2925}#
                                         #{maps 2926}#
                                         #{ellipsis? 2927}#
                                         #{mod 2928}#))
                                     (lambda (#{e 3032}# #{maps 3033}#)
                                       (values
                                         (#{gen-vector 2920}# #{e 3032}#)
                                         #{maps 3033}#))))
                                 #{tmp 3026}#)
                               (values
                                 (list 'quote #{e 2924}#)
                                 #{maps 2926}#))))))))))))
         (#{gen-ref 2910}#
           (lambda (#{src 3039}#
                    #{var 3040}#
                    #{level 3041}#
                    #{maps 3042}#)
             (if (= #{level 3041}# 0)
               (values #{var 3040}# #{maps 3042}#)
               (if (null? #{maps 3042}#)
                 (syntax-violation
                   'syntax
                   "missing ellipsis"
                   #{src 3039}#)
                 (call-with-values
                   (lambda ()
                     (#{gen-ref 2910}#
                       #{src 3039}#
                       #{var 3040}#
                       (#{1-}# #{level 3041}#)
                       (cdr #{maps 3042}#)))
                   (lambda (#{outer-var 3049}# #{outer-maps 3050}#)
                     (let ((#{b 3054}#
                             (assq #{outer-var 3049}# (car #{maps 3042}#))))
                       (if #{b 3054}#
                         (values (cdr #{b 3054}#) #{maps 3042}#)
                         (let ((#{inner-var 3056}#
                                 (gensym
                                   (string-append (symbol->string 'tmp) " "))))
                           (values
                             #{inner-var 3056}#
                             (cons (cons (cons #{outer-var 3049}#
                                               #{inner-var 3056}#)
                                         (car #{maps 3042}#))
                                   #{outer-maps 3050}#)))))))))))
         (#{gen-mappend 2912}#
           (lambda (#{e 3057}# #{map-env 3058}#)
             (list 'apply
                   '(primitive append)
                   (#{gen-map 2914}# #{e 3057}# #{map-env 3058}#))))
         (#{gen-map 2914}#
           (lambda (#{e 3062}# #{map-env 3063}#)
             (let ((#{formals 3068}# (map cdr #{map-env 3063}#))
                   (#{actuals 3069}#
                     (map (lambda (#{x 3070}#)
                            (list 'ref (car #{x 3070}#)))
                          #{map-env 3063}#)))
               (if (eq? (car #{e 3062}#) 'ref)
                 (car #{actuals 3069}#)
                 (if (and-map
                       (lambda (#{x 3077}#)
                         (if (eq? (car #{x 3077}#) 'ref)
                           (memq (car (cdr #{x 3077}#)) #{formals 3068}#)
                           #f))
                       (cdr #{e 3062}#))
                   (cons 'map
                         (cons (list 'primitive (car #{e 3062}#))
                               (map (let ((#{r 3083}#
                                            (map cons
                                                 #{formals 3068}#
                                                 #{actuals 3069}#)))
                                      (lambda (#{x 3084}#)
                                        (cdr (assq (car (cdr #{x 3084}#))
                                                   #{r 3083}#))))
                                    (cdr #{e 3062}#))))
                   (cons 'map
                         (cons (list 'lambda #{formals 3068}# #{e 3062}#)
                               #{actuals 3069}#)))))))
         (#{gen-cons 2916}#
           (lambda (#{x 3088}# #{y 3089}#)
             (let ((#{atom-key 3094}# (car #{y 3089}#)))
               (if (memv #{atom-key 3094}# '(quote))
                 (if (eq? (car #{x 3088}#) 'quote)
                   (list 'quote
                         (cons (car (cdr #{x 3088}#))
                               (car (cdr #{y 3089}#))))
                   (if (eq? (car (cdr #{y 3089}#)) '())
                     (list 'list #{x 3088}#)
                     (list 'cons #{x 3088}# #{y 3089}#)))
                 (if (memv #{atom-key 3094}# '(list))
                   (cons 'list (cons #{x 3088}# (cdr #{y 3089}#)))
                   (list 'cons #{x 3088}# #{y 3089}#))))))
         (#{gen-append 2918}#
           (lambda (#{x 3103}# #{y 3104}#)
             (if (equal? #{y 3104}# ''())
               #{x 3103}#
               (list 'append #{x 3103}# #{y 3104}#))))
         (#{gen-vector 2920}#
           (lambda (#{x 3108}#)
             (if (eq? (car #{x 3108}#) 'list)
               (cons 'vector (cdr #{x 3108}#))
               (if (eq? (car #{x 3108}#) 'quote)
                 (list 'quote
                       (list->vector (car (cdr #{x 3108}#))))
                 (list 'list->vector #{x 3108}#)))))
         (#{regen 2922}#
           (lambda (#{x 3118}#)
             (let ((#{atom-key 3122}# (car #{x 3118}#)))
               (if (memv #{atom-key 3122}# '(ref))
                 (let ((#{name 5345}# (car (cdr #{x 3118}#)))
                       (#{var 5346}# (car (cdr #{x 3118}#))))
                   (make-struct/no-tail
                     (vector-ref %expanded-vtables 3)
                     #f
                     #{name 5345}#
                     #{var 5346}#))
                 (if (memv #{atom-key 3122}# '(primitive))
                   (let ((#{name 5355}# (car (cdr #{x 3118}#))))
                     (if (equal? (module-name (current-module)) '(guile))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 7)
                         #f
                         #{name 5355}#)
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 5)
                         #f
                         '(guile)
                         #{name 5355}#
                         #f)))
                   (if (memv #{atom-key 3122}# '(quote))
                     (let ((#{exp 5369}# (car (cdr #{x 3118}#))))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 1)
                         #f
                         #{exp 5369}#))
                     (if (memv #{atom-key 3122}# '(lambda))
                       (if (list? (car (cdr #{x 3118}#)))
                         (let ((#{req 5377}# (car (cdr #{x 3118}#)))
                               (#{vars 5379}# (car (cdr #{x 3118}#)))
                               (#{exp 5381}#
                                 (#{regen 2922}#
                                   (car (cdr (cdr #{x 3118}#))))))
                           (let ((#{body 5386}#
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 14)
                                     #f
                                     #{req 5377}#
                                     #f
                                     #f
                                     #f
                                     '()
                                     #{vars 5379}#
                                     #{exp 5381}#
                                     #f)))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 13)
                               #f
                               '()
                               #{body 5386}#)))
                         (error "how did we get here" #{x 3118}#))
                       (let ((#{fun-exp 5401}#
                               (let ((#{name 5406}# (car #{x 3118}#)))
                                 (if (equal?
                                       (module-name (current-module))
                                       '(guile))
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 7)
                                     #f
                                     #{name 5406}#)
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 5)
                                     #f
                                     '(guile)
                                     #{name 5406}#
                                     #f))))
                             (#{arg-exps 5402}#
                               (map #{regen 2922}# (cdr #{x 3118}#))))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 11)
                           #f
                           #{fun-exp 5401}#
                           #{arg-exps 5402}#))))))))))
        (lambda (#{e 3134}#
                 #{r 3135}#
                 #{w 3136}#
                 #{s 3137}#
                 #{mod 3138}#)
          (let ((#{e 3145}#
                  (#{wrap 423}#
                    (begin
                      (if (if (pair? #{e 3134}#) #{s 3137}# #f)
                        (set-source-properties! #{e 3134}# #{s 3137}#))
                      #{e 3134}#)
                    #{w 3136}#
                    #{mod 3138}#)))
            (let ((#{tmp 3147}# ($sc-dispatch #{e 3145}# '(_ any))))
              (if #{tmp 3147}#
                (@apply
                  (lambda (#{x 3149}#)
                    (call-with-values
                      (lambda ()
                        (#{gen-syntax 2908}#
                          #{e 3145}#
                          #{x 3149}#
                          #{r 3135}#
                          '()
                          #{ellipsis? 453}#
                          #{mod 3138}#))
                      (lambda (#{e 3150}# #{maps 3151}#)
                        (#{regen 2922}# #{e 3150}#))))
                  #{tmp 3147}#)
                (syntax-violation
                  'syntax
                  "bad `syntax' form"
                  #{e 3145}#)))))))
    (#{global-extend 345}#
      'core
      'lambda
      (lambda (#{e 3156}#
               #{r 3157}#
               #{w 3158}#
               #{s 3159}#
               #{mod 3160}#)
        (let ((#{tmp 3167}#
                ($sc-dispatch #{e 3156}# '(_ any any . each-any))))
          (if #{tmp 3167}#
            (@apply
              (lambda (#{args 3171}# #{e1 3172}# #{e2 3173}#)
                (call-with-values
                  (lambda ()
                    (#{lambda-formals 455}# #{args 3171}#))
                  (lambda (#{req 3174}#
                           #{opt 3175}#
                           #{rest 3176}#
                           #{kw 3177}#)
                    (letrec*
                      ((#{lp 3185}#
                         (lambda (#{body 3186}# #{meta 3187}#)
                           (let ((#{tmp 3190}#
                                   ($sc-dispatch
                                     #{body 3186}#
                                     '(any any . each-any))))
                             (if (if #{tmp 3190}#
                                   (@apply
                                     (lambda (#{docstring 3194}#
                                              #{e1 3195}#
                                              #{e2 3196}#)
                                       (string?
                                         (syntax->datum #{docstring 3194}#)))
                                     #{tmp 3190}#)
                                   #f)
                               (@apply
                                 (lambda (#{docstring 3200}#
                                          #{e1 3201}#
                                          #{e2 3202}#)
                                   (#{lp 3185}#
                                     (cons #{e1 3201}# #{e2 3202}#)
                                     (append
                                       #{meta 3187}#
                                       (list (cons 'documentation
                                                   (syntax->datum
                                                     #{docstring 3200}#))))))
                                 #{tmp 3190}#)
                               (let ((#{tmp 3205}#
                                       ($sc-dispatch
                                         #{body 3186}#
                                         '(#(vector #(each (any . any)))
                                           any
                                           .
                                           each-any))))
                                 (if #{tmp 3205}#
                                   (@apply
                                     (lambda (#{k 3210}#
                                              #{v 3211}#
                                              #{e1 3212}#
                                              #{e2 3213}#)
                                       (#{lp 3185}#
                                         (cons #{e1 3212}# #{e2 3213}#)
                                         (append
                                           #{meta 3187}#
                                           (syntax->datum
                                             (map cons
                                                  #{k 3210}#
                                                  #{v 3211}#)))))
                                     #{tmp 3205}#)
                                   ((lambda (#{e 2267}#
                                             #{r 2268}#
                                             #{w 2269}#
                                             #{s 2270}#
                                             #{mod 2271}#
                                             #{req 2272}#
                                             #{rest 2273}#
                                             #{meta 2274}#
                                             #{body 2275}#)
                                      (let ((#{ids 2287}#
                                              (if #{rest 2273}#
                                                (append
                                                  #{req 2272}#
                                                  (list #{rest 2273}#))
                                                #{req 2272}#)))
                                        (let ((#{vars 2289}#
                                                (map #{gen-var 465}#
                                                     #{ids 2287}#)))
                                          (let ((#{labels 2291}#
                                                  (#{gen-labels 369}#
                                                    #{ids 2287}#)))
                                            (#{build-simple-lambda 289}#
                                              #{s 2270}#
                                              (map syntax->datum #{req 2272}#)
                                              (if #{rest 2273}#
                                                (syntax->datum #{rest 2273}#)
                                                #f)
                                              #{vars 2289}#
                                              #{meta 2274}#
                                              (#{chi-body 445}#
                                                #{body 2275}#
                                                (#{source-wrap 425}#
                                                  #{e 2267}#
                                                  #{w 2269}#
                                                  #{s 2270}#
                                                  #{mod 2271}#)
                                                (#{extend-var-env 339}#
                                                  #{labels 2291}#
                                                  #{vars 2289}#
                                                  #{r 2268}#)
                                                (#{make-binding-wrap 401}#
                                                  #{ids 2287}#
                                                  #{labels 2291}#
                                                  #{w 2269}#)
                                                #{mod 2271}#))))))
                                    #{e 3156}#
                                    #{r 3157}#
                                    #{w 3158}#
                                    #{s 3159}#
                                    #{mod 3160}#
                                    #{req 3174}#
                                    #{rest 3176}#
                                    #{meta 3187}#
                                    #{body 3186}#))))))))
                      (#{lp 3185}# (cons #{e1 3172}# #{e2 3173}#) '())))))
              #{tmp 3167}#)
            (syntax-violation
              'lambda
              "bad lambda"
              #{e 3156}#)))))
    (module-define!
      (current-module)
      'lambda*
      (make-syntax-transformer
        'lambda*
        'core
        (lambda (#{e 3221}#
                 #{r 3222}#
                 #{w 3223}#
                 #{s 3224}#
                 #{mod 3225}#)
          (let ((#{tmp 3232}#
                  ($sc-dispatch #{e 3221}# '(_ any any . each-any))))
            (if #{tmp 3232}#
              (@apply
                (lambda (#{args 3236}# #{e1 3237}# #{e2 3238}#)
                  (call-with-values
                    (lambda ()
                      (#{chi-lambda-case 461}#
                        #{e 3221}#
                        #{r 3222}#
                        #{w 3223}#
                        #{s 3224}#
                        #{mod 3225}#
                        #{lambda*-formals 459}#
                        (list (cons #{args 3236}#
                                    (cons #{e1 3237}# #{e2 3238}#)))))
                    (lambda (#{meta 3240}# #{lcase 3241}#)
                      (make-struct/no-tail
                        (vector-ref %expanded-vtables 13)
                        #{s 3224}#
                        #{meta 3240}#
                        #{lcase 3241}#))))
                #{tmp 3232}#)
              (syntax-violation
                'lambda
                "bad lambda*"
                #{e 3221}#))))))
    (module-define!
      (current-module)
      'case-lambda
      (make-syntax-transformer
        'case-lambda
        'core
        (lambda (#{e 3246}#
                 #{r 3247}#
                 #{w 3248}#
                 #{s 3249}#
                 #{mod 3250}#)
          (let ((#{tmp 3257}#
                  ($sc-dispatch
                    #{e 3246}#
                    '(_ (any any . each-any)
                        .
                        #(each (any any . each-any))))))
            (if #{tmp 3257}#
              (@apply
                (lambda (#{args 3264}#
                         #{e1 3265}#
                         #{e2 3266}#
                         #{args* 3267}#
                         #{e1* 3268}#
                         #{e2* 3269}#)
                  (call-with-values
                    (lambda ()
                      (#{chi-lambda-case 461}#
                        #{e 3246}#
                        #{r 3247}#
                        #{w 3248}#
                        #{s 3249}#
                        #{mod 3250}#
                        #{lambda-formals 455}#
                        (cons (cons #{args 3264}#
                                    (cons #{e1 3265}# #{e2 3266}#))
                              (map (lambda (#{tmp 3273}#
                                            #{tmp 3272}#
                                            #{tmp 3271}#)
                                     (cons #{tmp 3271}#
                                           (cons #{tmp 3272}# #{tmp 3273}#)))
                                   #{e2* 3269}#
                                   #{e1* 3268}#
                                   #{args* 3267}#))))
                    (lambda (#{meta 3275}# #{lcase 3276}#)
                      (make-struct/no-tail
                        (vector-ref %expanded-vtables 13)
                        #{s 3249}#
                        #{meta 3275}#
                        #{lcase 3276}#))))
                #{tmp 3257}#)
              (syntax-violation
                'case-lambda
                "bad case-lambda"
                #{e 3246}#))))))
    (module-define!
      (current-module)
      'case-lambda*
      (make-syntax-transformer
        'case-lambda*
        'core
        (lambda (#{e 3281}#
                 #{r 3282}#
                 #{w 3283}#
                 #{s 3284}#
                 #{mod 3285}#)
          (let ((#{tmp 3292}#
                  ($sc-dispatch
                    #{e 3281}#
                    '(_ (any any . each-any)
                        .
                        #(each (any any . each-any))))))
            (if #{tmp 3292}#
              (@apply
                (lambda (#{args 3299}#
                         #{e1 3300}#
                         #{e2 3301}#
                         #{args* 3302}#
                         #{e1* 3303}#
                         #{e2* 3304}#)
                  (call-with-values
                    (lambda ()
                      (#{chi-lambda-case 461}#
                        #{e 3281}#
                        #{r 3282}#
                        #{w 3283}#
                        #{s 3284}#
                        #{mod 3285}#
                        #{lambda*-formals 459}#
                        (cons (cons #{args 3299}#
                                    (cons #{e1 3300}# #{e2 3301}#))
                              (map (lambda (#{tmp 3308}#
                                            #{tmp 3307}#
                                            #{tmp 3306}#)
                                     (cons #{tmp 3306}#
                                           (cons #{tmp 3307}# #{tmp 3308}#)))
                                   #{e2* 3304}#
                                   #{e1* 3303}#
                                   #{args* 3302}#))))
                    (lambda (#{meta 3310}# #{lcase 3311}#)
                      (make-struct/no-tail
                        (vector-ref %expanded-vtables 13)
                        #{s 3284}#
                        #{meta 3310}#
                        #{lcase 3311}#))))
                #{tmp 3292}#)
              (syntax-violation
                'case-lambda
                "bad case-lambda*"
                #{e 3281}#))))))
    (#{global-extend 345}#
      'core
      'let
      (letrec*
        ((#{chi-let 3317}#
           (lambda (#{e 3318}#
                    #{r 3319}#
                    #{w 3320}#
                    #{s 3321}#
                    #{mod 3322}#
                    #{constructor 3323}#
                    #{ids 3324}#
                    #{vals 3325}#
                    #{exps 3326}#)
             (if (not (#{valid-bound-ids? 417}# #{ids 3324}#))
               (syntax-violation
                 'let
                 "duplicate bound variable"
                 #{e 3318}#)
               (let ((#{labels 3338}#
                       (#{gen-labels 369}# #{ids 3324}#))
                     (#{new-vars 3339}#
                       (map #{gen-var 465}# #{ids 3324}#)))
                 (let ((#{nw 3342}#
                         (#{make-binding-wrap 401}#
                           #{ids 3324}#
                           #{labels 3338}#
                           #{w 3320}#))
                       (#{nr 3343}#
                         (#{extend-var-env 339}#
                           #{labels 3338}#
                           #{new-vars 3339}#
                           #{r 3319}#)))
                   (#{constructor 3323}#
                     #{s 3321}#
                     (map syntax->datum #{ids 3324}#)
                     #{new-vars 3339}#
                     (map (lambda (#{x 3344}#)
                            (#{chi 437}#
                              #{x 3344}#
                              #{r 3319}#
                              #{w 3320}#
                              #{mod 3322}#))
                          #{vals 3325}#)
                     (#{chi-body 445}#
                       #{exps 3326}#
                       (#{wrap 423}#
                         (begin
                           (if (if (pair? #{e 3318}#) #{s 3321}# #f)
                             (set-source-properties! #{e 3318}# #{s 3321}#))
                           #{e 3318}#)
                         #{nw 3342}#
                         #{mod 3322}#)
                       #{nr 3343}#
                       #{nw 3342}#
                       #{mod 3322}#))))))))
        (lambda (#{e 3346}#
                 #{r 3347}#
                 #{w 3348}#
                 #{s 3349}#
                 #{mod 3350}#)
          (let ((#{tmp 3357}#
                  ($sc-dispatch
                    #{e 3346}#
                    '(_ #(each (any any)) any . each-any))))
            (if (if #{tmp 3357}#
                  (@apply
                    (lambda (#{id 3362}#
                             #{val 3363}#
                             #{e1 3364}#
                             #{e2 3365}#)
                      (and-map #{id? 349}# #{id 3362}#))
                    #{tmp 3357}#)
                  #f)
              (@apply
                (lambda (#{id 3371}#
                         #{val 3372}#
                         #{e1 3373}#
                         #{e2 3374}#)
                  (#{chi-let 3317}#
                    #{e 3346}#
                    #{r 3347}#
                    #{w 3348}#
                    #{s 3349}#
                    #{mod 3350}#
                    (lambda (#{src 1104}#
                             #{ids 1105}#
                             #{vars 1106}#
                             #{val-exps 1107}#
                             #{body-exp 1108}#)
                      (begin
                        (for-each
                          #{maybe-name-value! 267}#
                          #{ids 1105}#
                          #{val-exps 1107}#)
                        (if (null? #{vars 1106}#)
                          #{body-exp 1108}#
                          (#{make-let 238}#
                            #{src 1104}#
                            #{ids 1105}#
                            #{vars 1106}#
                            #{val-exps 1107}#
                            #{body-exp 1108}#))))
                    #{id 3371}#
                    #{val 3372}#
                    (cons #{e1 3373}# #{e2 3374}#)))
                #{tmp 3357}#)
              (let ((#{tmp 3378}#
                      ($sc-dispatch
                        #{e 3346}#
                        '(_ any #(each (any any)) any . each-any))))
                (if (if #{tmp 3378}#
                      (@apply
                        (lambda (#{f 3384}#
                                 #{id 3385}#
                                 #{val 3386}#
                                 #{e1 3387}#
                                 #{e2 3388}#)
                          (if (if (symbol? #{f 3384}#)
                                #t
                                (if (if (vector? #{f 3384}#)
                                      (if (= (vector-length #{f 3384}#) 4)
                                        (eq? (vector-ref #{f 3384}# 0)
                                             'syntax-object)
                                        #f)
                                      #f)
                                  (symbol? (vector-ref #{f 3384}# 1))
                                  #f))
                            (and-map #{id? 349}# #{id 3385}#)
                            #f))
                        #{tmp 3378}#)
                      #f)
                  (@apply
                    (lambda (#{f 3397}#
                             #{id 3398}#
                             #{val 3399}#
                             #{e1 3400}#
                             #{e2 3401}#)
                      (#{chi-let 3317}#
                        #{e 3346}#
                        #{r 3347}#
                        #{w 3348}#
                        #{s 3349}#
                        #{mod 3350}#
                        (lambda (#{src 1114}#
                                 #{ids 1115}#
                                 #{vars 1116}#
                                 #{val-exps 1117}#
                                 #{body-exp 1118}#)
                          (let ((#{f 1128}# (car #{vars 1116}#))
                                (#{f-name 1129}# (car #{ids 1115}#))
                                (#{vars 1130}# (cdr #{vars 1116}#))
                                (#{ids 1131}# (cdr #{ids 1115}#)))
                            (let ((#{proc 1133}#
                                    (#{build-simple-lambda 289}#
                                      #{src 1114}#
                                      #{ids 1131}#
                                      #f
                                      #{vars 1130}#
                                      '()
                                      #{body-exp 1118}#)))
                              (begin
                                (#{maybe-name-value! 267}#
                                  #{f-name 1129}#
                                  #{proc 1133}#)
                                (for-each
                                  #{maybe-name-value! 267}#
                                  #{ids 1131}#
                                  #{val-exps 1117}#)
                                (#{make-letrec 240}#
                                  #{src 1114}#
                                  #f
                                  (list #{f-name 1129}#)
                                  (list #{f 1128}#)
                                  (list #{proc 1133}#)
                                  (#{build-application 271}#
                                    #{src 1114}#
                                    (#{build-lexical-reference 277}#
                                      'fun
                                      #{src 1114}#
                                      #{f-name 1129}#
                                      #{f 1128}#)
                                    #{val-exps 1117}#))))))
                        (cons #{f 3397}# #{id 3398}#)
                        #{val 3399}#
                        (cons #{e1 3400}# #{e2 3401}#)))
                    #{tmp 3378}#)
                  (syntax-violation
                    'let
                    "bad let"
                    (#{wrap 423}#
                      (begin
                        (if (if (pair? #{e 3346}#) #{s 3349}# #f)
                          (set-source-properties! #{e 3346}# #{s 3349}#))
                        #{e 3346}#)
                      #{w 3348}#
                      #{mod 3350}#)))))))))
    (#{global-extend 345}#
      'core
      'letrec
      (lambda (#{e 3407}#
               #{r 3408}#
               #{w 3409}#
               #{s 3410}#
               #{mod 3411}#)
        (let ((#{tmp 3418}#
                ($sc-dispatch
                  #{e 3407}#
                  '(_ #(each (any any)) any . each-any))))
          (if (if #{tmp 3418}#
                (@apply
                  (lambda (#{id 3423}#
                           #{val 3424}#
                           #{e1 3425}#
                           #{e2 3426}#)
                    (and-map #{id? 349}# #{id 3423}#))
                  #{tmp 3418}#)
                #f)
            (@apply
              (lambda (#{id 3432}#
                       #{val 3433}#
                       #{e1 3434}#
                       #{e2 3435}#)
                (if (not (#{valid-bound-ids? 417}# #{id 3432}#))
                  (syntax-violation
                    'letrec
                    "duplicate bound variable"
                    #{e 3407}#)
                  (let ((#{labels 3441}#
                          (#{gen-labels 369}# #{id 3432}#))
                        (#{new-vars 3442}#
                          (map #{gen-var 465}# #{id 3432}#)))
                    (let ((#{w 3445}#
                            (#{make-binding-wrap 401}#
                              #{id 3432}#
                              #{labels 3441}#
                              #{w 3409}#))
                          (#{r 3446}#
                            (#{extend-var-env 339}#
                              #{labels 3441}#
                              #{new-vars 3442}#
                              #{r 3408}#)))
                      (#{build-letrec 305}#
                        #{s 3410}#
                        #f
                        (map syntax->datum #{id 3432}#)
                        #{new-vars 3442}#
                        (map (lambda (#{x 3447}#)
                               (#{chi 437}#
                                 #{x 3447}#
                                 #{r 3446}#
                                 #{w 3445}#
                                 #{mod 3411}#))
                             #{val 3433}#)
                        (#{chi-body 445}#
                          (cons #{e1 3434}# #{e2 3435}#)
                          (#{wrap 423}#
                            (begin
                              (if (if (pair? #{e 3407}#) #{s 3410}# #f)
                                (set-source-properties! #{e 3407}# #{s 3410}#))
                              #{e 3407}#)
                            #{w 3445}#
                            #{mod 3411}#)
                          #{r 3446}#
                          #{w 3445}#
                          #{mod 3411}#))))))
              #{tmp 3418}#)
            (syntax-violation
              'letrec
              "bad letrec"
              (#{wrap 423}#
                (begin
                  (if (if (pair? #{e 3407}#) #{s 3410}# #f)
                    (set-source-properties! #{e 3407}# #{s 3410}#))
                  #{e 3407}#)
                #{w 3409}#
                #{mod 3411}#))))))
    (#{global-extend 345}#
      'core
      'letrec*
      (lambda (#{e 3453}#
               #{r 3454}#
               #{w 3455}#
               #{s 3456}#
               #{mod 3457}#)
        (let ((#{tmp 3464}#
                ($sc-dispatch
                  #{e 3453}#
                  '(_ #(each (any any)) any . each-any))))
          (if (if #{tmp 3464}#
                (@apply
                  (lambda (#{id 3469}#
                           #{val 3470}#
                           #{e1 3471}#
                           #{e2 3472}#)
                    (and-map #{id? 349}# #{id 3469}#))
                  #{tmp 3464}#)
                #f)
            (@apply
              (lambda (#{id 3478}#
                       #{val 3479}#
                       #{e1 3480}#
                       #{e2 3481}#)
                (if (not (#{valid-bound-ids? 417}# #{id 3478}#))
                  (syntax-violation
                    'letrec*
                    "duplicate bound variable"
                    #{e 3453}#)
                  (let ((#{labels 3487}#
                          (#{gen-labels 369}# #{id 3478}#))
                        (#{new-vars 3488}#
                          (map #{gen-var 465}# #{id 3478}#)))
                    (let ((#{w 3491}#
                            (#{make-binding-wrap 401}#
                              #{id 3478}#
                              #{labels 3487}#
                              #{w 3455}#))
                          (#{r 3492}#
                            (#{extend-var-env 339}#
                              #{labels 3487}#
                              #{new-vars 3488}#
                              #{r 3454}#)))
                      (#{build-letrec 305}#
                        #{s 3456}#
                        #t
                        (map syntax->datum #{id 3478}#)
                        #{new-vars 3488}#
                        (map (lambda (#{x 3493}#)
                               (#{chi 437}#
                                 #{x 3493}#
                                 #{r 3492}#
                                 #{w 3491}#
                                 #{mod 3457}#))
                             #{val 3479}#)
                        (#{chi-body 445}#
                          (cons #{e1 3480}# #{e2 3481}#)
                          (#{wrap 423}#
                            (begin
                              (if (if (pair? #{e 3453}#) #{s 3456}# #f)
                                (set-source-properties! #{e 3453}# #{s 3456}#))
                              #{e 3453}#)
                            #{w 3491}#
                            #{mod 3457}#)
                          #{r 3492}#
                          #{w 3491}#
                          #{mod 3457}#))))))
              #{tmp 3464}#)
            (syntax-violation
              'letrec*
              "bad letrec*"
              (#{wrap 423}#
                (begin
                  (if (if (pair? #{e 3453}#) #{s 3456}# #f)
                    (set-source-properties! #{e 3453}# #{s 3456}#))
                  #{e 3453}#)
                #{w 3455}#
                #{mod 3457}#))))))
    (#{global-extend 345}#
      'core
      'set!
      (lambda (#{e 3499}#
               #{r 3500}#
               #{w 3501}#
               #{s 3502}#
               #{mod 3503}#)
        (let ((#{tmp 3510}#
                ($sc-dispatch #{e 3499}# '(_ any any))))
          (if (if #{tmp 3510}#
                (@apply
                  (lambda (#{id 3513}# #{val 3514}#)
                    (if (symbol? #{id 3513}#)
                      #t
                      (if (if (vector? #{id 3513}#)
                            (if (= (vector-length #{id 3513}#) 4)
                              (eq? (vector-ref #{id 3513}# 0) 'syntax-object)
                              #f)
                            #f)
                        (symbol? (vector-ref #{id 3513}# 1))
                        #f)))
                  #{tmp 3510}#)
                #f)
            (@apply
              (lambda (#{id 3517}# #{val 3518}#)
                (let ((#{n 3521}#
                        (#{id-var-name 411}# #{id 3517}# #{w 3501}#))
                      (#{id-mod 3522}#
                        (if (if (vector? #{id 3517}#)
                              (if (= (vector-length #{id 3517}#) 4)
                                (eq? (vector-ref #{id 3517}# 0) 'syntax-object)
                                #f)
                              #f)
                          (vector-ref #{id 3517}# 3)
                          #{mod 3503}#)))
                  (let ((#{b 3524}#
                          (let ((#{t 7016}# (assq #{n 3521}# #{r 3500}#)))
                            (if #{t 7016}#
                              (cdr #{t 7016}#)
                              (if (symbol? #{n 3521}#)
                                (let ((#{t 7017}#
                                        (#{get-global-definition-hook 263}#
                                          #{n 3521}#
                                          #{id-mod 3522}#)))
                                  (if #{t 7017}# #{t 7017}# '(global)))
                                '(displaced-lexical))))))
                    (let ((#{atom-key 3527}# (car #{b 3524}#)))
                      (if (memv #{atom-key 3527}# '(lexical))
                        ((lambda (#{source 993}#
                                  #{name 994}#
                                  #{var 995}#
                                  #{exp 996}#)
                           (begin
                             (#{maybe-name-value! 267}#
                               #{name 994}#
                               #{exp 996}#)
                             (#{make-lexical-set 216}#
                               #{source 993}#
                               #{name 994}#
                               #{var 995}#
                               #{exp 996}#)))
                         #{s 3502}#
                         (syntax->datum #{id 3517}#)
                         (cdr #{b 3524}#)
                         (#{chi 437}#
                           #{val 3518}#
                           #{r 3500}#
                           #{w 3501}#
                           #{mod 3503}#))
                        (if (memv #{atom-key 3527}# '(global))
                          (#{build-global-assignment 285}#
                            #{s 3502}#
                            #{n 3521}#
                            (#{chi 437}#
                              #{val 3518}#
                              #{r 3500}#
                              #{w 3501}#
                              #{mod 3503}#)
                            #{id-mod 3522}#)
                          (if (memv #{atom-key 3527}# '(macro))
                            (let ((#{p 3534}# (cdr #{b 3524}#)))
                              (if (procedure-property
                                    #{p 3534}#
                                    'variable-transformer)
                                (#{chi 437}#
                                  (#{chi-macro 443}#
                                    #{p 3534}#
                                    #{e 3499}#
                                    #{r 3500}#
                                    #{w 3501}#
                                    #{s 3502}#
                                    #f
                                    #{mod 3503}#)
                                  #{r 3500}#
                                  '(())
                                  #{mod 3503}#)
                                (syntax-violation
                                  'set!
                                  "not a variable transformer"
                                  (#{wrap 423}#
                                    #{e 3499}#
                                    #{w 3501}#
                                    #{mod 3503}#)
                                  (#{wrap 423}#
                                    #{id 3517}#
                                    #{w 3501}#
                                    #{id-mod 3522}#))))
                            (if (memv #{atom-key 3527}# '(displaced-lexical))
                              (syntax-violation
                                'set!
                                "identifier out of context"
                                (#{wrap 423}#
                                  #{id 3517}#
                                  #{w 3501}#
                                  #{mod 3503}#))
                              (syntax-violation
                                'set!
                                "bad set!"
                                (#{wrap 423}#
                                  (begin
                                    (if (if (pair? #{e 3499}#) #{s 3502}# #f)
                                      (set-source-properties!
                                        #{e 3499}#
                                        #{s 3502}#))
                                    #{e 3499}#)
                                  #{w 3501}#
                                  #{mod 3503}#))))))))))
              #{tmp 3510}#)
            (let ((#{tmp 3539}#
                    ($sc-dispatch
                      #{e 3499}#
                      '(_ (any . each-any) any))))
              (if #{tmp 3539}#
                (@apply
                  (lambda (#{head 3543}# #{tail 3544}# #{val 3545}#)
                    (call-with-values
                      (lambda ()
                        (#{syntax-type 435}#
                          #{head 3543}#
                          #{r 3500}#
                          '(())
                          #f
                          #f
                          #{mod 3503}#
                          #t))
                      (lambda (#{type 3548}#
                               #{value 3549}#
                               #{ee 3550}#
                               #{ww 3551}#
                               #{ss 3552}#
                               #{modmod 3553}#)
                        (if (memv #{type 3548}# '(module-ref))
                          (let ((#{val 3562}#
                                  (#{chi 437}#
                                    #{val 3545}#
                                    #{r 3500}#
                                    #{w 3501}#
                                    #{mod 3503}#)))
                            (call-with-values
                              (lambda ()
                                (#{value 3549}#
                                  (cons #{head 3543}# #{tail 3544}#)
                                  #{r 3500}#
                                  #{w 3501}#))
                              (lambda (#{e 3564}#
                                       #{r 3565}#
                                       #{w 3566}#
                                       #{s* 3567}#
                                       #{mod 3568}#)
                                (let ((#{tmp 3575}# (list #{e 3564}#)))
                                  (if (if #{tmp 3575}#
                                        (@apply
                                          (lambda (#{e 3577}#)
                                            (if (symbol? #{e 3577}#)
                                              #t
                                              (if (if (vector? #{e 3577}#)
                                                    (if (= (vector-length
                                                             #{e 3577}#)
                                                           4)
                                                      (eq? (vector-ref
                                                             #{e 3577}#
                                                             0)
                                                           'syntax-object)
                                                      #f)
                                                    #f)
                                                (symbol?
                                                  (vector-ref #{e 3577}# 1))
                                                #f)))
                                          #{tmp 3575}#)
                                        #f)
                                    (@apply
                                      (lambda (#{e 3579}#)
                                        (let ((#{var 7356}#
                                                (syntax->datum #{e 3579}#)))
                                          (begin
                                            (if (if (struct? #{val 3562}#)
                                                  (eq? (struct-vtable
                                                         #{val 3562}#)
                                                       (vector-ref
                                                         %expanded-vtables
                                                         13))
                                                  #f)
                                              (let ((#{meta 7367}#
                                                      (struct-ref
                                                        #{val 3562}#
                                                        1)))
                                                (if (not (assq 'name
                                                               #{meta 7367}#))
                                                  (let ((#{v 7377}#
                                                          (cons (cons 'name
                                                                      #{var 7356}#)
                                                                #{meta 7367}#)))
                                                    (struct-set!
                                                      #{val 3562}#
                                                      1
                                                      #{v 7377}#)))))
                                            (#{analyze-variable 281}#
                                              #{mod 3568}#
                                              #{var 7356}#
                                              (lambda (#{mod 7359}#
                                                       #{var 7360}#
                                                       #{public? 7361}#)
                                                (make-struct/no-tail
                                                  (vector-ref
                                                    %expanded-vtables
                                                    6)
                                                  #{s 3502}#
                                                  #{mod 7359}#
                                                  #{var 7360}#
                                                  #{public? 7361}#
                                                  #{val 3562}#))
                                              (lambda (#{var 7362}#)
                                                (make-struct/no-tail
                                                  (vector-ref
                                                    %expanded-vtables
                                                    8)
                                                  #{s 3502}#
                                                  #{var 7362}#
                                                  #{val 3562}#))))))
                                      #{tmp 3575}#)
                                    (syntax-violation
                                      #f
                                      "source expression failed to match any pattern"
                                      #{e 3564}#))))))
                          (#{build-application 271}#
                            #{s 3502}#
                            (#{chi 437}#
                              (list '#(syntax-object
                                       setter
                                       ((top)
                                        #(ribcage () () ())
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(type value ee ww ss modmod)
                                          #((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                          #("i3554"
                                            "i3555"
                                            "i3556"
                                            "i3557"
                                            "i3558"
                                            "i3559"))
                                        #(ribcage
                                          #(head tail val)
                                          #((top) (top) (top))
                                          #("i3540" "i3541" "i3542"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(e r w s mod)
                                          #((top) (top) (top) (top) (top))
                                          #("i3504"
                                            "i3505"
                                            "i3506"
                                            "i3507"
                                            "i3508"))
                                        #(ribcage
                                          (lambda-var-list
                                            gen-var
                                            strip
                                            chi-lambda-case
                                            lambda*-formals
                                            chi-simple-lambda
                                            lambda-formals
                                            ellipsis?
                                            chi-void
                                            eval-local-transformer
                                            chi-local-syntax
                                            chi-body
                                            chi-macro
                                            chi-application
                                            chi-expr
                                            chi
                                            syntax-type
                                            chi-when-list
                                            chi-install-global
                                            chi-top-sequence
                                            chi-sequence
                                            source-wrap
                                            wrap
                                            bound-id-member?
                                            distinct-bound-ids?
                                            valid-bound-ids?
                                            bound-id=?
                                            free-id=?
                                            id-var-name
                                            same-marks?
                                            join-marks
                                            join-wraps
                                            smart-append
                                            make-binding-wrap
                                            extend-ribcage!
                                            make-empty-ribcage
                                            new-mark
                                            anti-mark
                                            the-anti-mark
                                            top-marked?
                                            top-wrap
                                            empty-wrap
                                            set-ribcage-labels!
                                            set-ribcage-marks!
                                            set-ribcage-symnames!
                                            ribcage-labels
                                            ribcage-marks
                                            ribcage-symnames
                                            ribcage?
                                            make-ribcage
                                            gen-labels
                                            gen-label
                                            make-rename
                                            rename-marks
                                            rename-new
                                            rename-old
                                            subst-rename?
                                            wrap-subst
                                            wrap-marks
                                            make-wrap
                                            id-sym-name&marks
                                            id-sym-name
                                            id?
                                            nonsymbol-id?
                                            global-extend
                                            lookup
                                            macros-only-env
                                            extend-var-env
                                            extend-env
                                            null-env
                                            binding-value
                                            binding-type
                                            make-binding
                                            arg-check
                                            source-annotation
                                            no-source
                                            set-syntax-object-module!
                                            set-syntax-object-wrap!
                                            set-syntax-object-expression!
                                            syntax-object-module
                                            syntax-object-wrap
                                            syntax-object-expression
                                            syntax-object?
                                            make-syntax-object
                                            build-lexical-var
                                            build-letrec
                                            build-named-let
                                            build-let
                                            build-sequence
                                            build-data
                                            build-primref
                                            build-lambda-case
                                            build-case-lambda
                                            build-simple-lambda
                                            build-global-definition
                                            build-global-assignment
                                            build-global-reference
                                            analyze-variable
                                            build-lexical-assignment
                                            build-lexical-reference
                                            build-dynlet
                                            build-conditional
                                            build-application
                                            build-void
                                            maybe-name-value!
                                            decorate-source
                                            get-global-definition-hook
                                            put-global-definition-hook
                                            gensym-hook
                                            local-eval-hook
                                            top-level-eval-hook
                                            fx<
                                            fx=
                                            fx-
                                            fx+
                                            set-lambda-meta!
                                            lambda-meta
                                            lambda?
                                            make-dynlet
                                            make-letrec
                                            make-let
                                            make-lambda-case
                                            make-lambda
                                            make-sequence
                                            make-application
                                            make-conditional
                                            make-toplevel-define
                                            make-toplevel-set
                                            make-toplevel-ref
                                            make-module-set
                                            make-module-ref
                                            make-lexical-set
                                            make-lexical-ref
                                            make-primitive-ref
                                            make-const
                                            make-void)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i466"
                                           "i464"
                                           "i462"
                                           "i460"
                                           "i458"
                                           "i456"
                                           "i454"
                                           "i452"
                                           "i450"
                                           "i448"
                                           "i446"
                                           "i444"
                                           "i442"
                                           "i440"
                                           "i438"
                                           "i436"
                                           "i434"
                                           "i432"
                                           "i430"
                                           "i428"
                                           "i426"
                                           "i424"
                                           "i422"
                                           "i420"
                                           "i418"
                                           "i416"
                                           "i414"
                                           "i412"
                                           "i410"
                                           "i408"
                                           "i406"
                                           "i404"
                                           "i402"
                                           "i400"
                                           "i398"
                                           "i397"
                                           "i395"
                                           "i392"
                                           "i391"
                                           "i390"
                                           "i388"
                                           "i387"
                                           "i385"
                                           "i383"
                                           "i381"
                                           "i379"
                                           "i377"
                                           "i375"
                                           "i373"
                                           "i371"
                                           "i368"
                                           "i366"
                                           "i365"
                                           "i363"
                                           "i361"
                                           "i359"
                                           "i357"
                                           "i356"
                                           "i355"
                                           "i354"
                                           "i352"
                                           "i351"
                                           "i348"
                                           "i346"
                                           "i344"
                                           "i342"
                                           "i340"
                                           "i338"
                                           "i336"
                                           "i335"
                                           "i334"
                                           "i332"
                                           "i330"
                                           "i329"
                                           "i326"
                                           "i325"
                                           "i323"
                                           "i321"
                                           "i319"
                                           "i317"
                                           "i315"
                                           "i313"
                                           "i311"
                                           "i309"
                                           "i307"
                                           "i304"
                                           "i302"
                                           "i300"
                                           "i298"
                                           "i296"
                                           "i294"
                                           "i292"
                                           "i290"
                                           "i288"
                                           "i286"
                                           "i284"
                                           "i282"
                                           "i280"
                                           "i278"
                                           "i276"
                                           "i274"
                                           "i272"
                                           "i270"
                                           "i268"
                                           "i266"
                                           "i264"
                                           "i262"
                                           "i260"
                                           "i259"
                                           "i256"
                                           "i254"
                                           "i253"
                                           "i252"
                                           "i251"
                                           "i250"
                                           "i248"
                                           "i246"
                                           "i244"
                                           "i241"
                                           "i239"
                                           "i237"
                                           "i235"
                                           "i233"
                                           "i231"
                                           "i229"
                                           "i227"
                                           "i225"
                                           "i223"
                                           "i221"
                                           "i219"
                                           "i217"
                                           "i215"
                                           "i213"
                                           "i211"
                                           "i209"
                                           "i207"))
                                        #(ribcage
                                          (define-structure
                                            define-expansion-accessors
                                            define-expansion-constructors)
                                          ((top) (top) (top))
                                          ("i45" "i44" "i43")))
                                       (hygiene guile))
                                    #{head 3543}#)
                              #{r 3500}#
                              #{w 3501}#
                              #{mod 3503}#)
                            (map (lambda (#{e 3581}#)
                                   (#{chi 437}#
                                     #{e 3581}#
                                     #{r 3500}#
                                     #{w 3501}#
                                     #{mod 3503}#))
                                 (append
                                   #{tail 3544}#
                                   (list #{val 3545}#))))))))
                  #{tmp 3539}#)
                (syntax-violation
                  'set!
                  "bad set!"
                  (#{wrap 423}#
                    (begin
                      (if (if (pair? #{e 3499}#) #{s 3502}# #f)
                        (set-source-properties! #{e 3499}# #{s 3502}#))
                      #{e 3499}#)
                    #{w 3501}#
                    #{mod 3503}#))))))))
    (module-define!
      (current-module)
      '@
      (make-syntax-transformer
        '@
        'module-ref
        (lambda (#{e 3586}# #{r 3587}# #{w 3588}#)
          (let ((#{tmp 3593}#
                  ($sc-dispatch #{e 3586}# '(_ each-any any))))
            (if (if #{tmp 3593}#
                  (@apply
                    (lambda (#{mod 3596}# #{id 3597}#)
                      (if (and-map #{id? 349}# #{mod 3596}#)
                        (if (symbol? #{id 3597}#)
                          #t
                          (if (if (vector? #{id 3597}#)
                                (if (= (vector-length #{id 3597}#) 4)
                                  (eq? (vector-ref #{id 3597}# 0)
                                       'syntax-object)
                                  #f)
                                #f)
                            (symbol? (vector-ref #{id 3597}# 1))
                            #f))
                        #f))
                    #{tmp 3593}#)
                  #f)
              (@apply
                (lambda (#{mod 3603}# #{id 3604}#)
                  (values
                    (syntax->datum #{id 3604}#)
                    #{r 3587}#
                    #{w 3588}#
                    #f
                    (syntax->datum
                      (cons '#(syntax-object
                               public
                               ((top)
                                #(ribcage
                                  #(mod id)
                                  #((top) (top))
                                  #("i3601" "i3602"))
                                #(ribcage () () ())
                                #(ribcage
                                  #(e r w)
                                  #((top) (top) (top))
                                  #("i3589" "i3590" "i3591"))
                                #(ribcage
                                  (lambda-var-list
                                    gen-var
                                    strip
                                    chi-lambda-case
                                    lambda*-formals
                                    chi-simple-lambda
                                    lambda-formals
                                    ellipsis?
                                    chi-void
                                    eval-local-transformer
                                    chi-local-syntax
                                    chi-body
                                    chi-macro
                                    chi-application
                                    chi-expr
                                    chi
                                    syntax-type
                                    chi-when-list
                                    chi-install-global
                                    chi-top-sequence
                                    chi-sequence
                                    source-wrap
                                    wrap
                                    bound-id-member?
                                    distinct-bound-ids?
                                    valid-bound-ids?
                                    bound-id=?
                                    free-id=?
                                    id-var-name
                                    same-marks?
                                    join-marks
                                    join-wraps
                                    smart-append
                                    make-binding-wrap
                                    extend-ribcage!
                                    make-empty-ribcage
                                    new-mark
                                    anti-mark
                                    the-anti-mark
                                    top-marked?
                                    top-wrap
                                    empty-wrap
                                    set-ribcage-labels!
                                    set-ribcage-marks!
                                    set-ribcage-symnames!
                                    ribcage-labels
                                    ribcage-marks
                                    ribcage-symnames
                                    ribcage?
                                    make-ribcage
                                    gen-labels
                                    gen-label
                                    make-rename
                                    rename-marks
                                    rename-new
                                    rename-old
                                    subst-rename?
                                    wrap-subst
                                    wrap-marks
                                    make-wrap
                                    id-sym-name&marks
                                    id-sym-name
                                    id?
                                    nonsymbol-id?
                                    global-extend
                                    lookup
                                    macros-only-env
                                    extend-var-env
                                    extend-env
                                    null-env
                                    binding-value
                                    binding-type
                                    make-binding
                                    arg-check
                                    source-annotation
                                    no-source
                                    set-syntax-object-module!
                                    set-syntax-object-wrap!
                                    set-syntax-object-expression!
                                    syntax-object-module
                                    syntax-object-wrap
                                    syntax-object-expression
                                    syntax-object?
                                    make-syntax-object
                                    build-lexical-var
                                    build-letrec
                                    build-named-let
                                    build-let
                                    build-sequence
                                    build-data
                                    build-primref
                                    build-lambda-case
                                    build-case-lambda
                                    build-simple-lambda
                                    build-global-definition
                                    build-global-assignment
                                    build-global-reference
                                    analyze-variable
                                    build-lexical-assignment
                                    build-lexical-reference
                                    build-dynlet
                                    build-conditional
                                    build-application
                                    build-void
                                    maybe-name-value!
                                    decorate-source
                                    get-global-definition-hook
                                    put-global-definition-hook
                                    gensym-hook
                                    local-eval-hook
                                    top-level-eval-hook
                                    fx<
                                    fx=
                                    fx-
                                    fx+
                                    set-lambda-meta!
                                    lambda-meta
                                    lambda?
                                    make-dynlet
                                    make-letrec
                                    make-let
                                    make-lambda-case
                                    make-lambda
                                    make-sequence
                                    make-application
                                    make-conditional
                                    make-toplevel-define
                                    make-toplevel-set
                                    make-toplevel-ref
                                    make-module-set
                                    make-module-ref
                                    make-lexical-set
                                    make-lexical-ref
                                    make-primitive-ref
                                    make-const
                                    make-void)
                                  ((top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top))
                                  ("i466"
                                   "i464"
                                   "i462"
                                   "i460"
                                   "i458"
                                   "i456"
                                   "i454"
                                   "i452"
                                   "i450"
                                   "i448"
                                   "i446"
                                   "i444"
                                   "i442"
                                   "i440"
                                   "i438"
                                   "i436"
                                   "i434"
                                   "i432"
                                   "i430"
                                   "i428"
                                   "i426"
                                   "i424"
                                   "i422"
                                   "i420"
                                   "i418"
                                   "i416"
                                   "i414"
                                   "i412"
                                   "i410"
                                   "i408"
                                   "i406"
                                   "i404"
                                   "i402"
                                   "i400"
                                   "i398"
                                   "i397"
                                   "i395"
                                   "i392"
                                   "i391"
                                   "i390"
                                   "i388"
                                   "i387"
                                   "i385"
                                   "i383"
                                   "i381"
                                   "i379"
                                   "i377"
                                   "i375"
                                   "i373"
                                   "i371"
                                   "i368"
                                   "i366"
                                   "i365"
                                   "i363"
                                   "i361"
                                   "i359"
                                   "i357"
                                   "i356"
                                   "i355"
                                   "i354"
                                   "i352"
                                   "i351"
                                   "i348"
                                   "i346"
                                   "i344"
                                   "i342"
                                   "i340"
                                   "i338"
                                   "i336"
                                   "i335"
                                   "i334"
                                   "i332"
                                   "i330"
                                   "i329"
                                   "i326"
                                   "i325"
                                   "i323"
                                   "i321"
                                   "i319"
                                   "i317"
                                   "i315"
                                   "i313"
                                   "i311"
                                   "i309"
                                   "i307"
                                   "i304"
                                   "i302"
                                   "i300"
                                   "i298"
                                   "i296"
                                   "i294"
                                   "i292"
                                   "i290"
                                   "i288"
                                   "i286"
                                   "i284"
                                   "i282"
                                   "i280"
                                   "i278"
                                   "i276"
                                   "i274"
                                   "i272"
                                   "i270"
                                   "i268"
                                   "i266"
                                   "i264"
                                   "i262"
                                   "i260"
                                   "i259"
                                   "i256"
                                   "i254"
                                   "i253"
                                   "i252"
                                   "i251"
                                   "i250"
                                   "i248"
                                   "i246"
                                   "i244"
                                   "i241"
                                   "i239"
                                   "i237"
                                   "i235"
                                   "i233"
                                   "i231"
                                   "i229"
                                   "i227"
                                   "i225"
                                   "i223"
                                   "i221"
                                   "i219"
                                   "i217"
                                   "i215"
                                   "i213"
                                   "i211"
                                   "i209"
                                   "i207"))
                                #(ribcage
                                  (define-structure
                                    define-expansion-accessors
                                    define-expansion-constructors)
                                  ((top) (top) (top))
                                  ("i45" "i44" "i43")))
                               (hygiene guile))
                            #{mod 3603}#))))
                #{tmp 3593}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{e 3586}#))))))
    (#{global-extend 345}#
      'module-ref
      '@@
      (lambda (#{e 3606}# #{r 3607}# #{w 3608}#)
        (letrec*
          ((#{remodulate 3613}#
             (lambda (#{x 3614}# #{mod 3615}#)
               (if (pair? #{x 3614}#)
                 (cons (#{remodulate 3613}#
                         (car #{x 3614}#)
                         #{mod 3615}#)
                       (#{remodulate 3613}#
                         (cdr #{x 3614}#)
                         #{mod 3615}#))
                 (if (if (vector? #{x 3614}#)
                       (if (= (vector-length #{x 3614}#) 4)
                         (eq? (vector-ref #{x 3614}# 0) 'syntax-object)
                         #f)
                       #f)
                   (let ((#{expression 7617}#
                           (#{remodulate 3613}#
                             (vector-ref #{x 3614}# 1)
                             #{mod 3615}#))
                         (#{wrap 7618}# (vector-ref #{x 3614}# 2)))
                     (vector
                       'syntax-object
                       #{expression 7617}#
                       #{wrap 7618}#
                       #{mod 3615}#))
                   (if (vector? #{x 3614}#)
                     (let ((#{n 3626}# (vector-length #{x 3614}#)))
                       (let ((#{v 3628}# (make-vector #{n 3626}#)))
                         (letrec*
                           ((#{loop 3631}#
                              (lambda (#{i 3632}#)
                                (if (= #{i 3632}# #{n 3626}#)
                                  #{v 3628}#
                                  (begin
                                    (vector-set!
                                      #{v 3628}#
                                      #{i 3632}#
                                      (#{remodulate 3613}#
                                        (vector-ref #{x 3614}# #{i 3632}#)
                                        #{mod 3615}#))
                                    (#{loop 3631}# (#{1+}# #{i 3632}#)))))))
                           (#{loop 3631}# 0))))
                     #{x 3614}#))))))
          (let ((#{tmp 3639}#
                  ($sc-dispatch #{e 3606}# '(_ each-any any))))
            (if (if #{tmp 3639}#
                  (@apply
                    (lambda (#{mod 3642}# #{exp 3643}#)
                      (and-map #{id? 349}# #{mod 3642}#))
                    #{tmp 3639}#)
                  #f)
              (@apply
                (lambda (#{mod 3647}# #{exp 3648}#)
                  (let ((#{mod 3650}#
                          (syntax->datum
                            (cons '#(syntax-object
                                     private
                                     ((top)
                                      #(ribcage
                                        #(mod exp)
                                        #((top) (top))
                                        #("i3645" "i3646"))
                                      #(ribcage (remodulate) ((top)) ("i3612"))
                                      #(ribcage
                                        #(e r w)
                                        #((top) (top) (top))
                                        #("i3609" "i3610" "i3611"))
                                      #(ribcage
                                        (lambda-var-list
                                          gen-var
                                          strip
                                          chi-lambda-case
                                          lambda*-formals
                                          chi-simple-lambda
                                          lambda-formals
                                          ellipsis?
                                          chi-void
                                          eval-local-transformer
                                          chi-local-syntax
                                          chi-body
                                          chi-macro
                                          chi-application
                                          chi-expr
                                          chi
                                          syntax-type
                                          chi-when-list
                                          chi-install-global
                                          chi-top-sequence
                                          chi-sequence
                                          source-wrap
                                          wrap
                                          bound-id-member?
                                          distinct-bound-ids?
                                          valid-bound-ids?
                                          bound-id=?
                                          free-id=?
                                          id-var-name
                                          same-marks?
                                          join-marks
                                          join-wraps
                                          smart-append
                                          make-binding-wrap
                                          extend-ribcage!
                                          make-empty-ribcage
                                          new-mark
                                          anti-mark
                                          the-anti-mark
                                          top-marked?
                                          top-wrap
                                          empty-wrap
                                          set-ribcage-labels!
                                          set-ribcage-marks!
                                          set-ribcage-symnames!
                                          ribcage-labels
                                          ribcage-marks
                                          ribcage-symnames
                                          ribcage?
                                          make-ribcage
                                          gen-labels
                                          gen-label
                                          make-rename
                                          rename-marks
                                          rename-new
                                          rename-old
                                          subst-rename?
                                          wrap-subst
                                          wrap-marks
                                          make-wrap
                                          id-sym-name&marks
                                          id-sym-name
                                          id?
                                          nonsymbol-id?
                                          global-extend
                                          lookup
                                          macros-only-env
                                          extend-var-env
                                          extend-env
                                          null-env
                                          binding-value
                                          binding-type
                                          make-binding
                                          arg-check
                                          source-annotation
                                          no-source
                                          set-syntax-object-module!
                                          set-syntax-object-wrap!
                                          set-syntax-object-expression!
                                          syntax-object-module
                                          syntax-object-wrap
                                          syntax-object-expression
                                          syntax-object?
                                          make-syntax-object
                                          build-lexical-var
                                          build-letrec
                                          build-named-let
                                          build-let
                                          build-sequence
                                          build-data
                                          build-primref
                                          build-lambda-case
                                          build-case-lambda
                                          build-simple-lambda
                                          build-global-definition
                                          build-global-assignment
                                          build-global-reference
                                          analyze-variable
                                          build-lexical-assignment
                                          build-lexical-reference
                                          build-dynlet
                                          build-conditional
                                          build-application
                                          build-void
                                          maybe-name-value!
                                          decorate-source
                                          get-global-definition-hook
                                          put-global-definition-hook
                                          gensym-hook
                                          local-eval-hook
                                          top-level-eval-hook
                                          fx<
                                          fx=
                                          fx-
                                          fx+
                                          set-lambda-meta!
                                          lambda-meta
                                          lambda?
                                          make-dynlet
                                          make-letrec
                                          make-let
                                          make-lambda-case
                                          make-lambda
                                          make-sequence
                                          make-application
                                          make-conditional
                                          make-toplevel-define
                                          make-toplevel-set
                                          make-toplevel-ref
                                          make-module-set
                                          make-module-ref
                                          make-lexical-set
                                          make-lexical-ref
                                          make-primitive-ref
                                          make-const
                                          make-void)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i466"
                                         "i464"
                                         "i462"
                                         "i460"
                                         "i458"
                                         "i456"
                                         "i454"
                                         "i452"
                                         "i450"
                                         "i448"
                                         "i446"
                                         "i444"
                                         "i442"
                                         "i440"
                                         "i438"
                                         "i436"
                                         "i434"
                                         "i432"
                                         "i430"
                                         "i428"
                                         "i426"
                                         "i424"
                                         "i422"
                                         "i420"
                                         "i418"
                                         "i416"
                                         "i414"
                                         "i412"
                                         "i410"
                                         "i408"
                                         "i406"
                                         "i404"
                                         "i402"
                                         "i400"
                                         "i398"
                                         "i397"
                                         "i395"
                                         "i392"
                                         "i391"
                                         "i390"
                                         "i388"
                                         "i387"
                                         "i385"
                                         "i383"
                                         "i381"
                                         "i379"
                                         "i377"
                                         "i375"
                                         "i373"
                                         "i371"
                                         "i368"
                                         "i366"
                                         "i365"
                                         "i363"
                                         "i361"
                                         "i359"
                                         "i357"
                                         "i356"
                                         "i355"
                                         "i354"
                                         "i352"
                                         "i351"
                                         "i348"
                                         "i346"
                                         "i344"
                                         "i342"
                                         "i340"
                                         "i338"
                                         "i336"
                                         "i335"
                                         "i334"
                                         "i332"
                                         "i330"
                                         "i329"
                                         "i326"
                                         "i325"
                                         "i323"
                                         "i321"
                                         "i319"
                                         "i317"
                                         "i315"
                                         "i313"
                                         "i311"
                                         "i309"
                                         "i307"
                                         "i304"
                                         "i302"
                                         "i300"
                                         "i298"
                                         "i296"
                                         "i294"
                                         "i292"
                                         "i290"
                                         "i288"
                                         "i286"
                                         "i284"
                                         "i282"
                                         "i280"
                                         "i278"
                                         "i276"
                                         "i274"
                                         "i272"
                                         "i270"
                                         "i268"
                                         "i266"
                                         "i264"
                                         "i262"
                                         "i260"
                                         "i259"
                                         "i256"
                                         "i254"
                                         "i253"
                                         "i252"
                                         "i251"
                                         "i250"
                                         "i248"
                                         "i246"
                                         "i244"
                                         "i241"
                                         "i239"
                                         "i237"
                                         "i235"
                                         "i233"
                                         "i231"
                                         "i229"
                                         "i227"
                                         "i225"
                                         "i223"
                                         "i221"
                                         "i219"
                                         "i217"
                                         "i215"
                                         "i213"
                                         "i211"
                                         "i209"
                                         "i207"))
                                      #(ribcage
                                        (define-structure
                                          define-expansion-accessors
                                          define-expansion-constructors)
                                        ((top) (top) (top))
                                        ("i45" "i44" "i43")))
                                     (hygiene guile))
                                  #{mod 3647}#))))
                    (values
                      (#{remodulate 3613}# #{exp 3648}# #{mod 3650}#)
                      #{r 3607}#
                      #{w 3608}#
                      (#{source-annotation 327}# #{exp 3648}#)
                      #{mod 3650}#)))
                #{tmp 3639}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{e 3606}#))))))
    (#{global-extend 345}#
      'core
      'if
      (lambda (#{e 3652}#
               #{r 3653}#
               #{w 3654}#
               #{s 3655}#
               #{mod 3656}#)
        (let ((#{tmp 3663}#
                ($sc-dispatch #{e 3652}# '(_ any any))))
          (if #{tmp 3663}#
            (@apply
              (lambda (#{test 3666}# #{then 3667}#)
                (#{build-conditional 273}#
                  #{s 3655}#
                  (#{chi 437}#
                    #{test 3666}#
                    #{r 3653}#
                    #{w 3654}#
                    #{mod 3656}#)
                  (#{chi 437}#
                    #{then 3667}#
                    #{r 3653}#
                    #{w 3654}#
                    #{mod 3656}#)
                  (make-struct/no-tail
                    (vector-ref %expanded-vtables 0)
                    #f)))
              #{tmp 3663}#)
            (let ((#{tmp 3669}#
                    ($sc-dispatch #{e 3652}# '(_ any any any))))
              (if #{tmp 3669}#
                (@apply
                  (lambda (#{test 3673}# #{then 3674}# #{else 3675}#)
                    (#{build-conditional 273}#
                      #{s 3655}#
                      (#{chi 437}#
                        #{test 3673}#
                        #{r 3653}#
                        #{w 3654}#
                        #{mod 3656}#)
                      (#{chi 437}#
                        #{then 3674}#
                        #{r 3653}#
                        #{w 3654}#
                        #{mod 3656}#)
                      (#{chi 437}#
                        #{else 3675}#
                        #{r 3653}#
                        #{w 3654}#
                        #{mod 3656}#)))
                  #{tmp 3669}#)
                (syntax-violation
                  #f
                  "source expression failed to match any pattern"
                  #{e 3652}#)))))))
    (#{global-extend 345}#
      'core
      'with-fluids
      (lambda (#{e 3676}#
               #{r 3677}#
               #{w 3678}#
               #{s 3679}#
               #{mod 3680}#)
        (let ((#{tmp 3687}#
                ($sc-dispatch
                  #{e 3676}#
                  '(_ #(each (any any)) any . each-any))))
          (if #{tmp 3687}#
            (@apply
              (lambda (#{fluid 3692}#
                       #{val 3693}#
                       #{b 3694}#
                       #{b* 3695}#)
                ((lambda (#{source 977}#
                          #{fluids 978}#
                          #{vals 979}#
                          #{body 980}#)
                   (#{make-dynlet 242}#
                     #{source 977}#
                     #{fluids 978}#
                     #{vals 979}#
                     #{body 980}#))
                 #{s 3679}#
                 (map (lambda (#{x 3696}#)
                        (#{chi 437}#
                          #{x 3696}#
                          #{r 3677}#
                          #{w 3678}#
                          #{mod 3680}#))
                      #{fluid 3692}#)
                 (map (lambda (#{x 3699}#)
                        (#{chi 437}#
                          #{x 3699}#
                          #{r 3677}#
                          #{w 3678}#
                          #{mod 3680}#))
                      #{val 3693}#)
                 (#{chi-body 445}#
                   (cons #{b 3694}# #{b* 3695}#)
                   (#{wrap 423}#
                     (begin
                       (if (if (pair? #{e 3676}#) #{s 3679}# #f)
                         (set-source-properties! #{e 3676}# #{s 3679}#))
                       #{e 3676}#)
                     #{w 3678}#
                     #{mod 3680}#)
                   #{r 3677}#
                   #{w 3678}#
                   #{mod 3680}#)))
              #{tmp 3687}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{e 3676}#)))))
    (module-define!
      (current-module)
      'begin
      (make-syntax-transformer 'begin 'begin '()))
    (module-define!
      (current-module)
      'define
      (make-syntax-transformer 'define 'define '()))
    (module-define!
      (current-module)
      'define-syntax
      (make-syntax-transformer
        'define-syntax
        'define-syntax
        '()))
    (module-define!
      (current-module)
      'eval-when
      (make-syntax-transformer
        'eval-when
        'eval-when
        '()))
    (#{global-extend 345}#
      'core
      'syntax-case
      (letrec*
        ((#{convert-pattern 3704}#
           (lambda (#{pattern 3711}# #{keys 3712}#)
             (letrec*
               ((#{cvt* 3716}#
                  (lambda (#{p* 3721}# #{n 3722}# #{ids 3723}#)
                    (if (not (pair? #{p* 3721}#))
                      (#{cvt 3720}#
                        #{p* 3721}#
                        #{n 3722}#
                        #{ids 3723}#)
                      (call-with-values
                        (lambda ()
                          (#{cvt* 3716}#
                            (cdr #{p* 3721}#)
                            #{n 3722}#
                            #{ids 3723}#))
                        (lambda (#{y 3727}# #{ids 3728}#)
                          (call-with-values
                            (lambda ()
                              (#{cvt 3720}#
                                (car #{p* 3721}#)
                                #{n 3722}#
                                #{ids 3728}#))
                            (lambda (#{x 3731}# #{ids 3732}#)
                              (values
                                (cons #{x 3731}# #{y 3727}#)
                                #{ids 3732}#))))))))
                (#{v-reverse 3718}#
                  (lambda (#{x 3735}#)
                    (letrec*
                      ((#{loop 3740}#
                         (lambda (#{r 3741}# #{x 3742}#)
                           (if (not (pair? #{x 3742}#))
                             (values #{r 3741}# #{x 3742}#)
                             (#{loop 3740}#
                               (cons (car #{x 3742}#) #{r 3741}#)
                               (cdr #{x 3742}#))))))
                      (#{loop 3740}# '() #{x 3735}#))))
                (#{cvt 3720}#
                  (lambda (#{p 3743}# #{n 3744}# #{ids 3745}#)
                    (if (if (symbol? #{p 3743}#)
                          #t
                          (if (if (vector? #{p 3743}#)
                                (if (= (vector-length #{p 3743}#) 4)
                                  (eq? (vector-ref #{p 3743}# 0)
                                       'syntax-object)
                                  #f)
                                #f)
                            (symbol? (vector-ref #{p 3743}# 1))
                            #f))
                      (if (#{bound-id-member? 421}#
                            #{p 3743}#
                            #{keys 3712}#)
                        (values
                          (vector 'free-id #{p 3743}#)
                          #{ids 3745}#)
                        (if (if (eq? (if (if (vector? #{p 3743}#)
                                           (if (= (vector-length #{p 3743}#) 4)
                                             (eq? (vector-ref #{p 3743}# 0)
                                                  'syntax-object)
                                             #f)
                                           #f)
                                       (vector-ref #{p 3743}# 1)
                                       #{p 3743}#)
                                     (if (if (= (vector-length
                                                  '#(syntax-object
                                                     _
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(p n ids)
                                                        #((top) (top) (top))
                                                        #("i3746"
                                                          "i3747"
                                                          "i3748"))
                                                      #(ribcage
                                                        (cvt v-reverse cvt*)
                                                        ((top) (top) (top))
                                                        ("i3719"
                                                         "i3717"
                                                         "i3715"))
                                                      #(ribcage
                                                        #(pattern keys)
                                                        #((top) (top))
                                                        #("i3713" "i3714"))
                                                      #(ribcage
                                                        (gen-syntax-case
                                                          gen-clause
                                                          build-dispatch-call
                                                          convert-pattern)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i3709"
                                                         "i3707"
                                                         "i3705"
                                                         "i3703"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i466"
                                                         "i464"
                                                         "i462"
                                                         "i460"
                                                         "i458"
                                                         "i456"
                                                         "i454"
                                                         "i452"
                                                         "i450"
                                                         "i448"
                                                         "i446"
                                                         "i444"
                                                         "i442"
                                                         "i440"
                                                         "i438"
                                                         "i436"
                                                         "i434"
                                                         "i432"
                                                         "i430"
                                                         "i428"
                                                         "i426"
                                                         "i424"
                                                         "i422"
                                                         "i420"
                                                         "i418"
                                                         "i416"
                                                         "i414"
                                                         "i412"
                                                         "i410"
                                                         "i408"
                                                         "i406"
                                                         "i404"
                                                         "i402"
                                                         "i400"
                                                         "i398"
                                                         "i397"
                                                         "i395"
                                                         "i392"
                                                         "i391"
                                                         "i390"
                                                         "i388"
                                                         "i387"
                                                         "i385"
                                                         "i383"
                                                         "i381"
                                                         "i379"
                                                         "i377"
                                                         "i375"
                                                         "i373"
                                                         "i371"
                                                         "i368"
                                                         "i366"
                                                         "i365"
                                                         "i363"
                                                         "i361"
                                                         "i359"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i354"
                                                         "i352"
                                                         "i351"
                                                         "i348"
                                                         "i346"
                                                         "i344"
                                                         "i342"
                                                         "i340"
                                                         "i338"
                                                         "i336"
                                                         "i335"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i329"
                                                         "i326"
                                                         "i325"
                                                         "i323"
                                                         "i321"
                                                         "i319"
                                                         "i317"
                                                         "i315"
                                                         "i313"
                                                         "i311"
                                                         "i309"
                                                         "i307"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i288"
                                                         "i286"
                                                         "i284"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i264"
                                                         "i262"
                                                         "i260"
                                                         "i259"
                                                         "i256"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i241"
                                                         "i239"
                                                         "i237"
                                                         "i235"
                                                         "i233"
                                                         "i231"
                                                         "i229"
                                                         "i227"
                                                         "i225"
                                                         "i223"
                                                         "i221"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i45" "i44" "i43")))
                                                     (hygiene guile)))
                                                4)
                                           (eq? (vector-ref
                                                  '#(syntax-object
                                                     _
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(p n ids)
                                                        #((top) (top) (top))
                                                        #("i3746"
                                                          "i3747"
                                                          "i3748"))
                                                      #(ribcage
                                                        (cvt v-reverse cvt*)
                                                        ((top) (top) (top))
                                                        ("i3719"
                                                         "i3717"
                                                         "i3715"))
                                                      #(ribcage
                                                        #(pattern keys)
                                                        #((top) (top))
                                                        #("i3713" "i3714"))
                                                      #(ribcage
                                                        (gen-syntax-case
                                                          gen-clause
                                                          build-dispatch-call
                                                          convert-pattern)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i3709"
                                                         "i3707"
                                                         "i3705"
                                                         "i3703"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i466"
                                                         "i464"
                                                         "i462"
                                                         "i460"
                                                         "i458"
                                                         "i456"
                                                         "i454"
                                                         "i452"
                                                         "i450"
                                                         "i448"
                                                         "i446"
                                                         "i444"
                                                         "i442"
                                                         "i440"
                                                         "i438"
                                                         "i436"
                                                         "i434"
                                                         "i432"
                                                         "i430"
                                                         "i428"
                                                         "i426"
                                                         "i424"
                                                         "i422"
                                                         "i420"
                                                         "i418"
                                                         "i416"
                                                         "i414"
                                                         "i412"
                                                         "i410"
                                                         "i408"
                                                         "i406"
                                                         "i404"
                                                         "i402"
                                                         "i400"
                                                         "i398"
                                                         "i397"
                                                         "i395"
                                                         "i392"
                                                         "i391"
                                                         "i390"
                                                         "i388"
                                                         "i387"
                                                         "i385"
                                                         "i383"
                                                         "i381"
                                                         "i379"
                                                         "i377"
                                                         "i375"
                                                         "i373"
                                                         "i371"
                                                         "i368"
                                                         "i366"
                                                         "i365"
                                                         "i363"
                                                         "i361"
                                                         "i359"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i354"
                                                         "i352"
                                                         "i351"
                                                         "i348"
                                                         "i346"
                                                         "i344"
                                                         "i342"
                                                         "i340"
                                                         "i338"
                                                         "i336"
                                                         "i335"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i329"
                                                         "i326"
                                                         "i325"
                                                         "i323"
                                                         "i321"
                                                         "i319"
                                                         "i317"
                                                         "i315"
                                                         "i313"
                                                         "i311"
                                                         "i309"
                                                         "i307"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i288"
                                                         "i286"
                                                         "i284"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i264"
                                                         "i262"
                                                         "i260"
                                                         "i259"
                                                         "i256"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i241"
                                                         "i239"
                                                         "i237"
                                                         "i235"
                                                         "i233"
                                                         "i231"
                                                         "i229"
                                                         "i227"
                                                         "i225"
                                                         "i223"
                                                         "i221"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i45" "i44" "i43")))
                                                     (hygiene guile))
                                                  0)
                                                'syntax-object)
                                           #f)
                                       (vector-ref
                                         '#(syntax-object
                                            _
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(p n ids)
                                               #((top) (top) (top))
                                               #("i3746" "i3747" "i3748"))
                                             #(ribcage
                                               (cvt v-reverse cvt*)
                                               ((top) (top) (top))
                                               ("i3719" "i3717" "i3715"))
                                             #(ribcage
                                               #(pattern keys)
                                               #((top) (top))
                                               #("i3713" "i3714"))
                                             #(ribcage
                                               (gen-syntax-case
                                                 gen-clause
                                                 build-dispatch-call
                                                 convert-pattern)
                                               ((top) (top) (top) (top))
                                               ("i3709"
                                                "i3707"
                                                "i3705"
                                                "i3703"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i466"
                                                "i464"
                                                "i462"
                                                "i460"
                                                "i458"
                                                "i456"
                                                "i454"
                                                "i452"
                                                "i450"
                                                "i448"
                                                "i446"
                                                "i444"
                                                "i442"
                                                "i440"
                                                "i438"
                                                "i436"
                                                "i434"
                                                "i432"
                                                "i430"
                                                "i428"
                                                "i426"
                                                "i424"
                                                "i422"
                                                "i420"
                                                "i418"
                                                "i416"
                                                "i414"
                                                "i412"
                                                "i410"
                                                "i408"
                                                "i406"
                                                "i404"
                                                "i402"
                                                "i400"
                                                "i398"
                                                "i397"
                                                "i395"
                                                "i392"
                                                "i391"
                                                "i390"
                                                "i388"
                                                "i387"
                                                "i385"
                                                "i383"
                                                "i381"
                                                "i379"
                                                "i377"
                                                "i375"
                                                "i373"
                                                "i371"
                                                "i368"
                                                "i366"
                                                "i365"
                                                "i363"
                                                "i361"
                                                "i359"
                                                "i357"
                                                "i356"
                                                "i355"
                                                "i354"
                                                "i352"
                                                "i351"
                                                "i348"
                                                "i346"
                                                "i344"
                                                "i342"
                                                "i340"
                                                "i338"
                                                "i336"
                                                "i335"
                                                "i334"
                                                "i332"
                                                "i330"
                                                "i329"
                                                "i326"
                                                "i325"
                                                "i323"
                                                "i321"
                                                "i319"
                                                "i317"
                                                "i315"
                                                "i313"
                                                "i311"
                                                "i309"
                                                "i307"
                                                "i304"
                                                "i302"
                                                "i300"
                                                "i298"
                                                "i296"
                                                "i294"
                                                "i292"
                                                "i290"
                                                "i288"
                                                "i286"
                                                "i284"
                                                "i282"
                                                "i280"
                                                "i278"
                                                "i276"
                                                "i274"
                                                "i272"
                                                "i270"
                                                "i268"
                                                "i266"
                                                "i264"
                                                "i262"
                                                "i260"
                                                "i259"
                                                "i256"
                                                "i254"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i250"
                                                "i248"
                                                "i246"
                                                "i244"
                                                "i241"
                                                "i239"
                                                "i237"
                                                "i235"
                                                "i233"
                                                "i231"
                                                "i229"
                                                "i227"
                                                "i225"
                                                "i223"
                                                "i221"
                                                "i219"
                                                "i217"
                                                "i215"
                                                "i213"
                                                "i211"
                                                "i209"
                                                "i207"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i45" "i44" "i43")))
                                            (hygiene guile))
                                         1)
                                       '#(syntax-object
                                          _
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(p n ids)
                                             #((top) (top) (top))
                                             #("i3746" "i3747" "i3748"))
                                           #(ribcage
                                             (cvt v-reverse cvt*)
                                             ((top) (top) (top))
                                             ("i3719" "i3717" "i3715"))
                                           #(ribcage
                                             #(pattern keys)
                                             #((top) (top))
                                             #("i3713" "i3714"))
                                           #(ribcage
                                             (gen-syntax-case
                                               gen-clause
                                               build-dispatch-call
                                               convert-pattern)
                                             ((top) (top) (top) (top))
                                             ("i3709" "i3707" "i3705" "i3703"))
                                           #(ribcage
                                             (lambda-var-list
                                               gen-var
                                               strip
                                               chi-lambda-case
                                               lambda*-formals
                                               chi-simple-lambda
                                               lambda-formals
                                               ellipsis?
                                               chi-void
                                               eval-local-transformer
                                               chi-local-syntax
                                               chi-body
                                               chi-macro
                                               chi-application
                                               chi-expr
                                               chi
                                               syntax-type
                                               chi-when-list
                                               chi-install-global
                                               chi-top-sequence
                                               chi-sequence
                                               source-wrap
                                               wrap
                                               bound-id-member?
                                               distinct-bound-ids?
                                               valid-bound-ids?
                                               bound-id=?
                                               free-id=?
                                               id-var-name
                                               same-marks?
                                               join-marks
                                               join-wraps
                                               smart-append
                                               make-binding-wrap
                                               extend-ribcage!
                                               make-empty-ribcage
                                               new-mark
                                               anti-mark
                                               the-anti-mark
                                               top-marked?
                                               top-wrap
                                               empty-wrap
                                               set-ribcage-labels!
                                               set-ribcage-marks!
                                               set-ribcage-symnames!
                                               ribcage-labels
                                               ribcage-marks
                                               ribcage-symnames
                                               ribcage?
                                               make-ribcage
                                               gen-labels
                                               gen-label
                                               make-rename
                                               rename-marks
                                               rename-new
                                               rename-old
                                               subst-rename?
                                               wrap-subst
                                               wrap-marks
                                               make-wrap
                                               id-sym-name&marks
                                               id-sym-name
                                               id?
                                               nonsymbol-id?
                                               global-extend
                                               lookup
                                               macros-only-env
                                               extend-var-env
                                               extend-env
                                               null-env
                                               binding-value
                                               binding-type
                                               make-binding
                                               arg-check
                                               source-annotation
                                               no-source
                                               set-syntax-object-module!
                                               set-syntax-object-wrap!
                                               set-syntax-object-expression!
                                               syntax-object-module
                                               syntax-object-wrap
                                               syntax-object-expression
                                               syntax-object?
                                               make-syntax-object
                                               build-lexical-var
                                               build-letrec
                                               build-named-let
                                               build-let
                                               build-sequence
                                               build-data
                                               build-primref
                                               build-lambda-case
                                               build-case-lambda
                                               build-simple-lambda
                                               build-global-definition
                                               build-global-assignment
                                               build-global-reference
                                               analyze-variable
                                               build-lexical-assignment
                                               build-lexical-reference
                                               build-dynlet
                                               build-conditional
                                               build-application
                                               build-void
                                               maybe-name-value!
                                               decorate-source
                                               get-global-definition-hook
                                               put-global-definition-hook
                                               gensym-hook
                                               local-eval-hook
                                               top-level-eval-hook
                                               fx<
                                               fx=
                                               fx-
                                               fx+
                                               set-lambda-meta!
                                               lambda-meta
                                               lambda?
                                               make-dynlet
                                               make-letrec
                                               make-let
                                               make-lambda-case
                                               make-lambda
                                               make-sequence
                                               make-application
                                               make-conditional
                                               make-toplevel-define
                                               make-toplevel-set
                                               make-toplevel-ref
                                               make-module-set
                                               make-module-ref
                                               make-lexical-set
                                               make-lexical-ref
                                               make-primitive-ref
                                               make-const
                                               make-void)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i466"
                                              "i464"
                                              "i462"
                                              "i460"
                                              "i458"
                                              "i456"
                                              "i454"
                                              "i452"
                                              "i450"
                                              "i448"
                                              "i446"
                                              "i444"
                                              "i442"
                                              "i440"
                                              "i438"
                                              "i436"
                                              "i434"
                                              "i432"
                                              "i430"
                                              "i428"
                                              "i426"
                                              "i424"
                                              "i422"
                                              "i420"
                                              "i418"
                                              "i416"
                                              "i414"
                                              "i412"
                                              "i410"
                                              "i408"
                                              "i406"
                                              "i404"
                                              "i402"
                                              "i400"
                                              "i398"
                                              "i397"
                                              "i395"
                                              "i392"
                                              "i391"
                                              "i390"
                                              "i388"
                                              "i387"
                                              "i385"
                                              "i383"
                                              "i381"
                                              "i379"
                                              "i377"
                                              "i375"
                                              "i373"
                                              "i371"
                                              "i368"
                                              "i366"
                                              "i365"
                                              "i363"
                                              "i361"
                                              "i359"
                                              "i357"
                                              "i356"
                                              "i355"
                                              "i354"
                                              "i352"
                                              "i351"
                                              "i348"
                                              "i346"
                                              "i344"
                                              "i342"
                                              "i340"
                                              "i338"
                                              "i336"
                                              "i335"
                                              "i334"
                                              "i332"
                                              "i330"
                                              "i329"
                                              "i326"
                                              "i325"
                                              "i323"
                                              "i321"
                                              "i319"
                                              "i317"
                                              "i315"
                                              "i313"
                                              "i311"
                                              "i309"
                                              "i307"
                                              "i304"
                                              "i302"
                                              "i300"
                                              "i298"
                                              "i296"
                                              "i294"
                                              "i292"
                                              "i290"
                                              "i288"
                                              "i286"
                                              "i284"
                                              "i282"
                                              "i280"
                                              "i278"
                                              "i276"
                                              "i274"
                                              "i272"
                                              "i270"
                                              "i268"
                                              "i266"
                                              "i264"
                                              "i262"
                                              "i260"
                                              "i259"
                                              "i256"
                                              "i254"
                                              "i253"
                                              "i252"
                                              "i251"
                                              "i250"
                                              "i248"
                                              "i246"
                                              "i244"
                                              "i241"
                                              "i239"
                                              "i237"
                                              "i235"
                                              "i233"
                                              "i231"
                                              "i229"
                                              "i227"
                                              "i225"
                                              "i223"
                                              "i221"
                                              "i219"
                                              "i217"
                                              "i215"
                                              "i213"
                                              "i211"
                                              "i209"
                                              "i207"))
                                           #(ribcage
                                             (define-structure
                                               define-expansion-accessors
                                               define-expansion-constructors)
                                             ((top) (top) (top))
                                             ("i45" "i44" "i43")))
                                          (hygiene guile))))
                              (eq? (#{id-var-name 411}# #{p 3743}# '(()))
                                   (#{id-var-name 411}#
                                     '#(syntax-object
                                        _
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p n ids)
                                           #((top) (top) (top))
                                           #("i3746" "i3747" "i3748"))
                                         #(ribcage
                                           (cvt v-reverse cvt*)
                                           ((top) (top) (top))
                                           ("i3719" "i3717" "i3715"))
                                         #(ribcage
                                           #(pattern keys)
                                           #((top) (top))
                                           #("i3713" "i3714"))
                                         #(ribcage
                                           (gen-syntax-case
                                             gen-clause
                                             build-dispatch-call
                                             convert-pattern)
                                           ((top) (top) (top) (top))
                                           ("i3709" "i3707" "i3705" "i3703"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             maybe-name-value!
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             set-lambda-meta!
                                             lambda-meta
                                             lambda?
                                             make-dynlet
                                             make-letrec
                                             make-let
                                             make-lambda-case
                                             make-lambda
                                             make-sequence
                                             make-application
                                             make-conditional
                                             make-toplevel-define
                                             make-toplevel-set
                                             make-toplevel-ref
                                             make-module-set
                                             make-module-ref
                                             make-lexical-set
                                             make-lexical-ref
                                             make-primitive-ref
                                             make-const
                                             make-void)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i466"
                                            "i464"
                                            "i462"
                                            "i460"
                                            "i458"
                                            "i456"
                                            "i454"
                                            "i452"
                                            "i450"
                                            "i448"
                                            "i446"
                                            "i444"
                                            "i442"
                                            "i440"
                                            "i438"
                                            "i436"
                                            "i434"
                                            "i432"
                                            "i430"
                                            "i428"
                                            "i426"
                                            "i424"
                                            "i422"
                                            "i420"
                                            "i418"
                                            "i416"
                                            "i414"
                                            "i412"
                                            "i410"
                                            "i408"
                                            "i406"
                                            "i404"
                                            "i402"
                                            "i400"
                                            "i398"
                                            "i397"
                                            "i395"
                                            "i392"
                                            "i391"
                                            "i390"
                                            "i388"
                                            "i387"
                                            "i385"
                                            "i383"
                                            "i381"
                                            "i379"
                                            "i377"
                                            "i375"
                                            "i373"
                                            "i371"
                                            "i368"
                                            "i366"
                                            "i365"
                                            "i363"
                                            "i361"
                                            "i359"
                                            "i357"
                                            "i356"
                                            "i355"
                                            "i354"
                                            "i352"
                                            "i351"
                                            "i348"
                                            "i346"
                                            "i344"
                                            "i342"
                                            "i340"
                                            "i338"
                                            "i336"
                                            "i335"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i329"
                                            "i326"
                                            "i325"
                                            "i323"
                                            "i321"
                                            "i319"
                                            "i317"
                                            "i315"
                                            "i313"
                                            "i311"
                                            "i309"
                                            "i307"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i288"
                                            "i286"
                                            "i284"
                                            "i282"
                                            "i280"
                                            "i278"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i264"
                                            "i262"
                                            "i260"
                                            "i259"
                                            "i256"
                                            "i254"
                                            "i253"
                                            "i252"
                                            "i251"
                                            "i250"
                                            "i248"
                                            "i246"
                                            "i244"
                                            "i241"
                                            "i239"
                                            "i237"
                                            "i235"
                                            "i233"
                                            "i231"
                                            "i229"
                                            "i227"
                                            "i225"
                                            "i223"
                                            "i221"
                                            "i219"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i207"))
                                         #(ribcage
                                           (define-structure
                                             define-expansion-accessors
                                             define-expansion-constructors)
                                           ((top) (top) (top))
                                           ("i45" "i44" "i43")))
                                        (hygiene guile))
                                     '(())))
                              #f)
                          (values '_ #{ids 3745}#)
                          (values
                            'any
                            (cons (cons #{p 3743}# #{n 3744}#) #{ids 3745}#))))
                      (let ((#{tmp 3755}#
                              ($sc-dispatch #{p 3743}# '(any any))))
                        (if (if #{tmp 3755}#
                              (@apply
                                (lambda (#{x 3758}# #{dots 3759}#)
                                  (if (if (if (vector? #{dots 3759}#)
                                            (if (= (vector-length
                                                     #{dots 3759}#)
                                                   4)
                                              (eq? (vector-ref #{dots 3759}# 0)
                                                   'syntax-object)
                                              #f)
                                            #f)
                                        (symbol? (vector-ref #{dots 3759}# 1))
                                        #f)
                                    (if (eq? (if (if (vector? #{dots 3759}#)
                                                   (if (= (vector-length
                                                            #{dots 3759}#)
                                                          4)
                                                     (eq? (vector-ref
                                                            #{dots 3759}#
                                                            0)
                                                          'syntax-object)
                                                     #f)
                                                   #f)
                                               (vector-ref #{dots 3759}# 1)
                                               #{dots 3759}#)
                                             (if (if (= (vector-length
                                                          '#(syntax-object
                                                             ...
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i2229"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i466"
                                                                 "i464"
                                                                 "i462"
                                                                 "i460"
                                                                 "i458"
                                                                 "i456"
                                                                 "i454"
                                                                 "i452"
                                                                 "i450"
                                                                 "i448"
                                                                 "i446"
                                                                 "i444"
                                                                 "i442"
                                                                 "i440"
                                                                 "i438"
                                                                 "i436"
                                                                 "i434"
                                                                 "i432"
                                                                 "i430"
                                                                 "i428"
                                                                 "i426"
                                                                 "i424"
                                                                 "i422"
                                                                 "i420"
                                                                 "i418"
                                                                 "i416"
                                                                 "i414"
                                                                 "i412"
                                                                 "i410"
                                                                 "i408"
                                                                 "i406"
                                                                 "i404"
                                                                 "i402"
                                                                 "i400"
                                                                 "i398"
                                                                 "i397"
                                                                 "i395"
                                                                 "i392"
                                                                 "i391"
                                                                 "i390"
                                                                 "i388"
                                                                 "i387"
                                                                 "i385"
                                                                 "i383"
                                                                 "i381"
                                                                 "i379"
                                                                 "i377"
                                                                 "i375"
                                                                 "i373"
                                                                 "i371"
                                                                 "i368"
                                                                 "i366"
                                                                 "i365"
                                                                 "i363"
                                                                 "i361"
                                                                 "i359"
                                                                 "i357"
                                                                 "i356"
                                                                 "i355"
                                                                 "i354"
                                                                 "i352"
                                                                 "i351"
                                                                 "i348"
                                                                 "i346"
                                                                 "i344"
                                                                 "i342"
                                                                 "i340"
                                                                 "i338"
                                                                 "i336"
                                                                 "i335"
                                                                 "i334"
                                                                 "i332"
                                                                 "i330"
                                                                 "i329"
                                                                 "i326"
                                                                 "i325"
                                                                 "i323"
                                                                 "i321"
                                                                 "i319"
                                                                 "i317"
                                                                 "i315"
                                                                 "i313"
                                                                 "i311"
                                                                 "i309"
                                                                 "i307"
                                                                 "i304"
                                                                 "i302"
                                                                 "i300"
                                                                 "i298"
                                                                 "i296"
                                                                 "i294"
                                                                 "i292"
                                                                 "i290"
                                                                 "i288"
                                                                 "i286"
                                                                 "i284"
                                                                 "i282"
                                                                 "i280"
                                                                 "i278"
                                                                 "i276"
                                                                 "i274"
                                                                 "i272"
                                                                 "i270"
                                                                 "i268"
                                                                 "i266"
                                                                 "i264"
                                                                 "i262"
                                                                 "i260"
                                                                 "i259"
                                                                 "i256"
                                                                 "i254"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i250"
                                                                 "i248"
                                                                 "i246"
                                                                 "i244"
                                                                 "i241"
                                                                 "i239"
                                                                 "i237"
                                                                 "i235"
                                                                 "i233"
                                                                 "i231"
                                                                 "i229"
                                                                 "i227"
                                                                 "i225"
                                                                 "i223"
                                                                 "i221"
                                                                 "i219"
                                                                 "i217"
                                                                 "i215"
                                                                 "i213"
                                                                 "i211"
                                                                 "i209"
                                                                 "i207"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i45"
                                                                 "i44"
                                                                 "i43")))
                                                             (hygiene guile)))
                                                        4)
                                                   (eq? (vector-ref
                                                          '#(syntax-object
                                                             ...
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i2229"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i466"
                                                                 "i464"
                                                                 "i462"
                                                                 "i460"
                                                                 "i458"
                                                                 "i456"
                                                                 "i454"
                                                                 "i452"
                                                                 "i450"
                                                                 "i448"
                                                                 "i446"
                                                                 "i444"
                                                                 "i442"
                                                                 "i440"
                                                                 "i438"
                                                                 "i436"
                                                                 "i434"
                                                                 "i432"
                                                                 "i430"
                                                                 "i428"
                                                                 "i426"
                                                                 "i424"
                                                                 "i422"
                                                                 "i420"
                                                                 "i418"
                                                                 "i416"
                                                                 "i414"
                                                                 "i412"
                                                                 "i410"
                                                                 "i408"
                                                                 "i406"
                                                                 "i404"
                                                                 "i402"
                                                                 "i400"
                                                                 "i398"
                                                                 "i397"
                                                                 "i395"
                                                                 "i392"
                                                                 "i391"
                                                                 "i390"
                                                                 "i388"
                                                                 "i387"
                                                                 "i385"
                                                                 "i383"
                                                                 "i381"
                                                                 "i379"
                                                                 "i377"
                                                                 "i375"
                                                                 "i373"
                                                                 "i371"
                                                                 "i368"
                                                                 "i366"
                                                                 "i365"
                                                                 "i363"
                                                                 "i361"
                                                                 "i359"
                                                                 "i357"
                                                                 "i356"
                                                                 "i355"
                                                                 "i354"
                                                                 "i352"
                                                                 "i351"
                                                                 "i348"
                                                                 "i346"
                                                                 "i344"
                                                                 "i342"
                                                                 "i340"
                                                                 "i338"
                                                                 "i336"
                                                                 "i335"
                                                                 "i334"
                                                                 "i332"
                                                                 "i330"
                                                                 "i329"
                                                                 "i326"
                                                                 "i325"
                                                                 "i323"
                                                                 "i321"
                                                                 "i319"
                                                                 "i317"
                                                                 "i315"
                                                                 "i313"
                                                                 "i311"
                                                                 "i309"
                                                                 "i307"
                                                                 "i304"
                                                                 "i302"
                                                                 "i300"
                                                                 "i298"
                                                                 "i296"
                                                                 "i294"
                                                                 "i292"
                                                                 "i290"
                                                                 "i288"
                                                                 "i286"
                                                                 "i284"
                                                                 "i282"
                                                                 "i280"
                                                                 "i278"
                                                                 "i276"
                                                                 "i274"
                                                                 "i272"
                                                                 "i270"
                                                                 "i268"
                                                                 "i266"
                                                                 "i264"
                                                                 "i262"
                                                                 "i260"
                                                                 "i259"
                                                                 "i256"
                                                                 "i254"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i250"
                                                                 "i248"
                                                                 "i246"
                                                                 "i244"
                                                                 "i241"
                                                                 "i239"
                                                                 "i237"
                                                                 "i235"
                                                                 "i233"
                                                                 "i231"
                                                                 "i229"
                                                                 "i227"
                                                                 "i225"
                                                                 "i223"
                                                                 "i221"
                                                                 "i219"
                                                                 "i217"
                                                                 "i215"
                                                                 "i213"
                                                                 "i211"
                                                                 "i209"
                                                                 "i207"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i45"
                                                                 "i44"
                                                                 "i43")))
                                                             (hygiene guile))
                                                          0)
                                                        'syntax-object)
                                                   #f)
                                               (vector-ref
                                                 '#(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i2229"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i466"
                                                        "i464"
                                                        "i462"
                                                        "i460"
                                                        "i458"
                                                        "i456"
                                                        "i454"
                                                        "i452"
                                                        "i450"
                                                        "i448"
                                                        "i446"
                                                        "i444"
                                                        "i442"
                                                        "i440"
                                                        "i438"
                                                        "i436"
                                                        "i434"
                                                        "i432"
                                                        "i430"
                                                        "i428"
                                                        "i426"
                                                        "i424"
                                                        "i422"
                                                        "i420"
                                                        "i418"
                                                        "i416"
                                                        "i414"
                                                        "i412"
                                                        "i410"
                                                        "i408"
                                                        "i406"
                                                        "i404"
                                                        "i402"
                                                        "i400"
                                                        "i398"
                                                        "i397"
                                                        "i395"
                                                        "i392"
                                                        "i391"
                                                        "i390"
                                                        "i388"
                                                        "i387"
                                                        "i385"
                                                        "i383"
                                                        "i381"
                                                        "i379"
                                                        "i377"
                                                        "i375"
                                                        "i373"
                                                        "i371"
                                                        "i368"
                                                        "i366"
                                                        "i365"
                                                        "i363"
                                                        "i361"
                                                        "i359"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i354"
                                                        "i352"
                                                        "i351"
                                                        "i348"
                                                        "i346"
                                                        "i344"
                                                        "i342"
                                                        "i340"
                                                        "i338"
                                                        "i336"
                                                        "i335"
                                                        "i334"
                                                        "i332"
                                                        "i330"
                                                        "i329"
                                                        "i326"
                                                        "i325"
                                                        "i323"
                                                        "i321"
                                                        "i319"
                                                        "i317"
                                                        "i315"
                                                        "i313"
                                                        "i311"
                                                        "i309"
                                                        "i307"
                                                        "i304"
                                                        "i302"
                                                        "i300"
                                                        "i298"
                                                        "i296"
                                                        "i294"
                                                        "i292"
                                                        "i290"
                                                        "i288"
                                                        "i286"
                                                        "i284"
                                                        "i282"
                                                        "i280"
                                                        "i278"
                                                        "i276"
                                                        "i274"
                                                        "i272"
                                                        "i270"
                                                        "i268"
                                                        "i266"
                                                        "i264"
                                                        "i262"
                                                        "i260"
                                                        "i259"
                                                        "i256"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i250"
                                                        "i248"
                                                        "i246"
                                                        "i244"
                                                        "i241"
                                                        "i239"
                                                        "i237"
                                                        "i235"
                                                        "i233"
                                                        "i231"
                                                        "i229"
                                                        "i227"
                                                        "i225"
                                                        "i223"
                                                        "i221"
                                                        "i219"
                                                        "i217"
                                                        "i215"
                                                        "i213"
                                                        "i211"
                                                        "i209"
                                                        "i207"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i45" "i44" "i43")))
                                                    (hygiene guile))
                                                 1)
                                               '#(syntax-object
                                                  ...
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i2229"))
                                                   #(ribcage
                                                     (lambda-var-list
                                                       gen-var
                                                       strip
                                                       chi-lambda-case
                                                       lambda*-formals
                                                       chi-simple-lambda
                                                       lambda-formals
                                                       ellipsis?
                                                       chi-void
                                                       eval-local-transformer
                                                       chi-local-syntax
                                                       chi-body
                                                       chi-macro
                                                       chi-application
                                                       chi-expr
                                                       chi
                                                       syntax-type
                                                       chi-when-list
                                                       chi-install-global
                                                       chi-top-sequence
                                                       chi-sequence
                                                       source-wrap
                                                       wrap
                                                       bound-id-member?
                                                       distinct-bound-ids?
                                                       valid-bound-ids?
                                                       bound-id=?
                                                       free-id=?
                                                       id-var-name
                                                       same-marks?
                                                       join-marks
                                                       join-wraps
                                                       smart-append
                                                       make-binding-wrap
                                                       extend-ribcage!
                                                       make-empty-ribcage
                                                       new-mark
                                                       anti-mark
                                                       the-anti-mark
                                                       top-marked?
                                                       top-wrap
                                                       empty-wrap
                                                       set-ribcage-labels!
                                                       set-ribcage-marks!
                                                       set-ribcage-symnames!
                                                       ribcage-labels
                                                       ribcage-marks
                                                       ribcage-symnames
                                                       ribcage?
                                                       make-ribcage
                                                       gen-labels
                                                       gen-label
                                                       make-rename
                                                       rename-marks
                                                       rename-new
                                                       rename-old
                                                       subst-rename?
                                                       wrap-subst
                                                       wrap-marks
                                                       make-wrap
                                                       id-sym-name&marks
                                                       id-sym-name
                                                       id?
                                                       nonsymbol-id?
                                                       global-extend
                                                       lookup
                                                       macros-only-env
                                                       extend-var-env
                                                       extend-env
                                                       null-env
                                                       binding-value
                                                       binding-type
                                                       make-binding
                                                       arg-check
                                                       source-annotation
                                                       no-source
                                                       set-syntax-object-module!
                                                       set-syntax-object-wrap!
                                                       set-syntax-object-expression!
                                                       syntax-object-module
                                                       syntax-object-wrap
                                                       syntax-object-expression
                                                       syntax-object?
                                                       make-syntax-object
                                                       build-lexical-var
                                                       build-letrec
                                                       build-named-let
                                                       build-let
                                                       build-sequence
                                                       build-data
                                                       build-primref
                                                       build-lambda-case
                                                       build-case-lambda
                                                       build-simple-lambda
                                                       build-global-definition
                                                       build-global-assignment
                                                       build-global-reference
                                                       analyze-variable
                                                       build-lexical-assignment
                                                       build-lexical-reference
                                                       build-dynlet
                                                       build-conditional
                                                       build-application
                                                       build-void
                                                       maybe-name-value!
                                                       decorate-source
                                                       get-global-definition-hook
                                                       put-global-definition-hook
                                                       gensym-hook
                                                       local-eval-hook
                                                       top-level-eval-hook
                                                       fx<
                                                       fx=
                                                       fx-
                                                       fx+
                                                       set-lambda-meta!
                                                       lambda-meta
                                                       lambda?
                                                       make-dynlet
                                                       make-letrec
                                                       make-let
                                                       make-lambda-case
                                                       make-lambda
                                                       make-sequence
                                                       make-application
                                                       make-conditional
                                                       make-toplevel-define
                                                       make-toplevel-set
                                                       make-toplevel-ref
                                                       make-module-set
                                                       make-module-ref
                                                       make-lexical-set
                                                       make-lexical-ref
                                                       make-primitive-ref
                                                       make-const
                                                       make-void)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i466"
                                                      "i464"
                                                      "i462"
                                                      "i460"
                                                      "i458"
                                                      "i456"
                                                      "i454"
                                                      "i452"
                                                      "i450"
                                                      "i448"
                                                      "i446"
                                                      "i444"
                                                      "i442"
                                                      "i440"
                                                      "i438"
                                                      "i436"
                                                      "i434"
                                                      "i432"
                                                      "i430"
                                                      "i428"
                                                      "i426"
                                                      "i424"
                                                      "i422"
                                                      "i420"
                                                      "i418"
                                                      "i416"
                                                      "i414"
                                                      "i412"
                                                      "i410"
                                                      "i408"
                                                      "i406"
                                                      "i404"
                                                      "i402"
                                                      "i400"
                                                      "i398"
                                                      "i397"
                                                      "i395"
                                                      "i392"
                                                      "i391"
                                                      "i390"
                                                      "i388"
                                                      "i387"
                                                      "i385"
                                                      "i383"
                                                      "i381"
                                                      "i379"
                                                      "i377"
                                                      "i375"
                                                      "i373"
                                                      "i371"
                                                      "i368"
                                                      "i366"
                                                      "i365"
                                                      "i363"
                                                      "i361"
                                                      "i359"
                                                      "i357"
                                                      "i356"
                                                      "i355"
                                                      "i354"
                                                      "i352"
                                                      "i351"
                                                      "i348"
                                                      "i346"
                                                      "i344"
                                                      "i342"
                                                      "i340"
                                                      "i338"
                                                      "i336"
                                                      "i335"
                                                      "i334"
                                                      "i332"
                                                      "i330"
                                                      "i329"
                                                      "i326"
                                                      "i325"
                                                      "i323"
                                                      "i321"
                                                      "i319"
                                                      "i317"
                                                      "i315"
                                                      "i313"
                                                      "i311"
                                                      "i309"
                                                      "i307"
                                                      "i304"
                                                      "i302"
                                                      "i300"
                                                      "i298"
                                                      "i296"
                                                      "i294"
                                                      "i292"
                                                      "i290"
                                                      "i288"
                                                      "i286"
                                                      "i284"
                                                      "i282"
                                                      "i280"
                                                      "i278"
                                                      "i276"
                                                      "i274"
                                                      "i272"
                                                      "i270"
                                                      "i268"
                                                      "i266"
                                                      "i264"
                                                      "i262"
                                                      "i260"
                                                      "i259"
                                                      "i256"
                                                      "i254"
                                                      "i253"
                                                      "i252"
                                                      "i251"
                                                      "i250"
                                                      "i248"
                                                      "i246"
                                                      "i244"
                                                      "i241"
                                                      "i239"
                                                      "i237"
                                                      "i235"
                                                      "i233"
                                                      "i231"
                                                      "i229"
                                                      "i227"
                                                      "i225"
                                                      "i223"
                                                      "i221"
                                                      "i219"
                                                      "i217"
                                                      "i215"
                                                      "i213"
                                                      "i211"
                                                      "i209"
                                                      "i207"))
                                                   #(ribcage
                                                     (define-structure
                                                       define-expansion-accessors
                                                       define-expansion-constructors)
                                                     ((top) (top) (top))
                                                     ("i45" "i44" "i43")))
                                                  (hygiene guile))))
                                      (eq? (#{id-var-name 411}#
                                             #{dots 3759}#
                                             '(()))
                                           (#{id-var-name 411}#
                                             '#(syntax-object
                                                ...
                                                ((top)
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i2229"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i466"
                                                    "i464"
                                                    "i462"
                                                    "i460"
                                                    "i458"
                                                    "i456"
                                                    "i454"
                                                    "i452"
                                                    "i450"
                                                    "i448"
                                                    "i446"
                                                    "i444"
                                                    "i442"
                                                    "i440"
                                                    "i438"
                                                    "i436"
                                                    "i434"
                                                    "i432"
                                                    "i430"
                                                    "i428"
                                                    "i426"
                                                    "i424"
                                                    "i422"
                                                    "i420"
                                                    "i418"
                                                    "i416"
                                                    "i414"
                                                    "i412"
                                                    "i410"
                                                    "i408"
                                                    "i406"
                                                    "i404"
                                                    "i402"
                                                    "i400"
                                                    "i398"
                                                    "i397"
                                                    "i395"
                                                    "i392"
                                                    "i391"
                                                    "i390"
                                                    "i388"
                                                    "i387"
                                                    "i385"
                                                    "i383"
                                                    "i381"
                                                    "i379"
                                                    "i377"
                                                    "i375"
                                                    "i373"
                                                    "i371"
                                                    "i368"
                                                    "i366"
                                                    "i365"
                                                    "i363"
                                                    "i361"
                                                    "i359"
                                                    "i357"
                                                    "i356"
                                                    "i355"
                                                    "i354"
                                                    "i352"
                                                    "i351"
                                                    "i348"
                                                    "i346"
                                                    "i344"
                                                    "i342"
                                                    "i340"
                                                    "i338"
                                                    "i336"
                                                    "i335"
                                                    "i334"
                                                    "i332"
                                                    "i330"
                                                    "i329"
                                                    "i326"
                                                    "i325"
                                                    "i323"
                                                    "i321"
                                                    "i319"
                                                    "i317"
                                                    "i315"
                                                    "i313"
                                                    "i311"
                                                    "i309"
                                                    "i307"
                                                    "i304"
                                                    "i302"
                                                    "i300"
                                                    "i298"
                                                    "i296"
                                                    "i294"
                                                    "i292"
                                                    "i290"
                                                    "i288"
                                                    "i286"
                                                    "i284"
                                                    "i282"
                                                    "i280"
                                                    "i278"
                                                    "i276"
                                                    "i274"
                                                    "i272"
                                                    "i270"
                                                    "i268"
                                                    "i266"
                                                    "i264"
                                                    "i262"
                                                    "i260"
                                                    "i259"
                                                    "i256"
                                                    "i254"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i250"
                                                    "i248"
                                                    "i246"
                                                    "i244"
                                                    "i241"
                                                    "i239"
                                                    "i237"
                                                    "i235"
                                                    "i233"
                                                    "i231"
                                                    "i229"
                                                    "i227"
                                                    "i225"
                                                    "i223"
                                                    "i221"
                                                    "i219"
                                                    "i217"
                                                    "i215"
                                                    "i213"
                                                    "i211"
                                                    "i209"
                                                    "i207"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i45" "i44" "i43")))
                                                (hygiene guile))
                                             '(())))
                                      #f)
                                    #f))
                                #{tmp 3755}#)
                              #f)
                          (@apply
                            (lambda (#{x 3762}# #{dots 3763}#)
                              (call-with-values
                                (lambda ()
                                  (#{cvt 3720}#
                                    #{x 3762}#
                                    (#{1+}# #{n 3744}#)
                                    #{ids 3745}#))
                                (lambda (#{p 3765}# #{ids 3766}#)
                                  (values
                                    (if (eq? #{p 3765}# 'any)
                                      'each-any
                                      (vector 'each #{p 3765}#))
                                    #{ids 3766}#))))
                            #{tmp 3755}#)
                          (let ((#{tmp 3769}#
                                  ($sc-dispatch #{p 3743}# '(any any . any))))
                            (if (if #{tmp 3769}#
                                  (@apply
                                    (lambda (#{x 3773}#
                                             #{dots 3774}#
                                             #{ys 3775}#)
                                      (if (if (if (vector? #{dots 3774}#)
                                                (if (= (vector-length
                                                         #{dots 3774}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{dots 3774}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (symbol?
                                              (vector-ref #{dots 3774}# 1))
                                            #f)
                                        (if (eq? (if (if (vector?
                                                           #{dots 3774}#)
                                                       (if (= (vector-length
                                                                #{dots 3774}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{dots 3774}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref #{dots 3774}# 1)
                                                   #{dots 3774}#)
                                                 (if (if (= (vector-length
                                                              '#(syntax-object
                                                                 ...
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i2229"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i466"
                                                                     "i464"
                                                                     "i462"
                                                                     "i460"
                                                                     "i458"
                                                                     "i456"
                                                                     "i454"
                                                                     "i452"
                                                                     "i450"
                                                                     "i448"
                                                                     "i446"
                                                                     "i444"
                                                                     "i442"
                                                                     "i440"
                                                                     "i438"
                                                                     "i436"
                                                                     "i434"
                                                                     "i432"
                                                                     "i430"
                                                                     "i428"
                                                                     "i426"
                                                                     "i424"
                                                                     "i422"
                                                                     "i420"
                                                                     "i418"
                                                                     "i416"
                                                                     "i414"
                                                                     "i412"
                                                                     "i410"
                                                                     "i408"
                                                                     "i406"
                                                                     "i404"
                                                                     "i402"
                                                                     "i400"
                                                                     "i398"
                                                                     "i397"
                                                                     "i395"
                                                                     "i392"
                                                                     "i391"
                                                                     "i390"
                                                                     "i388"
                                                                     "i387"
                                                                     "i385"
                                                                     "i383"
                                                                     "i381"
                                                                     "i379"
                                                                     "i377"
                                                                     "i375"
                                                                     "i373"
                                                                     "i371"
                                                                     "i368"
                                                                     "i366"
                                                                     "i365"
                                                                     "i363"
                                                                     "i361"
                                                                     "i359"
                                                                     "i357"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i352"
                                                                     "i351"
                                                                     "i348"
                                                                     "i346"
                                                                     "i344"
                                                                     "i342"
                                                                     "i340"
                                                                     "i338"
                                                                     "i336"
                                                                     "i335"
                                                                     "i334"
                                                                     "i332"
                                                                     "i330"
                                                                     "i329"
                                                                     "i326"
                                                                     "i325"
                                                                     "i323"
                                                                     "i321"
                                                                     "i319"
                                                                     "i317"
                                                                     "i315"
                                                                     "i313"
                                                                     "i311"
                                                                     "i309"
                                                                     "i307"
                                                                     "i304"
                                                                     "i302"
                                                                     "i300"
                                                                     "i298"
                                                                     "i296"
                                                                     "i294"
                                                                     "i292"
                                                                     "i290"
                                                                     "i288"
                                                                     "i286"
                                                                     "i284"
                                                                     "i282"
                                                                     "i280"
                                                                     "i278"
                                                                     "i276"
                                                                     "i274"
                                                                     "i272"
                                                                     "i270"
                                                                     "i268"
                                                                     "i266"
                                                                     "i264"
                                                                     "i262"
                                                                     "i260"
                                                                     "i259"
                                                                     "i256"
                                                                     "i254"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i248"
                                                                     "i246"
                                                                     "i244"
                                                                     "i241"
                                                                     "i239"
                                                                     "i237"
                                                                     "i235"
                                                                     "i233"
                                                                     "i231"
                                                                     "i229"
                                                                     "i227"
                                                                     "i225"
                                                                     "i223"
                                                                     "i221"
                                                                     "i219"
                                                                     "i217"
                                                                     "i215"
                                                                     "i213"
                                                                     "i211"
                                                                     "i209"
                                                                     "i207"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i45"
                                                                     "i44"
                                                                     "i43")))
                                                                 (hygiene
                                                                   guile)))
                                                            4)
                                                       (eq? (vector-ref
                                                              '#(syntax-object
                                                                 ...
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i2229"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i466"
                                                                     "i464"
                                                                     "i462"
                                                                     "i460"
                                                                     "i458"
                                                                     "i456"
                                                                     "i454"
                                                                     "i452"
                                                                     "i450"
                                                                     "i448"
                                                                     "i446"
                                                                     "i444"
                                                                     "i442"
                                                                     "i440"
                                                                     "i438"
                                                                     "i436"
                                                                     "i434"
                                                                     "i432"
                                                                     "i430"
                                                                     "i428"
                                                                     "i426"
                                                                     "i424"
                                                                     "i422"
                                                                     "i420"
                                                                     "i418"
                                                                     "i416"
                                                                     "i414"
                                                                     "i412"
                                                                     "i410"
                                                                     "i408"
                                                                     "i406"
                                                                     "i404"
                                                                     "i402"
                                                                     "i400"
                                                                     "i398"
                                                                     "i397"
                                                                     "i395"
                                                                     "i392"
                                                                     "i391"
                                                                     "i390"
                                                                     "i388"
                                                                     "i387"
                                                                     "i385"
                                                                     "i383"
                                                                     "i381"
                                                                     "i379"
                                                                     "i377"
                                                                     "i375"
                                                                     "i373"
                                                                     "i371"
                                                                     "i368"
                                                                     "i366"
                                                                     "i365"
                                                                     "i363"
                                                                     "i361"
                                                                     "i359"
                                                                     "i357"
                                                                     "i356"
                                                                     "i355"
                                                                     "i354"
                                                                     "i352"
                                                                     "i351"
                                                                     "i348"
                                                                     "i346"
                                                                     "i344"
                                                                     "i342"
                                                                     "i340"
                                                                     "i338"
                                                                     "i336"
                                                                     "i335"
                                                                     "i334"
                                                                     "i332"
                                                                     "i330"
                                                                     "i329"
                                                                     "i326"
                                                                     "i325"
                                                                     "i323"
                                                                     "i321"
                                                                     "i319"
                                                                     "i317"
                                                                     "i315"
                                                                     "i313"
                                                                     "i311"
                                                                     "i309"
                                                                     "i307"
                                                                     "i304"
                                                                     "i302"
                                                                     "i300"
                                                                     "i298"
                                                                     "i296"
                                                                     "i294"
                                                                     "i292"
                                                                     "i290"
                                                                     "i288"
                                                                     "i286"
                                                                     "i284"
                                                                     "i282"
                                                                     "i280"
                                                                     "i278"
                                                                     "i276"
                                                                     "i274"
                                                                     "i272"
                                                                     "i270"
                                                                     "i268"
                                                                     "i266"
                                                                     "i264"
                                                                     "i262"
                                                                     "i260"
                                                                     "i259"
                                                                     "i256"
                                                                     "i254"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i250"
                                                                     "i248"
                                                                     "i246"
                                                                     "i244"
                                                                     "i241"
                                                                     "i239"
                                                                     "i237"
                                                                     "i235"
                                                                     "i233"
                                                                     "i231"
                                                                     "i229"
                                                                     "i227"
                                                                     "i225"
                                                                     "i223"
                                                                     "i221"
                                                                     "i219"
                                                                     "i217"
                                                                     "i215"
                                                                     "i213"
                                                                     "i211"
                                                                     "i209"
                                                                     "i207"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i45"
                                                                     "i44"
                                                                     "i43")))
                                                                 (hygiene
                                                                   guile))
                                                              0)
                                                            'syntax-object)
                                                       #f)
                                                   (vector-ref
                                                     '#(syntax-object
                                                        ...
                                                        ((top)
                                                         #(ribcage () () ())
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i2229"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i466"
                                                            "i464"
                                                            "i462"
                                                            "i460"
                                                            "i458"
                                                            "i456"
                                                            "i454"
                                                            "i452"
                                                            "i450"
                                                            "i448"
                                                            "i446"
                                                            "i444"
                                                            "i442"
                                                            "i440"
                                                            "i438"
                                                            "i436"
                                                            "i434"
                                                            "i432"
                                                            "i430"
                                                            "i428"
                                                            "i426"
                                                            "i424"
                                                            "i422"
                                                            "i420"
                                                            "i418"
                                                            "i416"
                                                            "i414"
                                                            "i412"
                                                            "i410"
                                                            "i408"
                                                            "i406"
                                                            "i404"
                                                            "i402"
                                                            "i400"
                                                            "i398"
                                                            "i397"
                                                            "i395"
                                                            "i392"
                                                            "i391"
                                                            "i390"
                                                            "i388"
                                                            "i387"
                                                            "i385"
                                                            "i383"
                                                            "i381"
                                                            "i379"
                                                            "i377"
                                                            "i375"
                                                            "i373"
                                                            "i371"
                                                            "i368"
                                                            "i366"
                                                            "i365"
                                                            "i363"
                                                            "i361"
                                                            "i359"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i354"
                                                            "i352"
                                                            "i351"
                                                            "i348"
                                                            "i346"
                                                            "i344"
                                                            "i342"
                                                            "i340"
                                                            "i338"
                                                            "i336"
                                                            "i335"
                                                            "i334"
                                                            "i332"
                                                            "i330"
                                                            "i329"
                                                            "i326"
                                                            "i325"
                                                            "i323"
                                                            "i321"
                                                            "i319"
                                                            "i317"
                                                            "i315"
                                                            "i313"
                                                            "i311"
                                                            "i309"
                                                            "i307"
                                                            "i304"
                                                            "i302"
                                                            "i300"
                                                            "i298"
                                                            "i296"
                                                            "i294"
                                                            "i292"
                                                            "i290"
                                                            "i288"
                                                            "i286"
                                                            "i284"
                                                            "i282"
                                                            "i280"
                                                            "i278"
                                                            "i276"
                                                            "i274"
                                                            "i272"
                                                            "i270"
                                                            "i268"
                                                            "i266"
                                                            "i264"
                                                            "i262"
                                                            "i260"
                                                            "i259"
                                                            "i256"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i250"
                                                            "i248"
                                                            "i246"
                                                            "i244"
                                                            "i241"
                                                            "i239"
                                                            "i237"
                                                            "i235"
                                                            "i233"
                                                            "i231"
                                                            "i229"
                                                            "i227"
                                                            "i225"
                                                            "i223"
                                                            "i221"
                                                            "i219"
                                                            "i217"
                                                            "i215"
                                                            "i213"
                                                            "i211"
                                                            "i209"
                                                            "i207"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i45"
                                                            "i44"
                                                            "i43")))
                                                        (hygiene guile))
                                                     1)
                                                   '#(syntax-object
                                                      ...
                                                      ((top)
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i2229"))
                                                       #(ribcage
                                                         (lambda-var-list
                                                           gen-var
                                                           strip
                                                           chi-lambda-case
                                                           lambda*-formals
                                                           chi-simple-lambda
                                                           lambda-formals
                                                           ellipsis?
                                                           chi-void
                                                           eval-local-transformer
                                                           chi-local-syntax
                                                           chi-body
                                                           chi-macro
                                                           chi-application
                                                           chi-expr
                                                           chi
                                                           syntax-type
                                                           chi-when-list
                                                           chi-install-global
                                                           chi-top-sequence
                                                           chi-sequence
                                                           source-wrap
                                                           wrap
                                                           bound-id-member?
                                                           distinct-bound-ids?
                                                           valid-bound-ids?
                                                           bound-id=?
                                                           free-id=?
                                                           id-var-name
                                                           same-marks?
                                                           join-marks
                                                           join-wraps
                                                           smart-append
                                                           make-binding-wrap
                                                           extend-ribcage!
                                                           make-empty-ribcage
                                                           new-mark
                                                           anti-mark
                                                           the-anti-mark
                                                           top-marked?
                                                           top-wrap
                                                           empty-wrap
                                                           set-ribcage-labels!
                                                           set-ribcage-marks!
                                                           set-ribcage-symnames!
                                                           ribcage-labels
                                                           ribcage-marks
                                                           ribcage-symnames
                                                           ribcage?
                                                           make-ribcage
                                                           gen-labels
                                                           gen-label
                                                           make-rename
                                                           rename-marks
                                                           rename-new
                                                           rename-old
                                                           subst-rename?
                                                           wrap-subst
                                                           wrap-marks
                                                           make-wrap
                                                           id-sym-name&marks
                                                           id-sym-name
                                                           id?
                                                           nonsymbol-id?
                                                           global-extend
                                                           lookup
                                                           macros-only-env
                                                           extend-var-env
                                                           extend-env
                                                           null-env
                                                           binding-value
                                                           binding-type
                                                           make-binding
                                                           arg-check
                                                           source-annotation
                                                           no-source
                                                           set-syntax-object-module!
                                                           set-syntax-object-wrap!
                                                           set-syntax-object-expression!
                                                           syntax-object-module
                                                           syntax-object-wrap
                                                           syntax-object-expression
                                                           syntax-object?
                                                           make-syntax-object
                                                           build-lexical-var
                                                           build-letrec
                                                           build-named-let
                                                           build-let
                                                           build-sequence
                                                           build-data
                                                           build-primref
                                                           build-lambda-case
                                                           build-case-lambda
                                                           build-simple-lambda
                                                           build-global-definition
                                                           build-global-assignment
                                                           build-global-reference
                                                           analyze-variable
                                                           build-lexical-assignment
                                                           build-lexical-reference
                                                           build-dynlet
                                                           build-conditional
                                                           build-application
                                                           build-void
                                                           maybe-name-value!
                                                           decorate-source
                                                           get-global-definition-hook
                                                           put-global-definition-hook
                                                           gensym-hook
                                                           local-eval-hook
                                                           top-level-eval-hook
                                                           fx<
                                                           fx=
                                                           fx-
                                                           fx+
                                                           set-lambda-meta!
                                                           lambda-meta
                                                           lambda?
                                                           make-dynlet
                                                           make-letrec
                                                           make-let
                                                           make-lambda-case
                                                           make-lambda
                                                           make-sequence
                                                           make-application
                                                           make-conditional
                                                           make-toplevel-define
                                                           make-toplevel-set
                                                           make-toplevel-ref
                                                           make-module-set
                                                           make-module-ref
                                                           make-lexical-set
                                                           make-lexical-ref
                                                           make-primitive-ref
                                                           make-const
                                                           make-void)
                                                         ((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                         ("i466"
                                                          "i464"
                                                          "i462"
                                                          "i460"
                                                          "i458"
                                                          "i456"
                                                          "i454"
                                                          "i452"
                                                          "i450"
                                                          "i448"
                                                          "i446"
                                                          "i444"
                                                          "i442"
                                                          "i440"
                                                          "i438"
                                                          "i436"
                                                          "i434"
                                                          "i432"
                                                          "i430"
                                                          "i428"
                                                          "i426"
                                                          "i424"
                                                          "i422"
                                                          "i420"
                                                          "i418"
                                                          "i416"
                                                          "i414"
                                                          "i412"
                                                          "i410"
                                                          "i408"
                                                          "i406"
                                                          "i404"
                                                          "i402"
                                                          "i400"
                                                          "i398"
                                                          "i397"
                                                          "i395"
                                                          "i392"
                                                          "i391"
                                                          "i390"
                                                          "i388"
                                                          "i387"
                                                          "i385"
                                                          "i383"
                                                          "i381"
                                                          "i379"
                                                          "i377"
                                                          "i375"
                                                          "i373"
                                                          "i371"
                                                          "i368"
                                                          "i366"
                                                          "i365"
                                                          "i363"
                                                          "i361"
                                                          "i359"
                                                          "i357"
                                                          "i356"
                                                          "i355"
                                                          "i354"
                                                          "i352"
                                                          "i351"
                                                          "i348"
                                                          "i346"
                                                          "i344"
                                                          "i342"
                                                          "i340"
                                                          "i338"
                                                          "i336"
                                                          "i335"
                                                          "i334"
                                                          "i332"
                                                          "i330"
                                                          "i329"
                                                          "i326"
                                                          "i325"
                                                          "i323"
                                                          "i321"
                                                          "i319"
                                                          "i317"
                                                          "i315"
                                                          "i313"
                                                          "i311"
                                                          "i309"
                                                          "i307"
                                                          "i304"
                                                          "i302"
                                                          "i300"
                                                          "i298"
                                                          "i296"
                                                          "i294"
                                                          "i292"
                                                          "i290"
                                                          "i288"
                                                          "i286"
                                                          "i284"
                                                          "i282"
                                                          "i280"
                                                          "i278"
                                                          "i276"
                                                          "i274"
                                                          "i272"
                                                          "i270"
                                                          "i268"
                                                          "i266"
                                                          "i264"
                                                          "i262"
                                                          "i260"
                                                          "i259"
                                                          "i256"
                                                          "i254"
                                                          "i253"
                                                          "i252"
                                                          "i251"
                                                          "i250"
                                                          "i248"
                                                          "i246"
                                                          "i244"
                                                          "i241"
                                                          "i239"
                                                          "i237"
                                                          "i235"
                                                          "i233"
                                                          "i231"
                                                          "i229"
                                                          "i227"
                                                          "i225"
                                                          "i223"
                                                          "i221"
                                                          "i219"
                                                          "i217"
                                                          "i215"
                                                          "i213"
                                                          "i211"
                                                          "i209"
                                                          "i207"))
                                                       #(ribcage
                                                         (define-structure
                                                           define-expansion-accessors
                                                           define-expansion-constructors)
                                                         ((top) (top) (top))
                                                         ("i45" "i44" "i43")))
                                                      (hygiene guile))))
                                          (eq? (#{id-var-name 411}#
                                                 #{dots 3774}#
                                                 '(()))
                                               (#{id-var-name 411}#
                                                 '#(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i2229"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i466"
                                                        "i464"
                                                        "i462"
                                                        "i460"
                                                        "i458"
                                                        "i456"
                                                        "i454"
                                                        "i452"
                                                        "i450"
                                                        "i448"
                                                        "i446"
                                                        "i444"
                                                        "i442"
                                                        "i440"
                                                        "i438"
                                                        "i436"
                                                        "i434"
                                                        "i432"
                                                        "i430"
                                                        "i428"
                                                        "i426"
                                                        "i424"
                                                        "i422"
                                                        "i420"
                                                        "i418"
                                                        "i416"
                                                        "i414"
                                                        "i412"
                                                        "i410"
                                                        "i408"
                                                        "i406"
                                                        "i404"
                                                        "i402"
                                                        "i400"
                                                        "i398"
                                                        "i397"
                                                        "i395"
                                                        "i392"
                                                        "i391"
                                                        "i390"
                                                        "i388"
                                                        "i387"
                                                        "i385"
                                                        "i383"
                                                        "i381"
                                                        "i379"
                                                        "i377"
                                                        "i375"
                                                        "i373"
                                                        "i371"
                                                        "i368"
                                                        "i366"
                                                        "i365"
                                                        "i363"
                                                        "i361"
                                                        "i359"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i354"
                                                        "i352"
                                                        "i351"
                                                        "i348"
                                                        "i346"
                                                        "i344"
                                                        "i342"
                                                        "i340"
                                                        "i338"
                                                        "i336"
                                                        "i335"
                                                        "i334"
                                                        "i332"
                                                        "i330"
                                                        "i329"
                                                        "i326"
                                                        "i325"
                                                        "i323"
                                                        "i321"
                                                        "i319"
                                                        "i317"
                                                        "i315"
                                                        "i313"
                                                        "i311"
                                                        "i309"
                                                        "i307"
                                                        "i304"
                                                        "i302"
                                                        "i300"
                                                        "i298"
                                                        "i296"
                                                        "i294"
                                                        "i292"
                                                        "i290"
                                                        "i288"
                                                        "i286"
                                                        "i284"
                                                        "i282"
                                                        "i280"
                                                        "i278"
                                                        "i276"
                                                        "i274"
                                                        "i272"
                                                        "i270"
                                                        "i268"
                                                        "i266"
                                                        "i264"
                                                        "i262"
                                                        "i260"
                                                        "i259"
                                                        "i256"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i250"
                                                        "i248"
                                                        "i246"
                                                        "i244"
                                                        "i241"
                                                        "i239"
                                                        "i237"
                                                        "i235"
                                                        "i233"
                                                        "i231"
                                                        "i229"
                                                        "i227"
                                                        "i225"
                                                        "i223"
                                                        "i221"
                                                        "i219"
                                                        "i217"
                                                        "i215"
                                                        "i213"
                                                        "i211"
                                                        "i209"
                                                        "i207"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i45" "i44" "i43")))
                                                    (hygiene guile))
                                                 '(())))
                                          #f)
                                        #f))
                                    #{tmp 3769}#)
                                  #f)
                              (@apply
                                (lambda (#{x 3779}# #{dots 3780}# #{ys 3781}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{cvt* 3716}#
                                        #{ys 3781}#
                                        #{n 3744}#
                                        #{ids 3745}#))
                                    (lambda (#{ys 3782}# #{ids 3783}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{cvt 3720}#
                                            #{x 3779}#
                                            (#{1+}# #{n 3744}#)
                                            #{ids 3783}#))
                                        (lambda (#{x 3786}# #{ids 3787}#)
                                          (call-with-values
                                            (lambda ()
                                              (#{v-reverse 3718}# #{ys 3782}#))
                                            (lambda (#{ys 3790}# #{e 3791}#)
                                              (values
                                                (vector
                                                  'each+
                                                  #{x 3786}#
                                                  #{ys 3790}#
                                                  #{e 3791}#)
                                                #{ids 3787}#))))))))
                                #{tmp 3769}#)
                              (let ((#{tmp 3795}#
                                      ($sc-dispatch #{p 3743}# '(any . any))))
                                (if #{tmp 3795}#
                                  (@apply
                                    (lambda (#{x 3798}# #{y 3799}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{cvt 3720}#
                                            #{y 3799}#
                                            #{n 3744}#
                                            #{ids 3745}#))
                                        (lambda (#{y 3800}# #{ids 3801}#)
                                          (call-with-values
                                            (lambda ()
                                              (#{cvt 3720}#
                                                #{x 3798}#
                                                #{n 3744}#
                                                #{ids 3801}#))
                                            (lambda (#{x 3804}# #{ids 3805}#)
                                              (values
                                                (cons #{x 3804}# #{y 3800}#)
                                                #{ids 3805}#))))))
                                    #{tmp 3795}#)
                                  (let ((#{tmp 3808}#
                                          ($sc-dispatch #{p 3743}# '())))
                                    (if #{tmp 3808}#
                                      (@apply
                                        (lambda () (values '() #{ids 3745}#))
                                        #{tmp 3808}#)
                                      (let ((#{tmp 3809}#
                                              ($sc-dispatch
                                                #{p 3743}#
                                                '#(vector each-any))))
                                        (if #{tmp 3809}#
                                          (@apply
                                            (lambda (#{x 3811}#)
                                              (call-with-values
                                                (lambda ()
                                                  (#{cvt 3720}#
                                                    #{x 3811}#
                                                    #{n 3744}#
                                                    #{ids 3745}#))
                                                (lambda (#{p 3813}#
                                                         #{ids 3814}#)
                                                  (values
                                                    (vector 'vector #{p 3813}#)
                                                    #{ids 3814}#))))
                                            #{tmp 3809}#)
                                          (values
                                            (vector
                                              'atom
                                              (#{strip 463}# #{p 3743}# '(())))
                                            #{ids 3745}#)))))))))))))))
               (#{cvt 3720}# #{pattern 3711}# 0 '()))))
         (#{build-dispatch-call 3706}#
           (lambda (#{pvars 3820}#
                    #{exp 3821}#
                    #{y 3822}#
                    #{r 3823}#
                    #{mod 3824}#)
             (let ((#{ids 3832}# (map car #{pvars 3820}#)))
               (begin
                 (map cdr #{pvars 3820}#)
                 (let ((#{labels 3836}#
                         (#{gen-labels 369}# #{ids 3832}#))
                       (#{new-vars 3837}#
                         (map #{gen-var 465}# #{ids 3832}#)))
                   (#{build-application 271}#
                     #f
                     (if (equal? (module-name (current-module)) '(guile))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 7)
                         #f
                         'apply)
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 5)
                         #f
                         '(guile)
                         'apply
                         #f))
                     (list (#{build-simple-lambda 289}#
                             #f
                             (map syntax->datum #{ids 3832}#)
                             #f
                             #{new-vars 3837}#
                             '()
                             (#{chi 437}#
                               #{exp 3821}#
                               (#{extend-env 337}#
                                 #{labels 3836}#
                                 (map (lambda (#{var 3841}# #{level 3842}#)
                                        (cons 'syntax
                                              (cons #{var 3841}#
                                                    #{level 3842}#)))
                                      #{new-vars 3837}#
                                      (map cdr #{pvars 3820}#))
                                 #{r 3823}#)
                               (#{make-binding-wrap 401}#
                                 #{ids 3832}#
                                 #{labels 3836}#
                                 '(()))
                               #{mod 3824}#))
                           #{y 3822}#)))))))
         (#{gen-clause 3708}#
           (lambda (#{x 3848}#
                    #{keys 3849}#
                    #{clauses 3850}#
                    #{r 3851}#
                    #{pat 3852}#
                    #{fender 3853}#
                    #{exp 3854}#
                    #{mod 3855}#)
             (call-with-values
               (lambda ()
                 (#{convert-pattern 3704}#
                   #{pat 3852}#
                   #{keys 3849}#))
               (lambda (#{p 3864}# #{pvars 3865}#)
                 (if (not (#{distinct-bound-ids? 419}#
                            (map car #{pvars 3865}#)))
                   (syntax-violation
                     'syntax-case
                     "duplicate pattern variable"
                     #{pat 3852}#)
                   (if (not (and-map
                              (lambda (#{x 3872}#)
                                (not (let ((#{x 9164}# (car #{x 3872}#)))
                                       (if (if (if (vector? #{x 9164}#)
                                                 (if (= (vector-length
                                                          #{x 9164}#)
                                                        4)
                                                   (eq? (vector-ref
                                                          #{x 9164}#
                                                          0)
                                                        'syntax-object)
                                                   #f)
                                                 #f)
                                             (symbol?
                                               (vector-ref #{x 9164}# 1))
                                             #f)
                                         (if (eq? (if (if (vector? #{x 9164}#)
                                                        (if (= (vector-length
                                                                 #{x 9164}#)
                                                               4)
                                                          (eq? (vector-ref
                                                                 #{x 9164}#
                                                                 0)
                                                               'syntax-object)
                                                          #f)
                                                        #f)
                                                    (vector-ref #{x 9164}# 1)
                                                    #{x 9164}#)
                                                  (if (if (= (vector-length
                                                               '#(syntax-object
                                                                  ...
                                                                  ((top)
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i2229"))
                                                                   #(ribcage
                                                                     (lambda-var-list
                                                                       gen-var
                                                                       strip
                                                                       chi-lambda-case
                                                                       lambda*-formals
                                                                       chi-simple-lambda
                                                                       lambda-formals
                                                                       ellipsis?
                                                                       chi-void
                                                                       eval-local-transformer
                                                                       chi-local-syntax
                                                                       chi-body
                                                                       chi-macro
                                                                       chi-application
                                                                       chi-expr
                                                                       chi
                                                                       syntax-type
                                                                       chi-when-list
                                                                       chi-install-global
                                                                       chi-top-sequence
                                                                       chi-sequence
                                                                       source-wrap
                                                                       wrap
                                                                       bound-id-member?
                                                                       distinct-bound-ids?
                                                                       valid-bound-ids?
                                                                       bound-id=?
                                                                       free-id=?
                                                                       id-var-name
                                                                       same-marks?
                                                                       join-marks
                                                                       join-wraps
                                                                       smart-append
                                                                       make-binding-wrap
                                                                       extend-ribcage!
                                                                       make-empty-ribcage
                                                                       new-mark
                                                                       anti-mark
                                                                       the-anti-mark
                                                                       top-marked?
                                                                       top-wrap
                                                                       empty-wrap
                                                                       set-ribcage-labels!
                                                                       set-ribcage-marks!
                                                                       set-ribcage-symnames!
                                                                       ribcage-labels
                                                                       ribcage-marks
                                                                       ribcage-symnames
                                                                       ribcage?
                                                                       make-ribcage
                                                                       gen-labels
                                                                       gen-label
                                                                       make-rename
                                                                       rename-marks
                                                                       rename-new
                                                                       rename-old
                                                                       subst-rename?
                                                                       wrap-subst
                                                                       wrap-marks
                                                                       make-wrap
                                                                       id-sym-name&marks
                                                                       id-sym-name
                                                                       id?
                                                                       nonsymbol-id?
                                                                       global-extend
                                                                       lookup
                                                                       macros-only-env
                                                                       extend-var-env
                                                                       extend-env
                                                                       null-env
                                                                       binding-value
                                                                       binding-type
                                                                       make-binding
                                                                       arg-check
                                                                       source-annotation
                                                                       no-source
                                                                       set-syntax-object-module!
                                                                       set-syntax-object-wrap!
                                                                       set-syntax-object-expression!
                                                                       syntax-object-module
                                                                       syntax-object-wrap
                                                                       syntax-object-expression
                                                                       syntax-object?
                                                                       make-syntax-object
                                                                       build-lexical-var
                                                                       build-letrec
                                                                       build-named-let
                                                                       build-let
                                                                       build-sequence
                                                                       build-data
                                                                       build-primref
                                                                       build-lambda-case
                                                                       build-case-lambda
                                                                       build-simple-lambda
                                                                       build-global-definition
                                                                       build-global-assignment
                                                                       build-global-reference
                                                                       analyze-variable
                                                                       build-lexical-assignment
                                                                       build-lexical-reference
                                                                       build-dynlet
                                                                       build-conditional
                                                                       build-application
                                                                       build-void
                                                                       maybe-name-value!
                                                                       decorate-source
                                                                       get-global-definition-hook
                                                                       put-global-definition-hook
                                                                       gensym-hook
                                                                       local-eval-hook
                                                                       top-level-eval-hook
                                                                       fx<
                                                                       fx=
                                                                       fx-
                                                                       fx+
                                                                       set-lambda-meta!
                                                                       lambda-meta
                                                                       lambda?
                                                                       make-dynlet
                                                                       make-letrec
                                                                       make-let
                                                                       make-lambda-case
                                                                       make-lambda
                                                                       make-sequence
                                                                       make-application
                                                                       make-conditional
                                                                       make-toplevel-define
                                                                       make-toplevel-set
                                                                       make-toplevel-ref
                                                                       make-module-set
                                                                       make-module-ref
                                                                       make-lexical-set
                                                                       make-lexical-ref
                                                                       make-primitive-ref
                                                                       make-const
                                                                       make-void)
                                                                     ((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                     ("i466"
                                                                      "i464"
                                                                      "i462"
                                                                      "i460"
                                                                      "i458"
                                                                      "i456"
                                                                      "i454"
                                                                      "i452"
                                                                      "i450"
                                                                      "i448"
                                                                      "i446"
                                                                      "i444"
                                                                      "i442"
                                                                      "i440"
                                                                      "i438"
                                                                      "i436"
                                                                      "i434"
                                                                      "i432"
                                                                      "i430"
                                                                      "i428"
                                                                      "i426"
                                                                      "i424"
                                                                      "i422"
                                                                      "i420"
                                                                      "i418"
                                                                      "i416"
                                                                      "i414"
                                                                      "i412"
                                                                      "i410"
                                                                      "i408"
                                                                      "i406"
                                                                      "i404"
                                                                      "i402"
                                                                      "i400"
                                                                      "i398"
                                                                      "i397"
                                                                      "i395"
                                                                      "i392"
                                                                      "i391"
                                                                      "i390"
                                                                      "i388"
                                                                      "i387"
                                                                      "i385"
                                                                      "i383"
                                                                      "i381"
                                                                      "i379"
                                                                      "i377"
                                                                      "i375"
                                                                      "i373"
                                                                      "i371"
                                                                      "i368"
                                                                      "i366"
                                                                      "i365"
                                                                      "i363"
                                                                      "i361"
                                                                      "i359"
                                                                      "i357"
                                                                      "i356"
                                                                      "i355"
                                                                      "i354"
                                                                      "i352"
                                                                      "i351"
                                                                      "i348"
                                                                      "i346"
                                                                      "i344"
                                                                      "i342"
                                                                      "i340"
                                                                      "i338"
                                                                      "i336"
                                                                      "i335"
                                                                      "i334"
                                                                      "i332"
                                                                      "i330"
                                                                      "i329"
                                                                      "i326"
                                                                      "i325"
                                                                      "i323"
                                                                      "i321"
                                                                      "i319"
                                                                      "i317"
                                                                      "i315"
                                                                      "i313"
                                                                      "i311"
                                                                      "i309"
                                                                      "i307"
                                                                      "i304"
                                                                      "i302"
                                                                      "i300"
                                                                      "i298"
                                                                      "i296"
                                                                      "i294"
                                                                      "i292"
                                                                      "i290"
                                                                      "i288"
                                                                      "i286"
                                                                      "i284"
                                                                      "i282"
                                                                      "i280"
                                                                      "i278"
                                                                      "i276"
                                                                      "i274"
                                                                      "i272"
                                                                      "i270"
                                                                      "i268"
                                                                      "i266"
                                                                      "i264"
                                                                      "i262"
                                                                      "i260"
                                                                      "i259"
                                                                      "i256"
                                                                      "i254"
                                                                      "i253"
                                                                      "i252"
                                                                      "i251"
                                                                      "i250"
                                                                      "i248"
                                                                      "i246"
                                                                      "i244"
                                                                      "i241"
                                                                      "i239"
                                                                      "i237"
                                                                      "i235"
                                                                      "i233"
                                                                      "i231"
                                                                      "i229"
                                                                      "i227"
                                                                      "i225"
                                                                      "i223"
                                                                      "i221"
                                                                      "i219"
                                                                      "i217"
                                                                      "i215"
                                                                      "i213"
                                                                      "i211"
                                                                      "i209"
                                                                      "i207"))
                                                                   #(ribcage
                                                                     (define-structure
                                                                       define-expansion-accessors
                                                                       define-expansion-constructors)
                                                                     ((top)
                                                                      (top)
                                                                      (top))
                                                                     ("i45"
                                                                      "i44"
                                                                      "i43")))
                                                                  (hygiene
                                                                    guile)))
                                                             4)
                                                        (eq? (vector-ref
                                                               '#(syntax-object
                                                                  ...
                                                                  ((top)
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i2229"))
                                                                   #(ribcage
                                                                     (lambda-var-list
                                                                       gen-var
                                                                       strip
                                                                       chi-lambda-case
                                                                       lambda*-formals
                                                                       chi-simple-lambda
                                                                       lambda-formals
                                                                       ellipsis?
                                                                       chi-void
                                                                       eval-local-transformer
                                                                       chi-local-syntax
                                                                       chi-body
                                                                       chi-macro
                                                                       chi-application
                                                                       chi-expr
                                                                       chi
                                                                       syntax-type
                                                                       chi-when-list
                                                                       chi-install-global
                                                                       chi-top-sequence
                                                                       chi-sequence
                                                                       source-wrap
                                                                       wrap
                                                                       bound-id-member?
                                                                       distinct-bound-ids?
                                                                       valid-bound-ids?
                                                                       bound-id=?
                                                                       free-id=?
                                                                       id-var-name
                                                                       same-marks?
                                                                       join-marks
                                                                       join-wraps
                                                                       smart-append
                                                                       make-binding-wrap
                                                                       extend-ribcage!
                                                                       make-empty-ribcage
                                                                       new-mark
                                                                       anti-mark
                                                                       the-anti-mark
                                                                       top-marked?
                                                                       top-wrap
                                                                       empty-wrap
                                                                       set-ribcage-labels!
                                                                       set-ribcage-marks!
                                                                       set-ribcage-symnames!
                                                                       ribcage-labels
                                                                       ribcage-marks
                                                                       ribcage-symnames
                                                                       ribcage?
                                                                       make-ribcage
                                                                       gen-labels
                                                                       gen-label
                                                                       make-rename
                                                                       rename-marks
                                                                       rename-new
                                                                       rename-old
                                                                       subst-rename?
                                                                       wrap-subst
                                                                       wrap-marks
                                                                       make-wrap
                                                                       id-sym-name&marks
                                                                       id-sym-name
                                                                       id?
                                                                       nonsymbol-id?
                                                                       global-extend
                                                                       lookup
                                                                       macros-only-env
                                                                       extend-var-env
                                                                       extend-env
                                                                       null-env
                                                                       binding-value
                                                                       binding-type
                                                                       make-binding
                                                                       arg-check
                                                                       source-annotation
                                                                       no-source
                                                                       set-syntax-object-module!
                                                                       set-syntax-object-wrap!
                                                                       set-syntax-object-expression!
                                                                       syntax-object-module
                                                                       syntax-object-wrap
                                                                       syntax-object-expression
                                                                       syntax-object?
                                                                       make-syntax-object
                                                                       build-lexical-var
                                                                       build-letrec
                                                                       build-named-let
                                                                       build-let
                                                                       build-sequence
                                                                       build-data
                                                                       build-primref
                                                                       build-lambda-case
                                                                       build-case-lambda
                                                                       build-simple-lambda
                                                                       build-global-definition
                                                                       build-global-assignment
                                                                       build-global-reference
                                                                       analyze-variable
                                                                       build-lexical-assignment
                                                                       build-lexical-reference
                                                                       build-dynlet
                                                                       build-conditional
                                                                       build-application
                                                                       build-void
                                                                       maybe-name-value!
                                                                       decorate-source
                                                                       get-global-definition-hook
                                                                       put-global-definition-hook
                                                                       gensym-hook
                                                                       local-eval-hook
                                                                       top-level-eval-hook
                                                                       fx<
                                                                       fx=
                                                                       fx-
                                                                       fx+
                                                                       set-lambda-meta!
                                                                       lambda-meta
                                                                       lambda?
                                                                       make-dynlet
                                                                       make-letrec
                                                                       make-let
                                                                       make-lambda-case
                                                                       make-lambda
                                                                       make-sequence
                                                                       make-application
                                                                       make-conditional
                                                                       make-toplevel-define
                                                                       make-toplevel-set
                                                                       make-toplevel-ref
                                                                       make-module-set
                                                                       make-module-ref
                                                                       make-lexical-set
                                                                       make-lexical-ref
                                                                       make-primitive-ref
                                                                       make-const
                                                                       make-void)
                                                                     ((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                     ("i466"
                                                                      "i464"
                                                                      "i462"
                                                                      "i460"
                                                                      "i458"
                                                                      "i456"
                                                                      "i454"
                                                                      "i452"
                                                                      "i450"
                                                                      "i448"
                                                                      "i446"
                                                                      "i444"
                                                                      "i442"
                                                                      "i440"
                                                                      "i438"
                                                                      "i436"
                                                                      "i434"
                                                                      "i432"
                                                                      "i430"
                                                                      "i428"
                                                                      "i426"
                                                                      "i424"
                                                                      "i422"
                                                                      "i420"
                                                                      "i418"
                                                                      "i416"
                                                                      "i414"
                                                                      "i412"
                                                                      "i410"
                                                                      "i408"
                                                                      "i406"
                                                                      "i404"
                                                                      "i402"
                                                                      "i400"
                                                                      "i398"
                                                                      "i397"
                                                                      "i395"
                                                                      "i392"
                                                                      "i391"
                                                                      "i390"
                                                                      "i388"
                                                                      "i387"
                                                                      "i385"
                                                                      "i383"
                                                                      "i381"
                                                                      "i379"
                                                                      "i377"
                                                                      "i375"
                                                                      "i373"
                                                                      "i371"
                                                                      "i368"
                                                                      "i366"
                                                                      "i365"
                                                                      "i363"
                                                                      "i361"
                                                                      "i359"
                                                                      "i357"
                                                                      "i356"
                                                                      "i355"
                                                                      "i354"
                                                                      "i352"
                                                                      "i351"
                                                                      "i348"
                                                                      "i346"
                                                                      "i344"
                                                                      "i342"
                                                                      "i340"
                                                                      "i338"
                                                                      "i336"
                                                                      "i335"
                                                                      "i334"
                                                                      "i332"
                                                                      "i330"
                                                                      "i329"
                                                                      "i326"
                                                                      "i325"
                                                                      "i323"
                                                                      "i321"
                                                                      "i319"
                                                                      "i317"
                                                                      "i315"
                                                                      "i313"
                                                                      "i311"
                                                                      "i309"
                                                                      "i307"
                                                                      "i304"
                                                                      "i302"
                                                                      "i300"
                                                                      "i298"
                                                                      "i296"
                                                                      "i294"
                                                                      "i292"
                                                                      "i290"
                                                                      "i288"
                                                                      "i286"
                                                                      "i284"
                                                                      "i282"
                                                                      "i280"
                                                                      "i278"
                                                                      "i276"
                                                                      "i274"
                                                                      "i272"
                                                                      "i270"
                                                                      "i268"
                                                                      "i266"
                                                                      "i264"
                                                                      "i262"
                                                                      "i260"
                                                                      "i259"
                                                                      "i256"
                                                                      "i254"
                                                                      "i253"
                                                                      "i252"
                                                                      "i251"
                                                                      "i250"
                                                                      "i248"
                                                                      "i246"
                                                                      "i244"
                                                                      "i241"
                                                                      "i239"
                                                                      "i237"
                                                                      "i235"
                                                                      "i233"
                                                                      "i231"
                                                                      "i229"
                                                                      "i227"
                                                                      "i225"
                                                                      "i223"
                                                                      "i221"
                                                                      "i219"
                                                                      "i217"
                                                                      "i215"
                                                                      "i213"
                                                                      "i211"
                                                                      "i209"
                                                                      "i207"))
                                                                   #(ribcage
                                                                     (define-structure
                                                                       define-expansion-accessors
                                                                       define-expansion-constructors)
                                                                     ((top)
                                                                      (top)
                                                                      (top))
                                                                     ("i45"
                                                                      "i44"
                                                                      "i43")))
                                                                  (hygiene
                                                                    guile))
                                                               0)
                                                             'syntax-object)
                                                        #f)
                                                    (vector-ref
                                                      '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i2229"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i466"
                                                             "i464"
                                                             "i462"
                                                             "i460"
                                                             "i458"
                                                             "i456"
                                                             "i454"
                                                             "i452"
                                                             "i450"
                                                             "i448"
                                                             "i446"
                                                             "i444"
                                                             "i442"
                                                             "i440"
                                                             "i438"
                                                             "i436"
                                                             "i434"
                                                             "i432"
                                                             "i430"
                                                             "i428"
                                                             "i426"
                                                             "i424"
                                                             "i422"
                                                             "i420"
                                                             "i418"
                                                             "i416"
                                                             "i414"
                                                             "i412"
                                                             "i410"
                                                             "i408"
                                                             "i406"
                                                             "i404"
                                                             "i402"
                                                             "i400"
                                                             "i398"
                                                             "i397"
                                                             "i395"
                                                             "i392"
                                                             "i391"
                                                             "i390"
                                                             "i388"
                                                             "i387"
                                                             "i385"
                                                             "i383"
                                                             "i381"
                                                             "i379"
                                                             "i377"
                                                             "i375"
                                                             "i373"
                                                             "i371"
                                                             "i368"
                                                             "i366"
                                                             "i365"
                                                             "i363"
                                                             "i361"
                                                             "i359"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i354"
                                                             "i352"
                                                             "i351"
                                                             "i348"
                                                             "i346"
                                                             "i344"
                                                             "i342"
                                                             "i340"
                                                             "i338"
                                                             "i336"
                                                             "i335"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i329"
                                                             "i326"
                                                             "i325"
                                                             "i323"
                                                             "i321"
                                                             "i319"
                                                             "i317"
                                                             "i315"
                                                             "i313"
                                                             "i311"
                                                             "i309"
                                                             "i307"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i288"
                                                             "i286"
                                                             "i284"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i264"
                                                             "i262"
                                                             "i260"
                                                             "i259"
                                                             "i256"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i241"
                                                             "i239"
                                                             "i237"
                                                             "i235"
                                                             "i233"
                                                             "i231"
                                                             "i229"
                                                             "i227"
                                                             "i225"
                                                             "i223"
                                                             "i221"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i45"
                                                             "i44"
                                                             "i43")))
                                                         (hygiene guile))
                                                      1)
                                                    '#(syntax-object
                                                       ...
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i2229"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            maybe-name-value!
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            set-lambda-meta!
                                                            lambda-meta
                                                            lambda?
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i466"
                                                           "i464"
                                                           "i462"
                                                           "i460"
                                                           "i458"
                                                           "i456"
                                                           "i454"
                                                           "i452"
                                                           "i450"
                                                           "i448"
                                                           "i446"
                                                           "i444"
                                                           "i442"
                                                           "i440"
                                                           "i438"
                                                           "i436"
                                                           "i434"
                                                           "i432"
                                                           "i430"
                                                           "i428"
                                                           "i426"
                                                           "i424"
                                                           "i422"
                                                           "i420"
                                                           "i418"
                                                           "i416"
                                                           "i414"
                                                           "i412"
                                                           "i410"
                                                           "i408"
                                                           "i406"
                                                           "i404"
                                                           "i402"
                                                           "i400"
                                                           "i398"
                                                           "i397"
                                                           "i395"
                                                           "i392"
                                                           "i391"
                                                           "i390"
                                                           "i388"
                                                           "i387"
                                                           "i385"
                                                           "i383"
                                                           "i381"
                                                           "i379"
                                                           "i377"
                                                           "i375"
                                                           "i373"
                                                           "i371"
                                                           "i368"
                                                           "i366"
                                                           "i365"
                                                           "i363"
                                                           "i361"
                                                           "i359"
                                                           "i357"
                                                           "i356"
                                                           "i355"
                                                           "i354"
                                                           "i352"
                                                           "i351"
                                                           "i348"
                                                           "i346"
                                                           "i344"
                                                           "i342"
                                                           "i340"
                                                           "i338"
                                                           "i336"
                                                           "i335"
                                                           "i334"
                                                           "i332"
                                                           "i330"
                                                           "i329"
                                                           "i326"
                                                           "i325"
                                                           "i323"
                                                           "i321"
                                                           "i319"
                                                           "i317"
                                                           "i315"
                                                           "i313"
                                                           "i311"
                                                           "i309"
                                                           "i307"
                                                           "i304"
                                                           "i302"
                                                           "i300"
                                                           "i298"
                                                           "i296"
                                                           "i294"
                                                           "i292"
                                                           "i290"
                                                           "i288"
                                                           "i286"
                                                           "i284"
                                                           "i282"
                                                           "i280"
                                                           "i278"
                                                           "i276"
                                                           "i274"
                                                           "i272"
                                                           "i270"
                                                           "i268"
                                                           "i266"
                                                           "i264"
                                                           "i262"
                                                           "i260"
                                                           "i259"
                                                           "i256"
                                                           "i254"
                                                           "i253"
                                                           "i252"
                                                           "i251"
                                                           "i250"
                                                           "i248"
                                                           "i246"
                                                           "i244"
                                                           "i241"
                                                           "i239"
                                                           "i237"
                                                           "i235"
                                                           "i233"
                                                           "i231"
                                                           "i229"
                                                           "i227"
                                                           "i225"
                                                           "i223"
                                                           "i221"
                                                           "i219"
                                                           "i217"
                                                           "i215"
                                                           "i213"
                                                           "i211"
                                                           "i209"
                                                           "i207"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-accessors
                                                            define-expansion-constructors)
                                                          ((top) (top) (top))
                                                          ("i45" "i44" "i43")))
                                                       (hygiene guile))))
                                           (eq? (#{id-var-name 411}#
                                                  #{x 9164}#
                                                  '(()))
                                                (#{id-var-name 411}#
                                                  '#(syntax-object
                                                     ...
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i2229"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i466"
                                                         "i464"
                                                         "i462"
                                                         "i460"
                                                         "i458"
                                                         "i456"
                                                         "i454"
                                                         "i452"
                                                         "i450"
                                                         "i448"
                                                         "i446"
                                                         "i444"
                                                         "i442"
                                                         "i440"
                                                         "i438"
                                                         "i436"
                                                         "i434"
                                                         "i432"
                                                         "i430"
                                                         "i428"
                                                         "i426"
                                                         "i424"
                                                         "i422"
                                                         "i420"
                                                         "i418"
                                                         "i416"
                                                         "i414"
                                                         "i412"
                                                         "i410"
                                                         "i408"
                                                         "i406"
                                                         "i404"
                                                         "i402"
                                                         "i400"
                                                         "i398"
                                                         "i397"
                                                         "i395"
                                                         "i392"
                                                         "i391"
                                                         "i390"
                                                         "i388"
                                                         "i387"
                                                         "i385"
                                                         "i383"
                                                         "i381"
                                                         "i379"
                                                         "i377"
                                                         "i375"
                                                         "i373"
                                                         "i371"
                                                         "i368"
                                                         "i366"
                                                         "i365"
                                                         "i363"
                                                         "i361"
                                                         "i359"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i354"
                                                         "i352"
                                                         "i351"
                                                         "i348"
                                                         "i346"
                                                         "i344"
                                                         "i342"
                                                         "i340"
                                                         "i338"
                                                         "i336"
                                                         "i335"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i329"
                                                         "i326"
                                                         "i325"
                                                         "i323"
                                                         "i321"
                                                         "i319"
                                                         "i317"
                                                         "i315"
                                                         "i313"
                                                         "i311"
                                                         "i309"
                                                         "i307"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i288"
                                                         "i286"
                                                         "i284"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i264"
                                                         "i262"
                                                         "i260"
                                                         "i259"
                                                         "i256"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i241"
                                                         "i239"
                                                         "i237"
                                                         "i235"
                                                         "i233"
                                                         "i231"
                                                         "i229"
                                                         "i227"
                                                         "i225"
                                                         "i223"
                                                         "i221"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i45" "i44" "i43")))
                                                     (hygiene guile))
                                                  '(())))
                                           #f)
                                         #f))))
                              #{pvars 3865}#))
                     (syntax-violation
                       'syntax-case
                       "misplaced ellipsis"
                       #{pat 3852}#)
                     (let ((#{y 3876}#
                             (gensym
                               (string-append (symbol->string 'tmp) " "))))
                       (let ((#{fun-exp 9204}#
                               (let ((#{req 9209}# (list 'tmp))
                                     (#{vars 9211}# (list #{y 3876}#))
                                     (#{exp 9213}#
                                       (let ((#{y 3880}#
                                               (make-struct/no-tail
                                                 (vector-ref
                                                   %expanded-vtables
                                                   3)
                                                 #f
                                                 'tmp
                                                 #{y 3876}#)))
                                         (let ((#{test-exp 9228}#
                                                 (let ((#{tmp 3884}#
                                                         ($sc-dispatch
                                                           #{fender 3853}#
                                                           '#(atom #t))))
                                                   (if #{tmp 3884}#
                                                     (@apply
                                                       (lambda () #{y 3880}#)
                                                       #{tmp 3884}#)
                                                     (let ((#{then-exp 9235}#
                                                             (#{build-dispatch-call 3706}#
                                                               #{pvars 3865}#
                                                               #{fender 3853}#
                                                               #{y 3880}#
                                                               #{r 3851}#
                                                               #{mod 3855}#))
                                                           (#{else-exp 9236}#
                                                             (make-struct/no-tail
                                                               (vector-ref
                                                                 %expanded-vtables
                                                                 1)
                                                               #f
                                                               #f)))
                                                       (make-struct/no-tail
                                                         (vector-ref
                                                           %expanded-vtables
                                                           10)
                                                         #f
                                                         #{y 3880}#
                                                         #{then-exp 9235}#
                                                         #{else-exp 9236}#)))))
                                               (#{then-exp 9229}#
                                                 (#{build-dispatch-call 3706}#
                                                   #{pvars 3865}#
                                                   #{exp 3854}#
                                                   #{y 3880}#
                                                   #{r 3851}#
                                                   #{mod 3855}#))
                                               (#{else-exp 9230}#
                                                 (#{gen-syntax-case 3710}#
                                                   #{x 3848}#
                                                   #{keys 3849}#
                                                   #{clauses 3850}#
                                                   #{r 3851}#
                                                   #{mod 3855}#)))
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 10)
                                             #f
                                             #{test-exp 9228}#
                                             #{then-exp 9229}#
                                             #{else-exp 9230}#)))))
                                 (let ((#{body 9261}#
                                         (make-struct/no-tail
                                           (vector-ref %expanded-vtables 14)
                                           #f
                                           #{req 9209}#
                                           #f
                                           #f
                                           #f
                                           '()
                                           #{vars 9211}#
                                           #{exp 9213}#
                                           #f)))
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 13)
                                     #f
                                     '()
                                     #{body 9261}#))))
                             (#{arg-exps 9205}#
                               (list (if (eq? #{p 3864}# 'any)
                                       (let ((#{fun-exp 9276}#
                                               (if (equal?
                                                     (module-name
                                                       (current-module))
                                                     '(guile))
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     7)
                                                   #f
                                                   'list)
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     5)
                                                   #f
                                                   '(guile)
                                                   'list
                                                   #f)))
                                             (#{arg-exps 9277}#
                                               (list #{x 3848}#)))
                                         (make-struct/no-tail
                                           (vector-ref %expanded-vtables 11)
                                           #f
                                           #{fun-exp 9276}#
                                           #{arg-exps 9277}#))
                                       (let ((#{fun-exp 9299}#
                                               (if (equal?
                                                     (module-name
                                                       (current-module))
                                                     '(guile))
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     7)
                                                   #f
                                                   '$sc-dispatch)
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     5)
                                                   #f
                                                   '(guile)
                                                   '$sc-dispatch
                                                   #f)))
                                             (#{arg-exps 9300}#
                                               (list #{x 3848}#
                                                     (make-struct/no-tail
                                                       (vector-ref
                                                         %expanded-vtables
                                                         1)
                                                       #f
                                                       #{p 3864}#))))
                                         (make-struct/no-tail
                                           (vector-ref %expanded-vtables 11)
                                           #f
                                           #{fun-exp 9299}#
                                           #{arg-exps 9300}#))))))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 11)
                           #f
                           #{fun-exp 9204}#
                           #{arg-exps 9205}#)))))))))
         (#{gen-syntax-case 3710}#
           (lambda (#{x 3894}#
                    #{keys 3895}#
                    #{clauses 3896}#
                    #{r 3897}#
                    #{mod 3898}#)
             (if (null? #{clauses 3896}#)
               (let ((#{fun-exp 9335}#
                       (if (equal? (module-name (current-module)) '(guile))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 7)
                           #f
                           'syntax-violation)
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 5)
                           #f
                           '(guile)
                           'syntax-violation
                           #f)))
                     (#{arg-exps 9336}#
                       (list (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               #f)
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               "source expression failed to match any pattern")
                             #{x 3894}#)))
                 (make-struct/no-tail
                   (vector-ref %expanded-vtables 11)
                   #f
                   #{fun-exp 9335}#
                   #{arg-exps 9336}#))
               (let ((#{tmp 3908}# (car #{clauses 3896}#)))
                 (let ((#{tmp 3909}#
                         ($sc-dispatch #{tmp 3908}# '(any any))))
                   (if #{tmp 3909}#
                     (@apply
                       (lambda (#{pat 3912}# #{exp 3913}#)
                         (if (if (if (symbol? #{pat 3912}#)
                                   #t
                                   (if (if (vector? #{pat 3912}#)
                                         (if (= (vector-length #{pat 3912}#) 4)
                                           (eq? (vector-ref #{pat 3912}# 0)
                                                'syntax-object)
                                           #f)
                                         #f)
                                     (symbol? (vector-ref #{pat 3912}# 1))
                                     #f))
                               (and-map
                                 (lambda (#{x 3916}#)
                                   (not (if (eq? (if (if (vector? #{pat 3912}#)
                                                       (if (= (vector-length
                                                                #{pat 3912}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{pat 3912}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref #{pat 3912}# 1)
                                                   #{pat 3912}#)
                                                 (if (if (vector? #{x 3916}#)
                                                       (if (= (vector-length
                                                                #{x 3916}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{x 3916}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref #{x 3916}# 1)
                                                   #{x 3916}#))
                                          (eq? (#{id-var-name 411}#
                                                 #{pat 3912}#
                                                 '(()))
                                               (#{id-var-name 411}#
                                                 #{x 3916}#
                                                 '(())))
                                          #f)))
                                 (cons '#(syntax-object
                                          ...
                                          ((top)
                                           #(ribcage
                                             #(pat exp)
                                             #((top) (top))
                                             #("i3910" "i3911"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x keys clauses r mod)
                                             #((top) (top) (top) (top) (top))
                                             #("i3899"
                                               "i3900"
                                               "i3901"
                                               "i3902"
                                               "i3903"))
                                           #(ribcage
                                             (gen-syntax-case
                                               gen-clause
                                               build-dispatch-call
                                               convert-pattern)
                                             ((top) (top) (top) (top))
                                             ("i3709" "i3707" "i3705" "i3703"))
                                           #(ribcage
                                             (lambda-var-list
                                               gen-var
                                               strip
                                               chi-lambda-case
                                               lambda*-formals
                                               chi-simple-lambda
                                               lambda-formals
                                               ellipsis?
                                               chi-void
                                               eval-local-transformer
                                               chi-local-syntax
                                               chi-body
                                               chi-macro
                                               chi-application
                                               chi-expr
                                               chi
                                               syntax-type
                                               chi-when-list
                                               chi-install-global
                                               chi-top-sequence
                                               chi-sequence
                                               source-wrap
                                               wrap
                                               bound-id-member?
                                               distinct-bound-ids?
                                               valid-bound-ids?
                                               bound-id=?
                                               free-id=?
                                               id-var-name
                                               same-marks?
                                               join-marks
                                               join-wraps
                                               smart-append
                                               make-binding-wrap
                                               extend-ribcage!
                                               make-empty-ribcage
                                               new-mark
                                               anti-mark
                                               the-anti-mark
                                               top-marked?
                                               top-wrap
                                               empty-wrap
                                               set-ribcage-labels!
                                               set-ribcage-marks!
                                               set-ribcage-symnames!
                                               ribcage-labels
                                               ribcage-marks
                                               ribcage-symnames
                                               ribcage?
                                               make-ribcage
                                               gen-labels
                                               gen-label
                                               make-rename
                                               rename-marks
                                               rename-new
                                               rename-old
                                               subst-rename?
                                               wrap-subst
                                               wrap-marks
                                               make-wrap
                                               id-sym-name&marks
                                               id-sym-name
                                               id?
                                               nonsymbol-id?
                                               global-extend
                                               lookup
                                               macros-only-env
                                               extend-var-env
                                               extend-env
                                               null-env
                                               binding-value
                                               binding-type
                                               make-binding
                                               arg-check
                                               source-annotation
                                               no-source
                                               set-syntax-object-module!
                                               set-syntax-object-wrap!
                                               set-syntax-object-expression!
                                               syntax-object-module
                                               syntax-object-wrap
                                               syntax-object-expression
                                               syntax-object?
                                               make-syntax-object
                                               build-lexical-var
                                               build-letrec
                                               build-named-let
                                               build-let
                                               build-sequence
                                               build-data
                                               build-primref
                                               build-lambda-case
                                               build-case-lambda
                                               build-simple-lambda
                                               build-global-definition
                                               build-global-assignment
                                               build-global-reference
                                               analyze-variable
                                               build-lexical-assignment
                                               build-lexical-reference
                                               build-dynlet
                                               build-conditional
                                               build-application
                                               build-void
                                               maybe-name-value!
                                               decorate-source
                                               get-global-definition-hook
                                               put-global-definition-hook
                                               gensym-hook
                                               local-eval-hook
                                               top-level-eval-hook
                                               fx<
                                               fx=
                                               fx-
                                               fx+
                                               set-lambda-meta!
                                               lambda-meta
                                               lambda?
                                               make-dynlet
                                               make-letrec
                                               make-let
                                               make-lambda-case
                                               make-lambda
                                               make-sequence
                                               make-application
                                               make-conditional
                                               make-toplevel-define
                                               make-toplevel-set
                                               make-toplevel-ref
                                               make-module-set
                                               make-module-ref
                                               make-lexical-set
                                               make-lexical-ref
                                               make-primitive-ref
                                               make-const
                                               make-void)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i466"
                                              "i464"
                                              "i462"
                                              "i460"
                                              "i458"
                                              "i456"
                                              "i454"
                                              "i452"
                                              "i450"
                                              "i448"
                                              "i446"
                                              "i444"
                                              "i442"
                                              "i440"
                                              "i438"
                                              "i436"
                                              "i434"
                                              "i432"
                                              "i430"
                                              "i428"
                                              "i426"
                                              "i424"
                                              "i422"
                                              "i420"
                                              "i418"
                                              "i416"
                                              "i414"
                                              "i412"
                                              "i410"
                                              "i408"
                                              "i406"
                                              "i404"
                                              "i402"
                                              "i400"
                                              "i398"
                                              "i397"
                                              "i395"
                                              "i392"
                                              "i391"
                                              "i390"
                                              "i388"
                                              "i387"
                                              "i385"
                                              "i383"
                                              "i381"
                                              "i379"
                                              "i377"
                                              "i375"
                                              "i373"
                                              "i371"
                                              "i368"
                                              "i366"
                                              "i365"
                                              "i363"
                                              "i361"
                                              "i359"
                                              "i357"
                                              "i356"
                                              "i355"
                                              "i354"
                                              "i352"
                                              "i351"
                                              "i348"
                                              "i346"
                                              "i344"
                                              "i342"
                                              "i340"
                                              "i338"
                                              "i336"
                                              "i335"
                                              "i334"
                                              "i332"
                                              "i330"
                                              "i329"
                                              "i326"
                                              "i325"
                                              "i323"
                                              "i321"
                                              "i319"
                                              "i317"
                                              "i315"
                                              "i313"
                                              "i311"
                                              "i309"
                                              "i307"
                                              "i304"
                                              "i302"
                                              "i300"
                                              "i298"
                                              "i296"
                                              "i294"
                                              "i292"
                                              "i290"
                                              "i288"
                                              "i286"
                                              "i284"
                                              "i282"
                                              "i280"
                                              "i278"
                                              "i276"
                                              "i274"
                                              "i272"
                                              "i270"
                                              "i268"
                                              "i266"
                                              "i264"
                                              "i262"
                                              "i260"
                                              "i259"
                                              "i256"
                                              "i254"
                                              "i253"
                                              "i252"
                                              "i251"
                                              "i250"
                                              "i248"
                                              "i246"
                                              "i244"
                                              "i241"
                                              "i239"
                                              "i237"
                                              "i235"
                                              "i233"
                                              "i231"
                                              "i229"
                                              "i227"
                                              "i225"
                                              "i223"
                                              "i221"
                                              "i219"
                                              "i217"
                                              "i215"
                                              "i213"
                                              "i211"
                                              "i209"
                                              "i207"))
                                           #(ribcage
                                             (define-structure
                                               define-expansion-accessors
                                               define-expansion-constructors)
                                             ((top) (top) (top))
                                             ("i45" "i44" "i43")))
                                          (hygiene guile))
                                       #{keys 3895}#))
                               #f)
                           (if (if (eq? (if (if (= (vector-length
                                                     '#(syntax-object
                                                        pad
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3910" "i3911"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3899"
                                                             "i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3709"
                                                            "i3707"
                                                            "i3705"
                                                            "i3703"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i466"
                                                            "i464"
                                                            "i462"
                                                            "i460"
                                                            "i458"
                                                            "i456"
                                                            "i454"
                                                            "i452"
                                                            "i450"
                                                            "i448"
                                                            "i446"
                                                            "i444"
                                                            "i442"
                                                            "i440"
                                                            "i438"
                                                            "i436"
                                                            "i434"
                                                            "i432"
                                                            "i430"
                                                            "i428"
                                                            "i426"
                                                            "i424"
                                                            "i422"
                                                            "i420"
                                                            "i418"
                                                            "i416"
                                                            "i414"
                                                            "i412"
                                                            "i410"
                                                            "i408"
                                                            "i406"
                                                            "i404"
                                                            "i402"
                                                            "i400"
                                                            "i398"
                                                            "i397"
                                                            "i395"
                                                            "i392"
                                                            "i391"
                                                            "i390"
                                                            "i388"
                                                            "i387"
                                                            "i385"
                                                            "i383"
                                                            "i381"
                                                            "i379"
                                                            "i377"
                                                            "i375"
                                                            "i373"
                                                            "i371"
                                                            "i368"
                                                            "i366"
                                                            "i365"
                                                            "i363"
                                                            "i361"
                                                            "i359"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i354"
                                                            "i352"
                                                            "i351"
                                                            "i348"
                                                            "i346"
                                                            "i344"
                                                            "i342"
                                                            "i340"
                                                            "i338"
                                                            "i336"
                                                            "i335"
                                                            "i334"
                                                            "i332"
                                                            "i330"
                                                            "i329"
                                                            "i326"
                                                            "i325"
                                                            "i323"
                                                            "i321"
                                                            "i319"
                                                            "i317"
                                                            "i315"
                                                            "i313"
                                                            "i311"
                                                            "i309"
                                                            "i307"
                                                            "i304"
                                                            "i302"
                                                            "i300"
                                                            "i298"
                                                            "i296"
                                                            "i294"
                                                            "i292"
                                                            "i290"
                                                            "i288"
                                                            "i286"
                                                            "i284"
                                                            "i282"
                                                            "i280"
                                                            "i278"
                                                            "i276"
                                                            "i274"
                                                            "i272"
                                                            "i270"
                                                            "i268"
                                                            "i266"
                                                            "i264"
                                                            "i262"
                                                            "i260"
                                                            "i259"
                                                            "i256"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i250"
                                                            "i248"
                                                            "i246"
                                                            "i244"
                                                            "i241"
                                                            "i239"
                                                            "i237"
                                                            "i235"
                                                            "i233"
                                                            "i231"
                                                            "i229"
                                                            "i227"
                                                            "i225"
                                                            "i223"
                                                            "i221"
                                                            "i219"
                                                            "i217"
                                                            "i215"
                                                            "i213"
                                                            "i211"
                                                            "i209"
                                                            "i207"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i45"
                                                            "i44"
                                                            "i43")))
                                                        (hygiene guile)))
                                                   4)
                                              (eq? (vector-ref
                                                     '#(syntax-object
                                                        pad
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3910" "i3911"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3899"
                                                             "i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3709"
                                                            "i3707"
                                                            "i3705"
                                                            "i3703"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i466"
                                                            "i464"
                                                            "i462"
                                                            "i460"
                                                            "i458"
                                                            "i456"
                                                            "i454"
                                                            "i452"
                                                            "i450"
                                                            "i448"
                                                            "i446"
                                                            "i444"
                                                            "i442"
                                                            "i440"
                                                            "i438"
                                                            "i436"
                                                            "i434"
                                                            "i432"
                                                            "i430"
                                                            "i428"
                                                            "i426"
                                                            "i424"
                                                            "i422"
                                                            "i420"
                                                            "i418"
                                                            "i416"
                                                            "i414"
                                                            "i412"
                                                            "i410"
                                                            "i408"
                                                            "i406"
                                                            "i404"
                                                            "i402"
                                                            "i400"
                                                            "i398"
                                                            "i397"
                                                            "i395"
                                                            "i392"
                                                            "i391"
                                                            "i390"
                                                            "i388"
                                                            "i387"
                                                            "i385"
                                                            "i383"
                                                            "i381"
                                                            "i379"
                                                            "i377"
                                                            "i375"
                                                            "i373"
                                                            "i371"
                                                            "i368"
                                                            "i366"
                                                            "i365"
                                                            "i363"
                                                            "i361"
                                                            "i359"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i354"
                                                            "i352"
                                                            "i351"
                                                            "i348"
                                                            "i346"
                                                            "i344"
                                                            "i342"
                                                            "i340"
                                                            "i338"
                                                            "i336"
                                                            "i335"
                                                            "i334"
                                                            "i332"
                                                            "i330"
                                                            "i329"
                                                            "i326"
                                                            "i325"
                                                            "i323"
                                                            "i321"
                                                            "i319"
                                                            "i317"
                                                            "i315"
                                                            "i313"
                                                            "i311"
                                                            "i309"
                                                            "i307"
                                                            "i304"
                                                            "i302"
                                                            "i300"
                                                            "i298"
                                                            "i296"
                                                            "i294"
                                                            "i292"
                                                            "i290"
                                                            "i288"
                                                            "i286"
                                                            "i284"
                                                            "i282"
                                                            "i280"
                                                            "i278"
                                                            "i276"
                                                            "i274"
                                                            "i272"
                                                            "i270"
                                                            "i268"
                                                            "i266"
                                                            "i264"
                                                            "i262"
                                                            "i260"
                                                            "i259"
                                                            "i256"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i250"
                                                            "i248"
                                                            "i246"
                                                            "i244"
                                                            "i241"
                                                            "i239"
                                                            "i237"
                                                            "i235"
                                                            "i233"
                                                            "i231"
                                                            "i229"
                                                            "i227"
                                                            "i225"
                                                            "i223"
                                                            "i221"
                                                            "i219"
                                                            "i217"
                                                            "i215"
                                                            "i213"
                                                            "i211"
                                                            "i209"
                                                            "i207"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i45"
                                                            "i44"
                                                            "i43")))
                                                        (hygiene guile))
                                                     0)
                                                   'syntax-object)
                                              #f)
                                          (vector-ref
                                            '#(syntax-object
                                               pad
                                               ((top)
                                                #(ribcage
                                                  #(pat exp)
                                                  #((top) (top))
                                                  #("i3910" "i3911"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(x keys clauses r mod)
                                                  #((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                  #("i3899"
                                                    "i3900"
                                                    "i3901"
                                                    "i3902"
                                                    "i3903"))
                                                #(ribcage
                                                  (gen-syntax-case
                                                    gen-clause
                                                    build-dispatch-call
                                                    convert-pattern)
                                                  ((top) (top) (top) (top))
                                                  ("i3709"
                                                   "i3707"
                                                   "i3705"
                                                   "i3703"))
                                                #(ribcage
                                                  (lambda-var-list
                                                    gen-var
                                                    strip
                                                    chi-lambda-case
                                                    lambda*-formals
                                                    chi-simple-lambda
                                                    lambda-formals
                                                    ellipsis?
                                                    chi-void
                                                    eval-local-transformer
                                                    chi-local-syntax
                                                    chi-body
                                                    chi-macro
                                                    chi-application
                                                    chi-expr
                                                    chi
                                                    syntax-type
                                                    chi-when-list
                                                    chi-install-global
                                                    chi-top-sequence
                                                    chi-sequence
                                                    source-wrap
                                                    wrap
                                                    bound-id-member?
                                                    distinct-bound-ids?
                                                    valid-bound-ids?
                                                    bound-id=?
                                                    free-id=?
                                                    id-var-name
                                                    same-marks?
                                                    join-marks
                                                    join-wraps
                                                    smart-append
                                                    make-binding-wrap
                                                    extend-ribcage!
                                                    make-empty-ribcage
                                                    new-mark
                                                    anti-mark
                                                    the-anti-mark
                                                    top-marked?
                                                    top-wrap
                                                    empty-wrap
                                                    set-ribcage-labels!
                                                    set-ribcage-marks!
                                                    set-ribcage-symnames!
                                                    ribcage-labels
                                                    ribcage-marks
                                                    ribcage-symnames
                                                    ribcage?
                                                    make-ribcage
                                                    gen-labels
                                                    gen-label
                                                    make-rename
                                                    rename-marks
                                                    rename-new
                                                    rename-old
                                                    subst-rename?
                                                    wrap-subst
                                                    wrap-marks
                                                    make-wrap
                                                    id-sym-name&marks
                                                    id-sym-name
                                                    id?
                                                    nonsymbol-id?
                                                    global-extend
                                                    lookup
                                                    macros-only-env
                                                    extend-var-env
                                                    extend-env
                                                    null-env
                                                    binding-value
                                                    binding-type
                                                    make-binding
                                                    arg-check
                                                    source-annotation
                                                    no-source
                                                    set-syntax-object-module!
                                                    set-syntax-object-wrap!
                                                    set-syntax-object-expression!
                                                    syntax-object-module
                                                    syntax-object-wrap
                                                    syntax-object-expression
                                                    syntax-object?
                                                    make-syntax-object
                                                    build-lexical-var
                                                    build-letrec
                                                    build-named-let
                                                    build-let
                                                    build-sequence
                                                    build-data
                                                    build-primref
                                                    build-lambda-case
                                                    build-case-lambda
                                                    build-simple-lambda
                                                    build-global-definition
                                                    build-global-assignment
                                                    build-global-reference
                                                    analyze-variable
                                                    build-lexical-assignment
                                                    build-lexical-reference
                                                    build-dynlet
                                                    build-conditional
                                                    build-application
                                                    build-void
                                                    maybe-name-value!
                                                    decorate-source
                                                    get-global-definition-hook
                                                    put-global-definition-hook
                                                    gensym-hook
                                                    local-eval-hook
                                                    top-level-eval-hook
                                                    fx<
                                                    fx=
                                                    fx-
                                                    fx+
                                                    set-lambda-meta!
                                                    lambda-meta
                                                    lambda?
                                                    make-dynlet
                                                    make-letrec
                                                    make-let
                                                    make-lambda-case
                                                    make-lambda
                                                    make-sequence
                                                    make-application
                                                    make-conditional
                                                    make-toplevel-define
                                                    make-toplevel-set
                                                    make-toplevel-ref
                                                    make-module-set
                                                    make-module-ref
                                                    make-lexical-set
                                                    make-lexical-ref
                                                    make-primitive-ref
                                                    make-const
                                                    make-void)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i466"
                                                   "i464"
                                                   "i462"
                                                   "i460"
                                                   "i458"
                                                   "i456"
                                                   "i454"
                                                   "i452"
                                                   "i450"
                                                   "i448"
                                                   "i446"
                                                   "i444"
                                                   "i442"
                                                   "i440"
                                                   "i438"
                                                   "i436"
                                                   "i434"
                                                   "i432"
                                                   "i430"
                                                   "i428"
                                                   "i426"
                                                   "i424"
                                                   "i422"
                                                   "i420"
                                                   "i418"
                                                   "i416"
                                                   "i414"
                                                   "i412"
                                                   "i410"
                                                   "i408"
                                                   "i406"
                                                   "i404"
                                                   "i402"
                                                   "i400"
                                                   "i398"
                                                   "i397"
                                                   "i395"
                                                   "i392"
                                                   "i391"
                                                   "i390"
                                                   "i388"
                                                   "i387"
                                                   "i385"
                                                   "i383"
                                                   "i381"
                                                   "i379"
                                                   "i377"
                                                   "i375"
                                                   "i373"
                                                   "i371"
                                                   "i368"
                                                   "i366"
                                                   "i365"
                                                   "i363"
                                                   "i361"
                                                   "i359"
                                                   "i357"
                                                   "i356"
                                                   "i355"
                                                   "i354"
                                                   "i352"
                                                   "i351"
                                                   "i348"
                                                   "i346"
                                                   "i344"
                                                   "i342"
                                                   "i340"
                                                   "i338"
                                                   "i336"
                                                   "i335"
                                                   "i334"
                                                   "i332"
                                                   "i330"
                                                   "i329"
                                                   "i326"
                                                   "i325"
                                                   "i323"
                                                   "i321"
                                                   "i319"
                                                   "i317"
                                                   "i315"
                                                   "i313"
                                                   "i311"
                                                   "i309"
                                                   "i307"
                                                   "i304"
                                                   "i302"
                                                   "i300"
                                                   "i298"
                                                   "i296"
                                                   "i294"
                                                   "i292"
                                                   "i290"
                                                   "i288"
                                                   "i286"
                                                   "i284"
                                                   "i282"
                                                   "i280"
                                                   "i278"
                                                   "i276"
                                                   "i274"
                                                   "i272"
                                                   "i270"
                                                   "i268"
                                                   "i266"
                                                   "i264"
                                                   "i262"
                                                   "i260"
                                                   "i259"
                                                   "i256"
                                                   "i254"
                                                   "i253"
                                                   "i252"
                                                   "i251"
                                                   "i250"
                                                   "i248"
                                                   "i246"
                                                   "i244"
                                                   "i241"
                                                   "i239"
                                                   "i237"
                                                   "i235"
                                                   "i233"
                                                   "i231"
                                                   "i229"
                                                   "i227"
                                                   "i225"
                                                   "i223"
                                                   "i221"
                                                   "i219"
                                                   "i217"
                                                   "i215"
                                                   "i213"
                                                   "i211"
                                                   "i209"
                                                   "i207"))
                                                #(ribcage
                                                  (define-structure
                                                    define-expansion-accessors
                                                    define-expansion-constructors)
                                                  ((top) (top) (top))
                                                  ("i45" "i44" "i43")))
                                               (hygiene guile))
                                            1)
                                          '#(syntax-object
                                             pad
                                             ((top)
                                              #(ribcage
                                                #(pat exp)
                                                #((top) (top))
                                                #("i3910" "i3911"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(x keys clauses r mod)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i3899"
                                                  "i3900"
                                                  "i3901"
                                                  "i3902"
                                                  "i3903"))
                                              #(ribcage
                                                (gen-syntax-case
                                                  gen-clause
                                                  build-dispatch-call
                                                  convert-pattern)
                                                ((top) (top) (top) (top))
                                                ("i3709"
                                                 "i3707"
                                                 "i3705"
                                                 "i3703"))
                                              #(ribcage
                                                (lambda-var-list
                                                  gen-var
                                                  strip
                                                  chi-lambda-case
                                                  lambda*-formals
                                                  chi-simple-lambda
                                                  lambda-formals
                                                  ellipsis?
                                                  chi-void
                                                  eval-local-transformer
                                                  chi-local-syntax
                                                  chi-body
                                                  chi-macro
                                                  chi-application
                                                  chi-expr
                                                  chi
                                                  syntax-type
                                                  chi-when-list
                                                  chi-install-global
                                                  chi-top-sequence
                                                  chi-sequence
                                                  source-wrap
                                                  wrap
                                                  bound-id-member?
                                                  distinct-bound-ids?
                                                  valid-bound-ids?
                                                  bound-id=?
                                                  free-id=?
                                                  id-var-name
                                                  same-marks?
                                                  join-marks
                                                  join-wraps
                                                  smart-append
                                                  make-binding-wrap
                                                  extend-ribcage!
                                                  make-empty-ribcage
                                                  new-mark
                                                  anti-mark
                                                  the-anti-mark
                                                  top-marked?
                                                  top-wrap
                                                  empty-wrap
                                                  set-ribcage-labels!
                                                  set-ribcage-marks!
                                                  set-ribcage-symnames!
                                                  ribcage-labels
                                                  ribcage-marks
                                                  ribcage-symnames
                                                  ribcage?
                                                  make-ribcage
                                                  gen-labels
                                                  gen-label
                                                  make-rename
                                                  rename-marks
                                                  rename-new
                                                  rename-old
                                                  subst-rename?
                                                  wrap-subst
                                                  wrap-marks
                                                  make-wrap
                                                  id-sym-name&marks
                                                  id-sym-name
                                                  id?
                                                  nonsymbol-id?
                                                  global-extend
                                                  lookup
                                                  macros-only-env
                                                  extend-var-env
                                                  extend-env
                                                  null-env
                                                  binding-value
                                                  binding-type
                                                  make-binding
                                                  arg-check
                                                  source-annotation
                                                  no-source
                                                  set-syntax-object-module!
                                                  set-syntax-object-wrap!
                                                  set-syntax-object-expression!
                                                  syntax-object-module
                                                  syntax-object-wrap
                                                  syntax-object-expression
                                                  syntax-object?
                                                  make-syntax-object
                                                  build-lexical-var
                                                  build-letrec
                                                  build-named-let
                                                  build-let
                                                  build-sequence
                                                  build-data
                                                  build-primref
                                                  build-lambda-case
                                                  build-case-lambda
                                                  build-simple-lambda
                                                  build-global-definition
                                                  build-global-assignment
                                                  build-global-reference
                                                  analyze-variable
                                                  build-lexical-assignment
                                                  build-lexical-reference
                                                  build-dynlet
                                                  build-conditional
                                                  build-application
                                                  build-void
                                                  maybe-name-value!
                                                  decorate-source
                                                  get-global-definition-hook
                                                  put-global-definition-hook
                                                  gensym-hook
                                                  local-eval-hook
                                                  top-level-eval-hook
                                                  fx<
                                                  fx=
                                                  fx-
                                                  fx+
                                                  set-lambda-meta!
                                                  lambda-meta
                                                  lambda?
                                                  make-dynlet
                                                  make-letrec
                                                  make-let
                                                  make-lambda-case
                                                  make-lambda
                                                  make-sequence
                                                  make-application
                                                  make-conditional
                                                  make-toplevel-define
                                                  make-toplevel-set
                                                  make-toplevel-ref
                                                  make-module-set
                                                  make-module-ref
                                                  make-lexical-set
                                                  make-lexical-ref
                                                  make-primitive-ref
                                                  make-const
                                                  make-void)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i466"
                                                 "i464"
                                                 "i462"
                                                 "i460"
                                                 "i458"
                                                 "i456"
                                                 "i454"
                                                 "i452"
                                                 "i450"
                                                 "i448"
                                                 "i446"
                                                 "i444"
                                                 "i442"
                                                 "i440"
                                                 "i438"
                                                 "i436"
                                                 "i434"
                                                 "i432"
                                                 "i430"
                                                 "i428"
                                                 "i426"
                                                 "i424"
                                                 "i422"
                                                 "i420"
                                                 "i418"
                                                 "i416"
                                                 "i414"
                                                 "i412"
                                                 "i410"
                                                 "i408"
                                                 "i406"
                                                 "i404"
                                                 "i402"
                                                 "i400"
                                                 "i398"
                                                 "i397"
                                                 "i395"
                                                 "i392"
                                                 "i391"
                                                 "i390"
                                                 "i388"
                                                 "i387"
                                                 "i385"
                                                 "i383"
                                                 "i381"
                                                 "i379"
                                                 "i377"
                                                 "i375"
                                                 "i373"
                                                 "i371"
                                                 "i368"
                                                 "i366"
                                                 "i365"
                                                 "i363"
                                                 "i361"
                                                 "i359"
                                                 "i357"
                                                 "i356"
                                                 "i355"
                                                 "i354"
                                                 "i352"
                                                 "i351"
                                                 "i348"
                                                 "i346"
                                                 "i344"
                                                 "i342"
                                                 "i340"
                                                 "i338"
                                                 "i336"
                                                 "i335"
                                                 "i334"
                                                 "i332"
                                                 "i330"
                                                 "i329"
                                                 "i326"
                                                 "i325"
                                                 "i323"
                                                 "i321"
                                                 "i319"
                                                 "i317"
                                                 "i315"
                                                 "i313"
                                                 "i311"
                                                 "i309"
                                                 "i307"
                                                 "i304"
                                                 "i302"
                                                 "i300"
                                                 "i298"
                                                 "i296"
                                                 "i294"
                                                 "i292"
                                                 "i290"
                                                 "i288"
                                                 "i286"
                                                 "i284"
                                                 "i282"
                                                 "i280"
                                                 "i278"
                                                 "i276"
                                                 "i274"
                                                 "i272"
                                                 "i270"
                                                 "i268"
                                                 "i266"
                                                 "i264"
                                                 "i262"
                                                 "i260"
                                                 "i259"
                                                 "i256"
                                                 "i254"
                                                 "i253"
                                                 "i252"
                                                 "i251"
                                                 "i250"
                                                 "i248"
                                                 "i246"
                                                 "i244"
                                                 "i241"
                                                 "i239"
                                                 "i237"
                                                 "i235"
                                                 "i233"
                                                 "i231"
                                                 "i229"
                                                 "i227"
                                                 "i225"
                                                 "i223"
                                                 "i221"
                                                 "i219"
                                                 "i217"
                                                 "i215"
                                                 "i213"
                                                 "i211"
                                                 "i209"
                                                 "i207"))
                                              #(ribcage
                                                (define-structure
                                                  define-expansion-accessors
                                                  define-expansion-constructors)
                                                ((top) (top) (top))
                                                ("i45" "i44" "i43")))
                                             (hygiene guile)))
                                        (if (if (= (vector-length
                                                     '#(syntax-object
                                                        _
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3910" "i3911"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3899"
                                                             "i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3709"
                                                            "i3707"
                                                            "i3705"
                                                            "i3703"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i466"
                                                            "i464"
                                                            "i462"
                                                            "i460"
                                                            "i458"
                                                            "i456"
                                                            "i454"
                                                            "i452"
                                                            "i450"
                                                            "i448"
                                                            "i446"
                                                            "i444"
                                                            "i442"
                                                            "i440"
                                                            "i438"
                                                            "i436"
                                                            "i434"
                                                            "i432"
                                                            "i430"
                                                            "i428"
                                                            "i426"
                                                            "i424"
                                                            "i422"
                                                            "i420"
                                                            "i418"
                                                            "i416"
                                                            "i414"
                                                            "i412"
                                                            "i410"
                                                            "i408"
                                                            "i406"
                                                            "i404"
                                                            "i402"
                                                            "i400"
                                                            "i398"
                                                            "i397"
                                                            "i395"
                                                            "i392"
                                                            "i391"
                                                            "i390"
                                                            "i388"
                                                            "i387"
                                                            "i385"
                                                            "i383"
                                                            "i381"
                                                            "i379"
                                                            "i377"
                                                            "i375"
                                                            "i373"
                                                            "i371"
                                                            "i368"
                                                            "i366"
                                                            "i365"
                                                            "i363"
                                                            "i361"
                                                            "i359"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i354"
                                                            "i352"
                                                            "i351"
                                                            "i348"
                                                            "i346"
                                                            "i344"
                                                            "i342"
                                                            "i340"
                                                            "i338"
                                                            "i336"
                                                            "i335"
                                                            "i334"
                                                            "i332"
                                                            "i330"
                                                            "i329"
                                                            "i326"
                                                            "i325"
                                                            "i323"
                                                            "i321"
                                                            "i319"
                                                            "i317"
                                                            "i315"
                                                            "i313"
                                                            "i311"
                                                            "i309"
                                                            "i307"
                                                            "i304"
                                                            "i302"
                                                            "i300"
                                                            "i298"
                                                            "i296"
                                                            "i294"
                                                            "i292"
                                                            "i290"
                                                            "i288"
                                                            "i286"
                                                            "i284"
                                                            "i282"
                                                            "i280"
                                                            "i278"
                                                            "i276"
                                                            "i274"
                                                            "i272"
                                                            "i270"
                                                            "i268"
                                                            "i266"
                                                            "i264"
                                                            "i262"
                                                            "i260"
                                                            "i259"
                                                            "i256"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i250"
                                                            "i248"
                                                            "i246"
                                                            "i244"
                                                            "i241"
                                                            "i239"
                                                            "i237"
                                                            "i235"
                                                            "i233"
                                                            "i231"
                                                            "i229"
                                                            "i227"
                                                            "i225"
                                                            "i223"
                                                            "i221"
                                                            "i219"
                                                            "i217"
                                                            "i215"
                                                            "i213"
                                                            "i211"
                                                            "i209"
                                                            "i207"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i45"
                                                            "i44"
                                                            "i43")))
                                                        (hygiene guile)))
                                                   4)
                                              (eq? (vector-ref
                                                     '#(syntax-object
                                                        _
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3910" "i3911"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3899"
                                                             "i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3709"
                                                            "i3707"
                                                            "i3705"
                                                            "i3703"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i466"
                                                            "i464"
                                                            "i462"
                                                            "i460"
                                                            "i458"
                                                            "i456"
                                                            "i454"
                                                            "i452"
                                                            "i450"
                                                            "i448"
                                                            "i446"
                                                            "i444"
                                                            "i442"
                                                            "i440"
                                                            "i438"
                                                            "i436"
                                                            "i434"
                                                            "i432"
                                                            "i430"
                                                            "i428"
                                                            "i426"
                                                            "i424"
                                                            "i422"
                                                            "i420"
                                                            "i418"
                                                            "i416"
                                                            "i414"
                                                            "i412"
                                                            "i410"
                                                            "i408"
                                                            "i406"
                                                            "i404"
                                                            "i402"
                                                            "i400"
                                                            "i398"
                                                            "i397"
                                                            "i395"
                                                            "i392"
                                                            "i391"
                                                            "i390"
                                                            "i388"
                                                            "i387"
                                                            "i385"
                                                            "i383"
                                                            "i381"
                                                            "i379"
                                                            "i377"
                                                            "i375"
                                                            "i373"
                                                            "i371"
                                                            "i368"
                                                            "i366"
                                                            "i365"
                                                            "i363"
                                                            "i361"
                                                            "i359"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i354"
                                                            "i352"
                                                            "i351"
                                                            "i348"
                                                            "i346"
                                                            "i344"
                                                            "i342"
                                                            "i340"
                                                            "i338"
                                                            "i336"
                                                            "i335"
                                                            "i334"
                                                            "i332"
                                                            "i330"
                                                            "i329"
                                                            "i326"
                                                            "i325"
                                                            "i323"
                                                            "i321"
                                                            "i319"
                                                            "i317"
                                                            "i315"
                                                            "i313"
                                                            "i311"
                                                            "i309"
                                                            "i307"
                                                            "i304"
                                                            "i302"
                                                            "i300"
                                                            "i298"
                                                            "i296"
                                                            "i294"
                                                            "i292"
                                                            "i290"
                                                            "i288"
                                                            "i286"
                                                            "i284"
                                                            "i282"
                                                            "i280"
                                                            "i278"
                                                            "i276"
                                                            "i274"
                                                            "i272"
                                                            "i270"
                                                            "i268"
                                                            "i266"
                                                            "i264"
                                                            "i262"
                                                            "i260"
                                                            "i259"
                                                            "i256"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i250"
                                                            "i248"
                                                            "i246"
                                                            "i244"
                                                            "i241"
                                                            "i239"
                                                            "i237"
                                                            "i235"
                                                            "i233"
                                                            "i231"
                                                            "i229"
                                                            "i227"
                                                            "i225"
                                                            "i223"
                                                            "i221"
                                                            "i219"
                                                            "i217"
                                                            "i215"
                                                            "i213"
                                                            "i211"
                                                            "i209"
                                                            "i207"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i45"
                                                            "i44"
                                                            "i43")))
                                                        (hygiene guile))
                                                     0)
                                                   'syntax-object)
                                              #f)
                                          (vector-ref
                                            '#(syntax-object
                                               _
                                               ((top)
                                                #(ribcage
                                                  #(pat exp)
                                                  #((top) (top))
                                                  #("i3910" "i3911"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(x keys clauses r mod)
                                                  #((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                  #("i3899"
                                                    "i3900"
                                                    "i3901"
                                                    "i3902"
                                                    "i3903"))
                                                #(ribcage
                                                  (gen-syntax-case
                                                    gen-clause
                                                    build-dispatch-call
                                                    convert-pattern)
                                                  ((top) (top) (top) (top))
                                                  ("i3709"
                                                   "i3707"
                                                   "i3705"
                                                   "i3703"))
                                                #(ribcage
                                                  (lambda-var-list
                                                    gen-var
                                                    strip
                                                    chi-lambda-case
                                                    lambda*-formals
                                                    chi-simple-lambda
                                                    lambda-formals
                                                    ellipsis?
                                                    chi-void
                                                    eval-local-transformer
                                                    chi-local-syntax
                                                    chi-body
                                                    chi-macro
                                                    chi-application
                                                    chi-expr
                                                    chi
                                                    syntax-type
                                                    chi-when-list
                                                    chi-install-global
                                                    chi-top-sequence
                                                    chi-sequence
                                                    source-wrap
                                                    wrap
                                                    bound-id-member?
                                                    distinct-bound-ids?
                                                    valid-bound-ids?
                                                    bound-id=?
                                                    free-id=?
                                                    id-var-name
                                                    same-marks?
                                                    join-marks
                                                    join-wraps
                                                    smart-append
                                                    make-binding-wrap
                                                    extend-ribcage!
                                                    make-empty-ribcage
                                                    new-mark
                                                    anti-mark
                                                    the-anti-mark
                                                    top-marked?
                                                    top-wrap
                                                    empty-wrap
                                                    set-ribcage-labels!
                                                    set-ribcage-marks!
                                                    set-ribcage-symnames!
                                                    ribcage-labels
                                                    ribcage-marks
                                                    ribcage-symnames
                                                    ribcage?
                                                    make-ribcage
                                                    gen-labels
                                                    gen-label
                                                    make-rename
                                                    rename-marks
                                                    rename-new
                                                    rename-old
                                                    subst-rename?
                                                    wrap-subst
                                                    wrap-marks
                                                    make-wrap
                                                    id-sym-name&marks
                                                    id-sym-name
                                                    id?
                                                    nonsymbol-id?
                                                    global-extend
                                                    lookup
                                                    macros-only-env
                                                    extend-var-env
                                                    extend-env
                                                    null-env
                                                    binding-value
                                                    binding-type
                                                    make-binding
                                                    arg-check
                                                    source-annotation
                                                    no-source
                                                    set-syntax-object-module!
                                                    set-syntax-object-wrap!
                                                    set-syntax-object-expression!
                                                    syntax-object-module
                                                    syntax-object-wrap
                                                    syntax-object-expression
                                                    syntax-object?
                                                    make-syntax-object
                                                    build-lexical-var
                                                    build-letrec
                                                    build-named-let
                                                    build-let
                                                    build-sequence
                                                    build-data
                                                    build-primref
                                                    build-lambda-case
                                                    build-case-lambda
                                                    build-simple-lambda
                                                    build-global-definition
                                                    build-global-assignment
                                                    build-global-reference
                                                    analyze-variable
                                                    build-lexical-assignment
                                                    build-lexical-reference
                                                    build-dynlet
                                                    build-conditional
                                                    build-application
                                                    build-void
                                                    maybe-name-value!
                                                    decorate-source
                                                    get-global-definition-hook
                                                    put-global-definition-hook
                                                    gensym-hook
                                                    local-eval-hook
                                                    top-level-eval-hook
                                                    fx<
                                                    fx=
                                                    fx-
                                                    fx+
                                                    set-lambda-meta!
                                                    lambda-meta
                                                    lambda?
                                                    make-dynlet
                                                    make-letrec
                                                    make-let
                                                    make-lambda-case
                                                    make-lambda
                                                    make-sequence
                                                    make-application
                                                    make-conditional
                                                    make-toplevel-define
                                                    make-toplevel-set
                                                    make-toplevel-ref
                                                    make-module-set
                                                    make-module-ref
                                                    make-lexical-set
                                                    make-lexical-ref
                                                    make-primitive-ref
                                                    make-const
                                                    make-void)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i466"
                                                   "i464"
                                                   "i462"
                                                   "i460"
                                                   "i458"
                                                   "i456"
                                                   "i454"
                                                   "i452"
                                                   "i450"
                                                   "i448"
                                                   "i446"
                                                   "i444"
                                                   "i442"
                                                   "i440"
                                                   "i438"
                                                   "i436"
                                                   "i434"
                                                   "i432"
                                                   "i430"
                                                   "i428"
                                                   "i426"
                                                   "i424"
                                                   "i422"
                                                   "i420"
                                                   "i418"
                                                   "i416"
                                                   "i414"
                                                   "i412"
                                                   "i410"
                                                   "i408"
                                                   "i406"
                                                   "i404"
                                                   "i402"
                                                   "i400"
                                                   "i398"
                                                   "i397"
                                                   "i395"
                                                   "i392"
                                                   "i391"
                                                   "i390"
                                                   "i388"
                                                   "i387"
                                                   "i385"
                                                   "i383"
                                                   "i381"
                                                   "i379"
                                                   "i377"
                                                   "i375"
                                                   "i373"
                                                   "i371"
                                                   "i368"
                                                   "i366"
                                                   "i365"
                                                   "i363"
                                                   "i361"
                                                   "i359"
                                                   "i357"
                                                   "i356"
                                                   "i355"
                                                   "i354"
                                                   "i352"
                                                   "i351"
                                                   "i348"
                                                   "i346"
                                                   "i344"
                                                   "i342"
                                                   "i340"
                                                   "i338"
                                                   "i336"
                                                   "i335"
                                                   "i334"
                                                   "i332"
                                                   "i330"
                                                   "i329"
                                                   "i326"
                                                   "i325"
                                                   "i323"
                                                   "i321"
                                                   "i319"
                                                   "i317"
                                                   "i315"
                                                   "i313"
                                                   "i311"
                                                   "i309"
                                                   "i307"
                                                   "i304"
                                                   "i302"
                                                   "i300"
                                                   "i298"
                                                   "i296"
                                                   "i294"
                                                   "i292"
                                                   "i290"
                                                   "i288"
                                                   "i286"
                                                   "i284"
                                                   "i282"
                                                   "i280"
                                                   "i278"
                                                   "i276"
                                                   "i274"
                                                   "i272"
                                                   "i270"
                                                   "i268"
                                                   "i266"
                                                   "i264"
                                                   "i262"
                                                   "i260"
                                                   "i259"
                                                   "i256"
                                                   "i254"
                                                   "i253"
                                                   "i252"
                                                   "i251"
                                                   "i250"
                                                   "i248"
                                                   "i246"
                                                   "i244"
                                                   "i241"
                                                   "i239"
                                                   "i237"
                                                   "i235"
                                                   "i233"
                                                   "i231"
                                                   "i229"
                                                   "i227"
                                                   "i225"
                                                   "i223"
                                                   "i221"
                                                   "i219"
                                                   "i217"
                                                   "i215"
                                                   "i213"
                                                   "i211"
                                                   "i209"
                                                   "i207"))
                                                #(ribcage
                                                  (define-structure
                                                    define-expansion-accessors
                                                    define-expansion-constructors)
                                                  ((top) (top) (top))
                                                  ("i45" "i44" "i43")))
                                               (hygiene guile))
                                            1)
                                          '#(syntax-object
                                             _
                                             ((top)
                                              #(ribcage
                                                #(pat exp)
                                                #((top) (top))
                                                #("i3910" "i3911"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(x keys clauses r mod)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i3899"
                                                  "i3900"
                                                  "i3901"
                                                  "i3902"
                                                  "i3903"))
                                              #(ribcage
                                                (gen-syntax-case
                                                  gen-clause
                                                  build-dispatch-call
                                                  convert-pattern)
                                                ((top) (top) (top) (top))
                                                ("i3709"
                                                 "i3707"
                                                 "i3705"
                                                 "i3703"))
                                              #(ribcage
                                                (lambda-var-list
                                                  gen-var
                                                  strip
                                                  chi-lambda-case
                                                  lambda*-formals
                                                  chi-simple-lambda
                                                  lambda-formals
                                                  ellipsis?
                                                  chi-void
                                                  eval-local-transformer
                                                  chi-local-syntax
                                                  chi-body
                                                  chi-macro
                                                  chi-application
                                                  chi-expr
                                                  chi
                                                  syntax-type
                                                  chi-when-list
                                                  chi-install-global
                                                  chi-top-sequence
                                                  chi-sequence
                                                  source-wrap
                                                  wrap
                                                  bound-id-member?
                                                  distinct-bound-ids?
                                                  valid-bound-ids?
                                                  bound-id=?
                                                  free-id=?
                                                  id-var-name
                                                  same-marks?
                                                  join-marks
                                                  join-wraps
                                                  smart-append
                                                  make-binding-wrap
                                                  extend-ribcage!
                                                  make-empty-ribcage
                                                  new-mark
                                                  anti-mark
                                                  the-anti-mark
                                                  top-marked?
                                                  top-wrap
                                                  empty-wrap
                                                  set-ribcage-labels!
                                                  set-ribcage-marks!
                                                  set-ribcage-symnames!
                                                  ribcage-labels
                                                  ribcage-marks
                                                  ribcage-symnames
                                                  ribcage?
                                                  make-ribcage
                                                  gen-labels
                                                  gen-label
                                                  make-rename
                                                  rename-marks
                                                  rename-new
                                                  rename-old
                                                  subst-rename?
                                                  wrap-subst
                                                  wrap-marks
                                                  make-wrap
                                                  id-sym-name&marks
                                                  id-sym-name
                                                  id?
                                                  nonsymbol-id?
                                                  global-extend
                                                  lookup
                                                  macros-only-env
                                                  extend-var-env
                                                  extend-env
                                                  null-env
                                                  binding-value
                                                  binding-type
                                                  make-binding
                                                  arg-check
                                                  source-annotation
                                                  no-source
                                                  set-syntax-object-module!
                                                  set-syntax-object-wrap!
                                                  set-syntax-object-expression!
                                                  syntax-object-module
                                                  syntax-object-wrap
                                                  syntax-object-expression
                                                  syntax-object?
                                                  make-syntax-object
                                                  build-lexical-var
                                                  build-letrec
                                                  build-named-let
                                                  build-let
                                                  build-sequence
                                                  build-data
                                                  build-primref
                                                  build-lambda-case
                                                  build-case-lambda
                                                  build-simple-lambda
                                                  build-global-definition
                                                  build-global-assignment
                                                  build-global-reference
                                                  analyze-variable
                                                  build-lexical-assignment
                                                  build-lexical-reference
                                                  build-dynlet
                                                  build-conditional
                                                  build-application
                                                  build-void
                                                  maybe-name-value!
                                                  decorate-source
                                                  get-global-definition-hook
                                                  put-global-definition-hook
                                                  gensym-hook
                                                  local-eval-hook
                                                  top-level-eval-hook
                                                  fx<
                                                  fx=
                                                  fx-
                                                  fx+
                                                  set-lambda-meta!
                                                  lambda-meta
                                                  lambda?
                                                  make-dynlet
                                                  make-letrec
                                                  make-let
                                                  make-lambda-case
                                                  make-lambda
                                                  make-sequence
                                                  make-application
                                                  make-conditional
                                                  make-toplevel-define
                                                  make-toplevel-set
                                                  make-toplevel-ref
                                                  make-module-set
                                                  make-module-ref
                                                  make-lexical-set
                                                  make-lexical-ref
                                                  make-primitive-ref
                                                  make-const
                                                  make-void)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i466"
                                                 "i464"
                                                 "i462"
                                                 "i460"
                                                 "i458"
                                                 "i456"
                                                 "i454"
                                                 "i452"
                                                 "i450"
                                                 "i448"
                                                 "i446"
                                                 "i444"
                                                 "i442"
                                                 "i440"
                                                 "i438"
                                                 "i436"
                                                 "i434"
                                                 "i432"
                                                 "i430"
                                                 "i428"
                                                 "i426"
                                                 "i424"
                                                 "i422"
                                                 "i420"
                                                 "i418"
                                                 "i416"
                                                 "i414"
                                                 "i412"
                                                 "i410"
                                                 "i408"
                                                 "i406"
                                                 "i404"
                                                 "i402"
                                                 "i400"
                                                 "i398"
                                                 "i397"
                                                 "i395"
                                                 "i392"
                                                 "i391"
                                                 "i390"
                                                 "i388"
                                                 "i387"
                                                 "i385"
                                                 "i383"
                                                 "i381"
                                                 "i379"
                                                 "i377"
                                                 "i375"
                                                 "i373"
                                                 "i371"
                                                 "i368"
                                                 "i366"
                                                 "i365"
                                                 "i363"
                                                 "i361"
                                                 "i359"
                                                 "i357"
                                                 "i356"
                                                 "i355"
                                                 "i354"
                                                 "i352"
                                                 "i351"
                                                 "i348"
                                                 "i346"
                                                 "i344"
                                                 "i342"
                                                 "i340"
                                                 "i338"
                                                 "i336"
                                                 "i335"
                                                 "i334"
                                                 "i332"
                                                 "i330"
                                                 "i329"
                                                 "i326"
                                                 "i325"
                                                 "i323"
                                                 "i321"
                                                 "i319"
                                                 "i317"
                                                 "i315"
                                                 "i313"
                                                 "i311"
                                                 "i309"
                                                 "i307"
                                                 "i304"
                                                 "i302"
                                                 "i300"
                                                 "i298"
                                                 "i296"
                                                 "i294"
                                                 "i292"
                                                 "i290"
                                                 "i288"
                                                 "i286"
                                                 "i284"
                                                 "i282"
                                                 "i280"
                                                 "i278"
                                                 "i276"
                                                 "i274"
                                                 "i272"
                                                 "i270"
                                                 "i268"
                                                 "i266"
                                                 "i264"
                                                 "i262"
                                                 "i260"
                                                 "i259"
                                                 "i256"
                                                 "i254"
                                                 "i253"
                                                 "i252"
                                                 "i251"
                                                 "i250"
                                                 "i248"
                                                 "i246"
                                                 "i244"
                                                 "i241"
                                                 "i239"
                                                 "i237"
                                                 "i235"
                                                 "i233"
                                                 "i231"
                                                 "i229"
                                                 "i227"
                                                 "i225"
                                                 "i223"
                                                 "i221"
                                                 "i219"
                                                 "i217"
                                                 "i215"
                                                 "i213"
                                                 "i211"
                                                 "i209"
                                                 "i207"))
                                              #(ribcage
                                                (define-structure
                                                  define-expansion-accessors
                                                  define-expansion-constructors)
                                                ((top) (top) (top))
                                                ("i45" "i44" "i43")))
                                             (hygiene guile))))
                                 (eq? (#{id-var-name 411}#
                                        '#(syntax-object
                                           pad
                                           ((top)
                                            #(ribcage
                                              #(pat exp)
                                              #((top) (top))
                                              #("i3910" "i3911"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x keys clauses r mod)
                                              #((top) (top) (top) (top) (top))
                                              #("i3899"
                                                "i3900"
                                                "i3901"
                                                "i3902"
                                                "i3903"))
                                            #(ribcage
                                              (gen-syntax-case
                                                gen-clause
                                                build-dispatch-call
                                                convert-pattern)
                                              ((top) (top) (top) (top))
                                              ("i3709"
                                               "i3707"
                                               "i3705"
                                               "i3703"))
                                            #(ribcage
                                              (lambda-var-list
                                                gen-var
                                                strip
                                                chi-lambda-case
                                                lambda*-formals
                                                chi-simple-lambda
                                                lambda-formals
                                                ellipsis?
                                                chi-void
                                                eval-local-transformer
                                                chi-local-syntax
                                                chi-body
                                                chi-macro
                                                chi-application
                                                chi-expr
                                                chi
                                                syntax-type
                                                chi-when-list
                                                chi-install-global
                                                chi-top-sequence
                                                chi-sequence
                                                source-wrap
                                                wrap
                                                bound-id-member?
                                                distinct-bound-ids?
                                                valid-bound-ids?
                                                bound-id=?
                                                free-id=?
                                                id-var-name
                                                same-marks?
                                                join-marks
                                                join-wraps
                                                smart-append
                                                make-binding-wrap
                                                extend-ribcage!
                                                make-empty-ribcage
                                                new-mark
                                                anti-mark
                                                the-anti-mark
                                                top-marked?
                                                top-wrap
                                                empty-wrap
                                                set-ribcage-labels!
                                                set-ribcage-marks!
                                                set-ribcage-symnames!
                                                ribcage-labels
                                                ribcage-marks
                                                ribcage-symnames
                                                ribcage?
                                                make-ribcage
                                                gen-labels
                                                gen-label
                                                make-rename
                                                rename-marks
                                                rename-new
                                                rename-old
                                                subst-rename?
                                                wrap-subst
                                                wrap-marks
                                                make-wrap
                                                id-sym-name&marks
                                                id-sym-name
                                                id?
                                                nonsymbol-id?
                                                global-extend
                                                lookup
                                                macros-only-env
                                                extend-var-env
                                                extend-env
                                                null-env
                                                binding-value
                                                binding-type
                                                make-binding
                                                arg-check
                                                source-annotation
                                                no-source
                                                set-syntax-object-module!
                                                set-syntax-object-wrap!
                                                set-syntax-object-expression!
                                                syntax-object-module
                                                syntax-object-wrap
                                                syntax-object-expression
                                                syntax-object?
                                                make-syntax-object
                                                build-lexical-var
                                                build-letrec
                                                build-named-let
                                                build-let
                                                build-sequence
                                                build-data
                                                build-primref
                                                build-lambda-case
                                                build-case-lambda
                                                build-simple-lambda
                                                build-global-definition
                                                build-global-assignment
                                                build-global-reference
                                                analyze-variable
                                                build-lexical-assignment
                                                build-lexical-reference
                                                build-dynlet
                                                build-conditional
                                                build-application
                                                build-void
                                                maybe-name-value!
                                                decorate-source
                                                get-global-definition-hook
                                                put-global-definition-hook
                                                gensym-hook
                                                local-eval-hook
                                                top-level-eval-hook
                                                fx<
                                                fx=
                                                fx-
                                                fx+
                                                set-lambda-meta!
                                                lambda-meta
                                                lambda?
                                                make-dynlet
                                                make-letrec
                                                make-let
                                                make-lambda-case
                                                make-lambda
                                                make-sequence
                                                make-application
                                                make-conditional
                                                make-toplevel-define
                                                make-toplevel-set
                                                make-toplevel-ref
                                                make-module-set
                                                make-module-ref
                                                make-lexical-set
                                                make-lexical-ref
                                                make-primitive-ref
                                                make-const
                                                make-void)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i466"
                                               "i464"
                                               "i462"
                                               "i460"
                                               "i458"
                                               "i456"
                                               "i454"
                                               "i452"
                                               "i450"
                                               "i448"
                                               "i446"
                                               "i444"
                                               "i442"
                                               "i440"
                                               "i438"
                                               "i436"
                                               "i434"
                                               "i432"
                                               "i430"
                                               "i428"
                                               "i426"
                                               "i424"
                                               "i422"
                                               "i420"
                                               "i418"
                                               "i416"
                                               "i414"
                                               "i412"
                                               "i410"
                                               "i408"
                                               "i406"
                                               "i404"
                                               "i402"
                                               "i400"
                                               "i398"
                                               "i397"
                                               "i395"
                                               "i392"
                                               "i391"
                                               "i390"
                                               "i388"
                                               "i387"
                                               "i385"
                                               "i383"
                                               "i381"
                                               "i379"
                                               "i377"
                                               "i375"
                                               "i373"
                                               "i371"
                                               "i368"
                                               "i366"
                                               "i365"
                                               "i363"
                                               "i361"
                                               "i359"
                                               "i357"
                                               "i356"
                                               "i355"
                                               "i354"
                                               "i352"
                                               "i351"
                                               "i348"
                                               "i346"
                                               "i344"
                                               "i342"
                                               "i340"
                                               "i338"
                                               "i336"
                                               "i335"
                                               "i334"
                                               "i332"
                                               "i330"
                                               "i329"
                                               "i326"
                                               "i325"
                                               "i323"
                                               "i321"
                                               "i319"
                                               "i317"
                                               "i315"
                                               "i313"
                                               "i311"
                                               "i309"
                                               "i307"
                                               "i304"
                                               "i302"
                                               "i300"
                                               "i298"
                                               "i296"
                                               "i294"
                                               "i292"
                                               "i290"
                                               "i288"
                                               "i286"
                                               "i284"
                                               "i282"
                                               "i280"
                                               "i278"
                                               "i276"
                                               "i274"
                                               "i272"
                                               "i270"
                                               "i268"
                                               "i266"
                                               "i264"
                                               "i262"
                                               "i260"
                                               "i259"
                                               "i256"
                                               "i254"
                                               "i253"
                                               "i252"
                                               "i251"
                                               "i250"
                                               "i248"
                                               "i246"
                                               "i244"
                                               "i241"
                                               "i239"
                                               "i237"
                                               "i235"
                                               "i233"
                                               "i231"
                                               "i229"
                                               "i227"
                                               "i225"
                                               "i223"
                                               "i221"
                                               "i219"
                                               "i217"
                                               "i215"
                                               "i213"
                                               "i211"
                                               "i209"
                                               "i207"))
                                            #(ribcage
                                              (define-structure
                                                define-expansion-accessors
                                                define-expansion-constructors)
                                              ((top) (top) (top))
                                              ("i45" "i44" "i43")))
                                           (hygiene guile))
                                        '(()))
                                      (#{id-var-name 411}#
                                        '#(syntax-object
                                           _
                                           ((top)
                                            #(ribcage
                                              #(pat exp)
                                              #((top) (top))
                                              #("i3910" "i3911"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x keys clauses r mod)
                                              #((top) (top) (top) (top) (top))
                                              #("i3899"
                                                "i3900"
                                                "i3901"
                                                "i3902"
                                                "i3903"))
                                            #(ribcage
                                              (gen-syntax-case
                                                gen-clause
                                                build-dispatch-call
                                                convert-pattern)
                                              ((top) (top) (top) (top))
                                              ("i3709"
                                               "i3707"
                                               "i3705"
                                               "i3703"))
                                            #(ribcage
                                              (lambda-var-list
                                                gen-var
                                                strip
                                                chi-lambda-case
                                                lambda*-formals
                                                chi-simple-lambda
                                                lambda-formals
                                                ellipsis?
                                                chi-void
                                                eval-local-transformer
                                                chi-local-syntax
                                                chi-body
                                                chi-macro
                                                chi-application
                                                chi-expr
                                                chi
                                                syntax-type
                                                chi-when-list
                                                chi-install-global
                                                chi-top-sequence
                                                chi-sequence
                                                source-wrap
                                                wrap
                                                bound-id-member?
                                                distinct-bound-ids?
                                                valid-bound-ids?
                                                bound-id=?
                                                free-id=?
                                                id-var-name
                                                same-marks?
                                                join-marks
                                                join-wraps
                                                smart-append
                                                make-binding-wrap
                                                extend-ribcage!
                                                make-empty-ribcage
                                                new-mark
                                                anti-mark
                                                the-anti-mark
                                                top-marked?
                                                top-wrap
                                                empty-wrap
                                                set-ribcage-labels!
                                                set-ribcage-marks!
                                                set-ribcage-symnames!
                                                ribcage-labels
                                                ribcage-marks
                                                ribcage-symnames
                                                ribcage?
                                                make-ribcage
                                                gen-labels
                                                gen-label
                                                make-rename
                                                rename-marks
                                                rename-new
                                                rename-old
                                                subst-rename?
                                                wrap-subst
                                                wrap-marks
                                                make-wrap
                                                id-sym-name&marks
                                                id-sym-name
                                                id?
                                                nonsymbol-id?
                                                global-extend
                                                lookup
                                                macros-only-env
                                                extend-var-env
                                                extend-env
                                                null-env
                                                binding-value
                                                binding-type
                                                make-binding
                                                arg-check
                                                source-annotation
                                                no-source
                                                set-syntax-object-module!
                                                set-syntax-object-wrap!
                                                set-syntax-object-expression!
                                                syntax-object-module
                                                syntax-object-wrap
                                                syntax-object-expression
                                                syntax-object?
                                                make-syntax-object
                                                build-lexical-var
                                                build-letrec
                                                build-named-let
                                                build-let
                                                build-sequence
                                                build-data
                                                build-primref
                                                build-lambda-case
                                                build-case-lambda
                                                build-simple-lambda
                                                build-global-definition
                                                build-global-assignment
                                                build-global-reference
                                                analyze-variable
                                                build-lexical-assignment
                                                build-lexical-reference
                                                build-dynlet
                                                build-conditional
                                                build-application
                                                build-void
                                                maybe-name-value!
                                                decorate-source
                                                get-global-definition-hook
                                                put-global-definition-hook
                                                gensym-hook
                                                local-eval-hook
                                                top-level-eval-hook
                                                fx<
                                                fx=
                                                fx-
                                                fx+
                                                set-lambda-meta!
                                                lambda-meta
                                                lambda?
                                                make-dynlet
                                                make-letrec
                                                make-let
                                                make-lambda-case
                                                make-lambda
                                                make-sequence
                                                make-application
                                                make-conditional
                                                make-toplevel-define
                                                make-toplevel-set
                                                make-toplevel-ref
                                                make-module-set
                                                make-module-ref
                                                make-lexical-set
                                                make-lexical-ref
                                                make-primitive-ref
                                                make-const
                                                make-void)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i466"
                                               "i464"
                                               "i462"
                                               "i460"
                                               "i458"
                                               "i456"
                                               "i454"
                                               "i452"
                                               "i450"
                                               "i448"
                                               "i446"
                                               "i444"
                                               "i442"
                                               "i440"
                                               "i438"
                                               "i436"
                                               "i434"
                                               "i432"
                                               "i430"
                                               "i428"
                                               "i426"
                                               "i424"
                                               "i422"
                                               "i420"
                                               "i418"
                                               "i416"
                                               "i414"
                                               "i412"
                                               "i410"
                                               "i408"
                                               "i406"
                                               "i404"
                                               "i402"
                                               "i400"
                                               "i398"
                                               "i397"
                                               "i395"
                                               "i392"
                                               "i391"
                                               "i390"
                                               "i388"
                                               "i387"
                                               "i385"
                                               "i383"
                                               "i381"
                                               "i379"
                                               "i377"
                                               "i375"
                                               "i373"
                                               "i371"
                                               "i368"
                                               "i366"
                                               "i365"
                                               "i363"
                                               "i361"
                                               "i359"
                                               "i357"
                                               "i356"
                                               "i355"
                                               "i354"
                                               "i352"
                                               "i351"
                                               "i348"
                                               "i346"
                                               "i344"
                                               "i342"
                                               "i340"
                                               "i338"
                                               "i336"
                                               "i335"
                                               "i334"
                                               "i332"
                                               "i330"
                                               "i329"
                                               "i326"
                                               "i325"
                                               "i323"
                                               "i321"
                                               "i319"
                                               "i317"
                                               "i315"
                                               "i313"
                                               "i311"
                                               "i309"
                                               "i307"
                                               "i304"
                                               "i302"
                                               "i300"
                                               "i298"
                                               "i296"
                                               "i294"
                                               "i292"
                                               "i290"
                                               "i288"
                                               "i286"
                                               "i284"
                                               "i282"
                                               "i280"
                                               "i278"
                                               "i276"
                                               "i274"
                                               "i272"
                                               "i270"
                                               "i268"
                                               "i266"
                                               "i264"
                                               "i262"
                                               "i260"
                                               "i259"
                                               "i256"
                                               "i254"
                                               "i253"
                                               "i252"
                                               "i251"
                                               "i250"
                                               "i248"
                                               "i246"
                                               "i244"
                                               "i241"
                                               "i239"
                                               "i237"
                                               "i235"
                                               "i233"
                                               "i231"
                                               "i229"
                                               "i227"
                                               "i225"
                                               "i223"
                                               "i221"
                                               "i219"
                                               "i217"
                                               "i215"
                                               "i213"
                                               "i211"
                                               "i209"
                                               "i207"))
                                            #(ribcage
                                              (define-structure
                                                define-expansion-accessors
                                                define-expansion-constructors)
                                              ((top) (top) (top))
                                              ("i45" "i44" "i43")))
                                           (hygiene guile))
                                        '(())))
                                 #f)
                             (#{chi 437}#
                               #{exp 3913}#
                               #{r 3897}#
                               '(())
                               #{mod 3898}#)
                             (let ((#{labels 3921}#
                                     (list (symbol->string (gensym "i"))))
                                   (#{var 3922}#
                                     (let ((#{id 9473}#
                                             (if (if (vector? #{pat 3912}#)
                                                   (if (= (vector-length
                                                            #{pat 3912}#)
                                                          4)
                                                     (eq? (vector-ref
                                                            #{pat 3912}#
                                                            0)
                                                          'syntax-object)
                                                     #f)
                                                   #f)
                                               (vector-ref #{pat 3912}# 1)
                                               #{pat 3912}#)))
                                       (gensym
                                         (string-append
                                           (symbol->string #{id 9473}#)
                                           " ")))))
                               (#{build-application 271}#
                                 #f
                                 (#{build-simple-lambda 289}#
                                   #f
                                   (list (syntax->datum #{pat 3912}#))
                                   #f
                                   (list #{var 3922}#)
                                   '()
                                   (#{chi 437}#
                                     #{exp 3913}#
                                     (#{extend-env 337}#
                                       #{labels 3921}#
                                       (list (cons 'syntax
                                                   (cons #{var 3922}# 0)))
                                       #{r 3897}#)
                                     (#{make-binding-wrap 401}#
                                       (list #{pat 3912}#)
                                       #{labels 3921}#
                                       '(()))
                                     #{mod 3898}#))
                                 (list #{x 3894}#))))
                           (#{gen-clause 3708}#
                             #{x 3894}#
                             #{keys 3895}#
                             (cdr #{clauses 3896}#)
                             #{r 3897}#
                             #{pat 3912}#
                             #t
                             #{exp 3913}#
                             #{mod 3898}#)))
                       #{tmp 3909}#)
                     (let ((#{tmp 3928}#
                             ($sc-dispatch #{tmp 3908}# '(any any any))))
                       (if #{tmp 3928}#
                         (@apply
                           (lambda (#{pat 3932}# #{fender 3933}# #{exp 3934}#)
                             (#{gen-clause 3708}#
                               #{x 3894}#
                               #{keys 3895}#
                               (cdr #{clauses 3896}#)
                               #{r 3897}#
                               #{pat 3932}#
                               #{fender 3933}#
                               #{exp 3934}#
                               #{mod 3898}#))
                           #{tmp 3928}#)
                         (syntax-violation
                           'syntax-case
                           "invalid clause"
                           (car #{clauses 3896}#)))))))))))
        (lambda (#{e 3937}#
                 #{r 3938}#
                 #{w 3939}#
                 #{s 3940}#
                 #{mod 3941}#)
          (let ((#{e 3948}#
                  (#{wrap 423}#
                    (begin
                      (if (if (pair? #{e 3937}#) #{s 3940}# #f)
                        (set-source-properties! #{e 3937}# #{s 3940}#))
                      #{e 3937}#)
                    #{w 3939}#
                    #{mod 3941}#)))
            (let ((#{tmp 3950}#
                    ($sc-dispatch
                      #{e 3948}#
                      '(_ any each-any . each-any))))
              (if #{tmp 3950}#
                (@apply
                  (lambda (#{val 3954}# #{key 3955}# #{m 3956}#)
                    (if (and-map
                          (lambda (#{x 3957}#)
                            (if (if (symbol? #{x 3957}#)
                                  #t
                                  (if (if (vector? #{x 3957}#)
                                        (if (= (vector-length #{x 3957}#) 4)
                                          (eq? (vector-ref #{x 3957}# 0)
                                               'syntax-object)
                                          #f)
                                        #f)
                                    (symbol? (vector-ref #{x 3957}# 1))
                                    #f))
                              (not (if (if (if (vector? #{x 3957}#)
                                             (if (= (vector-length #{x 3957}#)
                                                    4)
                                               (eq? (vector-ref #{x 3957}# 0)
                                                    'syntax-object)
                                               #f)
                                             #f)
                                         (symbol? (vector-ref #{x 3957}# 1))
                                         #f)
                                     (if (eq? (if (if (vector? #{x 3957}#)
                                                    (if (= (vector-length
                                                             #{x 3957}#)
                                                           4)
                                                      (eq? (vector-ref
                                                             #{x 3957}#
                                                             0)
                                                           'syntax-object)
                                                      #f)
                                                    #f)
                                                (vector-ref #{x 3957}# 1)
                                                #{x 3957}#)
                                              (if (if (= (vector-length
                                                           '#(syntax-object
                                                              ...
                                                              ((top)
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i2229"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i466"
                                                                  "i464"
                                                                  "i462"
                                                                  "i460"
                                                                  "i458"
                                                                  "i456"
                                                                  "i454"
                                                                  "i452"
                                                                  "i450"
                                                                  "i448"
                                                                  "i446"
                                                                  "i444"
                                                                  "i442"
                                                                  "i440"
                                                                  "i438"
                                                                  "i436"
                                                                  "i434"
                                                                  "i432"
                                                                  "i430"
                                                                  "i428"
                                                                  "i426"
                                                                  "i424"
                                                                  "i422"
                                                                  "i420"
                                                                  "i418"
                                                                  "i416"
                                                                  "i414"
                                                                  "i412"
                                                                  "i410"
                                                                  "i408"
                                                                  "i406"
                                                                  "i404"
                                                                  "i402"
                                                                  "i400"
                                                                  "i398"
                                                                  "i397"
                                                                  "i395"
                                                                  "i392"
                                                                  "i391"
                                                                  "i390"
                                                                  "i388"
                                                                  "i387"
                                                                  "i385"
                                                                  "i383"
                                                                  "i381"
                                                                  "i379"
                                                                  "i377"
                                                                  "i375"
                                                                  "i373"
                                                                  "i371"
                                                                  "i368"
                                                                  "i366"
                                                                  "i365"
                                                                  "i363"
                                                                  "i361"
                                                                  "i359"
                                                                  "i357"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i352"
                                                                  "i351"
                                                                  "i348"
                                                                  "i346"
                                                                  "i344"
                                                                  "i342"
                                                                  "i340"
                                                                  "i338"
                                                                  "i336"
                                                                  "i335"
                                                                  "i334"
                                                                  "i332"
                                                                  "i330"
                                                                  "i329"
                                                                  "i326"
                                                                  "i325"
                                                                  "i323"
                                                                  "i321"
                                                                  "i319"
                                                                  "i317"
                                                                  "i315"
                                                                  "i313"
                                                                  "i311"
                                                                  "i309"
                                                                  "i307"
                                                                  "i304"
                                                                  "i302"
                                                                  "i300"
                                                                  "i298"
                                                                  "i296"
                                                                  "i294"
                                                                  "i292"
                                                                  "i290"
                                                                  "i288"
                                                                  "i286"
                                                                  "i284"
                                                                  "i282"
                                                                  "i280"
                                                                  "i278"
                                                                  "i276"
                                                                  "i274"
                                                                  "i272"
                                                                  "i270"
                                                                  "i268"
                                                                  "i266"
                                                                  "i264"
                                                                  "i262"
                                                                  "i260"
                                                                  "i259"
                                                                  "i256"
                                                                  "i254"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i248"
                                                                  "i246"
                                                                  "i244"
                                                                  "i241"
                                                                  "i239"
                                                                  "i237"
                                                                  "i235"
                                                                  "i233"
                                                                  "i231"
                                                                  "i229"
                                                                  "i227"
                                                                  "i225"
                                                                  "i223"
                                                                  "i221"
                                                                  "i219"
                                                                  "i217"
                                                                  "i215"
                                                                  "i213"
                                                                  "i211"
                                                                  "i209"
                                                                  "i207"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i45"
                                                                  "i44"
                                                                  "i43")))
                                                              (hygiene guile)))
                                                         4)
                                                    (eq? (vector-ref
                                                           '#(syntax-object
                                                              ...
                                                              ((top)
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i2229"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i466"
                                                                  "i464"
                                                                  "i462"
                                                                  "i460"
                                                                  "i458"
                                                                  "i456"
                                                                  "i454"
                                                                  "i452"
                                                                  "i450"
                                                                  "i448"
                                                                  "i446"
                                                                  "i444"
                                                                  "i442"
                                                                  "i440"
                                                                  "i438"
                                                                  "i436"
                                                                  "i434"
                                                                  "i432"
                                                                  "i430"
                                                                  "i428"
                                                                  "i426"
                                                                  "i424"
                                                                  "i422"
                                                                  "i420"
                                                                  "i418"
                                                                  "i416"
                                                                  "i414"
                                                                  "i412"
                                                                  "i410"
                                                                  "i408"
                                                                  "i406"
                                                                  "i404"
                                                                  "i402"
                                                                  "i400"
                                                                  "i398"
                                                                  "i397"
                                                                  "i395"
                                                                  "i392"
                                                                  "i391"
                                                                  "i390"
                                                                  "i388"
                                                                  "i387"
                                                                  "i385"
                                                                  "i383"
                                                                  "i381"
                                                                  "i379"
                                                                  "i377"
                                                                  "i375"
                                                                  "i373"
                                                                  "i371"
                                                                  "i368"
                                                                  "i366"
                                                                  "i365"
                                                                  "i363"
                                                                  "i361"
                                                                  "i359"
                                                                  "i357"
                                                                  "i356"
                                                                  "i355"
                                                                  "i354"
                                                                  "i352"
                                                                  "i351"
                                                                  "i348"
                                                                  "i346"
                                                                  "i344"
                                                                  "i342"
                                                                  "i340"
                                                                  "i338"
                                                                  "i336"
                                                                  "i335"
                                                                  "i334"
                                                                  "i332"
                                                                  "i330"
                                                                  "i329"
                                                                  "i326"
                                                                  "i325"
                                                                  "i323"
                                                                  "i321"
                                                                  "i319"
                                                                  "i317"
                                                                  "i315"
                                                                  "i313"
                                                                  "i311"
                                                                  "i309"
                                                                  "i307"
                                                                  "i304"
                                                                  "i302"
                                                                  "i300"
                                                                  "i298"
                                                                  "i296"
                                                                  "i294"
                                                                  "i292"
                                                                  "i290"
                                                                  "i288"
                                                                  "i286"
                                                                  "i284"
                                                                  "i282"
                                                                  "i280"
                                                                  "i278"
                                                                  "i276"
                                                                  "i274"
                                                                  "i272"
                                                                  "i270"
                                                                  "i268"
                                                                  "i266"
                                                                  "i264"
                                                                  "i262"
                                                                  "i260"
                                                                  "i259"
                                                                  "i256"
                                                                  "i254"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i250"
                                                                  "i248"
                                                                  "i246"
                                                                  "i244"
                                                                  "i241"
                                                                  "i239"
                                                                  "i237"
                                                                  "i235"
                                                                  "i233"
                                                                  "i231"
                                                                  "i229"
                                                                  "i227"
                                                                  "i225"
                                                                  "i223"
                                                                  "i221"
                                                                  "i219"
                                                                  "i217"
                                                                  "i215"
                                                                  "i213"
                                                                  "i211"
                                                                  "i209"
                                                                  "i207"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i45"
                                                                  "i44"
                                                                  "i43")))
                                                              (hygiene guile))
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                (vector-ref
                                                  '#(syntax-object
                                                     ...
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i2229"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i466"
                                                         "i464"
                                                         "i462"
                                                         "i460"
                                                         "i458"
                                                         "i456"
                                                         "i454"
                                                         "i452"
                                                         "i450"
                                                         "i448"
                                                         "i446"
                                                         "i444"
                                                         "i442"
                                                         "i440"
                                                         "i438"
                                                         "i436"
                                                         "i434"
                                                         "i432"
                                                         "i430"
                                                         "i428"
                                                         "i426"
                                                         "i424"
                                                         "i422"
                                                         "i420"
                                                         "i418"
                                                         "i416"
                                                         "i414"
                                                         "i412"
                                                         "i410"
                                                         "i408"
                                                         "i406"
                                                         "i404"
                                                         "i402"
                                                         "i400"
                                                         "i398"
                                                         "i397"
                                                         "i395"
                                                         "i392"
                                                         "i391"
                                                         "i390"
                                                         "i388"
                                                         "i387"
                                                         "i385"
                                                         "i383"
                                                         "i381"
                                                         "i379"
                                                         "i377"
                                                         "i375"
                                                         "i373"
                                                         "i371"
                                                         "i368"
                                                         "i366"
                                                         "i365"
                                                         "i363"
                                                         "i361"
                                                         "i359"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i354"
                                                         "i352"
                                                         "i351"
                                                         "i348"
                                                         "i346"
                                                         "i344"
                                                         "i342"
                                                         "i340"
                                                         "i338"
                                                         "i336"
                                                         "i335"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i329"
                                                         "i326"
                                                         "i325"
                                                         "i323"
                                                         "i321"
                                                         "i319"
                                                         "i317"
                                                         "i315"
                                                         "i313"
                                                         "i311"
                                                         "i309"
                                                         "i307"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i288"
                                                         "i286"
                                                         "i284"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i264"
                                                         "i262"
                                                         "i260"
                                                         "i259"
                                                         "i256"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i241"
                                                         "i239"
                                                         "i237"
                                                         "i235"
                                                         "i233"
                                                         "i231"
                                                         "i229"
                                                         "i227"
                                                         "i225"
                                                         "i223"
                                                         "i221"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i45" "i44" "i43")))
                                                     (hygiene guile))
                                                  1)
                                                '#(syntax-object
                                                   ...
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i2229"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        maybe-name-value!
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        set-lambda-meta!
                                                        lambda-meta
                                                        lambda?
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i466"
                                                       "i464"
                                                       "i462"
                                                       "i460"
                                                       "i458"
                                                       "i456"
                                                       "i454"
                                                       "i452"
                                                       "i450"
                                                       "i448"
                                                       "i446"
                                                       "i444"
                                                       "i442"
                                                       "i440"
                                                       "i438"
                                                       "i436"
                                                       "i434"
                                                       "i432"
                                                       "i430"
                                                       "i428"
                                                       "i426"
                                                       "i424"
                                                       "i422"
                                                       "i420"
                                                       "i418"
                                                       "i416"
                                                       "i414"
                                                       "i412"
                                                       "i410"
                                                       "i408"
                                                       "i406"
                                                       "i404"
                                                       "i402"
                                                       "i400"
                                                       "i398"
                                                       "i397"
                                                       "i395"
                                                       "i392"
                                                       "i391"
                                                       "i390"
                                                       "i388"
                                                       "i387"
                                                       "i385"
                                                       "i383"
                                                       "i381"
                                                       "i379"
                                                       "i377"
                                                       "i375"
                                                       "i373"
                                                       "i371"
                                                       "i368"
                                                       "i366"
                                                       "i365"
                                                       "i363"
                                                       "i361"
                                                       "i359"
                                                       "i357"
                                                       "i356"
                                                       "i355"
                                                       "i354"
                                                       "i352"
                                                       "i351"
                                                       "i348"
                                                       "i346"
                                                       "i344"
                                                       "i342"
                                                       "i340"
                                                       "i338"
                                                       "i336"
                                                       "i335"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i329"
                                                       "i326"
                                                       "i325"
                                                       "i323"
                                                       "i321"
                                                       "i319"
                                                       "i317"
                                                       "i315"
                                                       "i313"
                                                       "i311"
                                                       "i309"
                                                       "i307"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i288"
                                                       "i286"
                                                       "i284"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i264"
                                                       "i262"
                                                       "i260"
                                                       "i259"
                                                       "i256"
                                                       "i254"
                                                       "i253"
                                                       "i252"
                                                       "i251"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i241"
                                                       "i239"
                                                       "i237"
                                                       "i235"
                                                       "i233"
                                                       "i231"
                                                       "i229"
                                                       "i227"
                                                       "i225"
                                                       "i223"
                                                       "i221"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-accessors
                                                        define-expansion-constructors)
                                                      ((top) (top) (top))
                                                      ("i45" "i44" "i43")))
                                                   (hygiene guile))))
                                       (eq? (#{id-var-name 411}#
                                              #{x 3957}#
                                              '(()))
                                            (#{id-var-name 411}#
                                              '#(syntax-object
                                                 ...
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i2229"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      maybe-name-value!
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      set-lambda-meta!
                                                      lambda-meta
                                                      lambda?
                                                      make-dynlet
                                                      make-letrec
                                                      make-let
                                                      make-lambda-case
                                                      make-lambda
                                                      make-sequence
                                                      make-application
                                                      make-conditional
                                                      make-toplevel-define
                                                      make-toplevel-set
                                                      make-toplevel-ref
                                                      make-module-set
                                                      make-module-ref
                                                      make-lexical-set
                                                      make-lexical-ref
                                                      make-primitive-ref
                                                      make-const
                                                      make-void)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i466"
                                                     "i464"
                                                     "i462"
                                                     "i460"
                                                     "i458"
                                                     "i456"
                                                     "i454"
                                                     "i452"
                                                     "i450"
                                                     "i448"
                                                     "i446"
                                                     "i444"
                                                     "i442"
                                                     "i440"
                                                     "i438"
                                                     "i436"
                                                     "i434"
                                                     "i432"
                                                     "i430"
                                                     "i428"
                                                     "i426"
                                                     "i424"
                                                     "i422"
                                                     "i420"
                                                     "i418"
                                                     "i416"
                                                     "i414"
                                                     "i412"
                                                     "i410"
                                                     "i408"
                                                     "i406"
                                                     "i404"
                                                     "i402"
                                                     "i400"
                                                     "i398"
                                                     "i397"
                                                     "i395"
                                                     "i392"
                                                     "i391"
                                                     "i390"
                                                     "i388"
                                                     "i387"
                                                     "i385"
                                                     "i383"
                                                     "i381"
                                                     "i379"
                                                     "i377"
                                                     "i375"
                                                     "i373"
                                                     "i371"
                                                     "i368"
                                                     "i366"
                                                     "i365"
                                                     "i363"
                                                     "i361"
                                                     "i359"
                                                     "i357"
                                                     "i356"
                                                     "i355"
                                                     "i354"
                                                     "i352"
                                                     "i351"
                                                     "i348"
                                                     "i346"
                                                     "i344"
                                                     "i342"
                                                     "i340"
                                                     "i338"
                                                     "i336"
                                                     "i335"
                                                     "i334"
                                                     "i332"
                                                     "i330"
                                                     "i329"
                                                     "i326"
                                                     "i325"
                                                     "i323"
                                                     "i321"
                                                     "i319"
                                                     "i317"
                                                     "i315"
                                                     "i313"
                                                     "i311"
                                                     "i309"
                                                     "i307"
                                                     "i304"
                                                     "i302"
                                                     "i300"
                                                     "i298"
                                                     "i296"
                                                     "i294"
                                                     "i292"
                                                     "i290"
                                                     "i288"
                                                     "i286"
                                                     "i284"
                                                     "i282"
                                                     "i280"
                                                     "i278"
                                                     "i276"
                                                     "i274"
                                                     "i272"
                                                     "i270"
                                                     "i268"
                                                     "i266"
                                                     "i264"
                                                     "i262"
                                                     "i260"
                                                     "i259"
                                                     "i256"
                                                     "i254"
                                                     "i253"
                                                     "i252"
                                                     "i251"
                                                     "i250"
                                                     "i248"
                                                     "i246"
                                                     "i244"
                                                     "i241"
                                                     "i239"
                                                     "i237"
                                                     "i235"
                                                     "i233"
                                                     "i231"
                                                     "i229"
                                                     "i227"
                                                     "i225"
                                                     "i223"
                                                     "i221"
                                                     "i219"
                                                     "i217"
                                                     "i215"
                                                     "i213"
                                                     "i211"
                                                     "i209"
                                                     "i207"))
                                                  #(ribcage
                                                    (define-structure
                                                      define-expansion-accessors
                                                      define-expansion-constructors)
                                                    ((top) (top) (top))
                                                    ("i45" "i44" "i43")))
                                                 (hygiene guile))
                                              '(())))
                                       #f)
                                     #f))
                              #f))
                          #{key 3955}#)
                      (let ((#{x 3963}#
                              (gensym
                                (string-append (symbol->string 'tmp) " "))))
                        (#{build-application 271}#
                          #{s 3940}#
                          (let ((#{req 9847}# (list 'tmp))
                                (#{vars 9849}# (list #{x 3963}#))
                                (#{exp 9851}#
                                  (#{gen-syntax-case 3710}#
                                    (make-struct/no-tail
                                      (vector-ref %expanded-vtables 3)
                                      #f
                                      'tmp
                                      #{x 3963}#)
                                    #{key 3955}#
                                    #{m 3956}#
                                    #{r 3938}#
                                    #{mod 3941}#)))
                            (let ((#{body 9868}#
                                    (make-struct/no-tail
                                      (vector-ref %expanded-vtables 14)
                                      #f
                                      #{req 9847}#
                                      #f
                                      #f
                                      #f
                                      '()
                                      #{vars 9849}#
                                      #{exp 9851}#
                                      #f)))
                              (make-struct/no-tail
                                (vector-ref %expanded-vtables 13)
                                #f
                                '()
                                #{body 9868}#)))
                          (list (#{chi 437}#
                                  #{val 3954}#
                                  #{r 3938}#
                                  '(())
                                  #{mod 3941}#))))
                      (syntax-violation
                        'syntax-case
                        "invalid literals list"
                        #{e 3948}#)))
                  #{tmp 3950}#)
                (syntax-violation
                  #f
                  "source expression failed to match any pattern"
                  #{e 3948}#)))))))
    (set! macroexpand
      (lambda*
        (#{x 3969}#
          #:optional
          (#{m 3971}# 'e)
          (#{esew 3973}# '(eval)))
        (#{chi-top-sequence 429}#
          (list #{x 3969}#)
          '()
          '((top))
          #f
          #{m 3971}#
          #{esew 3973}#
          (cons 'hygiene (module-name (current-module))))))
    (set! identifier?
      (lambda (#{x 3977}#)
        (if (if (vector? #{x 3977}#)
              (if (= (vector-length #{x 3977}#) 4)
                (eq? (vector-ref #{x 3977}# 0) 'syntax-object)
                #f)
              #f)
          (symbol? (vector-ref #{x 3977}# 1))
          #f)))
    (set! datum->syntax
      (lambda (#{id 3979}# #{datum 3980}#)
        (let ((#{wrap 9942}# (vector-ref #{id 3979}# 2))
              (#{module 9943}# (vector-ref #{id 3979}# 3)))
          (vector
            'syntax-object
            #{datum 3980}#
            #{wrap 9942}#
            #{module 9943}#))))
    (set! syntax->datum
      (lambda (#{x 3983}#)
        (#{strip 463}# #{x 3983}# '(()))))
    (set! syntax-source
      (lambda (#{x 3986}#)
        (#{source-annotation 327}# #{x 3986}#)))
    (set! generate-temporaries
      (lambda (#{ls 3988}#)
        (begin
          (if (not (list? #{ls 3988}#))
            (syntax-violation
              'generate-temporaries
              "invalid argument"
              #{ls 3988}#))
          (let ((#{mod 3994}#
                  (cons 'hygiene (module-name (current-module)))))
            (map (lambda (#{x 3995}#)
                   (#{wrap 423}# (gensym) '((top)) #{mod 3994}#))
                 #{ls 3988}#)))))
    (set! free-identifier=?
      (lambda (#{x 3999}# #{y 4000}#)
        (begin
          (if (not (if (if (vector? #{x 3999}#)
                         (if (= (vector-length #{x 3999}#) 4)
                           (eq? (vector-ref #{x 3999}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{x 3999}# 1))
                     #f))
            (syntax-violation
              'free-identifier=?
              "invalid argument"
              #{x 3999}#))
          (if (not (if (if (vector? #{y 4000}#)
                         (if (= (vector-length #{y 4000}#) 4)
                           (eq? (vector-ref #{y 4000}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{y 4000}# 1))
                     #f))
            (syntax-violation
              'free-identifier=?
              "invalid argument"
              #{y 4000}#))
          (if (eq? (if (if (vector? #{x 3999}#)
                         (if (= (vector-length #{x 3999}#) 4)
                           (eq? (vector-ref #{x 3999}# 0) 'syntax-object)
                           #f)
                         #f)
                     (vector-ref #{x 3999}# 1)
                     #{x 3999}#)
                   (if (if (vector? #{y 4000}#)
                         (if (= (vector-length #{y 4000}#) 4)
                           (eq? (vector-ref #{y 4000}# 0) 'syntax-object)
                           #f)
                         #f)
                     (vector-ref #{y 4000}# 1)
                     #{y 4000}#))
            (eq? (#{id-var-name 411}# #{x 3999}# '(()))
                 (#{id-var-name 411}# #{y 4000}# '(())))
            #f))))
    (set! bound-identifier=?
      (lambda (#{x 4009}# #{y 4010}#)
        (begin
          (if (not (if (if (vector? #{x 4009}#)
                         (if (= (vector-length #{x 4009}#) 4)
                           (eq? (vector-ref #{x 4009}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{x 4009}# 1))
                     #f))
            (syntax-violation
              'bound-identifier=?
              "invalid argument"
              #{x 4009}#))
          (if (not (if (if (vector? #{y 4010}#)
                         (if (= (vector-length #{y 4010}#) 4)
                           (eq? (vector-ref #{y 4010}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{y 4010}# 1))
                     #f))
            (syntax-violation
              'bound-identifier=?
              "invalid argument"
              #{y 4010}#))
          (if (if (if (vector? #{x 4009}#)
                    (if (= (vector-length #{x 4009}#) 4)
                      (eq? (vector-ref #{x 4009}# 0) 'syntax-object)
                      #f)
                    #f)
                (if (vector? #{y 4010}#)
                  (if (= (vector-length #{y 4010}#) 4)
                    (eq? (vector-ref #{y 4010}# 0) 'syntax-object)
                    #f)
                  #f)
                #f)
            (if (eq? (vector-ref #{x 4009}# 1)
                     (vector-ref #{y 4010}# 1))
              (#{same-marks? 409}#
                (car (vector-ref #{x 4009}# 2))
                (car (vector-ref #{y 4010}# 2)))
              #f)
            (eq? #{x 4009}# #{y 4010}#)))))
    (set! syntax-violation
      (lambda*
        (#{who 4019}#
          #{message 4020}#
          #{form 4021}#
          #:optional
          (#{subform 4025}# #f))
        (begin
          (if (not (if (not #{who 4019}#)
                     (not #{who 4019}#)
                     (let ((#{t 4037}# (string? #{who 4019}#)))
                       (if #{t 4037}# #{t 4037}# (symbol? #{who 4019}#)))))
            (syntax-violation
              'syntax-violation
              "invalid argument"
              #{who 4019}#))
          (if (not (string? #{message 4020}#))
            (syntax-violation
              'syntax-violation
              "invalid argument"
              #{message 4020}#))
          (throw 'syntax-error
                 #{who 4019}#
                 #{message 4020}#
                 (#{source-annotation 327}#
                   (if #{form 4021}# #{form 4021}# #{subform 4025}#))
                 (#{strip 463}# #{form 4021}# '(()))
                 (if #{subform 4025}#
                   (#{strip 463}# #{subform 4025}# '(()))
                   #f)))))
    (letrec*
      ((#{match-each 4051}#
         (lambda (#{e 4064}# #{p 4065}# #{w 4066}# #{mod 4067}#)
           (if (pair? #{e 4064}#)
             (let ((#{first 4075}#
                     (#{match 4063}#
                       (car #{e 4064}#)
                       #{p 4065}#
                       #{w 4066}#
                       '()
                       #{mod 4067}#)))
               (if #{first 4075}#
                 (let ((#{rest 4079}#
                         (#{match-each 4051}#
                           (cdr #{e 4064}#)
                           #{p 4065}#
                           #{w 4066}#
                           #{mod 4067}#)))
                   (if #{rest 4079}#
                     (cons #{first 4075}# #{rest 4079}#)
                     #f))
                 #f))
             (if (null? #{e 4064}#)
               '()
               (if (if (vector? #{e 4064}#)
                     (if (= (vector-length #{e 4064}#) 4)
                       (eq? (vector-ref #{e 4064}# 0) 'syntax-object)
                       #f)
                     #f)
                 (#{match-each 4051}#
                   (vector-ref #{e 4064}# 1)
                   #{p 4065}#
                   (#{join-wraps 405}#
                     #{w 4066}#
                     (vector-ref #{e 4064}# 2))
                   (vector-ref #{e 4064}# 3))
                 #f)))))
       (#{match-each+ 4053}#
         (lambda (#{e 4087}#
                  #{x-pat 4088}#
                  #{y-pat 4089}#
                  #{z-pat 4090}#
                  #{w 4091}#
                  #{r 4092}#
                  #{mod 4093}#)
           (letrec*
             ((#{f 4104}#
                (lambda (#{e 4105}# #{w 4106}#)
                  (if (pair? #{e 4105}#)
                    (call-with-values
                      (lambda ()
                        (#{f 4104}# (cdr #{e 4105}#) #{w 4106}#))
                      (lambda (#{xr* 4109}# #{y-pat 4110}# #{r 4111}#)
                        (if #{r 4111}#
                          (if (null? #{y-pat 4110}#)
                            (let ((#{xr 4116}#
                                    (#{match 4063}#
                                      (car #{e 4105}#)
                                      #{x-pat 4088}#
                                      #{w 4106}#
                                      '()
                                      #{mod 4093}#)))
                              (if #{xr 4116}#
                                (values
                                  (cons #{xr 4116}# #{xr* 4109}#)
                                  #{y-pat 4110}#
                                  #{r 4111}#)
                                (values #f #f #f)))
                            (values
                              '()
                              (cdr #{y-pat 4110}#)
                              (#{match 4063}#
                                (car #{e 4105}#)
                                (car #{y-pat 4110}#)
                                #{w 4106}#
                                #{r 4111}#
                                #{mod 4093}#)))
                          (values #f #f #f))))
                    (if (if (vector? #{e 4105}#)
                          (if (= (vector-length #{e 4105}#) 4)
                            (eq? (vector-ref #{e 4105}# 0) 'syntax-object)
                            #f)
                          #f)
                      (#{f 4104}#
                        (vector-ref #{e 4105}# 1)
                        (#{join-wraps 405}# #{w 4106}# #{e 4105}#))
                      (values
                        '()
                        #{y-pat 4089}#
                        (#{match 4063}#
                          #{e 4105}#
                          #{z-pat 4090}#
                          #{w 4106}#
                          #{r 4092}#
                          #{mod 4093}#)))))))
             (#{f 4104}# #{e 4087}# #{w 4091}#))))
       (#{match-each-any 4055}#
         (lambda (#{e 4120}# #{w 4121}# #{mod 4122}#)
           (if (pair? #{e 4120}#)
             (let ((#{l 4129}#
                     (#{match-each-any 4055}#
                       (cdr #{e 4120}#)
                       #{w 4121}#
                       #{mod 4122}#)))
               (if #{l 4129}#
                 (cons (#{wrap 423}#
                         (car #{e 4120}#)
                         #{w 4121}#
                         #{mod 4122}#)
                       #{l 4129}#)
                 #f))
             (if (null? #{e 4120}#)
               '()
               (if (if (vector? #{e 4120}#)
                     (if (= (vector-length #{e 4120}#) 4)
                       (eq? (vector-ref #{e 4120}# 0) 'syntax-object)
                       #f)
                     #f)
                 (#{match-each-any 4055}#
                   (vector-ref #{e 4120}# 1)
                   (#{join-wraps 405}#
                     #{w 4121}#
                     (vector-ref #{e 4120}# 2))
                   #{mod 4122}#)
                 #f)))))
       (#{match-empty 4057}#
         (lambda (#{p 4137}# #{r 4138}#)
           (if (null? #{p 4137}#)
             #{r 4138}#
             (if (eq? #{p 4137}# '_)
               #{r 4138}#
               (if (eq? #{p 4137}# 'any)
                 (cons '() #{r 4138}#)
                 (if (pair? #{p 4137}#)
                   (#{match-empty 4057}#
                     (car #{p 4137}#)
                     (#{match-empty 4057}#
                       (cdr #{p 4137}#)
                       #{r 4138}#))
                   (if (eq? #{p 4137}# 'each-any)
                     (cons '() #{r 4138}#)
                     (let ((#{atom-key 4154}# (vector-ref #{p 4137}# 0)))
                       (if (memv #{atom-key 4154}# '(each))
                         (#{match-empty 4057}#
                           (vector-ref #{p 4137}# 1)
                           #{r 4138}#)
                         (if (memv #{atom-key 4154}# '(each+))
                           (#{match-empty 4057}#
                             (vector-ref #{p 4137}# 1)
                             (#{match-empty 4057}#
                               (reverse (vector-ref #{p 4137}# 2))
                               (#{match-empty 4057}#
                                 (vector-ref #{p 4137}# 3)
                                 #{r 4138}#)))
                           (if (memv #{atom-key 4154}# '(free-id atom))
                             #{r 4138}#
                             (if (memv #{atom-key 4154}# '(vector))
                               (#{match-empty 4057}#
                                 (vector-ref #{p 4137}# 1)
                                 #{r 4138}#)))))))))))))
       (#{combine 4059}#
         (lambda (#{r* 4159}# #{r 4160}#)
           (if (null? (car #{r* 4159}#))
             #{r 4160}#
             (cons (map car #{r* 4159}#)
                   (#{combine 4059}#
                     (map cdr #{r* 4159}#)
                     #{r 4160}#)))))
       (#{match* 4061}#
         (lambda (#{e 4163}#
                  #{p 4164}#
                  #{w 4165}#
                  #{r 4166}#
                  #{mod 4167}#)
           (if (null? #{p 4164}#)
             (if (null? #{e 4163}#) #{r 4166}# #f)
             (if (pair? #{p 4164}#)
               (if (pair? #{e 4163}#)
                 (#{match 4063}#
                   (car #{e 4163}#)
                   (car #{p 4164}#)
                   #{w 4165}#
                   (#{match 4063}#
                     (cdr #{e 4163}#)
                     (cdr #{p 4164}#)
                     #{w 4165}#
                     #{r 4166}#
                     #{mod 4167}#)
                   #{mod 4167}#)
                 #f)
               (if (eq? #{p 4164}# 'each-any)
                 (let ((#{l 4184}#
                         (#{match-each-any 4055}#
                           #{e 4163}#
                           #{w 4165}#
                           #{mod 4167}#)))
                   (if #{l 4184}# (cons #{l 4184}# #{r 4166}#) #f))
                 (let ((#{atom-key 4190}# (vector-ref #{p 4164}# 0)))
                   (if (memv #{atom-key 4190}# '(each))
                     (if (null? #{e 4163}#)
                       (#{match-empty 4057}#
                         (vector-ref #{p 4164}# 1)
                         #{r 4166}#)
                       (let ((#{l 4193}#
                               (#{match-each 4051}#
                                 #{e 4163}#
                                 (vector-ref #{p 4164}# 1)
                                 #{w 4165}#
                                 #{mod 4167}#)))
                         (if #{l 4193}#
                           (letrec*
                             ((#{collect 4198}#
                                (lambda (#{l 4199}#)
                                  (if (null? (car #{l 4199}#))
                                    #{r 4166}#
                                    (cons (map car #{l 4199}#)
                                          (#{collect 4198}#
                                            (map cdr #{l 4199}#)))))))
                             (#{collect 4198}# #{l 4193}#))
                           #f)))
                     (if (memv #{atom-key 4190}# '(each+))
                       (call-with-values
                         (lambda ()
                           (#{match-each+ 4053}#
                             #{e 4163}#
                             (vector-ref #{p 4164}# 1)
                             (vector-ref #{p 4164}# 2)
                             (vector-ref #{p 4164}# 3)
                             #{w 4165}#
                             #{r 4166}#
                             #{mod 4167}#))
                         (lambda (#{xr* 4201}# #{y-pat 4202}# #{r 4203}#)
                           (if #{r 4203}#
                             (if (null? #{y-pat 4202}#)
                               (if (null? #{xr* 4201}#)
                                 (#{match-empty 4057}#
                                   (vector-ref #{p 4164}# 1)
                                   #{r 4203}#)
                                 (#{combine 4059}# #{xr* 4201}# #{r 4203}#))
                               #f)
                             #f)))
                       (if (memv #{atom-key 4190}# '(free-id))
                         (if (if (symbol? #{e 4163}#)
                               #t
                               (if (if (vector? #{e 4163}#)
                                     (if (= (vector-length #{e 4163}#) 4)
                                       (eq? (vector-ref #{e 4163}# 0)
                                            'syntax-object)
                                       #f)
                                     #f)
                                 (symbol? (vector-ref #{e 4163}# 1))
                                 #f))
                           (if (let ((#{i 10362}#
                                       (#{wrap 423}#
                                         #{e 4163}#
                                         #{w 4165}#
                                         #{mod 4167}#))
                                     (#{j 10363}# (vector-ref #{p 4164}# 1)))
                                 (if (eq? (if (if (vector? #{i 10362}#)
                                                (if (= (vector-length
                                                         #{i 10362}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{i 10362}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (vector-ref #{i 10362}# 1)
                                            #{i 10362}#)
                                          (if (if (vector? #{j 10363}#)
                                                (if (= (vector-length
                                                         #{j 10363}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{j 10363}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (vector-ref #{j 10363}# 1)
                                            #{j 10363}#))
                                   (eq? (#{id-var-name 411}# #{i 10362}# '(()))
                                        (#{id-var-name 411}#
                                          #{j 10363}#
                                          '(())))
                                   #f))
                             #{r 4166}#
                             #f)
                           #f)
                         (if (memv #{atom-key 4190}# '(atom))
                           (if (equal?
                                 (vector-ref #{p 4164}# 1)
                                 (#{strip 463}# #{e 4163}# #{w 4165}#))
                             #{r 4166}#
                             #f)
                           (if (memv #{atom-key 4190}# '(vector))
                             (if (vector? #{e 4163}#)
                               (#{match 4063}#
                                 (vector->list #{e 4163}#)
                                 (vector-ref #{p 4164}# 1)
                                 #{w 4165}#
                                 #{r 4166}#
                                 #{mod 4167}#)
                               #f))))))))))))
       (#{match 4063}#
         (lambda (#{e 4220}#
                  #{p 4221}#
                  #{w 4222}#
                  #{r 4223}#
                  #{mod 4224}#)
           (if (not #{r 4223}#)
             #f
             (if (eq? #{p 4221}# '_)
               #{r 4223}#
               (if (eq? #{p 4221}# 'any)
                 (cons (#{wrap 423}# #{e 4220}# #{w 4222}# #{mod 4224}#)
                       #{r 4223}#)
                 (if (if (vector? #{e 4220}#)
                       (if (= (vector-length #{e 4220}#) 4)
                         (eq? (vector-ref #{e 4220}# 0) 'syntax-object)
                         #f)
                       #f)
                   (#{match* 4061}#
                     (vector-ref #{e 4220}# 1)
                     #{p 4221}#
                     (#{join-wraps 405}#
                       #{w 4222}#
                       (vector-ref #{e 4220}# 2))
                     #{r 4223}#
                     (vector-ref #{e 4220}# 3))
                   (#{match* 4061}#
                     #{e 4220}#
                     #{p 4221}#
                     #{w 4222}#
                     #{r 4223}#
                     #{mod 4224}#))))))))
      (set! $sc-dispatch
        (lambda (#{e 4239}# #{p 4240}#)
          (if (eq? #{p 4240}# 'any)
            (list #{e 4239}#)
            (if (eq? #{p 4240}# '_)
              '()
              (if (if (vector? #{e 4239}#)
                    (if (= (vector-length #{e 4239}#) 4)
                      (eq? (vector-ref #{e 4239}# 0) 'syntax-object)
                      #f)
                    #f)
                (#{match* 4061}#
                  (vector-ref #{e 4239}# 1)
                  #{p 4240}#
                  (vector-ref #{e 4239}# 2)
                  '()
                  (vector-ref #{e 4239}# 3))
                (#{match* 4061}#
                  #{e 4239}#
                  #{p 4240}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (lambda (#{x 10409}#)
      (let ((#{tmp 10412}#
              ($sc-dispatch #{x 10409}# '(_ () any . each-any))))
        (if #{tmp 10412}#
          (@apply
            (lambda (#{e1 10415}# #{e2 10416}#)
              (cons '#(syntax-object
                       let
                       ((top)
                        #(ribcage
                          #(e1 e2)
                          #((top) (top))
                          #("i10413" "i10414"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i10410")))
                       (hygiene guile))
                    (cons '() (cons #{e1 10415}# #{e2 10416}#))))
            #{tmp 10412}#)
          (let ((#{tmp 10418}#
                  ($sc-dispatch
                    #{x 10409}#
                    '(_ ((any any)) any . each-any))))
            (if #{tmp 10418}#
              (@apply
                (lambda (#{out 10423}#
                         #{in 10424}#
                         #{e1 10425}#
                         #{e2 10426}#)
                  (list '#(syntax-object
                           syntax-case
                           ((top)
                            #(ribcage
                              #(out in e1 e2)
                              #((top) (top) (top) (top))
                              #("i10419" "i10420" "i10421" "i10422"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i10410")))
                           (hygiene guile))
                        #{in 10424}#
                        '()
                        (list #{out 10423}#
                              (cons '#(syntax-object
                                       let
                                       ((top)
                                        #(ribcage
                                          #(out in e1 e2)
                                          #((top) (top) (top) (top))
                                          #("i10419"
                                            "i10420"
                                            "i10421"
                                            "i10422"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i10410")))
                                       (hygiene guile))
                                    (cons '()
                                          (cons #{e1 10425}# #{e2 10426}#))))))
                #{tmp 10418}#)
              (let ((#{tmp 10428}#
                      ($sc-dispatch
                        #{x 10409}#
                        '(_ #(each (any any)) any . each-any))))
                (if #{tmp 10428}#
                  (@apply
                    (lambda (#{out 10433}#
                             #{in 10434}#
                             #{e1 10435}#
                             #{e2 10436}#)
                      (list '#(syntax-object
                               syntax-case
                               ((top)
                                #(ribcage
                                  #(out in e1 e2)
                                  #((top) (top) (top) (top))
                                  #("i10429" "i10430" "i10431" "i10432"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10410")))
                               (hygiene guile))
                            (cons '#(syntax-object
                                     list
                                     ((top)
                                      #(ribcage
                                        #(out in e1 e2)
                                        #((top) (top) (top) (top))
                                        #("i10429" "i10430" "i10431" "i10432"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i10410")))
                                     (hygiene guile))
                                  #{in 10434}#)
                            '()
                            (list #{out 10433}#
                                  (cons '#(syntax-object
                                           let
                                           ((top)
                                            #(ribcage
                                              #(out in e1 e2)
                                              #((top) (top) (top) (top))
                                              #("i10429"
                                                "i10430"
                                                "i10431"
                                                "i10432"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10410")))
                                           (hygiene guile))
                                        (cons '()
                                              (cons #{e1 10435}#
                                                    #{e2 10436}#))))))
                    #{tmp 10428}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{x 10409}#))))))))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (lambda (#{x 10440}#)
      (let ((#{tmp 10443}#
              ($sc-dispatch
                #{x 10440}#
                '(_ each-any . #(each ((any . any) any))))))
        (if #{tmp 10443}#
          (@apply
            (lambda (#{k 10448}#
                     #{keyword 10449}#
                     #{pattern 10450}#
                     #{template 10451}#)
              (list '#(syntax-object
                       lambda
                       ((top)
                        #(ribcage
                          #(k keyword pattern template)
                          #((top) (top) (top) (top))
                          #("i10444" "i10445" "i10446" "i10447"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i10441")))
                       (hygiene guile))
                    '(#(syntax-object
                        x
                        ((top)
                         #(ribcage
                           #(k keyword pattern template)
                           #((top) (top) (top) (top))
                           #("i10444" "i10445" "i10446" "i10447"))
                         #(ribcage () () ())
                         #(ribcage #(x) #((top)) #("i10441")))
                        (hygiene guile)))
                    (vector
                      '(#(syntax-object
                          macro-type
                          ((top)
                           #(ribcage
                             #(k keyword pattern template)
                             #((top) (top) (top) (top))
                             #("i10444" "i10445" "i10446" "i10447"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i10441")))
                          (hygiene guile))
                        .
                        #(syntax-object
                          syntax-rules
                          ((top)
                           #(ribcage
                             #(k keyword pattern template)
                             #((top) (top) (top) (top))
                             #("i10444" "i10445" "i10446" "i10447"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i10441")))
                          (hygiene guile)))
                      (cons '#(syntax-object
                               patterns
                               ((top)
                                #(ribcage
                                  #(k keyword pattern template)
                                  #((top) (top) (top) (top))
                                  #("i10444" "i10445" "i10446" "i10447"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i10441")))
                               (hygiene guile))
                            #{pattern 10450}#))
                    (cons '#(syntax-object
                             syntax-case
                             ((top)
                              #(ribcage
                                #(k keyword pattern template)
                                #((top) (top) (top) (top))
                                #("i10444" "i10445" "i10446" "i10447"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i10441")))
                             (hygiene guile))
                          (cons '#(syntax-object
                                   x
                                   ((top)
                                    #(ribcage
                                      #(k keyword pattern template)
                                      #((top) (top) (top) (top))
                                      #("i10444" "i10445" "i10446" "i10447"))
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i10441")))
                                   (hygiene guile))
                                (cons #{k 10448}#
                                      (map (lambda (#{tmp 10455}#
                                                    #{tmp 10454}#)
                                             (list (cons '#(syntax-object
                                                            dummy
                                                            ((top)
                                                             #(ribcage
                                                               #(k
                                                                 keyword
                                                                 pattern
                                                                 template)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i10444"
                                                                 "i10445"
                                                                 "i10446"
                                                                 "i10447"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i10441")))
                                                            (hygiene guile))
                                                         #{tmp 10454}#)
                                                   (list '#(syntax-object
                                                            syntax
                                                            ((top)
                                                             #(ribcage
                                                               #(k
                                                                 keyword
                                                                 pattern
                                                                 template)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i10444"
                                                                 "i10445"
                                                                 "i10446"
                                                                 "i10447"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i10441")))
                                                            (hygiene guile))
                                                         #{tmp 10455}#)))
                                           #{template 10451}#
                                           #{pattern 10450}#))))))
            #{tmp 10443}#)
          (let ((#{tmp 10456}#
                  ($sc-dispatch
                    #{x 10440}#
                    '(_ each-any any . #(each ((any . any) any))))))
            (if (if #{tmp 10456}#
                  (@apply
                    (lambda (#{k 10462}#
                             #{docstring 10463}#
                             #{keyword 10464}#
                             #{pattern 10465}#
                             #{template 10466}#)
                      (string? (syntax->datum #{docstring 10463}#)))
                    #{tmp 10456}#)
                  #f)
              (@apply
                (lambda (#{k 10472}#
                         #{docstring 10473}#
                         #{keyword 10474}#
                         #{pattern 10475}#
                         #{template 10476}#)
                  (list '#(syntax-object
                           lambda
                           ((top)
                            #(ribcage
                              #(k docstring keyword pattern template)
                              #((top) (top) (top) (top) (top))
                              #("i10467" "i10468" "i10469" "i10470" "i10471"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i10441")))
                           (hygiene guile))
                        '(#(syntax-object
                            x
                            ((top)
                             #(ribcage
                               #(k docstring keyword pattern template)
                               #((top) (top) (top) (top) (top))
                               #("i10467" "i10468" "i10469" "i10470" "i10471"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i10441")))
                            (hygiene guile)))
                        #{docstring 10473}#
                        (vector
                          '(#(syntax-object
                              macro-type
                              ((top)
                               #(ribcage
                                 #(k docstring keyword pattern template)
                                 #((top) (top) (top) (top) (top))
                                 #("i10467"
                                   "i10468"
                                   "i10469"
                                   "i10470"
                                   "i10471"))
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i10441")))
                              (hygiene guile))
                            .
                            #(syntax-object
                              syntax-rules
                              ((top)
                               #(ribcage
                                 #(k docstring keyword pattern template)
                                 #((top) (top) (top) (top) (top))
                                 #("i10467"
                                   "i10468"
                                   "i10469"
                                   "i10470"
                                   "i10471"))
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i10441")))
                              (hygiene guile)))
                          (cons '#(syntax-object
                                   patterns
                                   ((top)
                                    #(ribcage
                                      #(k docstring keyword pattern template)
                                      #((top) (top) (top) (top) (top))
                                      #("i10467"
                                        "i10468"
                                        "i10469"
                                        "i10470"
                                        "i10471"))
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i10441")))
                                   (hygiene guile))
                                #{pattern 10475}#))
                        (cons '#(syntax-object
                                 syntax-case
                                 ((top)
                                  #(ribcage
                                    #(k docstring keyword pattern template)
                                    #((top) (top) (top) (top) (top))
                                    #("i10467"
                                      "i10468"
                                      "i10469"
                                      "i10470"
                                      "i10471"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i10441")))
                                 (hygiene guile))
                              (cons '#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(k
                                            docstring
                                            keyword
                                            pattern
                                            template)
                                          #((top) (top) (top) (top) (top))
                                          #("i10467"
                                            "i10468"
                                            "i10469"
                                            "i10470"
                                            "i10471"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i10441")))
                                       (hygiene guile))
                                    (cons #{k 10472}#
                                          (map (lambda (#{tmp 10480}#
                                                        #{tmp 10479}#)
                                                 (list (cons '#(syntax-object
                                                                dummy
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k
                                                                     docstring
                                                                     keyword
                                                                     pattern
                                                                     template)
                                                                   #((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                   #("i10467"
                                                                     "i10468"
                                                                     "i10469"
                                                                     "i10470"
                                                                     "i10471"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i10441")))
                                                                (hygiene
                                                                  guile))
                                                             #{tmp 10479}#)
                                                       (list '#(syntax-object
                                                                syntax
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k
                                                                     docstring
                                                                     keyword
                                                                     pattern
                                                                     template)
                                                                   #((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                   #("i10467"
                                                                     "i10468"
                                                                     "i10469"
                                                                     "i10470"
                                                                     "i10471"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i10441")))
                                                                (hygiene
                                                                  guile))
                                                             #{tmp 10480}#)))
                                               #{template 10476}#
                                               #{pattern 10475}#))))))
                #{tmp 10456}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 10440}#))))))))

(define define-syntax-rule
  (make-syntax-transformer
    'define-syntax-rule
    'macro
    (lambda (#{x 10481}#)
      (let ((#{tmp 10484}#
              ($sc-dispatch #{x 10481}# '(_ (any . any) any))))
        (if #{tmp 10484}#
          (@apply
            (lambda (#{name 10488}#
                     #{pattern 10489}#
                     #{template 10490}#)
              (list '#(syntax-object
                       define-syntax
                       ((top)
                        #(ribcage
                          #(name pattern template)
                          #((top) (top) (top))
                          #("i10485" "i10486" "i10487"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i10482")))
                       (hygiene guile))
                    #{name 10488}#
                    (list '#(syntax-object
                             syntax-rules
                             ((top)
                              #(ribcage
                                #(name pattern template)
                                #((top) (top) (top))
                                #("i10485" "i10486" "i10487"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i10482")))
                             (hygiene guile))
                          '()
                          (list (cons '#(syntax-object
                                         _
                                         ((top)
                                          #(ribcage
                                            #(name pattern template)
                                            #((top) (top) (top))
                                            #("i10485" "i10486" "i10487"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i10482")))
                                         (hygiene guile))
                                      #{pattern 10489}#)
                                #{template 10490}#))))
            #{tmp 10484}#)
          (let ((#{tmp 10491}#
                  ($sc-dispatch
                    #{x 10481}#
                    '(_ (any . any) any any))))
            (if (if #{tmp 10491}#
                  (@apply
                    (lambda (#{name 10496}#
                             #{pattern 10497}#
                             #{docstring 10498}#
                             #{template 10499}#)
                      (string? (syntax->datum #{docstring 10498}#)))
                    #{tmp 10491}#)
                  #f)
              (@apply
                (lambda (#{name 10504}#
                         #{pattern 10505}#
                         #{docstring 10506}#
                         #{template 10507}#)
                  (list '#(syntax-object
                           define-syntax
                           ((top)
                            #(ribcage
                              #(name pattern docstring template)
                              #((top) (top) (top) (top))
                              #("i10500" "i10501" "i10502" "i10503"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i10482")))
                           (hygiene guile))
                        #{name 10504}#
                        (list '#(syntax-object
                                 syntax-rules
                                 ((top)
                                  #(ribcage
                                    #(name pattern docstring template)
                                    #((top) (top) (top) (top))
                                    #("i10500" "i10501" "i10502" "i10503"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i10482")))
                                 (hygiene guile))
                              '()
                              #{docstring 10506}#
                              (list (cons '#(syntax-object
                                             _
                                             ((top)
                                              #(ribcage
                                                #(name
                                                  pattern
                                                  docstring
                                                  template)
                                                #((top) (top) (top) (top))
                                                #("i10500"
                                                  "i10501"
                                                  "i10502"
                                                  "i10503"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(x)
                                                #((top))
                                                #("i10482")))
                                             (hygiene guile))
                                          #{pattern 10505}#)
                                    #{template 10507}#))))
                #{tmp 10491}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 10481}#))))))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (lambda (#{x 10508}#)
      (let ((#{tmp 10511}#
              ($sc-dispatch
                #{x 10508}#
                '(any #(each (any any)) any . each-any))))
        (if (if #{tmp 10511}#
              (@apply
                (lambda (#{let* 10517}#
                         #{x 10518}#
                         #{v 10519}#
                         #{e1 10520}#
                         #{e2 10521}#)
                  (and-map identifier? #{x 10518}#))
                #{tmp 10511}#)
              #f)
          (@apply
            (lambda (#{let* 10528}#
                     #{x 10529}#
                     #{v 10530}#
                     #{e1 10531}#
                     #{e2 10532}#)
              (letrec*
                ((#{f 10535}#
                   (lambda (#{bindings 10536}#)
                     (if (null? #{bindings 10536}#)
                       (cons '#(syntax-object
                                let
                                ((top)
                                 #(ribcage () () ())
                                 #(ribcage
                                   #(f bindings)
                                   #((top) (top))
                                   #("i10533" "i10534"))
                                 #(ribcage
                                   #(let* x v e1 e2)
                                   #((top) (top) (top) (top) (top))
                                   #("i10523"
                                     "i10524"
                                     "i10525"
                                     "i10526"
                                     "i10527"))
                                 #(ribcage () () ())
                                 #(ribcage #(x) #((top)) #("i10509")))
                                (hygiene guile))
                             (cons '() (cons #{e1 10531}# #{e2 10532}#)))
                       (let ((#{tmp 10541}#
                               (list (#{f 10535}# (cdr #{bindings 10536}#))
                                     (car #{bindings 10536}#))))
                         (let ((#{tmp 10542}#
                                 ($sc-dispatch #{tmp 10541}# '(any any))))
                           (if #{tmp 10542}#
                             (@apply
                               (lambda (#{body 10545}# #{binding 10546}#)
                                 (list '#(syntax-object
                                          let
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(body binding)
                                             #((top) (top))
                                             #("i10543" "i10544"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(f bindings)
                                             #((top) (top))
                                             #("i10533" "i10534"))
                                           #(ribcage
                                             #(let* x v e1 e2)
                                             #((top) (top) (top) (top) (top))
                                             #("i10523"
                                               "i10524"
                                               "i10525"
                                               "i10526"
                                               "i10527"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x)
                                             #((top))
                                             #("i10509")))
                                          (hygiene guile))
                                       (list #{binding 10546}#)
                                       #{body 10545}#))
                               #{tmp 10542}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{tmp 10541}#))))))))
                (#{f 10535}# (map list #{x 10529}# #{v 10530}#))))
            #{tmp 10511}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 10508}#))))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (lambda (#{orig-x 10548}#)
      (let ((#{tmp 10551}#
              ($sc-dispatch
                #{orig-x 10548}#
                '(_ #(each (any any . any))
                    (any . each-any)
                    .
                    each-any))))
        (if #{tmp 10551}#
          (@apply
            (lambda (#{var 10558}#
                     #{init 10559}#
                     #{step 10560}#
                     #{e0 10561}#
                     #{e1 10562}#
                     #{c 10563}#)
              (let ((#{tmp 10565}#
                      (map (lambda (#{v 10586}# #{s 10587}#)
                             (let ((#{tmp 10591}#
                                     ($sc-dispatch #{s 10587}# '())))
                               (if #{tmp 10591}#
                                 (@apply (lambda () #{v 10586}#) #{tmp 10591}#)
                                 (let ((#{tmp 10592}#
                                         ($sc-dispatch #{s 10587}# '(any))))
                                   (if #{tmp 10592}#
                                     (@apply
                                       (lambda (#{e 10594}#) #{e 10594}#)
                                       #{tmp 10592}#)
                                     (syntax-violation
                                       'do
                                       "bad step expression"
                                       #{orig-x 10548}#
                                       #{s 10587}#))))))
                           #{var 10558}#
                           #{step 10560}#)))
                (let ((#{tmp 10566}#
                        ($sc-dispatch #{tmp 10565}# 'each-any)))
                  (if #{tmp 10566}#
                    (@apply
                      (lambda (#{step 10568}#)
                        (let ((#{tmp 10570}# ($sc-dispatch #{e1 10562}# '())))
                          (if #{tmp 10570}#
                            (@apply
                              (lambda ()
                                (list '#(syntax-object
                                         let
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(step)
                                            #((top))
                                            #("i10567"))
                                          #(ribcage
                                            #(var init step e0 e1 c)
                                            #((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                            #("i10552"
                                              "i10553"
                                              "i10554"
                                              "i10555"
                                              "i10556"
                                              "i10557"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(orig-x)
                                            #((top))
                                            #("i10549")))
                                         (hygiene guile))
                                      '#(syntax-object
                                         doloop
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(step)
                                            #((top))
                                            #("i10567"))
                                          #(ribcage
                                            #(var init step e0 e1 c)
                                            #((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                            #("i10552"
                                              "i10553"
                                              "i10554"
                                              "i10555"
                                              "i10556"
                                              "i10557"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(orig-x)
                                            #((top))
                                            #("i10549")))
                                         (hygiene guile))
                                      (map list #{var 10558}# #{init 10559}#)
                                      (list '#(syntax-object
                                               if
                                               ((top)
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(step)
                                                  #((top))
                                                  #("i10567"))
                                                #(ribcage
                                                  #(var init step e0 e1 c)
                                                  #((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                  #("i10552"
                                                    "i10553"
                                                    "i10554"
                                                    "i10555"
                                                    "i10556"
                                                    "i10557"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(orig-x)
                                                  #((top))
                                                  #("i10549")))
                                               (hygiene guile))
                                            (list '#(syntax-object
                                                     not
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(step)
                                                        #((top))
                                                        #("i10567"))
                                                      #(ribcage
                                                        #(var
                                                          init
                                                          step
                                                          e0
                                                          e1
                                                          c)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i10552"
                                                          "i10553"
                                                          "i10554"
                                                          "i10555"
                                                          "i10556"
                                                          "i10557"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(orig-x)
                                                        #((top))
                                                        #("i10549")))
                                                     (hygiene guile))
                                                  #{e0 10561}#)
                                            (cons '#(syntax-object
                                                     begin
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(step)
                                                        #((top))
                                                        #("i10567"))
                                                      #(ribcage
                                                        #(var
                                                          init
                                                          step
                                                          e0
                                                          e1
                                                          c)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i10552"
                                                          "i10553"
                                                          "i10554"
                                                          "i10555"
                                                          "i10556"
                                                          "i10557"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(orig-x)
                                                        #((top))
                                                        #("i10549")))
                                                     (hygiene guile))
                                                  (append
                                                    #{c 10563}#
                                                    (list (cons '#(syntax-object
                                                                   doloop
                                                                   ((top)
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(step)
                                                                      #((top))
                                                                      #("i10567"))
                                                                    #(ribcage
                                                                      #(var
                                                                        init
                                                                        step
                                                                        e0
                                                                        e1
                                                                        c)
                                                                      #((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                      #("i10552"
                                                                        "i10553"
                                                                        "i10554"
                                                                        "i10555"
                                                                        "i10556"
                                                                        "i10557"))
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(orig-x)
                                                                      #((top))
                                                                      #("i10549")))
                                                                   (hygiene
                                                                     guile))
                                                                #{step 10568}#)))))))
                              #{tmp 10570}#)
                            (let ((#{tmp 10575}#
                                    ($sc-dispatch
                                      #{e1 10562}#
                                      '(any . each-any))))
                              (if #{tmp 10575}#
                                (@apply
                                  (lambda (#{e1 10578}# #{e2 10579}#)
                                    (list '#(syntax-object
                                             let
                                             ((top)
                                              #(ribcage
                                                #(e1 e2)
                                                #((top) (top))
                                                #("i10576" "i10577"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(step)
                                                #((top))
                                                #("i10567"))
                                              #(ribcage
                                                #(var init step e0 e1 c)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i10552"
                                                  "i10553"
                                                  "i10554"
                                                  "i10555"
                                                  "i10556"
                                                  "i10557"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(orig-x)
                                                #((top))
                                                #("i10549")))
                                             (hygiene guile))
                                          '#(syntax-object
                                             doloop
                                             ((top)
                                              #(ribcage
                                                #(e1 e2)
                                                #((top) (top))
                                                #("i10576" "i10577"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(step)
                                                #((top))
                                                #("i10567"))
                                              #(ribcage
                                                #(var init step e0 e1 c)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i10552"
                                                  "i10553"
                                                  "i10554"
                                                  "i10555"
                                                  "i10556"
                                                  "i10557"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(orig-x)
                                                #((top))
                                                #("i10549")))
                                             (hygiene guile))
                                          (map list
                                               #{var 10558}#
                                               #{init 10559}#)
                                          (list '#(syntax-object
                                                   if
                                                   ((top)
                                                    #(ribcage
                                                      #(e1 e2)
                                                      #((top) (top))
                                                      #("i10576" "i10577"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(step)
                                                      #((top))
                                                      #("i10567"))
                                                    #(ribcage
                                                      #(var init step e0 e1 c)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i10552"
                                                        "i10553"
                                                        "i10554"
                                                        "i10555"
                                                        "i10556"
                                                        "i10557"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(orig-x)
                                                      #((top))
                                                      #("i10549")))
                                                   (hygiene guile))
                                                #{e0 10561}#
                                                (cons '#(syntax-object
                                                         begin
                                                         ((top)
                                                          #(ribcage
                                                            #(e1 e2)
                                                            #((top) (top))
                                                            #("i10576"
                                                              "i10577"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(step)
                                                            #((top))
                                                            #("i10567"))
                                                          #(ribcage
                                                            #(var
                                                              init
                                                              step
                                                              e0
                                                              e1
                                                              c)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i10552"
                                                              "i10553"
                                                              "i10554"
                                                              "i10555"
                                                              "i10556"
                                                              "i10557"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(orig-x)
                                                            #((top))
                                                            #("i10549")))
                                                         (hygiene guile))
                                                      (cons #{e1 10578}#
                                                            #{e2 10579}#))
                                                (cons '#(syntax-object
                                                         begin
                                                         ((top)
                                                          #(ribcage
                                                            #(e1 e2)
                                                            #((top) (top))
                                                            #("i10576"
                                                              "i10577"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(step)
                                                            #((top))
                                                            #("i10567"))
                                                          #(ribcage
                                                            #(var
                                                              init
                                                              step
                                                              e0
                                                              e1
                                                              c)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i10552"
                                                              "i10553"
                                                              "i10554"
                                                              "i10555"
                                                              "i10556"
                                                              "i10557"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(orig-x)
                                                            #((top))
                                                            #("i10549")))
                                                         (hygiene guile))
                                                      (append
                                                        #{c 10563}#
                                                        (list (cons '#(syntax-object
                                                                       doloop
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i10576"
                                                                            "i10577"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(step)
                                                                          #((top))
                                                                          #("i10567"))
                                                                        #(ribcage
                                                                          #(var
                                                                            init
                                                                            step
                                                                            e0
                                                                            e1
                                                                            c)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i10552"
                                                                            "i10553"
                                                                            "i10554"
                                                                            "i10555"
                                                                            "i10556"
                                                                            "i10557"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(orig-x)
                                                                          #((top))
                                                                          #("i10549")))
                                                                       (hygiene
                                                                         guile))
                                                                    #{step 10568}#)))))))
                                  #{tmp 10575}#)
                                (syntax-violation
                                  #f
                                  "source expression failed to match any pattern"
                                  #{e1 10562}#))))))
                      #{tmp 10566}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp 10565}#)))))
            #{tmp 10551}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{orig-x 10548}#))))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (letrec*
      ((#{quasi 10600}#
         (lambda (#{p 10613}# #{lev 10614}#)
           (let ((#{tmp 10618}#
                   ($sc-dispatch
                     #{p 10613}#
                     '(#(free-id
                         #(syntax-object
                           unquote
                           ((top)
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i10615" "i10616"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i10611"
                               "i10609"
                               "i10607"
                               "i10605"
                               "i10603"
                               "i10601"
                               "i10599")))
                           (hygiene guile)))
                       any))))
             (if #{tmp 10618}#
               (@apply
                 (lambda (#{p 10620}#)
                   (if (= #{lev 10614}# 0)
                     (list '#(syntax-object
                              "value"
                              ((top)
                               #(ribcage #(p) #((top)) #("i10619"))
                               #(ribcage () () ())
                               #(ribcage
                                 #(p lev)
                                 #((top) (top))
                                 #("i10615" "i10616"))
                               #(ribcage
                                 (emit quasivector
                                       quasilist*
                                       quasiappend
                                       quasicons
                                       vquasi
                                       quasi)
                                 ((top) (top) (top) (top) (top) (top) (top))
                                 ("i10611"
                                  "i10609"
                                  "i10607"
                                  "i10605"
                                  "i10603"
                                  "i10601"
                                  "i10599")))
                              (hygiene guile))
                           #{p 10620}#)
                     (#{quasicons 10604}#
                       '(#(syntax-object
                           "quote"
                           ((top)
                            #(ribcage #(p) #((top)) #("i10619"))
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i10615" "i10616"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i10611"
                               "i10609"
                               "i10607"
                               "i10605"
                               "i10603"
                               "i10601"
                               "i10599")))
                           (hygiene guile))
                         #(syntax-object
                           unquote
                           ((top)
                            #(ribcage #(p) #((top)) #("i10619"))
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i10615" "i10616"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i10611"
                               "i10609"
                               "i10607"
                               "i10605"
                               "i10603"
                               "i10601"
                               "i10599")))
                           (hygiene guile)))
                       (#{quasi 10600}#
                         (list #{p 10620}#)
                         (#{1-}# #{lev 10614}#)))))
                 #{tmp 10618}#)
               (let ((#{tmp 10621}#
                       ($sc-dispatch
                         #{p 10613}#
                         '(#(free-id
                             #(syntax-object
                               quasiquote
                               ((top)
                                #(ribcage () () ())
                                #(ribcage
                                  #(p lev)
                                  #((top) (top))
                                  #("i10615" "i10616"))
                                #(ribcage
                                  (emit quasivector
                                        quasilist*
                                        quasiappend
                                        quasicons
                                        vquasi
                                        quasi)
                                  ((top) (top) (top) (top) (top) (top) (top))
                                  ("i10611"
                                   "i10609"
                                   "i10607"
                                   "i10605"
                                   "i10603"
                                   "i10601"
                                   "i10599")))
                               (hygiene guile)))
                           any))))
                 (if #{tmp 10621}#
                   (@apply
                     (lambda (#{p 10623}#)
                       (#{quasicons 10604}#
                         '(#(syntax-object
                             "quote"
                             ((top)
                              #(ribcage #(p) #((top)) #("i10622"))
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i10615" "i10616"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i10611"
                                 "i10609"
                                 "i10607"
                                 "i10605"
                                 "i10603"
                                 "i10601"
                                 "i10599")))
                             (hygiene guile))
                           #(syntax-object
                             quasiquote
                             ((top)
                              #(ribcage #(p) #((top)) #("i10622"))
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i10615" "i10616"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i10611"
                                 "i10609"
                                 "i10607"
                                 "i10605"
                                 "i10603"
                                 "i10601"
                                 "i10599")))
                             (hygiene guile)))
                         (#{quasi 10600}#
                           (list #{p 10623}#)
                           (#{1+}# #{lev 10614}#))))
                     #{tmp 10621}#)
                   (let ((#{tmp 10624}#
                           ($sc-dispatch #{p 10613}# '(any . any))))
                     (if #{tmp 10624}#
                       (@apply
                         (lambda (#{p 10627}# #{q 10628}#)
                           (let ((#{tmp 10630}#
                                   ($sc-dispatch
                                     #{p 10627}#
                                     '(#(free-id
                                         #(syntax-object
                                           unquote
                                           ((top)
                                            #(ribcage
                                              #(p q)
                                              #((top) (top))
                                              #("i10625" "i10626"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(p lev)
                                              #((top) (top))
                                              #("i10615" "i10616"))
                                            #(ribcage
                                              (emit quasivector
                                                    quasilist*
                                                    quasiappend
                                                    quasicons
                                                    vquasi
                                                    quasi)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i10611"
                                               "i10609"
                                               "i10607"
                                               "i10605"
                                               "i10603"
                                               "i10601"
                                               "i10599")))
                                           (hygiene guile)))
                                       .
                                       each-any))))
                             (if #{tmp 10630}#
                               (@apply
                                 (lambda (#{p 10632}#)
                                   (if (= #{lev 10614}# 0)
                                     (#{quasilist* 10608}#
                                       (map (lambda (#{tmp 10633}#)
                                              (list '#(syntax-object
                                                       "value"
                                                       ((top)
                                                        #(ribcage
                                                          #(p)
                                                          #((top))
                                                          #("i10631"))
                                                        #(ribcage
                                                          #(p q)
                                                          #((top) (top))
                                                          #("i10625" "i10626"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i10615" "i10616"))
                                                        #(ribcage
                                                          (emit quasivector
                                                                quasilist*
                                                                quasiappend
                                                                quasicons
                                                                vquasi
                                                                quasi)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i10611"
                                                           "i10609"
                                                           "i10607"
                                                           "i10605"
                                                           "i10603"
                                                           "i10601"
                                                           "i10599")))
                                                       (hygiene guile))
                                                    #{tmp 10633}#))
                                            #{p 10632}#)
                                       (#{quasi 10600}#
                                         #{q 10628}#
                                         #{lev 10614}#))
                                     (#{quasicons 10604}#
                                       (#{quasicons 10604}#
                                         '(#(syntax-object
                                             "quote"
                                             ((top)
                                              #(ribcage
                                                #(p)
                                                #((top))
                                                #("i10631"))
                                              #(ribcage
                                                #(p q)
                                                #((top) (top))
                                                #("i10625" "i10626"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(p lev)
                                                #((top) (top))
                                                #("i10615" "i10616"))
                                              #(ribcage
                                                (emit quasivector
                                                      quasilist*
                                                      quasiappend
                                                      quasicons
                                                      vquasi
                                                      quasi)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i10611"
                                                 "i10609"
                                                 "i10607"
                                                 "i10605"
                                                 "i10603"
                                                 "i10601"
                                                 "i10599")))
                                             (hygiene guile))
                                           #(syntax-object
                                             unquote
                                             ((top)
                                              #(ribcage
                                                #(p)
                                                #((top))
                                                #("i10631"))
                                              #(ribcage
                                                #(p q)
                                                #((top) (top))
                                                #("i10625" "i10626"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(p lev)
                                                #((top) (top))
                                                #("i10615" "i10616"))
                                              #(ribcage
                                                (emit quasivector
                                                      quasilist*
                                                      quasiappend
                                                      quasicons
                                                      vquasi
                                                      quasi)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i10611"
                                                 "i10609"
                                                 "i10607"
                                                 "i10605"
                                                 "i10603"
                                                 "i10601"
                                                 "i10599")))
                                             (hygiene guile)))
                                         (#{quasi 10600}#
                                           #{p 10632}#
                                           (#{1-}# #{lev 10614}#)))
                                       (#{quasi 10600}#
                                         #{q 10628}#
                                         #{lev 10614}#))))
                                 #{tmp 10630}#)
                               (let ((#{tmp 10635}#
                                       ($sc-dispatch
                                         #{p 10627}#
                                         '(#(free-id
                                             #(syntax-object
                                               unquote-splicing
                                               ((top)
                                                #(ribcage
                                                  #(p q)
                                                  #((top) (top))
                                                  #("i10625" "i10626"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(p lev)
                                                  #((top) (top))
                                                  #("i10615" "i10616"))
                                                #(ribcage
                                                  (emit quasivector
                                                        quasilist*
                                                        quasiappend
                                                        quasicons
                                                        vquasi
                                                        quasi)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i10611"
                                                   "i10609"
                                                   "i10607"
                                                   "i10605"
                                                   "i10603"
                                                   "i10601"
                                                   "i10599")))
                                               (hygiene guile)))
                                           .
                                           each-any))))
                                 (if #{tmp 10635}#
                                   (@apply
                                     (lambda (#{p 10637}#)
                                       (if (= #{lev 10614}# 0)
                                         (#{quasiappend 10606}#
                                           (map (lambda (#{tmp 10638}#)
                                                  (list '#(syntax-object
                                                           "value"
                                                           ((top)
                                                            #(ribcage
                                                              #(p)
                                                              #((top))
                                                              #("i10636"))
                                                            #(ribcage
                                                              #(p q)
                                                              #((top) (top))
                                                              #("i10625"
                                                                "i10626"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(p lev)
                                                              #((top) (top))
                                                              #("i10615"
                                                                "i10616"))
                                                            #(ribcage
                                                              (emit quasivector
                                                                    quasilist*
                                                                    quasiappend
                                                                    quasicons
                                                                    vquasi
                                                                    quasi)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i10611"
                                                               "i10609"
                                                               "i10607"
                                                               "i10605"
                                                               "i10603"
                                                               "i10601"
                                                               "i10599")))
                                                           (hygiene guile))
                                                        #{tmp 10638}#))
                                                #{p 10637}#)
                                           (#{quasi 10600}#
                                             #{q 10628}#
                                             #{lev 10614}#))
                                         (#{quasicons 10604}#
                                           (#{quasicons 10604}#
                                             '(#(syntax-object
                                                 "quote"
                                                 ((top)
                                                  #(ribcage
                                                    #(p)
                                                    #((top))
                                                    #("i10636"))
                                                  #(ribcage
                                                    #(p q)
                                                    #((top) (top))
                                                    #("i10625" "i10626"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(p lev)
                                                    #((top) (top))
                                                    #("i10615" "i10616"))
                                                  #(ribcage
                                                    (emit quasivector
                                                          quasilist*
                                                          quasiappend
                                                          quasicons
                                                          vquasi
                                                          quasi)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i10611"
                                                     "i10609"
                                                     "i10607"
                                                     "i10605"
                                                     "i10603"
                                                     "i10601"
                                                     "i10599")))
                                                 (hygiene guile))
                                               #(syntax-object
                                                 unquote-splicing
                                                 ((top)
                                                  #(ribcage
                                                    #(p)
                                                    #((top))
                                                    #("i10636"))
                                                  #(ribcage
                                                    #(p q)
                                                    #((top) (top))
                                                    #("i10625" "i10626"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(p lev)
                                                    #((top) (top))
                                                    #("i10615" "i10616"))
                                                  #(ribcage
                                                    (emit quasivector
                                                          quasilist*
                                                          quasiappend
                                                          quasicons
                                                          vquasi
                                                          quasi)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i10611"
                                                     "i10609"
                                                     "i10607"
                                                     "i10605"
                                                     "i10603"
                                                     "i10601"
                                                     "i10599")))
                                                 (hygiene guile)))
                                             (#{quasi 10600}#
                                               #{p 10637}#
                                               (#{1-}# #{lev 10614}#)))
                                           (#{quasi 10600}#
                                             #{q 10628}#
                                             #{lev 10614}#))))
                                     #{tmp 10635}#)
                                   (#{quasicons 10604}#
                                     (#{quasi 10600}#
                                       #{p 10627}#
                                       #{lev 10614}#)
                                     (#{quasi 10600}#
                                       #{q 10628}#
                                       #{lev 10614}#)))))))
                         #{tmp 10624}#)
                       (let ((#{tmp 10642}#
                               ($sc-dispatch #{p 10613}# '#(vector each-any))))
                         (if #{tmp 10642}#
                           (@apply
                             (lambda (#{x 10644}#)
                               (#{quasivector 10610}#
                                 (#{vquasi 10602}# #{x 10644}# #{lev 10614}#)))
                             #{tmp 10642}#)
                           (list '#(syntax-object
                                    "quote"
                                    ((top)
                                     #(ribcage #(p) #((top)) #("i10646"))
                                     #(ribcage () () ())
                                     #(ribcage
                                       #(p lev)
                                       #((top) (top))
                                       #("i10615" "i10616"))
                                     #(ribcage
                                       (emit quasivector
                                             quasilist*
                                             quasiappend
                                             quasicons
                                             vquasi
                                             quasi)
                                       ((top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top))
                                       ("i10611"
                                        "i10609"
                                        "i10607"
                                        "i10605"
                                        "i10603"
                                        "i10601"
                                        "i10599")))
                                    (hygiene guile))
                                 #{p 10613}#)))))))))))
       (#{vquasi 10602}#
         (lambda (#{p 10648}# #{lev 10649}#)
           (let ((#{tmp 10653}#
                   ($sc-dispatch #{p 10648}# '(any . any))))
             (if #{tmp 10653}#
               (@apply
                 (lambda (#{p 10656}# #{q 10657}#)
                   (let ((#{tmp 10659}#
                           ($sc-dispatch
                             #{p 10656}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage
                                      #(p q)
                                      #((top) (top))
                                      #("i10654" "i10655"))
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i10650" "i10651"))
                                    #(ribcage
                                      (emit quasivector
                                            quasilist*
                                            quasiappend
                                            quasicons
                                            vquasi
                                            quasi)
                                      ((top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top))
                                      ("i10611"
                                       "i10609"
                                       "i10607"
                                       "i10605"
                                       "i10603"
                                       "i10601"
                                       "i10599")))
                                   (hygiene guile)))
                               .
                               each-any))))
                     (if #{tmp 10659}#
                       (@apply
                         (lambda (#{p 10661}#)
                           (if (= #{lev 10649}# 0)
                             (#{quasilist* 10608}#
                               (map (lambda (#{tmp 10662}#)
                                      (list '#(syntax-object
                                               "value"
                                               ((top)
                                                #(ribcage
                                                  #(p)
                                                  #((top))
                                                  #("i10660"))
                                                #(ribcage
                                                  #(p q)
                                                  #((top) (top))
                                                  #("i10654" "i10655"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(p lev)
                                                  #((top) (top))
                                                  #("i10650" "i10651"))
                                                #(ribcage
                                                  (emit quasivector
                                                        quasilist*
                                                        quasiappend
                                                        quasicons
                                                        vquasi
                                                        quasi)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i10611"
                                                   "i10609"
                                                   "i10607"
                                                   "i10605"
                                                   "i10603"
                                                   "i10601"
                                                   "i10599")))
                                               (hygiene guile))
                                            #{tmp 10662}#))
                                    #{p 10661}#)
                               (#{vquasi 10602}# #{q 10657}# #{lev 10649}#))
                             (#{quasicons 10604}#
                               (#{quasicons 10604}#
                                 '(#(syntax-object
                                     "quote"
                                     ((top)
                                      #(ribcage #(p) #((top)) #("i10660"))
                                      #(ribcage
                                        #(p q)
                                        #((top) (top))
                                        #("i10654" "i10655"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(p lev)
                                        #((top) (top))
                                        #("i10650" "i10651"))
                                      #(ribcage
                                        (emit quasivector
                                              quasilist*
                                              quasiappend
                                              quasicons
                                              vquasi
                                              quasi)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i10611"
                                         "i10609"
                                         "i10607"
                                         "i10605"
                                         "i10603"
                                         "i10601"
                                         "i10599")))
                                     (hygiene guile))
                                   #(syntax-object
                                     unquote
                                     ((top)
                                      #(ribcage #(p) #((top)) #("i10660"))
                                      #(ribcage
                                        #(p q)
                                        #((top) (top))
                                        #("i10654" "i10655"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(p lev)
                                        #((top) (top))
                                        #("i10650" "i10651"))
                                      #(ribcage
                                        (emit quasivector
                                              quasilist*
                                              quasiappend
                                              quasicons
                                              vquasi
                                              quasi)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i10611"
                                         "i10609"
                                         "i10607"
                                         "i10605"
                                         "i10603"
                                         "i10601"
                                         "i10599")))
                                     (hygiene guile)))
                                 (#{quasi 10600}#
                                   #{p 10661}#
                                   (#{1-}# #{lev 10649}#)))
                               (#{vquasi 10602}# #{q 10657}# #{lev 10649}#))))
                         #{tmp 10659}#)
                       (let ((#{tmp 10664}#
                               ($sc-dispatch
                                 #{p 10656}#
                                 '(#(free-id
                                     #(syntax-object
                                       unquote-splicing
                                       ((top)
                                        #(ribcage
                                          #(p q)
                                          #((top) (top))
                                          #("i10654" "i10655"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(p lev)
                                          #((top) (top))
                                          #("i10650" "i10651"))
                                        #(ribcage
                                          (emit quasivector
                                                quasilist*
                                                quasiappend
                                                quasicons
                                                vquasi
                                                quasi)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i10611"
                                           "i10609"
                                           "i10607"
                                           "i10605"
                                           "i10603"
                                           "i10601"
                                           "i10599")))
                                       (hygiene guile)))
                                   .
                                   each-any))))
                         (if #{tmp 10664}#
                           (@apply
                             (lambda (#{p 10666}#)
                               (if (= #{lev 10649}# 0)
                                 (#{quasiappend 10606}#
                                   (map (lambda (#{tmp 10667}#)
                                          (list '#(syntax-object
                                                   "value"
                                                   ((top)
                                                    #(ribcage
                                                      #(p)
                                                      #((top))
                                                      #("i10665"))
                                                    #(ribcage
                                                      #(p q)
                                                      #((top) (top))
                                                      #("i10654" "i10655"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i10650" "i10651"))
                                                    #(ribcage
                                                      (emit quasivector
                                                            quasilist*
                                                            quasiappend
                                                            quasicons
                                                            vquasi
                                                            quasi)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i10611"
                                                       "i10609"
                                                       "i10607"
                                                       "i10605"
                                                       "i10603"
                                                       "i10601"
                                                       "i10599")))
                                                   (hygiene guile))
                                                #{tmp 10667}#))
                                        #{p 10666}#)
                                   (#{vquasi 10602}#
                                     #{q 10657}#
                                     #{lev 10649}#))
                                 (#{quasicons 10604}#
                                   (#{quasicons 10604}#
                                     '(#(syntax-object
                                         "quote"
                                         ((top)
                                          #(ribcage #(p) #((top)) #("i10665"))
                                          #(ribcage
                                            #(p q)
                                            #((top) (top))
                                            #("i10654" "i10655"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(p lev)
                                            #((top) (top))
                                            #("i10650" "i10651"))
                                          #(ribcage
                                            (emit quasivector
                                                  quasilist*
                                                  quasiappend
                                                  quasicons
                                                  vquasi
                                                  quasi)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i10611"
                                             "i10609"
                                             "i10607"
                                             "i10605"
                                             "i10603"
                                             "i10601"
                                             "i10599")))
                                         (hygiene guile))
                                       #(syntax-object
                                         unquote-splicing
                                         ((top)
                                          #(ribcage #(p) #((top)) #("i10665"))
                                          #(ribcage
                                            #(p q)
                                            #((top) (top))
                                            #("i10654" "i10655"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(p lev)
                                            #((top) (top))
                                            #("i10650" "i10651"))
                                          #(ribcage
                                            (emit quasivector
                                                  quasilist*
                                                  quasiappend
                                                  quasicons
                                                  vquasi
                                                  quasi)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i10611"
                                             "i10609"
                                             "i10607"
                                             "i10605"
                                             "i10603"
                                             "i10601"
                                             "i10599")))
                                         (hygiene guile)))
                                     (#{quasi 10600}#
                                       #{p 10666}#
                                       (#{1-}# #{lev 10649}#)))
                                   (#{vquasi 10602}#
                                     #{q 10657}#
                                     #{lev 10649}#))))
                             #{tmp 10664}#)
                           (#{quasicons 10604}#
                             (#{quasi 10600}# #{p 10656}# #{lev 10649}#)
                             (#{vquasi 10602}# #{q 10657}# #{lev 10649}#)))))))
                 #{tmp 10653}#)
               (let ((#{tmp 10671}# ($sc-dispatch #{p 10648}# '())))
                 (if #{tmp 10671}#
                   (@apply
                     (lambda ()
                       '(#(syntax-object
                           "quote"
                           ((top)
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i10650" "i10651"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i10611"
                               "i10609"
                               "i10607"
                               "i10605"
                               "i10603"
                               "i10601"
                               "i10599")))
                           (hygiene guile))
                         ()))
                     #{tmp 10671}#)
                   (syntax-violation
                     #f
                     "source expression failed to match any pattern"
                     #{p 10648}#)))))))
       (#{quasicons 10604}#
         (lambda (#{x 10672}# #{y 10673}#)
           (let ((#{tmp 10677}# (list #{x 10672}# #{y 10673}#)))
             (let ((#{tmp 10678}#
                     ($sc-dispatch #{tmp 10677}# '(any any))))
               (if #{tmp 10678}#
                 (@apply
                   (lambda (#{x 10681}# #{y 10682}#)
                     (let ((#{tmp 10684}#
                             ($sc-dispatch
                               #{y 10682}#
                               '(#(atom "quote") any))))
                       (if #{tmp 10684}#
                         (@apply
                           (lambda (#{dy 10686}#)
                             (let ((#{tmp 10688}#
                                     ($sc-dispatch
                                       #{x 10681}#
                                       '(#(atom "quote") any))))
                               (if #{tmp 10688}#
                                 (@apply
                                   (lambda (#{dx 10690}#)
                                     (list '#(syntax-object
                                              "quote"
                                              ((top)
                                               #(ribcage
                                                 #(dx)
                                                 #((top))
                                                 #("i10689"))
                                               #(ribcage
                                                 #(dy)
                                                 #((top))
                                                 #("i10685"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i10679" "i10680"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i10674" "i10675"))
                                               #(ribcage
                                                 (emit quasivector
                                                       quasilist*
                                                       quasiappend
                                                       quasicons
                                                       vquasi
                                                       quasi)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i10611"
                                                  "i10609"
                                                  "i10607"
                                                  "i10605"
                                                  "i10603"
                                                  "i10601"
                                                  "i10599")))
                                              (hygiene guile))
                                           (cons #{dx 10690}# #{dy 10686}#)))
                                   #{tmp 10688}#)
                                 (if (null? #{dy 10686}#)
                                   (list '#(syntax-object
                                            "list"
                                            ((top)
                                             #(ribcage
                                               #(_)
                                               #((top))
                                               #("i10691"))
                                             #(ribcage
                                               #(dy)
                                               #((top))
                                               #("i10685"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i10679" "i10680"))
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i10674" "i10675"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i10611"
                                                "i10609"
                                                "i10607"
                                                "i10605"
                                                "i10603"
                                                "i10601"
                                                "i10599")))
                                            (hygiene guile))
                                         #{x 10681}#)
                                   (list '#(syntax-object
                                            "list*"
                                            ((top)
                                             #(ribcage
                                               #(_)
                                               #((top))
                                               #("i10691"))
                                             #(ribcage
                                               #(dy)
                                               #((top))
                                               #("i10685"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i10679" "i10680"))
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i10674" "i10675"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i10611"
                                                "i10609"
                                                "i10607"
                                                "i10605"
                                                "i10603"
                                                "i10601"
                                                "i10599")))
                                            (hygiene guile))
                                         #{x 10681}#
                                         #{y 10682}#)))))
                           #{tmp 10684}#)
                         (let ((#{tmp 10693}#
                                 ($sc-dispatch
                                   #{y 10682}#
                                   '(#(atom "list") . any))))
                           (if #{tmp 10693}#
                             (@apply
                               (lambda (#{stuff 10695}#)
                                 (cons '#(syntax-object
                                          "list"
                                          ((top)
                                           #(ribcage
                                             #(stuff)
                                             #((top))
                                             #("i10694"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i10679" "i10680"))
                                           #(ribcage () () ())
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i10674" "i10675"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i10611"
                                              "i10609"
                                              "i10607"
                                              "i10605"
                                              "i10603"
                                              "i10601"
                                              "i10599")))
                                          (hygiene guile))
                                       (cons #{x 10681}# #{stuff 10695}#)))
                               #{tmp 10693}#)
                             (let ((#{tmp 10696}#
                                     ($sc-dispatch
                                       #{y 10682}#
                                       '(#(atom "list*") . any))))
                               (if #{tmp 10696}#
                                 (@apply
                                   (lambda (#{stuff 10698}#)
                                     (cons '#(syntax-object
                                              "list*"
                                              ((top)
                                               #(ribcage
                                                 #(stuff)
                                                 #((top))
                                                 #("i10697"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i10679" "i10680"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i10674" "i10675"))
                                               #(ribcage
                                                 (emit quasivector
                                                       quasilist*
                                                       quasiappend
                                                       quasicons
                                                       vquasi
                                                       quasi)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i10611"
                                                  "i10609"
                                                  "i10607"
                                                  "i10605"
                                                  "i10603"
                                                  "i10601"
                                                  "i10599")))
                                              (hygiene guile))
                                           (cons #{x 10681}# #{stuff 10698}#)))
                                   #{tmp 10696}#)
                                 (list '#(syntax-object
                                          "list*"
                                          ((top)
                                           #(ribcage #(_) #((top)) #("i10699"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i10679" "i10680"))
                                           #(ribcage () () ())
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i10674" "i10675"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i10611"
                                              "i10609"
                                              "i10607"
                                              "i10605"
                                              "i10603"
                                              "i10601"
                                              "i10599")))
                                          (hygiene guile))
                                       #{x 10681}#
                                       #{y 10682}#))))))))
                   #{tmp 10678}#)
                 (syntax-violation
                   #f
                   "source expression failed to match any pattern"
                   #{tmp 10677}#))))))
       (#{quasiappend 10606}#
         (lambda (#{x 10701}# #{y 10702}#)
           (let ((#{tmp 10706}#
                   ($sc-dispatch #{y 10702}# '(#(atom "quote") ()))))
             (if #{tmp 10706}#
               (@apply
                 (lambda ()
                   (if (null? #{x 10701}#)
                     '(#(syntax-object
                         "quote"
                         ((top)
                          #(ribcage () () ())
                          #(ribcage
                            #(x y)
                            #((top) (top))
                            #("i10703" "i10704"))
                          #(ribcage
                            (emit quasivector
                                  quasilist*
                                  quasiappend
                                  quasicons
                                  vquasi
                                  quasi)
                            ((top) (top) (top) (top) (top) (top) (top))
                            ("i10611"
                             "i10609"
                             "i10607"
                             "i10605"
                             "i10603"
                             "i10601"
                             "i10599")))
                         (hygiene guile))
                       ())
                     (if (null? (cdr #{x 10701}#))
                       (car #{x 10701}#)
                       (let ((#{tmp 10714}#
                               ($sc-dispatch #{x 10701}# 'each-any)))
                         (if #{tmp 10714}#
                           (@apply
                             (lambda (#{p 10716}#)
                               (cons '#(syntax-object
                                        "append"
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage #(p) #((top)) #("i10715"))
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(x y)
                                           #((top) (top))
                                           #("i10703" "i10704"))
                                         #(ribcage
                                           (emit quasivector
                                                 quasilist*
                                                 quasiappend
                                                 quasicons
                                                 vquasi
                                                 quasi)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i10611"
                                            "i10609"
                                            "i10607"
                                            "i10605"
                                            "i10603"
                                            "i10601"
                                            "i10599")))
                                        (hygiene guile))
                                     #{p 10716}#))
                             #{tmp 10714}#)
                           (syntax-violation
                             #f
                             "source expression failed to match any pattern"
                             #{x 10701}#))))))
                 #{tmp 10706}#)
               (if (null? #{x 10701}#)
                 #{y 10702}#
                 (let ((#{tmp 10724}# (list #{x 10701}# #{y 10702}#)))
                   (let ((#{tmp 10725}#
                           ($sc-dispatch #{tmp 10724}# '(each-any any))))
                     (if #{tmp 10725}#
                       (@apply
                         (lambda (#{p 10728}# #{y 10729}#)
                           (cons '#(syntax-object
                                    "append"
                                    ((top)
                                     #(ribcage () () ())
                                     #(ribcage
                                       #(p y)
                                       #((top) (top))
                                       #("i10726" "i10727"))
                                     #(ribcage #(_) #((top)) #("i10718"))
                                     #(ribcage () () ())
                                     #(ribcage
                                       #(x y)
                                       #((top) (top))
                                       #("i10703" "i10704"))
                                     #(ribcage
                                       (emit quasivector
                                             quasilist*
                                             quasiappend
                                             quasicons
                                             vquasi
                                             quasi)
                                       ((top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top))
                                       ("i10611"
                                        "i10609"
                                        "i10607"
                                        "i10605"
                                        "i10603"
                                        "i10601"
                                        "i10599")))
                                    (hygiene guile))
                                 (append #{p 10728}# (list #{y 10729}#))))
                         #{tmp 10725}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp 10724}#)))))))))
       (#{quasilist* 10608}#
         (lambda (#{x 10731}# #{y 10732}#)
           (letrec*
             ((#{f 10737}#
                (lambda (#{x 10738}#)
                  (if (null? #{x 10738}#)
                    #{y 10732}#
                    (#{quasicons 10604}#
                      (car #{x 10738}#)
                      (#{f 10737}# (cdr #{x 10738}#)))))))
             (#{f 10737}# #{x 10731}#))))
       (#{quasivector 10610}#
         (lambda (#{x 10739}#)
           (let ((#{tmp 10742}#
                   ($sc-dispatch
                     #{x 10739}#
                     '(#(atom "quote") each-any))))
             (if #{tmp 10742}#
               (@apply
                 (lambda (#{x 10744}#)
                   (list '#(syntax-object
                            "quote"
                            ((top)
                             #(ribcage #(x) #((top)) #("i10743"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i10740"))
                             #(ribcage
                               (emit quasivector
                                     quasilist*
                                     quasiappend
                                     quasicons
                                     vquasi
                                     quasi)
                               ((top) (top) (top) (top) (top) (top) (top))
                               ("i10611"
                                "i10609"
                                "i10607"
                                "i10605"
                                "i10603"
                                "i10601"
                                "i10599")))
                            (hygiene guile))
                         (list->vector #{x 10744}#)))
                 #{tmp 10742}#)
               (letrec*
                 ((#{f 10751}#
                    (lambda (#{y 10752}# #{k 10753}#)
                      (let ((#{tmp 10765}#
                              ($sc-dispatch
                                #{y 10752}#
                                '(#(atom "quote") each-any))))
                        (if #{tmp 10765}#
                          (@apply
                            (lambda (#{y 10767}#)
                              (#{k 10753}#
                                (map (lambda (#{tmp 10768}#)
                                       (list '#(syntax-object
                                                "quote"
                                                ((top)
                                                 #(ribcage
                                                   #(y)
                                                   #((top))
                                                   #("i10766"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f y k)
                                                   #((top) (top) (top))
                                                   #("i10748"
                                                     "i10749"
                                                     "i10750"))
                                                 #(ribcage
                                                   #(_)
                                                   #((top))
                                                   #("i10746"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i10740"))
                                                 #(ribcage
                                                   (emit quasivector
                                                         quasilist*
                                                         quasiappend
                                                         quasicons
                                                         vquasi
                                                         quasi)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i10611"
                                                    "i10609"
                                                    "i10607"
                                                    "i10605"
                                                    "i10603"
                                                    "i10601"
                                                    "i10599")))
                                                (hygiene guile))
                                             #{tmp 10768}#))
                                     #{y 10767}#)))
                            #{tmp 10765}#)
                          (let ((#{tmp 10769}#
                                  ($sc-dispatch
                                    #{y 10752}#
                                    '(#(atom "list") . each-any))))
                            (if #{tmp 10769}#
                              (@apply
                                (lambda (#{y 10771}#)
                                  (#{k 10753}# #{y 10771}#))
                                #{tmp 10769}#)
                              (let ((#{tmp 10773}#
                                      ($sc-dispatch
                                        #{y 10752}#
                                        '(#(atom "list*")
                                          .
                                          #(each+ any (any) ())))))
                                (if #{tmp 10773}#
                                  (@apply
                                    (lambda (#{y 10776}# #{z 10777}#)
                                      (#{f 10751}#
                                        #{z 10777}#
                                        (lambda (#{ls 10778}#)
                                          (#{k 10753}#
                                            (append
                                              #{y 10776}#
                                              #{ls 10778}#)))))
                                    #{tmp 10773}#)
                                  (list '#(syntax-object
                                           "list->vector"
                                           ((top)
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(#{ g10783}#)
                                              #((m10784 top))
                                              #("i10787"))
                                            #(ribcage
                                              #(else)
                                              #((top))
                                              #("i10781"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(f y k)
                                              #((top) (top) (top))
                                              #("i10748" "i10749" "i10750"))
                                            #(ribcage
                                              #(_)
                                              #((top))
                                              #("i10746"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i10740"))
                                            #(ribcage
                                              (emit quasivector
                                                    quasilist*
                                                    quasiappend
                                                    quasicons
                                                    vquasi
                                                    quasi)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i10611"
                                               "i10609"
                                               "i10607"
                                               "i10605"
                                               "i10603"
                                               "i10601"
                                               "i10599")))
                                           (hygiene guile))
                                        #{x 10739}#))))))))))
                 (#{f 10751}#
                   #{x 10739}#
                   (lambda (#{ls 10754}#)
                     (let ((#{tmp 10760}#
                             ($sc-dispatch #{ls 10754}# 'each-any)))
                       (if #{tmp 10760}#
                         (@apply
                           (lambda (#{ g10756 10762}#)
                             (cons '#(syntax-object
                                      "vector"
                                      ((top)
                                       #(ribcage () () ())
                                       #(ribcage
                                         #(#{ g10756}#)
                                         #((m10757 top))
                                         #("i10761"))
                                       #(ribcage () () ())
                                       #(ribcage () () ())
                                       #(ribcage () () ())
                                       #(ribcage #(ls) #((top)) #("i10755"))
                                       #(ribcage #(_) #((top)) #("i10746"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i10740"))
                                       #(ribcage
                                         (emit quasivector
                                               quasilist*
                                               quasiappend
                                               quasicons
                                               vquasi
                                               quasi)
                                         ((top)
                                          (top)
                                          (top)
                                          (top)
                                          (top)
                                          (top)
                                          (top))
                                         ("i10611"
                                          "i10609"
                                          "i10607"
                                          "i10605"
                                          "i10603"
                                          "i10601"
                                          "i10599")))
                                      (hygiene guile))
                                   #{ g10756 10762}#))
                           #{tmp 10760}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{ls 10754}#))))))))))
       (#{emit 10612}#
         (lambda (#{x 10789}#)
           (let ((#{tmp 10792}#
                   ($sc-dispatch #{x 10789}# '(#(atom "quote") any))))
             (if #{tmp 10792}#
               (@apply
                 (lambda (#{x 10794}#)
                   (list '#(syntax-object
                            quote
                            ((top)
                             #(ribcage #(x) #((top)) #("i10793"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i10790"))
                             #(ribcage
                               (emit quasivector
                                     quasilist*
                                     quasiappend
                                     quasicons
                                     vquasi
                                     quasi)
                               ((top) (top) (top) (top) (top) (top) (top))
                               ("i10611"
                                "i10609"
                                "i10607"
                                "i10605"
                                "i10603"
                                "i10601"
                                "i10599")))
                            (hygiene guile))
                         #{x 10794}#))
                 #{tmp 10792}#)
               (let ((#{tmp 10795}#
                       ($sc-dispatch
                         #{x 10789}#
                         '(#(atom "list") . each-any))))
                 (if #{tmp 10795}#
                   (@apply
                     (lambda (#{x 10797}#)
                       (let ((#{tmp 10801}# (map #{emit 10612}# #{x 10797}#)))
                         (let ((#{tmp 10802}#
                                 ($sc-dispatch #{tmp 10801}# 'each-any)))
                           (if #{tmp 10802}#
                             (@apply
                               (lambda (#{ g10798 10804}#)
                                 (cons '#(syntax-object
                                          list
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(#{ g10798}#)
                                             #((m10799 top))
                                             #("i10803"))
                                           #(ribcage #(x) #((top)) #("i10796"))
                                           #(ribcage () () ())
                                           #(ribcage #(x) #((top)) #("i10790"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i10611"
                                              "i10609"
                                              "i10607"
                                              "i10605"
                                              "i10603"
                                              "i10601"
                                              "i10599")))
                                          (hygiene guile))
                                       #{ g10798 10804}#))
                               #{tmp 10802}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{tmp 10801}#)))))
                     #{tmp 10795}#)
                   (let ((#{tmp 10807}#
                           ($sc-dispatch
                             #{x 10789}#
                             '(#(atom "list*") . #(each+ any (any) ())))))
                     (if #{tmp 10807}#
                       (@apply
                         (lambda (#{x 10810}# #{y 10811}#)
                           (letrec*
                             ((#{f 10814}#
                                (lambda (#{x* 10815}#)
                                  (if (null? #{x* 10815}#)
                                    (#{emit 10612}# #{y 10811}#)
                                    (let ((#{tmp 10821}#
                                            (list (#{emit 10612}#
                                                    (car #{x* 10815}#))
                                                  (#{f 10814}#
                                                    (cdr #{x* 10815}#)))))
                                      (let ((#{tmp 10822}#
                                              ($sc-dispatch
                                                #{tmp 10821}#
                                                '(any any))))
                                        (if #{tmp 10822}#
                                          (@apply
                                            (lambda (#{ g10818 10825}#
                                                     #{ g10817 10826}#)
                                              (list '#(syntax-object
                                                       cons
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(#{ g10818}#
                                                            #{ g10817}#)
                                                          #((m10819 top)
                                                            (m10819 top))
                                                          #("i10823" "i10824"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f x*)
                                                          #((top) (top))
                                                          #("i10812" "i10813"))
                                                        #(ribcage
                                                          #(x y)
                                                          #((top) (top))
                                                          #("i10808" "i10809"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i10790"))
                                                        #(ribcage
                                                          (emit quasivector
                                                                quasilist*
                                                                quasiappend
                                                                quasicons
                                                                vquasi
                                                                quasi)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i10611"
                                                           "i10609"
                                                           "i10607"
                                                           "i10605"
                                                           "i10603"
                                                           "i10601"
                                                           "i10599")))
                                                       (hygiene guile))
                                                    #{ g10818 10825}#
                                                    #{ g10817 10826}#))
                                            #{tmp 10822}#)
                                          (syntax-violation
                                            #f
                                            "source expression failed to match any pattern"
                                            #{tmp 10821}#))))))))
                             (#{f 10814}# #{x 10810}#)))
                         #{tmp 10807}#)
                       (let ((#{tmp 10827}#
                               ($sc-dispatch
                                 #{x 10789}#
                                 '(#(atom "append") . each-any))))
                         (if #{tmp 10827}#
                           (@apply
                             (lambda (#{x 10829}#)
                               (let ((#{tmp 10833}#
                                       (map #{emit 10612}# #{x 10829}#)))
                                 (let ((#{tmp 10834}#
                                         ($sc-dispatch
                                           #{tmp 10833}#
                                           'each-any)))
                                   (if #{tmp 10834}#
                                     (@apply
                                       (lambda (#{ g10830 10836}#)
                                         (cons '#(syntax-object
                                                  append
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(#{ g10830}#)
                                                     #((m10831 top))
                                                     #("i10835"))
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i10828"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i10790"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i10611"
                                                      "i10609"
                                                      "i10607"
                                                      "i10605"
                                                      "i10603"
                                                      "i10601"
                                                      "i10599")))
                                                  (hygiene guile))
                                               #{ g10830 10836}#))
                                       #{tmp 10834}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp 10833}#)))))
                             #{tmp 10827}#)
                           (let ((#{tmp 10839}#
                                   ($sc-dispatch
                                     #{x 10789}#
                                     '(#(atom "vector") . each-any))))
                             (if #{tmp 10839}#
                               (@apply
                                 (lambda (#{x 10841}#)
                                   (let ((#{tmp 10845}#
                                           (map #{emit 10612}# #{x 10841}#)))
                                     (let ((#{tmp 10846}#
                                             ($sc-dispatch
                                               #{tmp 10845}#
                                               'each-any)))
                                       (if #{tmp 10846}#
                                         (@apply
                                           (lambda (#{ g10842 10848}#)
                                             (cons '#(syntax-object
                                                      vector
                                                      ((top)
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(#{ g10842}#)
                                                         #((m10843 top))
                                                         #("i10847"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i10840"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i10790"))
                                                       #(ribcage
                                                         (emit quasivector
                                                               quasilist*
                                                               quasiappend
                                                               quasicons
                                                               vquasi
                                                               quasi)
                                                         ((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                         ("i10611"
                                                          "i10609"
                                                          "i10607"
                                                          "i10605"
                                                          "i10603"
                                                          "i10601"
                                                          "i10599")))
                                                      (hygiene guile))
                                                   #{ g10842 10848}#))
                                           #{tmp 10846}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp 10845}#)))))
                                 #{tmp 10839}#)
                               (let ((#{tmp 10851}#
                                       ($sc-dispatch
                                         #{x 10789}#
                                         '(#(atom "list->vector") any))))
                                 (if #{tmp 10851}#
                                   (@apply
                                     (lambda (#{x 10853}#)
                                       (let ((#{tmp 10857}#
                                               (#{emit 10612}# #{x 10853}#)))
                                         (list '#(syntax-object
                                                  list->vector
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(#{ g10854}#)
                                                     #((m10855 top))
                                                     #("i10858"))
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i10852"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i10790"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i10611"
                                                      "i10609"
                                                      "i10607"
                                                      "i10605"
                                                      "i10603"
                                                      "i10601"
                                                      "i10599")))
                                                  (hygiene guile))
                                               #{tmp 10857}#)))
                                     #{tmp 10851}#)
                                   (let ((#{tmp 10860}#
                                           ($sc-dispatch
                                             #{x 10789}#
                                             '(#(atom "value") any))))
                                     (if #{tmp 10860}#
                                       (@apply
                                         (lambda (#{x 10862}#) #{x 10862}#)
                                         #{tmp 10860}#)
                                       (syntax-violation
                                         #f
                                         "source expression failed to match any pattern"
                                         #{x 10789}#))))))))))))))))))
      (lambda (#{x 10863}#)
        (let ((#{tmp 10866}#
                ($sc-dispatch #{x 10863}# '(_ any))))
          (if #{tmp 10866}#
            (@apply
              (lambda (#{e 10868}#)
                (#{emit 10612}# (#{quasi 10600}# #{e 10868}# 0)))
              #{tmp 10866}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 10863}#)))))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (lambda (#{x 10939}#)
      (let ((#{tmp 10956}#
              ($sc-dispatch #{x 10939}# '(any any))))
        (if #{tmp 10956}#
          (@apply
            (lambda (#{k 10959}# #{filename 10960}#)
              (let ((#{fn 10962}# (syntax->datum #{filename 10960}#)))
                (let ((#{tmp 10964}#
                        ((lambda (#{fn 10943}# #{k 10944}#)
                           (let ((#{p 10948}# (open-input-file #{fn 10943}#)))
                             (letrec*
                               ((#{f 10952}#
                                  (lambda (#{x 10953}# #{result 10954}#)
                                    (if (eof-object? #{x 10953}#)
                                      (begin
                                        (close-input-port #{p 10948}#)
                                        (reverse #{result 10954}#))
                                      (#{f 10952}#
                                        (read #{p 10948}#)
                                        (cons (datum->syntax
                                                #{k 10944}#
                                                #{x 10953}#)
                                              #{result 10954}#))))))
                               (#{f 10952}# (read #{p 10948}#) '()))))
                         #{fn 10962}#
                         #{filename 10960}#)))
                  (let ((#{tmp 10965}#
                          ($sc-dispatch #{tmp 10964}# 'each-any)))
                    (if #{tmp 10965}#
                      (@apply
                        (lambda (#{exp 10967}#)
                          (cons '#(syntax-object
                                   begin
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage #(exp) #((top)) #("i10966"))
                                    #(ribcage () () ())
                                    #(ribcage () () ())
                                    #(ribcage #(fn) #((top)) #("i10961"))
                                    #(ribcage
                                      #(k filename)
                                      #((top) (top))
                                      #("i10957" "i10958"))
                                    #(ribcage (read-file) ((top)) ("i10941"))
                                    #(ribcage #(x) #((top)) #("i10940")))
                                   (hygiene guile))
                                #{exp 10967}#))
                        #{tmp 10965}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp 10964}#))))))
            #{tmp 10956}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 10939}#))))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (lambda (#{x 11064}#)
      (let ((#{tmp 11067}#
              ($sc-dispatch #{x 11064}# '(any any))))
        (if #{tmp 11067}#
          (@apply
            (lambda (#{k 11070}# #{filename 11071}#)
              (let ((#{fn 11073}# (syntax->datum #{filename 11071}#)))
                (let ((#{tmp 11075}#
                        (datum->syntax
                          #{filename 11071}#
                          (let ((#{t 11080}# (%search-load-path #{fn 11073}#)))
                            (if #{t 11080}#
                              #{t 11080}#
                              (syntax-violation
                                'include-from-path
                                "file not found in path"
                                #{x 11064}#
                                #{filename 11071}#))))))
                  (list '#(syntax-object
                           include
                           ((top)
                            #(ribcage () () ())
                            #(ribcage #(fn) #((top)) #("i11076"))
                            #(ribcage () () ())
                            #(ribcage () () ())
                            #(ribcage #(fn) #((top)) #("i11072"))
                            #(ribcage
                              #(k filename)
                              #((top) (top))
                              #("i11068" "i11069"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i11065")))
                           (hygiene guile))
                        #{tmp 11075}#))))
            #{tmp 11067}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 11064}#))))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (lambda (#{x 11082}#)
      (syntax-violation
        'unquote
        "expression not valid outside of quasiquote"
        #{x 11082}#))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (lambda (#{x 11084}#)
      (syntax-violation
        'unquote-splicing
        "expression not valid outside of quasiquote"
        #{x 11084}#))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (lambda (#{x 11086}#)
      (let ((#{tmp 11089}#
              ($sc-dispatch
                #{x 11086}#
                '(_ any any . each-any))))
        (if #{tmp 11089}#
          (@apply
            (lambda (#{e 11093}# #{m1 11094}# #{m2 11095}#)
              (let ((#{tmp 11097}#
                      (letrec*
                        ((#{f 11103}#
                           (lambda (#{clause 11104}# #{clauses 11105}#)
                             (if (null? #{clauses 11105}#)
                               (let ((#{tmp 11108}#
                                       ($sc-dispatch
                                         #{clause 11104}#
                                         '(#(free-id
                                             #(syntax-object
                                               else
                                               ((top)
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(f clause clauses)
                                                  #((top) (top) (top))
                                                  #("i11100"
                                                    "i11101"
                                                    "i11102"))
                                                #(ribcage
                                                  #(e m1 m2)
                                                  #((top) (top) (top))
                                                  #("i11090"
                                                    "i11091"
                                                    "i11092"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(x)
                                                  #((top))
                                                  #("i11087")))
                                               (hygiene guile)))
                                           any
                                           .
                                           each-any))))
                                 (if #{tmp 11108}#
                                   (@apply
                                     (lambda (#{e1 11111}# #{e2 11112}#)
                                       (cons '#(syntax-object
                                                begin
                                                ((top)
                                                 #(ribcage
                                                   #(e1 e2)
                                                   #((top) (top))
                                                   #("i11109" "i11110"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f clause clauses)
                                                   #((top) (top) (top))
                                                   #("i11100"
                                                     "i11101"
                                                     "i11102"))
                                                 #(ribcage
                                                   #(e m1 m2)
                                                   #((top) (top) (top))
                                                   #("i11090"
                                                     "i11091"
                                                     "i11092"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i11087")))
                                                (hygiene guile))
                                             (cons #{e1 11111}# #{e2 11112}#)))
                                     #{tmp 11108}#)
                                   (let ((#{tmp 11114}#
                                           ($sc-dispatch
                                             #{clause 11104}#
                                             '(each-any any . each-any))))
                                     (if #{tmp 11114}#
                                       (@apply
                                         (lambda (#{k 11118}#
                                                  #{e1 11119}#
                                                  #{e2 11120}#)
                                           (list '#(syntax-object
                                                    if
                                                    ((top)
                                                     #(ribcage
                                                       #(k e1 e2)
                                                       #((top) (top) (top))
                                                       #("i11115"
                                                         "i11116"
                                                         "i11117"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(f clause clauses)
                                                       #((top) (top) (top))
                                                       #("i11100"
                                                         "i11101"
                                                         "i11102"))
                                                     #(ribcage
                                                       #(e m1 m2)
                                                       #((top) (top) (top))
                                                       #("i11090"
                                                         "i11091"
                                                         "i11092"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i11087")))
                                                    (hygiene guile))
                                                 (list '#(syntax-object
                                                          memv
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11115"
                                                               "i11116"
                                                               "i11117"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11100"
                                                               "i11101"
                                                               "i11102"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11090"
                                                               "i11091"
                                                               "i11092"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i11087")))
                                                          (hygiene guile))
                                                       '#(syntax-object
                                                          t
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11115"
                                                               "i11116"
                                                               "i11117"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11100"
                                                               "i11101"
                                                               "i11102"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11090"
                                                               "i11091"
                                                               "i11092"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i11087")))
                                                          (hygiene guile))
                                                       (list '#(syntax-object
                                                                quote
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k e1 e2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11115"
                                                                     "i11116"
                                                                     "i11117"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(f
                                                                     clause
                                                                     clauses)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11100"
                                                                     "i11101"
                                                                     "i11102"))
                                                                 #(ribcage
                                                                   #(e m1 m2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i11090"
                                                                     "i11091"
                                                                     "i11092"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i11087")))
                                                                (hygiene
                                                                  guile))
                                                             #{k 11118}#))
                                                 (cons '#(syntax-object
                                                          begin
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11115"
                                                               "i11116"
                                                               "i11117"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11100"
                                                               "i11101"
                                                               "i11102"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i11090"
                                                               "i11091"
                                                               "i11092"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i11087")))
                                                          (hygiene guile))
                                                       (cons #{e1 11119}#
                                                             #{e2 11120}#))))
                                         #{tmp 11114}#)
                                       (syntax-violation
                                         'case
                                         "bad clause"
                                         #{x 11086}#
                                         #{clause 11104}#)))))
                               (let ((#{tmp 11126}#
                                       (#{f 11103}#
                                         (car #{clauses 11105}#)
                                         (cdr #{clauses 11105}#))))
                                 (let ((#{tmp 11130}#
                                         ($sc-dispatch
                                           #{clause 11104}#
                                           '(each-any any . each-any))))
                                   (if #{tmp 11130}#
                                     (@apply
                                       (lambda (#{k 11134}#
                                                #{e1 11135}#
                                                #{e2 11136}#)
                                         (list '#(syntax-object
                                                  if
                                                  ((top)
                                                   #(ribcage
                                                     #(k e1 e2)
                                                     #((top) (top) (top))
                                                     #("i11131"
                                                       "i11132"
                                                       "i11133"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(rest)
                                                     #((top))
                                                     #("i11127"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(f clause clauses)
                                                     #((top) (top) (top))
                                                     #("i11100"
                                                       "i11101"
                                                       "i11102"))
                                                   #(ribcage
                                                     #(e m1 m2)
                                                     #((top) (top) (top))
                                                     #("i11090"
                                                       "i11091"
                                                       "i11092"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i11087")))
                                                  (hygiene guile))
                                               (list '#(syntax-object
                                                        memv
                                                        ((top)
                                                         #(ribcage
                                                           #(k e1 e2)
                                                           #((top) (top) (top))
                                                           #("i11131"
                                                             "i11132"
                                                             "i11133"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(rest)
                                                           #((top))
                                                           #("i11127"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(f clause clauses)
                                                           #((top) (top) (top))
                                                           #("i11100"
                                                             "i11101"
                                                             "i11102"))
                                                         #(ribcage
                                                           #(e m1 m2)
                                                           #((top) (top) (top))
                                                           #("i11090"
                                                             "i11091"
                                                             "i11092"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i11087")))
                                                        (hygiene guile))
                                                     '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(k e1 e2)
                                                           #((top) (top) (top))
                                                           #("i11131"
                                                             "i11132"
                                                             "i11133"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(rest)
                                                           #((top))
                                                           #("i11127"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(f clause clauses)
                                                           #((top) (top) (top))
                                                           #("i11100"
                                                             "i11101"
                                                             "i11102"))
                                                         #(ribcage
                                                           #(e m1 m2)
                                                           #((top) (top) (top))
                                                           #("i11090"
                                                             "i11091"
                                                             "i11092"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i11087")))
                                                        (hygiene guile))
                                                     (list '#(syntax-object
                                                              quote
                                                              ((top)
                                                               #(ribcage
                                                                 #(k e1 e2)
                                                                 #((top)
                                                                   (top)
                                                                   (top))
                                                                 #("i11131"
                                                                   "i11132"
                                                                   "i11133"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(rest)
                                                                 #((top))
                                                                 #("i11127"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(f
                                                                   clause
                                                                   clauses)
                                                                 #((top)
                                                                   (top)
                                                                   (top))
                                                                 #("i11100"
                                                                   "i11101"
                                                                   "i11102"))
                                                               #(ribcage
                                                                 #(e m1 m2)
                                                                 #((top)
                                                                   (top)
                                                                   (top))
                                                                 #("i11090"
                                                                   "i11091"
                                                                   "i11092"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i11087")))
                                                              (hygiene guile))
                                                           #{k 11134}#))
                                               (cons '#(syntax-object
                                                        begin
                                                        ((top)
                                                         #(ribcage
                                                           #(k e1 e2)
                                                           #((top) (top) (top))
                                                           #("i11131"
                                                             "i11132"
                                                             "i11133"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(rest)
                                                           #((top))
                                                           #("i11127"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(f clause clauses)
                                                           #((top) (top) (top))
                                                           #("i11100"
                                                             "i11101"
                                                             "i11102"))
                                                         #(ribcage
                                                           #(e m1 m2)
                                                           #((top) (top) (top))
                                                           #("i11090"
                                                             "i11091"
                                                             "i11092"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i11087")))
                                                        (hygiene guile))
                                                     (cons #{e1 11135}#
                                                           #{e2 11136}#))
                                               #{tmp 11126}#))
                                       #{tmp 11130}#)
                                     (syntax-violation
                                       'case
                                       "bad clause"
                                       #{x 11086}#
                                       #{clause 11104}#))))))))
                        (#{f 11103}# #{m1 11094}# #{m2 11095}#))))
                (list '#(syntax-object
                         let
                         ((top)
                          #(ribcage () () ())
                          #(ribcage #(body) #((top)) #("i11098"))
                          #(ribcage
                            #(e m1 m2)
                            #((top) (top) (top))
                            #("i11090" "i11091" "i11092"))
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i11087")))
                         (hygiene guile))
                      (list (list '#(syntax-object
                                     t
                                     ((top)
                                      #(ribcage () () ())
                                      #(ribcage #(body) #((top)) #("i11098"))
                                      #(ribcage
                                        #(e m1 m2)
                                        #((top) (top) (top))
                                        #("i11090" "i11091" "i11092"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i11087")))
                                     (hygiene guile))
                                  #{e 11093}#))
                      #{tmp 11097}#)))
            #{tmp 11089}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 11086}#))))))

(define make-variable-transformer
  (lambda (#{proc 11142}#)
    (if (procedure? #{proc 11142}#)
      (letrec*
        ((#{trans 11145}#
           (lambda (#{x 11146}#)
             (#{proc 11142}# #{x 11146}#))))
        (begin
          (set-procedure-property!
            #{trans 11145}#
            'variable-transformer
            #t)
          #{trans 11145}#))
      (error "variable transformer not a procedure"
             #{proc 11142}#))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (lambda (#{x 11152}#)
      (let ((#{tmp 11155}#
              ($sc-dispatch #{x 11152}# '(_ any))))
        (if #{tmp 11155}#
          (@apply
            (lambda (#{e 11157}#)
              (list '#(syntax-object
                       lambda
                       ((top)
                        #(ribcage #(e) #((top)) #("i11156"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i11153")))
                       (hygiene guile))
                    '(#(syntax-object
                        x
                        ((top)
                         #(ribcage #(e) #((top)) #("i11156"))
                         #(ribcage () () ())
                         #(ribcage #(x) #((top)) #("i11153")))
                        (hygiene guile)))
                    '#((#(syntax-object
                          macro-type
                          ((top)
                           #(ribcage #(e) #((top)) #("i11156"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i11153")))
                          (hygiene guile))
                        .
                        #(syntax-object
                          identifier-syntax
                          ((top)
                           #(ribcage #(e) #((top)) #("i11156"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i11153")))
                          (hygiene guile))))
                    (list '#(syntax-object
                             syntax-case
                             ((top)
                              #(ribcage #(e) #((top)) #("i11156"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i11153")))
                             (hygiene guile))
                          '#(syntax-object
                             x
                             ((top)
                              #(ribcage #(e) #((top)) #("i11156"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i11153")))
                             (hygiene guile))
                          '()
                          (list '#(syntax-object
                                   id
                                   ((top)
                                    #(ribcage #(e) #((top)) #("i11156"))
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i11153")))
                                   (hygiene guile))
                                '(#(syntax-object
                                    identifier?
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i11156"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i11153")))
                                    (hygiene guile))
                                  (#(syntax-object
                                     syntax
                                     ((top)
                                      #(ribcage #(e) #((top)) #("i11156"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i11153")))
                                     (hygiene guile))
                                   #(syntax-object
                                     id
                                     ((top)
                                      #(ribcage #(e) #((top)) #("i11156"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i11153")))
                                     (hygiene guile))))
                                (list '#(syntax-object
                                         syntax
                                         ((top)
                                          #(ribcage #(e) #((top)) #("i11156"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i11153")))
                                         (hygiene guile))
                                      #{e 11157}#))
                          (list '(#(syntax-object
                                    _
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i11156"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i11153")))
                                    (hygiene guile))
                                  #(syntax-object
                                    x
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i11156"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i11153")))
                                    (hygiene guile))
                                  #(syntax-object
                                    ...
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i11156"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i11153")))
                                    (hygiene guile)))
                                (list '#(syntax-object
                                         syntax
                                         ((top)
                                          #(ribcage #(e) #((top)) #("i11156"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i11153")))
                                         (hygiene guile))
                                      (cons #{e 11157}#
                                            '(#(syntax-object
                                                x
                                                ((top)
                                                 #(ribcage
                                                   #(e)
                                                   #((top))
                                                   #("i11156"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i11153")))
                                                (hygiene guile))
                                              #(syntax-object
                                                ...
                                                ((top)
                                                 #(ribcage
                                                   #(e)
                                                   #((top))
                                                   #("i11156"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i11153")))
                                                (hygiene guile)))))))))
            #{tmp 11155}#)
          (let ((#{tmp 11158}#
                  ($sc-dispatch
                    #{x 11152}#
                    '(_ (any any)
                        ((#(free-id
                            #(syntax-object
                              set!
                              ((top)
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i11153")))
                              (hygiene guile)))
                          any
                          any)
                         any)))))
            (if (if #{tmp 11158}#
                  (@apply
                    (lambda (#{id 11164}#
                             #{exp1 11165}#
                             #{var 11166}#
                             #{val 11167}#
                             #{exp2 11168}#)
                      (if (identifier? #{id 11164}#)
                        (identifier? #{var 11166}#)
                        #f))
                    #{tmp 11158}#)
                  #f)
              (@apply
                (lambda (#{id 11176}#
                         #{exp1 11177}#
                         #{var 11178}#
                         #{val 11179}#
                         #{exp2 11180}#)
                  (list '#(syntax-object
                           make-variable-transformer
                           ((top)
                            #(ribcage
                              #(id exp1 var val exp2)
                              #((top) (top) (top) (top) (top))
                              #("i11171" "i11172" "i11173" "i11174" "i11175"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i11153")))
                           (hygiene guile))
                        (list '#(syntax-object
                                 lambda
                                 ((top)
                                  #(ribcage
                                    #(id exp1 var val exp2)
                                    #((top) (top) (top) (top) (top))
                                    #("i11171"
                                      "i11172"
                                      "i11173"
                                      "i11174"
                                      "i11175"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i11153")))
                                 (hygiene guile))
                              '(#(syntax-object
                                  x
                                  ((top)
                                   #(ribcage
                                     #(id exp1 var val exp2)
                                     #((top) (top) (top) (top) (top))
                                     #("i11171"
                                       "i11172"
                                       "i11173"
                                       "i11174"
                                       "i11175"))
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i11153")))
                                  (hygiene guile)))
                              '#((#(syntax-object
                                    macro-type
                                    ((top)
                                     #(ribcage
                                       #(id exp1 var val exp2)
                                       #((top) (top) (top) (top) (top))
                                       #("i11171"
                                         "i11172"
                                         "i11173"
                                         "i11174"
                                         "i11175"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i11153")))
                                    (hygiene guile))
                                  .
                                  #(syntax-object
                                    variable-transformer
                                    ((top)
                                     #(ribcage
                                       #(id exp1 var val exp2)
                                       #((top) (top) (top) (top) (top))
                                       #("i11171"
                                         "i11172"
                                         "i11173"
                                         "i11174"
                                         "i11175"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i11153")))
                                    (hygiene guile))))
                              (list '#(syntax-object
                                       syntax-case
                                       ((top)
                                        #(ribcage
                                          #(id exp1 var val exp2)
                                          #((top) (top) (top) (top) (top))
                                          #("i11171"
                                            "i11172"
                                            "i11173"
                                            "i11174"
                                            "i11175"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i11153")))
                                       (hygiene guile))
                                    '#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(id exp1 var val exp2)
                                          #((top) (top) (top) (top) (top))
                                          #("i11171"
                                            "i11172"
                                            "i11173"
                                            "i11174"
                                            "i11175"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i11153")))
                                       (hygiene guile))
                                    '(#(syntax-object
                                        set!
                                        ((top)
                                         #(ribcage
                                           #(id exp1 var val exp2)
                                           #((top) (top) (top) (top) (top))
                                           #("i11171"
                                             "i11172"
                                             "i11173"
                                             "i11174"
                                             "i11175"))
                                         #(ribcage () () ())
                                         #(ribcage #(x) #((top)) #("i11153")))
                                        (hygiene guile)))
                                    (list (list '#(syntax-object
                                                   set!
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i11171"
                                                        "i11172"
                                                        "i11173"
                                                        "i11174"
                                                        "i11175"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i11153")))
                                                   (hygiene guile))
                                                #{var 11178}#
                                                #{val 11179}#)
                                          (list '#(syntax-object
                                                   syntax
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i11171"
                                                        "i11172"
                                                        "i11173"
                                                        "i11174"
                                                        "i11175"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i11153")))
                                                   (hygiene guile))
                                                #{exp2 11180}#))
                                    (list (cons #{id 11176}#
                                                '(#(syntax-object
                                                    x
                                                    ((top)
                                                     #(ribcage
                                                       #(id exp1 var val exp2)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i11171"
                                                         "i11172"
                                                         "i11173"
                                                         "i11174"
                                                         "i11175"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i11153")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage
                                                       #(id exp1 var val exp2)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i11171"
                                                         "i11172"
                                                         "i11173"
                                                         "i11174"
                                                         "i11175"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i11153")))
                                                    (hygiene guile))))
                                          (list '#(syntax-object
                                                   syntax
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i11171"
                                                        "i11172"
                                                        "i11173"
                                                        "i11174"
                                                        "i11175"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i11153")))
                                                   (hygiene guile))
                                                (cons #{exp1 11177}#
                                                      '(#(syntax-object
                                                          x
                                                          ((top)
                                                           #(ribcage
                                                             #(id
                                                               exp1
                                                               var
                                                               val
                                                               exp2)
                                                             #((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                             #("i11171"
                                                               "i11172"
                                                               "i11173"
                                                               "i11174"
                                                               "i11175"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i11153")))
                                                          (hygiene guile))
                                                        #(syntax-object
                                                          ...
                                                          ((top)
                                                           #(ribcage
                                                             #(id
                                                               exp1
                                                               var
                                                               val
                                                               exp2)
                                                             #((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                             #("i11171"
                                                               "i11172"
                                                               "i11173"
                                                               "i11174"
                                                               "i11175"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i11153")))
                                                          (hygiene guile))))))
                                    (list #{id 11176}#
                                          (list '#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i11171"
                                                        "i11172"
                                                        "i11173"
                                                        "i11174"
                                                        "i11175"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i11153")))
                                                   (hygiene guile))
                                                (list '#(syntax-object
                                                         syntax
                                                         ((top)
                                                          #(ribcage
                                                            #(id
                                                              exp1
                                                              var
                                                              val
                                                              exp2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i11171"
                                                              "i11172"
                                                              "i11173"
                                                              "i11174"
                                                              "i11175"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i11153")))
                                                         (hygiene guile))
                                                      #{id 11176}#))
                                          (list '#(syntax-object
                                                   syntax
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i11171"
                                                        "i11172"
                                                        "i11173"
                                                        "i11174"
                                                        "i11175"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i11153")))
                                                   (hygiene guile))
                                                #{exp1 11177}#))))))
                #{tmp 11158}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 11152}#))))))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (lambda (#{x 11181}#)
      (let ((#{tmp 11184}#
              ($sc-dispatch
                #{x 11181}#
                '(_ (any . any) any . each-any))))
        (if #{tmp 11184}#
          (@apply
            (lambda (#{id 11189}#
                     #{args 11190}#
                     #{b0 11191}#
                     #{b1 11192}#)
              (list '#(syntax-object
                       define
                       ((top)
                        #(ribcage
                          #(id args b0 b1)
                          #((top) (top) (top) (top))
                          #("i11185" "i11186" "i11187" "i11188"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i11182")))
                       (hygiene guile))
                    #{id 11189}#
                    (cons '#(syntax-object
                             lambda*
                             ((top)
                              #(ribcage
                                #(id args b0 b1)
                                #((top) (top) (top) (top))
                                #("i11185" "i11186" "i11187" "i11188"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i11182")))
                             (hygiene guile))
                          (cons #{args 11190}#
                                (cons #{b0 11191}# #{b1 11192}#)))))
            #{tmp 11184}#)
          (let ((#{tmp 11194}#
                  ($sc-dispatch #{x 11181}# '(_ any any))))
            (if (if #{tmp 11194}#
                  (@apply
                    (lambda (#{id 11197}# #{val 11198}#)
                      (identifier?
                        '#(syntax-object
                           x
                           ((top)
                            #(ribcage
                              #(id val)
                              #((top) (top))
                              #("i11195" "i11196"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i11182")))
                           (hygiene guile))))
                    #{tmp 11194}#)
                  #f)
              (@apply
                (lambda (#{id 11201}# #{val 11202}#)
                  (list '#(syntax-object
                           define
                           ((top)
                            #(ribcage
                              #(id val)
                              #((top) (top))
                              #("i11199" "i11200"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i11182")))
                           (hygiene guile))
                        #{id 11201}#
                        #{val 11202}#))
                #{tmp 11194}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 11181}#))))))))

