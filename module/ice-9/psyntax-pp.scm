(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec*
  ((#{top-level-eval-hook 4273}#
     (lambda (#{x 28142}# #{mod 28143}#)
       (primitive-eval #{x 28142}#)))
   (#{maybe-name-value! 4278}#
     (lambda (#{name 16638}# #{val 16639}#)
       (if (if (struct? #{val 16639}#)
             (eq? (struct-vtable #{val 16639}#)
                  (vector-ref %expanded-vtables 13))
             #f)
         (let ((#{meta 16646}# (struct-ref #{val 16639}# 1)))
           (if (not (assq 'name #{meta 16646}#))
             (let ((#{v 16651}#
                     (cons (cons 'name #{name 16638}#) #{meta 16646}#)))
               (struct-set! #{val 16639}# 1 #{v 16651}#)))))))
   (#{build-application 4280}#
     (lambda (#{source 16363}#
              #{fun-exp 16364}#
              #{arg-exps 16365}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 11)
         #{source 16363}#
         #{fun-exp 16364}#
         #{arg-exps 16365}#)))
   (#{build-conditional 4281}#
     (lambda (#{source 16371}#
              #{test-exp 16372}#
              #{then-exp 16373}#
              #{else-exp 16374}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 10)
         #{source 16371}#
         #{test-exp 16372}#
         #{then-exp 16373}#
         #{else-exp 16374}#)))
   (#{build-dynlet 4282}#
     (lambda (#{source 16381}#
              #{fluids 16382}#
              #{vals 16383}#
              #{body 16384}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 17)
         #{source 16381}#
         #{fluids 16382}#
         #{vals 16383}#
         #{body 16384}#)))
   (#{build-lexical-reference 4283}#
     (lambda (#{type 28144}#
              #{source 28145}#
              #{name 28146}#
              #{var 28147}#)
       (make-struct/no-tail
         (vector-ref %expanded-vtables 3)
         #{source 28145}#
         #{name 28146}#
         #{var 28147}#)))
   (#{build-lexical-assignment 4284}#
     (lambda (#{source 16391}#
              #{name 16392}#
              #{var 16393}#
              #{exp 16394}#)
       (begin
         (if (if (struct? #{exp 16394}#)
               (eq? (struct-vtable #{exp 16394}#)
                    (vector-ref %expanded-vtables 13))
               #f)
           (let ((#{meta 16410}# (struct-ref #{exp 16394}# 1)))
             (if (not (assq 'name #{meta 16410}#))
               (let ((#{v 16417}#
                       (cons (cons 'name #{name 16392}#) #{meta 16410}#)))
                 (struct-set! #{exp 16394}# 1 #{v 16417}#)))))
         (make-struct/no-tail
           (vector-ref %expanded-vtables 4)
           #{source 16391}#
           #{name 16392}#
           #{var 16393}#
           #{exp 16394}#))))
   (#{analyze-variable 4285}#
     (lambda (#{mod 28153}#
              #{var 28154}#
              #{modref-cont 28155}#
              #{bare-cont 28156}#)
       (if (not #{mod 28153}#)
         (#{bare-cont 28156}# #{var 28154}#)
         (let ((#{kind 28157}# (car #{mod 28153}#))
               (#{mod 28158}# (cdr #{mod 28153}#)))
           (if (eqv? #{kind 28157}# 'public)
             (#{modref-cont 28155}#
               #{mod 28158}#
               #{var 28154}#
               #t)
             (if (eqv? #{kind 28157}# 'private)
               (if (not (equal?
                          #{mod 28158}#
                          (module-name (current-module))))
                 (#{modref-cont 28155}#
                   #{mod 28158}#
                   #{var 28154}#
                   #f)
                 (#{bare-cont 28156}# #{var 28154}#))
               (if (eqv? #{kind 28157}# 'bare)
                 (#{bare-cont 28156}# #{var 28154}#)
                 (if (eqv? #{kind 28157}# 'hygiene)
                   (if (if (not (equal?
                                  #{mod 28158}#
                                  (module-name (current-module))))
                         (module-variable
                           (resolve-module #{mod 28158}#)
                           #{var 28154}#)
                         #f)
                     (#{modref-cont 28155}#
                       #{mod 28158}#
                       #{var 28154}#
                       #f)
                     (#{bare-cont 28156}# #{var 28154}#))
                   (syntax-violation
                     #f
                     "bad module kind"
                     #{var 28154}#
                     #{mod 28158}#)))))))))
   (#{build-global-reference 4286}#
     (lambda (#{source 28173}# #{var 28174}# #{mod 28175}#)
       (#{analyze-variable 4285}#
         #{mod 28175}#
         #{var 28174}#
         (lambda (#{mod 28178}# #{var 28179}# #{public? 28180}#)
           (make-struct/no-tail
             (vector-ref %expanded-vtables 5)
             #{source 28173}#
             #{mod 28178}#
             #{var 28179}#
             #{public? 28180}#))
         (lambda (#{var 28188}#)
           (make-struct/no-tail
             (vector-ref %expanded-vtables 7)
             #{source 28173}#
             #{var 28188}#)))))
   (#{build-global-assignment 4287}#
     (lambda (#{source 16426}#
              #{var 16427}#
              #{exp 16428}#
              #{mod 16429}#)
       (begin
         (if (if (struct? #{exp 16428}#)
               (eq? (struct-vtable #{exp 16428}#)
                    (vector-ref %expanded-vtables 13))
               #f)
           (let ((#{meta 16445}# (struct-ref #{exp 16428}# 1)))
             (if (not (assq 'name #{meta 16445}#))
               (let ((#{v 16452}#
                       (cons (cons 'name #{var 16427}#) #{meta 16445}#)))
                 (struct-set! #{exp 16428}# 1 #{v 16452}#)))))
         (#{analyze-variable 4285}#
           #{mod 16429}#
           #{var 16427}#
           (lambda (#{mod 16457}# #{var 16458}# #{public? 16459}#)
             (make-struct/no-tail
               (vector-ref %expanded-vtables 6)
               #{source 16426}#
               #{mod 16457}#
               #{var 16458}#
               #{public? 16459}#
               #{exp 16428}#))
           (lambda (#{var 16467}#)
             (make-struct/no-tail
               (vector-ref %expanded-vtables 8)
               #{source 16426}#
               #{var 16467}#
               #{exp 16428}#))))))
   (#{build-global-definition 4288}#
     (lambda (#{source 28194}# #{var 28195}# #{exp 28196}#)
       (begin
         (if (if (struct? #{exp 28196}#)
               (eq? (struct-vtable #{exp 28196}#)
                    (vector-ref %expanded-vtables 13))
               #f)
           (let ((#{meta 28212}# (struct-ref #{exp 28196}# 1)))
             (if (not (assq 'name #{meta 28212}#))
               (let ((#{v 28219}#
                       (cons (cons 'name #{var 28195}#) #{meta 28212}#)))
                 (struct-set! #{exp 28196}# 1 #{v 28219}#)))))
         (make-struct/no-tail
           (vector-ref %expanded-vtables 9)
           #{source 28194}#
           #{var 28195}#
           #{exp 28196}#))))
   (#{build-simple-lambda 4289}#
     (lambda (#{src 16473}#
              #{req 16474}#
              #{rest 16475}#
              #{vars 16476}#
              #{meta 16477}#
              #{exp 16478}#)
       (let ((#{body 16484}#
               (make-struct/no-tail
                 (vector-ref %expanded-vtables 14)
                 #{src 16473}#
                 #{req 16474}#
                 #f
                 #{rest 16475}#
                 #f
                 '()
                 #{vars 16476}#
                 #{exp 16478}#
                 #f)))
         (make-struct/no-tail
           (vector-ref %expanded-vtables 13)
           #{src 16473}#
           #{meta 16477}#
           #{body 16484}#))))
   (#{build-sequence 4294}#
     (lambda (#{src 28227}# #{exps 28228}#)
       (if (null? (cdr #{exps 28228}#))
         (car #{exps 28228}#)
         (make-struct/no-tail
           (vector-ref %expanded-vtables 12)
           #{src 28227}#
           #{exps 28228}#))))
   (#{build-let 4295}#
     (lambda (#{src 16496}#
              #{ids 16497}#
              #{vars 16498}#
              #{val-exps 16499}#
              #{body-exp 16500}#)
       (begin
         (for-each
           #{maybe-name-value! 4278}#
           #{ids 16497}#
           #{val-exps 16499}#)
         (if (null? #{vars 16498}#)
           #{body-exp 16500}#
           (make-struct/no-tail
             (vector-ref %expanded-vtables 15)
             #{src 16496}#
             #{ids 16497}#
             #{vars 16498}#
             #{val-exps 16499}#
             #{body-exp 16500}#)))))
   (#{build-named-let 4296}#
     (lambda (#{src 16524}#
              #{ids 16525}#
              #{vars 16526}#
              #{val-exps 16527}#
              #{body-exp 16528}#)
       (let ((#{f 16529}# (car #{vars 16526}#))
             (#{f-name 16530}# (car #{ids 16525}#))
             (#{vars 16531}# (cdr #{vars 16526}#))
             (#{ids 16532}# (cdr #{ids 16525}#)))
         (let ((#{proc 16533}#
                 (let ((#{body 16553}#
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 14)
                           #{src 16524}#
                           #{ids 16532}#
                           #f
                           #f
                           #f
                           '()
                           #{vars 16531}#
                           #{body-exp 16528}#
                           #f)))
                   (make-struct/no-tail
                     (vector-ref %expanded-vtables 13)
                     #{src 16524}#
                     '()
                     #{body 16553}#))))
           (begin
             (if (if (struct? #{proc 16533}#)
                   (eq? (struct-vtable #{proc 16533}#)
                        (vector-ref %expanded-vtables 13))
                   #f)
               (let ((#{meta 16577}# (struct-ref #{proc 16533}# 1)))
                 (if (not (assq 'name #{meta 16577}#))
                   (let ((#{v 16584}#
                           (cons (cons 'name #{f-name 16530}#)
                                 #{meta 16577}#)))
                     (struct-set! #{proc 16533}# 1 #{v 16584}#)))))
             (for-each
               #{maybe-name-value! 4278}#
               #{ids 16532}#
               #{val-exps 16527}#)
             (let ((#{names 16608}# (list #{f-name 16530}#))
                   (#{gensyms 16609}# (list #{f 16529}#))
                   (#{vals 16610}# (list #{proc 16533}#))
                   (#{body 16611}#
                     (let ((#{fun-exp 16615}#
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 3)
                               #{src 16524}#
                               #{f-name 16530}#
                               #{f 16529}#)))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 11)
                         #{src 16524}#
                         #{fun-exp 16615}#
                         #{val-exps 16527}#))))
               (make-struct/no-tail
                 (vector-ref %expanded-vtables 16)
                 #{src 16524}#
                 #f
                 #{names 16608}#
                 #{gensyms 16609}#
                 #{vals 16610}#
                 #{body 16611}#)))))))
   (#{build-letrec 4297}#
     (lambda (#{src 16631}#
              #{in-order? 16632}#
              #{ids 16633}#
              #{vars 16634}#
              #{val-exps 16635}#
              #{body-exp 16636}#)
       (if (null? #{vars 16634}#)
         #{body-exp 16636}#
         (begin
           (for-each
             #{maybe-name-value! 4278}#
             #{ids 16633}#
             #{val-exps 16635}#)
           (make-struct/no-tail
             (vector-ref %expanded-vtables 16)
             #{src 16631}#
             #{in-order? 16632}#
             #{ids 16633}#
             #{vars 16634}#
             #{val-exps 16635}#
             #{body-exp 16636}#)))))
   (#{source-annotation 4306}#
     (lambda (#{x 16662}#)
       (if (if (vector? #{x 16662}#)
             (if (= (vector-length #{x 16662}#) 4)
               (eq? (vector-ref #{x 16662}# 0) 'syntax-object)
               #f)
             #f)
         (#{source-annotation 4306}#
           (vector-ref #{x 16662}# 1))
         (if (pair? #{x 16662}#)
           (let ((#{props 16677}# (source-properties #{x 16662}#)))
             (if (pair? #{props 16677}#) #{props 16677}# #f))
           #f))))
   (#{extend-env 4307}#
     (lambda (#{labels 16679}# #{bindings 16680}# #{r 16681}#)
       (if (null? #{labels 16679}#)
         #{r 16681}#
         (#{extend-env 4307}#
           (cdr #{labels 16679}#)
           (cdr #{bindings 16680}#)
           (cons (cons (car #{labels 16679}#)
                       (car #{bindings 16680}#))
                 #{r 16681}#)))))
   (#{extend-var-env 4308}#
     (lambda (#{labels 16682}# #{vars 16683}# #{r 16684}#)
       (if (null? #{labels 16682}#)
         #{r 16684}#
         (#{extend-var-env 4308}#
           (cdr #{labels 16682}#)
           (cdr #{vars 16683}#)
           (cons (cons (car #{labels 16682}#)
                       (cons 'lexical (car #{vars 16683}#)))
                 #{r 16684}#)))))
   (#{macros-only-env 4309}#
     (lambda (#{r 16685}#)
       (if (null? #{r 16685}#)
         '()
         (let ((#{a 16686}# (car #{r 16685}#)))
           (if (eq? (car (cdr #{a 16686}#)) 'macro)
             (cons #{a 16686}#
                   (#{macros-only-env 4309}# (cdr #{r 16685}#)))
             (#{macros-only-env 4309}# (cdr #{r 16685}#)))))))
   (#{global-extend 4311}#
     (lambda (#{type 16688}# #{sym 16689}# #{val 16690}#)
       (module-define!
         (current-module)
         #{sym 16689}#
         (make-syntax-transformer
           #{sym 16689}#
           #{type 16688}#
           #{val 16690}#))))
   (#{id? 4313}#
     (lambda (#{x 10546}#)
       (if (symbol? #{x 10546}#)
         #t
         (if (if (vector? #{x 10546}#)
               (if (= (vector-length #{x 10546}#) 4)
                 (eq? (vector-ref #{x 10546}# 0) 'syntax-object)
                 #f)
               #f)
           (symbol? (vector-ref #{x 10546}# 1))
           #f))))
   (#{gen-labels 4316}#
     (lambda (#{ls 16700}#)
       (if (null? #{ls 16700}#)
         '()
         (cons (symbol->string (gensym "i"))
               (#{gen-labels 4316}# (cdr #{ls 16700}#))))))
   (#{make-binding-wrap 4327}#
     (lambda (#{ids 16704}# #{labels 16705}# #{w 16706}#)
       (if (null? #{ids 16704}#)
         #{w 16706}#
         (cons (car #{w 16706}#)
               (cons (let ((#{labelvec 16707}#
                             (list->vector #{labels 16705}#)))
                       (let ((#{n 16708}# (vector-length #{labelvec 16707}#)))
                         (let ((#{symnamevec 16709}# (make-vector #{n 16708}#))
                               (#{marksvec 16710}# (make-vector #{n 16708}#)))
                           (begin
                             (letrec*
                               ((#{f 16711}#
                                  (lambda (#{ids 16714}# #{i 16715}#)
                                    (if (not (null? #{ids 16714}#))
                                      (call-with-values
                                        (lambda ()
                                          (let ((#{x 16718}#
                                                  (car #{ids 16714}#)))
                                            (if (if (vector? #{x 16718}#)
                                                  (if (= (vector-length
                                                           #{x 16718}#)
                                                         4)
                                                    (eq? (vector-ref
                                                           #{x 16718}#
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                  #f)
                                              (values
                                                (vector-ref #{x 16718}# 1)
                                                (let ((#{m1 16734}#
                                                        (car #{w 16706}#))
                                                      (#{m2 16735}#
                                                        (car (vector-ref
                                                               #{x 16718}#
                                                               2))))
                                                  (if (null? #{m2 16735}#)
                                                    #{m1 16734}#
                                                    (append
                                                      #{m1 16734}#
                                                      #{m2 16735}#))))
                                              (values
                                                #{x 16718}#
                                                (car #{w 16706}#)))))
                                        (lambda (#{symname 16755}#
                                                 #{marks 16756}#)
                                          (begin
                                            (vector-set!
                                              #{symnamevec 16709}#
                                              #{i 16715}#
                                              #{symname 16755}#)
                                            (vector-set!
                                              #{marksvec 16710}#
                                              #{i 16715}#
                                              #{marks 16756}#)
                                            (#{f 16711}#
                                              (cdr #{ids 16714}#)
                                              (#{1+}# #{i 16715}#)))))))))
                               (#{f 16711}# #{ids 16704}# 0))
                             (vector
                               'ribcage
                               #{symnamevec 16709}#
                               #{marksvec 16710}#
                               #{labelvec 16707}#)))))
                     (cdr #{w 16706}#))))))
   (#{join-wraps 4329}#
     (lambda (#{w1 16765}# #{w2 16766}#)
       (let ((#{m1 16767}# (car #{w1 16765}#))
             (#{s1 16768}# (cdr #{w1 16765}#)))
         (if (null? #{m1 16767}#)
           (if (null? #{s1 16768}#)
             #{w2 16766}#
             (cons (car #{w2 16766}#)
                   (let ((#{m2 16775}# (cdr #{w2 16766}#)))
                     (if (null? #{m2 16775}#)
                       #{s1 16768}#
                       (append #{s1 16768}# #{m2 16775}#)))))
           (cons (let ((#{m2 16784}# (car #{w2 16766}#)))
                   (if (null? #{m2 16784}#)
                     #{m1 16767}#
                     (append #{m1 16767}# #{m2 16784}#)))
                 (let ((#{m2 16793}# (cdr #{w2 16766}#)))
                   (if (null? #{m2 16793}#)
                     #{s1 16768}#
                     (append #{s1 16768}# #{m2 16793}#))))))))
   (#{same-marks? 4331}#
     (lambda (#{x 16798}# #{y 16799}#)
       (if (eq? #{x 16798}# #{y 16799}#)
         (eq? #{x 16798}# #{y 16799}#)
         (if (not (null? #{x 16798}#))
           (if (not (null? #{y 16799}#))
             (if (eq? (car #{x 16798}#) (car #{y 16799}#))
               (#{same-marks? 4331}#
                 (cdr #{x 16798}#)
                 (cdr #{y 16799}#))
               #f)
             #f)
           #f))))
   (#{id-var-name 4332}#
     (lambda (#{id 16807}# #{w 16808}#)
       (letrec*
         ((#{search 16809}#
            (lambda (#{sym 16870}# #{subst 16871}# #{marks 16872}#)
              (if (null? #{subst 16871}#)
                (values #f #{marks 16872}#)
                (let ((#{fst 16873}# (car #{subst 16871}#)))
                  (if (eq? #{fst 16873}# 'shift)
                    (#{search 16809}#
                      #{sym 16870}#
                      (cdr #{subst 16871}#)
                      (cdr #{marks 16872}#))
                    (let ((#{symnames 16875}# (vector-ref #{fst 16873}# 1)))
                      (if (vector? #{symnames 16875}#)
                        (let ((#{n 16887}# (vector-length #{symnames 16875}#)))
                          (letrec*
                            ((#{f 16888}#
                               (lambda (#{i 16890}#)
                                 (if (= #{i 16890}# #{n 16887}#)
                                   (#{search 16809}#
                                     #{sym 16870}#
                                     (cdr #{subst 16871}#)
                                     #{marks 16872}#)
                                   (if (if (eq? (vector-ref
                                                  #{symnames 16875}#
                                                  #{i 16890}#)
                                                #{sym 16870}#)
                                         (#{same-marks? 4331}#
                                           #{marks 16872}#
                                           (vector-ref
                                             (vector-ref #{fst 16873}# 2)
                                             #{i 16890}#))
                                         #f)
                                     (values
                                       (vector-ref
                                         (vector-ref #{fst 16873}# 3)
                                         #{i 16890}#)
                                       #{marks 16872}#)
                                     (#{f 16888}# (#{1+}# #{i 16890}#)))))))
                            (#{f 16888}# 0)))
                        (letrec*
                          ((#{f 16923}#
                             (lambda (#{symnames 16925}# #{i 16926}#)
                               (if (null? #{symnames 16925}#)
                                 (#{search 16809}#
                                   #{sym 16870}#
                                   (cdr #{subst 16871}#)
                                   #{marks 16872}#)
                                 (if (if (eq? (car #{symnames 16925}#)
                                              #{sym 16870}#)
                                       (#{same-marks? 4331}#
                                         #{marks 16872}#
                                         (list-ref
                                           (vector-ref #{fst 16873}# 2)
                                           #{i 16926}#))
                                       #f)
                                   (values
                                     (list-ref
                                       (vector-ref #{fst 16873}# 3)
                                       #{i 16926}#)
                                     #{marks 16872}#)
                                   (#{f 16923}#
                                     (cdr #{symnames 16925}#)
                                     (#{1+}# #{i 16926}#)))))))
                          (#{f 16923}# #{symnames 16875}# 0))))))))))
         (if (symbol? #{id 16807}#)
           (let ((#{t 16812}#
                   (#{search 16809}#
                     #{id 16807}#
                     (cdr #{w 16808}#)
                     (car #{w 16808}#))))
             (if #{t 16812}# #{t 16812}# #{id 16807}#))
           (if (if (vector? #{id 16807}#)
                 (if (= (vector-length #{id 16807}#) 4)
                   (eq? (vector-ref #{id 16807}# 0) 'syntax-object)
                   #f)
                 #f)
             (let ((#{id 16827}# (vector-ref #{id 16807}# 1))
                   (#{w1 16828}# (vector-ref #{id 16807}# 2)))
               (let ((#{marks 16829}#
                       (let ((#{m1 16839}# (car #{w 16808}#))
                             (#{m2 16840}# (car #{w1 16828}#)))
                         (if (null? #{m2 16840}#)
                           #{m1 16839}#
                           (append #{m1 16839}# #{m2 16840}#)))))
                 (call-with-values
                   (lambda ()
                     (#{search 16809}#
                       #{id 16827}#
                       (cdr #{w 16808}#)
                       #{marks 16829}#))
                   (lambda (#{new-id 16856}# #{marks 16857}#)
                     (if #{new-id 16856}#
                       #{new-id 16856}#
                       (let ((#{t 16865}#
                               (#{search 16809}#
                                 #{id 16827}#
                                 (cdr #{w1 16828}#)
                                 #{marks 16857}#)))
                         (if #{t 16865}# #{t 16865}# #{id 16827}#)))))))
             (syntax-violation
               'id-var-name
               "invalid id"
               #{id 16807}#))))))
   (#{valid-bound-ids? 4335}#
     (lambda (#{ids 16948}#)
       (if (letrec*
             ((#{all-ids? 16949}#
                (lambda (#{ids 17111}#)
                  (if (null? #{ids 17111}#)
                    (null? #{ids 17111}#)
                    (if (let ((#{x 17122}# (car #{ids 17111}#)))
                          (if (symbol? #{x 17122}#)
                            #t
                            (if (if (vector? #{x 17122}#)
                                  (if (= (vector-length #{x 17122}#) 4)
                                    (eq? (vector-ref #{x 17122}# 0)
                                         'syntax-object)
                                    #f)
                                  #f)
                              (symbol? (vector-ref #{x 17122}# 1))
                              #f)))
                      (#{all-ids? 16949}# (cdr #{ids 17111}#))
                      #f)))))
             (#{all-ids? 16949}# #{ids 16948}#))
         (#{distinct-bound-ids? 4336}# #{ids 16948}#)
         #f)))
   (#{distinct-bound-ids? 4336}#
     (lambda (#{ids 17254}#)
       (letrec*
         ((#{distinct? 17255}#
            (lambda (#{ids 17371}#)
              (if (null? #{ids 17371}#)
                (null? #{ids 17371}#)
                (if (not (#{bound-id-member? 4337}#
                           (car #{ids 17371}#)
                           (cdr #{ids 17371}#)))
                  (#{distinct? 17255}# (cdr #{ids 17371}#))
                  #f)))))
         (#{distinct? 17255}# #{ids 17254}#))))
   (#{bound-id-member? 4337}#
     (lambda (#{x 17591}# #{list 17592}#)
       (if (not (null? #{list 17592}#))
         (let ((#{t 17593}#
                 (let ((#{j 17674}# (car #{list 17592}#)))
                   (if (if (if (vector? #{x 17591}#)
                             (if (= (vector-length #{x 17591}#) 4)
                               (eq? (vector-ref #{x 17591}# 0) 'syntax-object)
                               #f)
                             #f)
                         (if (vector? #{j 17674}#)
                           (if (= (vector-length #{j 17674}#) 4)
                             (eq? (vector-ref #{j 17674}# 0) 'syntax-object)
                             #f)
                           #f)
                         #f)
                     (if (eq? (vector-ref #{x 17591}# 1)
                              (vector-ref #{j 17674}# 1))
                       (#{same-marks? 4331}#
                         (car (vector-ref #{x 17591}# 2))
                         (car (vector-ref #{j 17674}# 2)))
                       #f)
                     (eq? #{x 17591}# #{j 17674}#)))))
           (if #{t 17593}#
             #{t 17593}#
             (#{bound-id-member? 4337}#
               #{x 17591}#
               (cdr #{list 17592}#))))
         #f)))
   (#{wrap 4338}#
     (lambda (#{x 17718}# #{w 17719}# #{defmod 17720}#)
       (if (if (null? (car #{w 17719}#))
             (null? (cdr #{w 17719}#))
             #f)
         #{x 17718}#
         (if (if (vector? #{x 17718}#)
               (if (= (vector-length #{x 17718}#) 4)
                 (eq? (vector-ref #{x 17718}# 0) 'syntax-object)
                 #f)
               #f)
           (let ((#{expression 17734}# (vector-ref #{x 17718}# 1))
                 (#{wrap 17735}#
                   (#{join-wraps 4329}#
                     #{w 17719}#
                     (vector-ref #{x 17718}# 2)))
                 (#{module 17736}# (vector-ref #{x 17718}# 3)))
             (vector
               'syntax-object
               #{expression 17734}#
               #{wrap 17735}#
               #{module 17736}#))
           (if (null? #{x 17718}#)
             #{x 17718}#
             (vector
               'syntax-object
               #{x 17718}#
               #{w 17719}#
               #{defmod 17720}#))))))
   (#{source-wrap 4339}#
     (lambda (#{x 17753}#
              #{w 17754}#
              #{s 17755}#
              #{defmod 17756}#)
       (#{wrap 4338}#
         (begin
           (if (if (pair? #{x 17753}#) #{s 17755}# #f)
             (set-source-properties! #{x 17753}# #{s 17755}#))
           #{x 17753}#)
         #{w 17754}#
         #{defmod 17756}#)))
   (#{chi-sequence 4340}#
     (lambda (#{body 28233}#
              #{r 28234}#
              #{w 28235}#
              #{s 28236}#
              #{mod 28237}#)
       (#{build-sequence 4294}#
         #{s 28236}#
         (letrec*
           ((#{dobody 28322}#
              (lambda (#{body 28402}#
                       #{r 28403}#
                       #{w 28404}#
                       #{mod 28405}#)
                (if (null? #{body 28402}#)
                  '()
                  (let ((#{first 28406}#
                          (#{chi 4345}#
                            (car #{body 28402}#)
                            #{r 28403}#
                            #{w 28404}#
                            #{mod 28405}#)))
                    (cons #{first 28406}#
                          (#{dobody 28322}#
                            (cdr #{body 28402}#)
                            #{r 28403}#
                            #{w 28404}#
                            #{mod 28405}#)))))))
           (#{dobody 28322}#
             #{body 28233}#
             #{r 28234}#
             #{w 28235}#
             #{mod 28237}#)))))
   (#{chi-top-sequence 4341}#
     (lambda (#{body 17774}#
              #{r 17775}#
              #{w 17776}#
              #{s 17777}#
              #{m 17778}#
              #{esew 17779}#
              #{mod 17780}#)
       (letrec*
         ((#{scan 17781}#
            (lambda (#{body 17912}#
                     #{r 17913}#
                     #{w 17914}#
                     #{s 17915}#
                     #{m 17916}#
                     #{esew 17917}#
                     #{mod 17918}#
                     #{exps 17919}#)
              (if (null? #{body 17912}#)
                #{exps 17919}#
                (call-with-values
                  (lambda ()
                    (call-with-values
                      (lambda ()
                        (let ((#{e 17920}# (car #{body 17912}#)))
                          (#{syntax-type 4344}#
                            #{e 17920}#
                            #{r 17913}#
                            #{w 17914}#
                            (let ((#{t 17924}#
                                    (#{source-annotation 4306}# #{e 17920}#)))
                              (if #{t 17924}# #{t 17924}# #{s 17915}#))
                            #f
                            #{mod 17918}#
                            #f)))
                      (lambda (#{type 18184}#
                               #{value 18185}#
                               #{e 18186}#
                               #{w 18187}#
                               #{s 18188}#
                               #{mod 18189}#)
                        (if (eqv? #{type 18184}# 'begin-form)
                          (let ((#{tmp 18194}#
                                  ($sc-dispatch #{e 18186}# '(_))))
                            (if #{tmp 18194}#
                              (@apply (lambda () #{exps 17919}#) #{tmp 18194}#)
                              (let ((#{tmp 18198}#
                                      ($sc-dispatch
                                        #{e 18186}#
                                        '(_ any . each-any))))
                                (if #{tmp 18198}#
                                  (@apply
                                    (lambda (#{e1 18202}# #{e2 18203}#)
                                      (#{scan 17781}#
                                        (cons #{e1 18202}# #{e2 18203}#)
                                        #{r 17913}#
                                        #{w 18187}#
                                        #{s 18188}#
                                        #{m 17916}#
                                        #{esew 17917}#
                                        #{mod 18189}#
                                        #{exps 17919}#))
                                    #{tmp 18198}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{e 18186}#)))))
                          (if (eqv? #{type 18184}# 'local-syntax-form)
                            (#{chi-local-syntax 4350}#
                              #{value 18185}#
                              #{e 18186}#
                              #{r 17913}#
                              #{w 18187}#
                              #{s 18188}#
                              #{mod 18189}#
                              (lambda (#{body 18218}#
                                       #{r 18219}#
                                       #{w 18220}#
                                       #{s 18221}#
                                       #{mod 18222}#)
                                (#{scan 17781}#
                                  #{body 18218}#
                                  #{r 18219}#
                                  #{w 18220}#
                                  #{s 18221}#
                                  #{m 17916}#
                                  #{esew 17917}#
                                  #{mod 18222}#
                                  #{exps 17919}#)))
                            (if (eqv? #{type 18184}# 'eval-when-form)
                              (let ((#{tmp 18227}#
                                      ($sc-dispatch
                                        #{e 18186}#
                                        '(_ each-any any . each-any))))
                                (if #{tmp 18227}#
                                  (@apply
                                    (lambda (#{x 18231}#
                                             #{e1 18232}#
                                             #{e2 18233}#)
                                      (let ((#{when-list 18234}#
                                              (#{chi-when-list 4343}#
                                                #{e 18186}#
                                                #{x 18231}#
                                                #{w 18187}#))
                                            (#{body 18235}#
                                              (cons #{e1 18232}#
                                                    #{e2 18233}#)))
                                        (if (eq? #{m 17916}# 'e)
                                          (if (memq 'eval #{when-list 18234}#)
                                            (#{scan 17781}#
                                              #{body 18235}#
                                              #{r 17913}#
                                              #{w 18187}#
                                              #{s 18188}#
                                              (if (memq 'expand
                                                        #{when-list 18234}#)
                                                'c&e
                                                'e)
                                              '(eval)
                                              #{mod 18189}#
                                              #{exps 17919}#)
                                            (begin
                                              (if (memq 'expand
                                                        #{when-list 18234}#)
                                                (let ((#{x 18242}#
                                                        (#{chi-top-sequence 4341}#
                                                          #{body 18235}#
                                                          #{r 17913}#
                                                          #{w 18187}#
                                                          #{s 18188}#
                                                          'e
                                                          '(eval)
                                                          #{mod 18189}#)))
                                                  (primitive-eval
                                                    #{x 18242}#)))
                                              (values #{exps 17919}#)))
                                          (if (memq 'load #{when-list 18234}#)
                                            (if (let ((#{t 18244}#
                                                        (memq 'compile
                                                              #{when-list 18234}#)))
                                                  (if #{t 18244}#
                                                    #{t 18244}#
                                                    (let ((#{t 18246}#
                                                            (memq 'expand
                                                                  #{when-list 18234}#)))
                                                      (if #{t 18246}#
                                                        #{t 18246}#
                                                        (if (eq? #{m 17916}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list 18234}#)
                                                          #f)))))
                                              (#{scan 17781}#
                                                #{body 18235}#
                                                #{r 17913}#
                                                #{w 18187}#
                                                #{s 18188}#
                                                'c&e
                                                '(compile load)
                                                #{mod 18189}#
                                                #{exps 17919}#)
                                              (if (if (eq? #{m 17916}# 'c)
                                                    #t
                                                    (eq? #{m 17916}# 'c&e))
                                                (#{scan 17781}#
                                                  #{body 18235}#
                                                  #{r 17913}#
                                                  #{w 18187}#
                                                  #{s 18188}#
                                                  'c
                                                  '(load)
                                                  #{mod 18189}#
                                                  #{exps 17919}#)
                                                (values #{exps 17919}#)))
                                            (if (let ((#{t 18256}#
                                                        (memq 'compile
                                                              #{when-list 18234}#)))
                                                  (if #{t 18256}#
                                                    #{t 18256}#
                                                    (let ((#{t 18258}#
                                                            (memq 'expand
                                                                  #{when-list 18234}#)))
                                                      (if #{t 18258}#
                                                        #{t 18258}#
                                                        (if (eq? #{m 17916}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list 18234}#)
                                                          #f)))))
                                              (begin
                                                (let ((#{x 18263}#
                                                        (#{chi-top-sequence 4341}#
                                                          #{body 18235}#
                                                          #{r 17913}#
                                                          #{w 18187}#
                                                          #{s 18188}#
                                                          'e
                                                          '(eval)
                                                          #{mod 18189}#)))
                                                  (primitive-eval #{x 18263}#))
                                                (values #{exps 17919}#))
                                              (values #{exps 17919}#))))))
                                    #{tmp 18227}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{e 18186}#)))
                              (if (eqv? #{type 18184}# 'define-syntax-form)
                                (let ((#{n 18274}#
                                        (#{id-var-name 4332}#
                                          #{value 18185}#
                                          #{w 18187}#))
                                      (#{r 18275}#
                                        (#{macros-only-env 4309}#
                                          #{r 17913}#)))
                                  (if (eqv? #{m 17916}# 'c)
                                    (if (memq 'compile #{esew 17917}#)
                                      (let ((#{e 18279}#
                                              (#{chi-install-global 4342}#
                                                #{n 18274}#
                                                (#{chi 4345}#
                                                  #{e 18186}#
                                                  #{r 18275}#
                                                  #{w 18187}#
                                                  #{mod 18189}#))))
                                        (begin
                                          (#{top-level-eval-hook 4273}#
                                            #{e 18279}#
                                            #{mod 18189}#)
                                          (if (memq 'load #{esew 17917}#)
                                            (values
                                              (cons #{e 18279}#
                                                    #{exps 17919}#))
                                            (values #{exps 17919}#))))
                                      (if (memq 'load #{esew 17917}#)
                                        (values
                                          (cons (#{chi-install-global 4342}#
                                                  #{n 18274}#
                                                  (#{chi 4345}#
                                                    #{e 18186}#
                                                    #{r 18275}#
                                                    #{w 18187}#
                                                    #{mod 18189}#))
                                                #{exps 17919}#))
                                        (values #{exps 17919}#)))
                                    (if (eqv? #{m 17916}# 'c&e)
                                      (let ((#{e 18736}#
                                              (#{chi-install-global 4342}#
                                                #{n 18274}#
                                                (#{chi 4345}#
                                                  #{e 18186}#
                                                  #{r 18275}#
                                                  #{w 18187}#
                                                  #{mod 18189}#))))
                                        (begin
                                          (#{top-level-eval-hook 4273}#
                                            #{e 18736}#
                                            #{mod 18189}#)
                                          (values
                                            (cons #{e 18736}#
                                                  #{exps 17919}#))))
                                      (begin
                                        (if (memq 'eval #{esew 17917}#)
                                          (#{top-level-eval-hook 4273}#
                                            (#{chi-install-global 4342}#
                                              #{n 18274}#
                                              (#{chi 4345}#
                                                #{e 18186}#
                                                #{r 18275}#
                                                #{w 18187}#
                                                #{mod 18189}#))
                                            #{mod 18189}#))
                                        (values #{exps 17919}#)))))
                                (if (eqv? #{type 18184}# 'define-form)
                                  (let ((#{n 19386}#
                                          (#{id-var-name 4332}#
                                            #{value 18185}#
                                            #{w 18187}#)))
                                    (let ((#{type 19387}#
                                            (car (let ((#{t 20156}#
                                                         (assq #{n 19386}#
                                                               #{r 17913}#)))
                                                   (if #{t 20156}#
                                                     (cdr #{t 20156}#)
                                                     (if (symbol? #{n 19386}#)
                                                       (let ((#{t 20161}#
                                                               (begin
                                                                 (if (if (not #{mod 18189}#)
                                                                       (current-module)
                                                                       #f)
                                                                   (warn "module system is booted, we should have a module"
                                                                         #{n 19386}#))
                                                                 (let ((#{v 20198}#
                                                                         (module-variable
                                                                           (if #{mod 18189}#
                                                                             (resolve-module
                                                                               (cdr #{mod 18189}#))
                                                                             (current-module))
                                                                           #{n 19386}#)))
                                                                   (if #{v 20198}#
                                                                     (if (variable-bound?
                                                                           #{v 20198}#)
                                                                       (let ((#{val 20207}#
                                                                               (variable-ref
                                                                                 #{v 20198}#)))
                                                                         (if (macro?
                                                                               #{val 20207}#)
                                                                           (if (macro-type
                                                                                 #{val 20207}#)
                                                                             (cons (macro-type
                                                                                     #{val 20207}#)
                                                                                   (macro-binding
                                                                                     #{val 20207}#))
                                                                             #f)
                                                                           #f))
                                                                       #f)
                                                                     #f)))))
                                                         (if #{t 20161}#
                                                           #{t 20161}#
                                                           '(global)))
                                                       '(displaced-lexical)))))))
                                      (if (let ((#{t 19421}# #{type 19387}#))
                                            (if (eqv? #{t 19421}# 'global)
                                              #t
                                              (if (eqv? #{t 19421}# 'core)
                                                #t
                                                (if (eqv? #{t 19421}# 'macro)
                                                  #t
                                                  (eqv? #{t 19421}#
                                                        'module-ref)))))
                                        (begin
                                          (if (if (if (eq? #{m 17916}# 'c)
                                                    #t
                                                    (eq? #{m 17916}# 'c&e))
                                                (if (not (module-local-variable
                                                           (current-module)
                                                           #{n 19386}#))
                                                  (current-module)
                                                  #f)
                                                #f)
                                            (let ((#{old 19585}#
                                                    (module-variable
                                                      (current-module)
                                                      #{n 19386}#)))
                                              (if (if (variable? #{old 19585}#)
                                                    (variable-bound?
                                                      #{old 19585}#)
                                                    #f)
                                                (module-define!
                                                  (current-module)
                                                  #{n 19386}#
                                                  (variable-ref #{old 19585}#))
                                                (module-add!
                                                  (current-module)
                                                  #{n 19386}#
                                                  (make-undefined-variable)))))
                                          (values
                                            (cons (if (eq? #{m 17916}# 'c&e)
                                                    (let ((#{x 19587}#
                                                            (#{build-global-definition 4288}#
                                                              #{s 18188}#
                                                              #{n 19386}#
                                                              (#{chi 4345}#
                                                                #{e 18186}#
                                                                #{r 17913}#
                                                                #{w 18187}#
                                                                #{mod 18189}#))))
                                                      (begin
                                                        (#{top-level-eval-hook 4273}#
                                                          #{x 19587}#
                                                          #{mod 18189}#)
                                                        #{x 19587}#))
                                                    (lambda ()
                                                      (#{build-global-definition 4288}#
                                                        #{s 18188}#
                                                        #{n 19386}#
                                                        (#{chi 4345}#
                                                          #{e 18186}#
                                                          #{r 17913}#
                                                          #{w 18187}#
                                                          #{mod 18189}#))))
                                                  #{exps 17919}#)))
                                        (if (let ((#{t 20083}# #{type 19387}#))
                                              (eqv? #{t 20083}#
                                                    'displaced-lexical))
                                          (syntax-violation
                                            #f
                                            "identifier out of context"
                                            #{e 18186}#
                                            (#{wrap 4338}#
                                              #{value 18185}#
                                              #{w 18187}#
                                              #{mod 18189}#))
                                          (syntax-violation
                                            #f
                                            "cannot define keyword at top level"
                                            #{e 18186}#
                                            (#{wrap 4338}#
                                              #{value 18185}#
                                              #{w 18187}#
                                              #{mod 18189}#))))))
                                  (values
                                    (cons (if (eq? #{m 17916}# 'c&e)
                                            (let ((#{x 20218}#
                                                    (#{chi-expr 4346}#
                                                      #{type 18184}#
                                                      #{value 18185}#
                                                      #{e 18186}#
                                                      #{r 17913}#
                                                      #{w 18187}#
                                                      #{s 18188}#
                                                      #{mod 18189}#)))
                                              (begin
                                                (primitive-eval #{x 20218}#)
                                                #{x 20218}#))
                                            (lambda ()
                                              (#{chi-expr 4346}#
                                                #{type 18184}#
                                                #{value 18185}#
                                                #{e 18186}#
                                                #{r 17913}#
                                                #{w 18187}#
                                                #{s 18188}#
                                                #{mod 18189}#)))
                                          #{exps 17919}#))))))))))
                  (lambda (#{exps 20227}#)
                    (#{scan 17781}#
                      (cdr #{body 17912}#)
                      #{r 17913}#
                      #{w 17914}#
                      #{s 17915}#
                      #{m 17916}#
                      #{esew 17917}#
                      #{mod 17918}#
                      #{exps 20227}#)))))))
         (call-with-values
           (lambda ()
             (#{scan 17781}#
               #{body 17774}#
               #{r 17775}#
               #{w 17776}#
               #{s 17777}#
               #{m 17778}#
               #{esew 17779}#
               #{mod 17780}#
               '()))
           (lambda (#{exps 17784}#)
             (if (null? #{exps 17784}#)
               (make-struct/no-tail
                 (vector-ref %expanded-vtables 0)
                 #{s 17777}#)
               (#{build-sequence 4294}#
                 #{s 17777}#
                 (letrec*
                   ((#{lp 17824}#
                      (lambda (#{in 17908}# #{out 17909}#)
                        (if (null? #{in 17908}#)
                          #{out 17909}#
                          (let ((#{e 17910}# (car #{in 17908}#)))
                            (#{lp 17824}#
                              (cdr #{in 17908}#)
                              (cons (if (procedure? #{e 17910}#)
                                      (#{e 17910}#)
                                      #{e 17910}#)
                                    #{out 17909}#)))))))
                   (#{lp 17824}# #{exps 17784}# '())))))))))
   (#{chi-install-global 4342}#
     (lambda (#{name 20228}# #{e 20229}#)
       (let ((#{exp 20235}#
               (let ((#{fun-exp 20245}#
                       (if (equal? (module-name (current-module)) '(guile))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 7)
                           #f
                           'make-syntax-transformer)
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 5)
                           #f
                           '(guile)
                           'make-syntax-transformer
                           #f)))
                     (#{arg-exps 20246}#
                       (list (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               #{name 20228}#)
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               'macro)
                             #{e 20229}#)))
                 (make-struct/no-tail
                   (vector-ref %expanded-vtables 11)
                   #f
                   #{fun-exp 20245}#
                   #{arg-exps 20246}#))))
         (begin
           (if (if (struct? #{exp 20235}#)
                 (eq? (struct-vtable #{exp 20235}#)
                      (vector-ref %expanded-vtables 13))
                 #f)
             (let ((#{meta 20287}# (struct-ref #{exp 20235}# 1)))
               (if (not (assq 'name #{meta 20287}#))
                 (let ((#{v 20294}#
                         (cons (cons 'name #{name 20228}#) #{meta 20287}#)))
                   (struct-set! #{exp 20235}# 1 #{v 20294}#)))))
           (make-struct/no-tail
             (vector-ref %expanded-vtables 9)
             #f
             #{name 20228}#
             #{exp 20235}#)))))
   (#{chi-when-list 4343}#
     (lambda (#{e 20305}# #{when-list 20306}# #{w 20307}#)
       (letrec*
         ((#{f 20308}#
            (lambda (#{when-list 20311}# #{situations 20312}#)
              (if (null? #{when-list 20311}#)
                #{situations 20312}#
                (#{f 20308}#
                  (cdr #{when-list 20311}#)
                  (cons (let ((#{x 20313}# (car #{when-list 20311}#)))
                          (if (if (eq? (if (if (vector? #{x 20313}#)
                                             (if (= (vector-length #{x 20313}#)
                                                    4)
                                               (eq? (vector-ref #{x 20313}# 0)
                                                    'syntax-object)
                                               #f)
                                             #f)
                                         (vector-ref #{x 20313}# 1)
                                         #{x 20313}#)
                                       (if (if (= (vector-length
                                                    '#(syntax-object
                                                       compile
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i1754"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i1748"
                                                            "i1749"
                                                            "i1750"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i1745"
                                                            "i1746"
                                                            "i1747"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            maybe-name-value!
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            set-lambda-meta!
                                                            lambda-meta
                                                            lambda?
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i467"
                                                           "i465"
                                                           "i463"
                                                           "i461"
                                                           "i459"
                                                           "i457"
                                                           "i455"
                                                           "i453"
                                                           "i451"
                                                           "i449"
                                                           "i447"
                                                           "i445"
                                                           "i443"
                                                           "i441"
                                                           "i439"
                                                           "i437"
                                                           "i435"
                                                           "i433"
                                                           "i431"
                                                           "i429"
                                                           "i427"
                                                           "i425"
                                                           "i423"
                                                           "i421"
                                                           "i419"
                                                           "i417"
                                                           "i415"
                                                           "i413"
                                                           "i411"
                                                           "i409"
                                                           "i407"
                                                           "i405"
                                                           "i403"
                                                           "i401"
                                                           "i399"
                                                           "i398"
                                                           "i396"
                                                           "i393"
                                                           "i392"
                                                           "i391"
                                                           "i389"
                                                           "i388"
                                                           "i386"
                                                           "i384"
                                                           "i382"
                                                           "i380"
                                                           "i378"
                                                           "i376"
                                                           "i374"
                                                           "i372"
                                                           "i369"
                                                           "i367"
                                                           "i366"
                                                           "i364"
                                                           "i362"
                                                           "i360"
                                                           "i358"
                                                           "i357"
                                                           "i356"
                                                           "i355"
                                                           "i353"
                                                           "i352"
                                                           "i349"
                                                           "i347"
                                                           "i345"
                                                           "i343"
                                                           "i341"
                                                           "i339"
                                                           "i337"
                                                           "i336"
                                                           "i335"
                                                           "i333"
                                                           "i331"
                                                           "i330"
                                                           "i327"
                                                           "i326"
                                                           "i324"
                                                           "i322"
                                                           "i320"
                                                           "i318"
                                                           "i316"
                                                           "i314"
                                                           "i312"
                                                           "i310"
                                                           "i308"
                                                           "i305"
                                                           "i303"
                                                           "i301"
                                                           "i299"
                                                           "i297"
                                                           "i295"
                                                           "i293"
                                                           "i291"
                                                           "i289"
                                                           "i287"
                                                           "i285"
                                                           "i283"
                                                           "i281"
                                                           "i279"
                                                           "i277"
                                                           "i275"
                                                           "i273"
                                                           "i271"
                                                           "i269"
                                                           "i267"
                                                           "i265"
                                                           "i263"
                                                           "i261"
                                                           "i260"
                                                           "i257"
                                                           "i255"
                                                           "i254"
                                                           "i253"
                                                           "i252"
                                                           "i251"
                                                           "i249"
                                                           "i247"
                                                           "i245"
                                                           "i242"
                                                           "i240"
                                                           "i238"
                                                           "i236"
                                                           "i234"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i222"
                                                           "i220"
                                                           "i218"
                                                           "i216"
                                                           "i214"
                                                           "i212"
                                                           "i210"
                                                           "i208"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-accessors
                                                            define-expansion-constructors)
                                                          ((top) (top) (top))
                                                          ("i46" "i45" "i44")))
                                                       (hygiene guile)))
                                                  4)
                                             (eq? (vector-ref
                                                    '#(syntax-object
                                                       compile
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i1754"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i1748"
                                                            "i1749"
                                                            "i1750"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i1745"
                                                            "i1746"
                                                            "i1747"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            maybe-name-value!
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            set-lambda-meta!
                                                            lambda-meta
                                                            lambda?
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i467"
                                                           "i465"
                                                           "i463"
                                                           "i461"
                                                           "i459"
                                                           "i457"
                                                           "i455"
                                                           "i453"
                                                           "i451"
                                                           "i449"
                                                           "i447"
                                                           "i445"
                                                           "i443"
                                                           "i441"
                                                           "i439"
                                                           "i437"
                                                           "i435"
                                                           "i433"
                                                           "i431"
                                                           "i429"
                                                           "i427"
                                                           "i425"
                                                           "i423"
                                                           "i421"
                                                           "i419"
                                                           "i417"
                                                           "i415"
                                                           "i413"
                                                           "i411"
                                                           "i409"
                                                           "i407"
                                                           "i405"
                                                           "i403"
                                                           "i401"
                                                           "i399"
                                                           "i398"
                                                           "i396"
                                                           "i393"
                                                           "i392"
                                                           "i391"
                                                           "i389"
                                                           "i388"
                                                           "i386"
                                                           "i384"
                                                           "i382"
                                                           "i380"
                                                           "i378"
                                                           "i376"
                                                           "i374"
                                                           "i372"
                                                           "i369"
                                                           "i367"
                                                           "i366"
                                                           "i364"
                                                           "i362"
                                                           "i360"
                                                           "i358"
                                                           "i357"
                                                           "i356"
                                                           "i355"
                                                           "i353"
                                                           "i352"
                                                           "i349"
                                                           "i347"
                                                           "i345"
                                                           "i343"
                                                           "i341"
                                                           "i339"
                                                           "i337"
                                                           "i336"
                                                           "i335"
                                                           "i333"
                                                           "i331"
                                                           "i330"
                                                           "i327"
                                                           "i326"
                                                           "i324"
                                                           "i322"
                                                           "i320"
                                                           "i318"
                                                           "i316"
                                                           "i314"
                                                           "i312"
                                                           "i310"
                                                           "i308"
                                                           "i305"
                                                           "i303"
                                                           "i301"
                                                           "i299"
                                                           "i297"
                                                           "i295"
                                                           "i293"
                                                           "i291"
                                                           "i289"
                                                           "i287"
                                                           "i285"
                                                           "i283"
                                                           "i281"
                                                           "i279"
                                                           "i277"
                                                           "i275"
                                                           "i273"
                                                           "i271"
                                                           "i269"
                                                           "i267"
                                                           "i265"
                                                           "i263"
                                                           "i261"
                                                           "i260"
                                                           "i257"
                                                           "i255"
                                                           "i254"
                                                           "i253"
                                                           "i252"
                                                           "i251"
                                                           "i249"
                                                           "i247"
                                                           "i245"
                                                           "i242"
                                                           "i240"
                                                           "i238"
                                                           "i236"
                                                           "i234"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i222"
                                                           "i220"
                                                           "i218"
                                                           "i216"
                                                           "i214"
                                                           "i212"
                                                           "i210"
                                                           "i208"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-accessors
                                                            define-expansion-constructors)
                                                          ((top) (top) (top))
                                                          ("i46" "i45" "i44")))
                                                       (hygiene guile))
                                                    0)
                                                  'syntax-object)
                                             #f)
                                         (vector-ref
                                           '#(syntax-object
                                              compile
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i1754"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(f when-list situations)
                                                 #((top) (top) (top))
                                                 #("i1748" "i1749" "i1750"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(e when-list w)
                                                 #((top) (top) (top))
                                                 #("i1745" "i1746" "i1747"))
                                               #(ribcage
                                                 (lambda-var-list
                                                   gen-var
                                                   strip
                                                   chi-lambda-case
                                                   lambda*-formals
                                                   chi-simple-lambda
                                                   lambda-formals
                                                   ellipsis?
                                                   chi-void
                                                   eval-local-transformer
                                                   chi-local-syntax
                                                   chi-body
                                                   chi-macro
                                                   chi-application
                                                   chi-expr
                                                   chi
                                                   syntax-type
                                                   chi-when-list
                                                   chi-install-global
                                                   chi-top-sequence
                                                   chi-sequence
                                                   source-wrap
                                                   wrap
                                                   bound-id-member?
                                                   distinct-bound-ids?
                                                   valid-bound-ids?
                                                   bound-id=?
                                                   free-id=?
                                                   id-var-name
                                                   same-marks?
                                                   join-marks
                                                   join-wraps
                                                   smart-append
                                                   make-binding-wrap
                                                   extend-ribcage!
                                                   make-empty-ribcage
                                                   new-mark
                                                   anti-mark
                                                   the-anti-mark
                                                   top-marked?
                                                   top-wrap
                                                   empty-wrap
                                                   set-ribcage-labels!
                                                   set-ribcage-marks!
                                                   set-ribcage-symnames!
                                                   ribcage-labels
                                                   ribcage-marks
                                                   ribcage-symnames
                                                   ribcage?
                                                   make-ribcage
                                                   gen-labels
                                                   gen-label
                                                   make-rename
                                                   rename-marks
                                                   rename-new
                                                   rename-old
                                                   subst-rename?
                                                   wrap-subst
                                                   wrap-marks
                                                   make-wrap
                                                   id-sym-name&marks
                                                   id-sym-name
                                                   id?
                                                   nonsymbol-id?
                                                   global-extend
                                                   lookup
                                                   macros-only-env
                                                   extend-var-env
                                                   extend-env
                                                   null-env
                                                   binding-value
                                                   binding-type
                                                   make-binding
                                                   arg-check
                                                   source-annotation
                                                   no-source
                                                   set-syntax-object-module!
                                                   set-syntax-object-wrap!
                                                   set-syntax-object-expression!
                                                   syntax-object-module
                                                   syntax-object-wrap
                                                   syntax-object-expression
                                                   syntax-object?
                                                   make-syntax-object
                                                   build-lexical-var
                                                   build-letrec
                                                   build-named-let
                                                   build-let
                                                   build-sequence
                                                   build-data
                                                   build-primref
                                                   build-lambda-case
                                                   build-case-lambda
                                                   build-simple-lambda
                                                   build-global-definition
                                                   build-global-assignment
                                                   build-global-reference
                                                   analyze-variable
                                                   build-lexical-assignment
                                                   build-lexical-reference
                                                   build-dynlet
                                                   build-conditional
                                                   build-application
                                                   build-void
                                                   maybe-name-value!
                                                   decorate-source
                                                   get-global-definition-hook
                                                   put-global-definition-hook
                                                   gensym-hook
                                                   local-eval-hook
                                                   top-level-eval-hook
                                                   fx<
                                                   fx=
                                                   fx-
                                                   fx+
                                                   set-lambda-meta!
                                                   lambda-meta
                                                   lambda?
                                                   make-dynlet
                                                   make-letrec
                                                   make-let
                                                   make-lambda-case
                                                   make-lambda
                                                   make-sequence
                                                   make-application
                                                   make-conditional
                                                   make-toplevel-define
                                                   make-toplevel-set
                                                   make-toplevel-ref
                                                   make-module-set
                                                   make-module-ref
                                                   make-lexical-set
                                                   make-lexical-ref
                                                   make-primitive-ref
                                                   make-const
                                                   make-void)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i467"
                                                  "i465"
                                                  "i463"
                                                  "i461"
                                                  "i459"
                                                  "i457"
                                                  "i455"
                                                  "i453"
                                                  "i451"
                                                  "i449"
                                                  "i447"
                                                  "i445"
                                                  "i443"
                                                  "i441"
                                                  "i439"
                                                  "i437"
                                                  "i435"
                                                  "i433"
                                                  "i431"
                                                  "i429"
                                                  "i427"
                                                  "i425"
                                                  "i423"
                                                  "i421"
                                                  "i419"
                                                  "i417"
                                                  "i415"
                                                  "i413"
                                                  "i411"
                                                  "i409"
                                                  "i407"
                                                  "i405"
                                                  "i403"
                                                  "i401"
                                                  "i399"
                                                  "i398"
                                                  "i396"
                                                  "i393"
                                                  "i392"
                                                  "i391"
                                                  "i389"
                                                  "i388"
                                                  "i386"
                                                  "i384"
                                                  "i382"
                                                  "i380"
                                                  "i378"
                                                  "i376"
                                                  "i374"
                                                  "i372"
                                                  "i369"
                                                  "i367"
                                                  "i366"
                                                  "i364"
                                                  "i362"
                                                  "i360"
                                                  "i358"
                                                  "i357"
                                                  "i356"
                                                  "i355"
                                                  "i353"
                                                  "i352"
                                                  "i349"
                                                  "i347"
                                                  "i345"
                                                  "i343"
                                                  "i341"
                                                  "i339"
                                                  "i337"
                                                  "i336"
                                                  "i335"
                                                  "i333"
                                                  "i331"
                                                  "i330"
                                                  "i327"
                                                  "i326"
                                                  "i324"
                                                  "i322"
                                                  "i320"
                                                  "i318"
                                                  "i316"
                                                  "i314"
                                                  "i312"
                                                  "i310"
                                                  "i308"
                                                  "i305"
                                                  "i303"
                                                  "i301"
                                                  "i299"
                                                  "i297"
                                                  "i295"
                                                  "i293"
                                                  "i291"
                                                  "i289"
                                                  "i287"
                                                  "i285"
                                                  "i283"
                                                  "i281"
                                                  "i279"
                                                  "i277"
                                                  "i275"
                                                  "i273"
                                                  "i271"
                                                  "i269"
                                                  "i267"
                                                  "i265"
                                                  "i263"
                                                  "i261"
                                                  "i260"
                                                  "i257"
                                                  "i255"
                                                  "i254"
                                                  "i253"
                                                  "i252"
                                                  "i251"
                                                  "i249"
                                                  "i247"
                                                  "i245"
                                                  "i242"
                                                  "i240"
                                                  "i238"
                                                  "i236"
                                                  "i234"
                                                  "i232"
                                                  "i230"
                                                  "i228"
                                                  "i226"
                                                  "i224"
                                                  "i222"
                                                  "i220"
                                                  "i218"
                                                  "i216"
                                                  "i214"
                                                  "i212"
                                                  "i210"
                                                  "i208"))
                                               #(ribcage
                                                 (define-structure
                                                   define-expansion-accessors
                                                   define-expansion-constructors)
                                                 ((top) (top) (top))
                                                 ("i46" "i45" "i44")))
                                              (hygiene guile))
                                           1)
                                         '#(syntax-object
                                            compile
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i1754"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(f when-list situations)
                                               #((top) (top) (top))
                                               #("i1748" "i1749" "i1750"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(e when-list w)
                                               #((top) (top) (top))
                                               #("i1745" "i1746" "i1747"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i467"
                                                "i465"
                                                "i463"
                                                "i461"
                                                "i459"
                                                "i457"
                                                "i455"
                                                "i453"
                                                "i451"
                                                "i449"
                                                "i447"
                                                "i445"
                                                "i443"
                                                "i441"
                                                "i439"
                                                "i437"
                                                "i435"
                                                "i433"
                                                "i431"
                                                "i429"
                                                "i427"
                                                "i425"
                                                "i423"
                                                "i421"
                                                "i419"
                                                "i417"
                                                "i415"
                                                "i413"
                                                "i411"
                                                "i409"
                                                "i407"
                                                "i405"
                                                "i403"
                                                "i401"
                                                "i399"
                                                "i398"
                                                "i396"
                                                "i393"
                                                "i392"
                                                "i391"
                                                "i389"
                                                "i388"
                                                "i386"
                                                "i384"
                                                "i382"
                                                "i380"
                                                "i378"
                                                "i376"
                                                "i374"
                                                "i372"
                                                "i369"
                                                "i367"
                                                "i366"
                                                "i364"
                                                "i362"
                                                "i360"
                                                "i358"
                                                "i357"
                                                "i356"
                                                "i355"
                                                "i353"
                                                "i352"
                                                "i349"
                                                "i347"
                                                "i345"
                                                "i343"
                                                "i341"
                                                "i339"
                                                "i337"
                                                "i336"
                                                "i335"
                                                "i333"
                                                "i331"
                                                "i330"
                                                "i327"
                                                "i326"
                                                "i324"
                                                "i322"
                                                "i320"
                                                "i318"
                                                "i316"
                                                "i314"
                                                "i312"
                                                "i310"
                                                "i308"
                                                "i305"
                                                "i303"
                                                "i301"
                                                "i299"
                                                "i297"
                                                "i295"
                                                "i293"
                                                "i291"
                                                "i289"
                                                "i287"
                                                "i285"
                                                "i283"
                                                "i281"
                                                "i279"
                                                "i277"
                                                "i275"
                                                "i273"
                                                "i271"
                                                "i269"
                                                "i267"
                                                "i265"
                                                "i263"
                                                "i261"
                                                "i260"
                                                "i257"
                                                "i255"
                                                "i254"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i249"
                                                "i247"
                                                "i245"
                                                "i242"
                                                "i240"
                                                "i238"
                                                "i236"
                                                "i234"
                                                "i232"
                                                "i230"
                                                "i228"
                                                "i226"
                                                "i224"
                                                "i222"
                                                "i220"
                                                "i218"
                                                "i216"
                                                "i214"
                                                "i212"
                                                "i210"
                                                "i208"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i46" "i45" "i44")))
                                            (hygiene guile))))
                                (eq? (#{id-var-name 4332}# #{x 20313}# '(()))
                                     (#{id-var-name 4332}#
                                       '#(syntax-object
                                          compile
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage () () ())
                                           #(ribcage () () ())
                                           #(ribcage #(x) #((top)) #("i1754"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(f when-list situations)
                                             #((top) (top) (top))
                                             #("i1748" "i1749" "i1750"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(e when-list w)
                                             #((top) (top) (top))
                                             #("i1745" "i1746" "i1747"))
                                           #(ribcage
                                             (lambda-var-list
                                               gen-var
                                               strip
                                               chi-lambda-case
                                               lambda*-formals
                                               chi-simple-lambda
                                               lambda-formals
                                               ellipsis?
                                               chi-void
                                               eval-local-transformer
                                               chi-local-syntax
                                               chi-body
                                               chi-macro
                                               chi-application
                                               chi-expr
                                               chi
                                               syntax-type
                                               chi-when-list
                                               chi-install-global
                                               chi-top-sequence
                                               chi-sequence
                                               source-wrap
                                               wrap
                                               bound-id-member?
                                               distinct-bound-ids?
                                               valid-bound-ids?
                                               bound-id=?
                                               free-id=?
                                               id-var-name
                                               same-marks?
                                               join-marks
                                               join-wraps
                                               smart-append
                                               make-binding-wrap
                                               extend-ribcage!
                                               make-empty-ribcage
                                               new-mark
                                               anti-mark
                                               the-anti-mark
                                               top-marked?
                                               top-wrap
                                               empty-wrap
                                               set-ribcage-labels!
                                               set-ribcage-marks!
                                               set-ribcage-symnames!
                                               ribcage-labels
                                               ribcage-marks
                                               ribcage-symnames
                                               ribcage?
                                               make-ribcage
                                               gen-labels
                                               gen-label
                                               make-rename
                                               rename-marks
                                               rename-new
                                               rename-old
                                               subst-rename?
                                               wrap-subst
                                               wrap-marks
                                               make-wrap
                                               id-sym-name&marks
                                               id-sym-name
                                               id?
                                               nonsymbol-id?
                                               global-extend
                                               lookup
                                               macros-only-env
                                               extend-var-env
                                               extend-env
                                               null-env
                                               binding-value
                                               binding-type
                                               make-binding
                                               arg-check
                                               source-annotation
                                               no-source
                                               set-syntax-object-module!
                                               set-syntax-object-wrap!
                                               set-syntax-object-expression!
                                               syntax-object-module
                                               syntax-object-wrap
                                               syntax-object-expression
                                               syntax-object?
                                               make-syntax-object
                                               build-lexical-var
                                               build-letrec
                                               build-named-let
                                               build-let
                                               build-sequence
                                               build-data
                                               build-primref
                                               build-lambda-case
                                               build-case-lambda
                                               build-simple-lambda
                                               build-global-definition
                                               build-global-assignment
                                               build-global-reference
                                               analyze-variable
                                               build-lexical-assignment
                                               build-lexical-reference
                                               build-dynlet
                                               build-conditional
                                               build-application
                                               build-void
                                               maybe-name-value!
                                               decorate-source
                                               get-global-definition-hook
                                               put-global-definition-hook
                                               gensym-hook
                                               local-eval-hook
                                               top-level-eval-hook
                                               fx<
                                               fx=
                                               fx-
                                               fx+
                                               set-lambda-meta!
                                               lambda-meta
                                               lambda?
                                               make-dynlet
                                               make-letrec
                                               make-let
                                               make-lambda-case
                                               make-lambda
                                               make-sequence
                                               make-application
                                               make-conditional
                                               make-toplevel-define
                                               make-toplevel-set
                                               make-toplevel-ref
                                               make-module-set
                                               make-module-ref
                                               make-lexical-set
                                               make-lexical-ref
                                               make-primitive-ref
                                               make-const
                                               make-void)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i467"
                                              "i465"
                                              "i463"
                                              "i461"
                                              "i459"
                                              "i457"
                                              "i455"
                                              "i453"
                                              "i451"
                                              "i449"
                                              "i447"
                                              "i445"
                                              "i443"
                                              "i441"
                                              "i439"
                                              "i437"
                                              "i435"
                                              "i433"
                                              "i431"
                                              "i429"
                                              "i427"
                                              "i425"
                                              "i423"
                                              "i421"
                                              "i419"
                                              "i417"
                                              "i415"
                                              "i413"
                                              "i411"
                                              "i409"
                                              "i407"
                                              "i405"
                                              "i403"
                                              "i401"
                                              "i399"
                                              "i398"
                                              "i396"
                                              "i393"
                                              "i392"
                                              "i391"
                                              "i389"
                                              "i388"
                                              "i386"
                                              "i384"
                                              "i382"
                                              "i380"
                                              "i378"
                                              "i376"
                                              "i374"
                                              "i372"
                                              "i369"
                                              "i367"
                                              "i366"
                                              "i364"
                                              "i362"
                                              "i360"
                                              "i358"
                                              "i357"
                                              "i356"
                                              "i355"
                                              "i353"
                                              "i352"
                                              "i349"
                                              "i347"
                                              "i345"
                                              "i343"
                                              "i341"
                                              "i339"
                                              "i337"
                                              "i336"
                                              "i335"
                                              "i333"
                                              "i331"
                                              "i330"
                                              "i327"
                                              "i326"
                                              "i324"
                                              "i322"
                                              "i320"
                                              "i318"
                                              "i316"
                                              "i314"
                                              "i312"
                                              "i310"
                                              "i308"
                                              "i305"
                                              "i303"
                                              "i301"
                                              "i299"
                                              "i297"
                                              "i295"
                                              "i293"
                                              "i291"
                                              "i289"
                                              "i287"
                                              "i285"
                                              "i283"
                                              "i281"
                                              "i279"
                                              "i277"
                                              "i275"
                                              "i273"
                                              "i271"
                                              "i269"
                                              "i267"
                                              "i265"
                                              "i263"
                                              "i261"
                                              "i260"
                                              "i257"
                                              "i255"
                                              "i254"
                                              "i253"
                                              "i252"
                                              "i251"
                                              "i249"
                                              "i247"
                                              "i245"
                                              "i242"
                                              "i240"
                                              "i238"
                                              "i236"
                                              "i234"
                                              "i232"
                                              "i230"
                                              "i228"
                                              "i226"
                                              "i224"
                                              "i222"
                                              "i220"
                                              "i218"
                                              "i216"
                                              "i214"
                                              "i212"
                                              "i210"
                                              "i208"))
                                           #(ribcage
                                             (define-structure
                                               define-expansion-accessors
                                               define-expansion-constructors)
                                             ((top) (top) (top))
                                             ("i46" "i45" "i44")))
                                          (hygiene guile))
                                       '(())))
                                #f)
                            'compile
                            (if (if (eq? (if (if (vector? #{x 20313}#)
                                               (if (= (vector-length
                                                        #{x 20313}#)
                                                      4)
                                                 (eq? (vector-ref
                                                        #{x 20313}#
                                                        0)
                                                      'syntax-object)
                                                 #f)
                                               #f)
                                           (vector-ref #{x 20313}# 1)
                                           #{x 20313}#)
                                         (if (if (= (vector-length
                                                      '#(syntax-object
                                                         load
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i1754"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f
                                                              when-list
                                                              situations)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i1748"
                                                              "i1749"
                                                              "i1750"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e when-list w)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i1745"
                                                              "i1746"
                                                              "i1747"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i467"
                                                             "i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i398"
                                                             "i396"
                                                             "i393"
                                                             "i392"
                                                             "i391"
                                                             "i389"
                                                             "i388"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i369"
                                                             "i367"
                                                             "i366"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i353"
                                                             "i352"
                                                             "i349"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i336"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i330"
                                                             "i327"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i305"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i46"
                                                             "i45"
                                                             "i44")))
                                                         (hygiene guile)))
                                                    4)
                                               (eq? (vector-ref
                                                      '#(syntax-object
                                                         load
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i1754"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f
                                                              when-list
                                                              situations)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i1748"
                                                              "i1749"
                                                              "i1750"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e when-list w)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i1745"
                                                              "i1746"
                                                              "i1747"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i467"
                                                             "i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i398"
                                                             "i396"
                                                             "i393"
                                                             "i392"
                                                             "i391"
                                                             "i389"
                                                             "i388"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i369"
                                                             "i367"
                                                             "i366"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i353"
                                                             "i352"
                                                             "i349"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i336"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i330"
                                                             "i327"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i305"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i46"
                                                             "i45"
                                                             "i44")))
                                                         (hygiene guile))
                                                      0)
                                                    'syntax-object)
                                               #f)
                                           (vector-ref
                                             '#(syntax-object
                                                load
                                                ((top)
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i1754"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f when-list situations)
                                                   #((top) (top) (top))
                                                   #("i1748" "i1749" "i1750"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(e when-list w)
                                                   #((top) (top) (top))
                                                   #("i1745" "i1746" "i1747"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i467"
                                                    "i465"
                                                    "i463"
                                                    "i461"
                                                    "i459"
                                                    "i457"
                                                    "i455"
                                                    "i453"
                                                    "i451"
                                                    "i449"
                                                    "i447"
                                                    "i445"
                                                    "i443"
                                                    "i441"
                                                    "i439"
                                                    "i437"
                                                    "i435"
                                                    "i433"
                                                    "i431"
                                                    "i429"
                                                    "i427"
                                                    "i425"
                                                    "i423"
                                                    "i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i398"
                                                    "i396"
                                                    "i393"
                                                    "i392"
                                                    "i391"
                                                    "i389"
                                                    "i388"
                                                    "i386"
                                                    "i384"
                                                    "i382"
                                                    "i380"
                                                    "i378"
                                                    "i376"
                                                    "i374"
                                                    "i372"
                                                    "i369"
                                                    "i367"
                                                    "i366"
                                                    "i364"
                                                    "i362"
                                                    "i360"
                                                    "i358"
                                                    "i357"
                                                    "i356"
                                                    "i355"
                                                    "i353"
                                                    "i352"
                                                    "i349"
                                                    "i347"
                                                    "i345"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i336"
                                                    "i335"
                                                    "i333"
                                                    "i331"
                                                    "i330"
                                                    "i327"
                                                    "i326"
                                                    "i324"
                                                    "i322"
                                                    "i320"
                                                    "i318"
                                                    "i316"
                                                    "i314"
                                                    "i312"
                                                    "i310"
                                                    "i308"
                                                    "i305"
                                                    "i303"
                                                    "i301"
                                                    "i299"
                                                    "i297"
                                                    "i295"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i287"
                                                    "i285"
                                                    "i283"
                                                    "i281"
                                                    "i279"
                                                    "i277"
                                                    "i275"
                                                    "i273"
                                                    "i271"
                                                    "i269"
                                                    "i267"
                                                    "i265"
                                                    "i263"
                                                    "i261"
                                                    "i260"
                                                    "i257"
                                                    "i255"
                                                    "i254"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i249"
                                                    "i247"
                                                    "i245"
                                                    "i242"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i218"
                                                    "i216"
                                                    "i214"
                                                    "i212"
                                                    "i210"
                                                    "i208"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i46" "i45" "i44")))
                                                (hygiene guile))
                                             1)
                                           '#(syntax-object
                                              load
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i1754"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(f when-list situations)
                                                 #((top) (top) (top))
                                                 #("i1748" "i1749" "i1750"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(e when-list w)
                                                 #((top) (top) (top))
                                                 #("i1745" "i1746" "i1747"))
                                               #(ribcage
                                                 (lambda-var-list
                                                   gen-var
                                                   strip
                                                   chi-lambda-case
                                                   lambda*-formals
                                                   chi-simple-lambda
                                                   lambda-formals
                                                   ellipsis?
                                                   chi-void
                                                   eval-local-transformer
                                                   chi-local-syntax
                                                   chi-body
                                                   chi-macro
                                                   chi-application
                                                   chi-expr
                                                   chi
                                                   syntax-type
                                                   chi-when-list
                                                   chi-install-global
                                                   chi-top-sequence
                                                   chi-sequence
                                                   source-wrap
                                                   wrap
                                                   bound-id-member?
                                                   distinct-bound-ids?
                                                   valid-bound-ids?
                                                   bound-id=?
                                                   free-id=?
                                                   id-var-name
                                                   same-marks?
                                                   join-marks
                                                   join-wraps
                                                   smart-append
                                                   make-binding-wrap
                                                   extend-ribcage!
                                                   make-empty-ribcage
                                                   new-mark
                                                   anti-mark
                                                   the-anti-mark
                                                   top-marked?
                                                   top-wrap
                                                   empty-wrap
                                                   set-ribcage-labels!
                                                   set-ribcage-marks!
                                                   set-ribcage-symnames!
                                                   ribcage-labels
                                                   ribcage-marks
                                                   ribcage-symnames
                                                   ribcage?
                                                   make-ribcage
                                                   gen-labels
                                                   gen-label
                                                   make-rename
                                                   rename-marks
                                                   rename-new
                                                   rename-old
                                                   subst-rename?
                                                   wrap-subst
                                                   wrap-marks
                                                   make-wrap
                                                   id-sym-name&marks
                                                   id-sym-name
                                                   id?
                                                   nonsymbol-id?
                                                   global-extend
                                                   lookup
                                                   macros-only-env
                                                   extend-var-env
                                                   extend-env
                                                   null-env
                                                   binding-value
                                                   binding-type
                                                   make-binding
                                                   arg-check
                                                   source-annotation
                                                   no-source
                                                   set-syntax-object-module!
                                                   set-syntax-object-wrap!
                                                   set-syntax-object-expression!
                                                   syntax-object-module
                                                   syntax-object-wrap
                                                   syntax-object-expression
                                                   syntax-object?
                                                   make-syntax-object
                                                   build-lexical-var
                                                   build-letrec
                                                   build-named-let
                                                   build-let
                                                   build-sequence
                                                   build-data
                                                   build-primref
                                                   build-lambda-case
                                                   build-case-lambda
                                                   build-simple-lambda
                                                   build-global-definition
                                                   build-global-assignment
                                                   build-global-reference
                                                   analyze-variable
                                                   build-lexical-assignment
                                                   build-lexical-reference
                                                   build-dynlet
                                                   build-conditional
                                                   build-application
                                                   build-void
                                                   maybe-name-value!
                                                   decorate-source
                                                   get-global-definition-hook
                                                   put-global-definition-hook
                                                   gensym-hook
                                                   local-eval-hook
                                                   top-level-eval-hook
                                                   fx<
                                                   fx=
                                                   fx-
                                                   fx+
                                                   set-lambda-meta!
                                                   lambda-meta
                                                   lambda?
                                                   make-dynlet
                                                   make-letrec
                                                   make-let
                                                   make-lambda-case
                                                   make-lambda
                                                   make-sequence
                                                   make-application
                                                   make-conditional
                                                   make-toplevel-define
                                                   make-toplevel-set
                                                   make-toplevel-ref
                                                   make-module-set
                                                   make-module-ref
                                                   make-lexical-set
                                                   make-lexical-ref
                                                   make-primitive-ref
                                                   make-const
                                                   make-void)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i467"
                                                  "i465"
                                                  "i463"
                                                  "i461"
                                                  "i459"
                                                  "i457"
                                                  "i455"
                                                  "i453"
                                                  "i451"
                                                  "i449"
                                                  "i447"
                                                  "i445"
                                                  "i443"
                                                  "i441"
                                                  "i439"
                                                  "i437"
                                                  "i435"
                                                  "i433"
                                                  "i431"
                                                  "i429"
                                                  "i427"
                                                  "i425"
                                                  "i423"
                                                  "i421"
                                                  "i419"
                                                  "i417"
                                                  "i415"
                                                  "i413"
                                                  "i411"
                                                  "i409"
                                                  "i407"
                                                  "i405"
                                                  "i403"
                                                  "i401"
                                                  "i399"
                                                  "i398"
                                                  "i396"
                                                  "i393"
                                                  "i392"
                                                  "i391"
                                                  "i389"
                                                  "i388"
                                                  "i386"
                                                  "i384"
                                                  "i382"
                                                  "i380"
                                                  "i378"
                                                  "i376"
                                                  "i374"
                                                  "i372"
                                                  "i369"
                                                  "i367"
                                                  "i366"
                                                  "i364"
                                                  "i362"
                                                  "i360"
                                                  "i358"
                                                  "i357"
                                                  "i356"
                                                  "i355"
                                                  "i353"
                                                  "i352"
                                                  "i349"
                                                  "i347"
                                                  "i345"
                                                  "i343"
                                                  "i341"
                                                  "i339"
                                                  "i337"
                                                  "i336"
                                                  "i335"
                                                  "i333"
                                                  "i331"
                                                  "i330"
                                                  "i327"
                                                  "i326"
                                                  "i324"
                                                  "i322"
                                                  "i320"
                                                  "i318"
                                                  "i316"
                                                  "i314"
                                                  "i312"
                                                  "i310"
                                                  "i308"
                                                  "i305"
                                                  "i303"
                                                  "i301"
                                                  "i299"
                                                  "i297"
                                                  "i295"
                                                  "i293"
                                                  "i291"
                                                  "i289"
                                                  "i287"
                                                  "i285"
                                                  "i283"
                                                  "i281"
                                                  "i279"
                                                  "i277"
                                                  "i275"
                                                  "i273"
                                                  "i271"
                                                  "i269"
                                                  "i267"
                                                  "i265"
                                                  "i263"
                                                  "i261"
                                                  "i260"
                                                  "i257"
                                                  "i255"
                                                  "i254"
                                                  "i253"
                                                  "i252"
                                                  "i251"
                                                  "i249"
                                                  "i247"
                                                  "i245"
                                                  "i242"
                                                  "i240"
                                                  "i238"
                                                  "i236"
                                                  "i234"
                                                  "i232"
                                                  "i230"
                                                  "i228"
                                                  "i226"
                                                  "i224"
                                                  "i222"
                                                  "i220"
                                                  "i218"
                                                  "i216"
                                                  "i214"
                                                  "i212"
                                                  "i210"
                                                  "i208"))
                                               #(ribcage
                                                 (define-structure
                                                   define-expansion-accessors
                                                   define-expansion-constructors)
                                                 ((top) (top) (top))
                                                 ("i46" "i45" "i44")))
                                              (hygiene guile))))
                                  (eq? (#{id-var-name 4332}# #{x 20313}# '(()))
                                       (#{id-var-name 4332}#
                                         '#(syntax-object
                                            load
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i1754"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(f when-list situations)
                                               #((top) (top) (top))
                                               #("i1748" "i1749" "i1750"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(e when-list w)
                                               #((top) (top) (top))
                                               #("i1745" "i1746" "i1747"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i467"
                                                "i465"
                                                "i463"
                                                "i461"
                                                "i459"
                                                "i457"
                                                "i455"
                                                "i453"
                                                "i451"
                                                "i449"
                                                "i447"
                                                "i445"
                                                "i443"
                                                "i441"
                                                "i439"
                                                "i437"
                                                "i435"
                                                "i433"
                                                "i431"
                                                "i429"
                                                "i427"
                                                "i425"
                                                "i423"
                                                "i421"
                                                "i419"
                                                "i417"
                                                "i415"
                                                "i413"
                                                "i411"
                                                "i409"
                                                "i407"
                                                "i405"
                                                "i403"
                                                "i401"
                                                "i399"
                                                "i398"
                                                "i396"
                                                "i393"
                                                "i392"
                                                "i391"
                                                "i389"
                                                "i388"
                                                "i386"
                                                "i384"
                                                "i382"
                                                "i380"
                                                "i378"
                                                "i376"
                                                "i374"
                                                "i372"
                                                "i369"
                                                "i367"
                                                "i366"
                                                "i364"
                                                "i362"
                                                "i360"
                                                "i358"
                                                "i357"
                                                "i356"
                                                "i355"
                                                "i353"
                                                "i352"
                                                "i349"
                                                "i347"
                                                "i345"
                                                "i343"
                                                "i341"
                                                "i339"
                                                "i337"
                                                "i336"
                                                "i335"
                                                "i333"
                                                "i331"
                                                "i330"
                                                "i327"
                                                "i326"
                                                "i324"
                                                "i322"
                                                "i320"
                                                "i318"
                                                "i316"
                                                "i314"
                                                "i312"
                                                "i310"
                                                "i308"
                                                "i305"
                                                "i303"
                                                "i301"
                                                "i299"
                                                "i297"
                                                "i295"
                                                "i293"
                                                "i291"
                                                "i289"
                                                "i287"
                                                "i285"
                                                "i283"
                                                "i281"
                                                "i279"
                                                "i277"
                                                "i275"
                                                "i273"
                                                "i271"
                                                "i269"
                                                "i267"
                                                "i265"
                                                "i263"
                                                "i261"
                                                "i260"
                                                "i257"
                                                "i255"
                                                "i254"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i249"
                                                "i247"
                                                "i245"
                                                "i242"
                                                "i240"
                                                "i238"
                                                "i236"
                                                "i234"
                                                "i232"
                                                "i230"
                                                "i228"
                                                "i226"
                                                "i224"
                                                "i222"
                                                "i220"
                                                "i218"
                                                "i216"
                                                "i214"
                                                "i212"
                                                "i210"
                                                "i208"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i46" "i45" "i44")))
                                            (hygiene guile))
                                         '(())))
                                  #f)
                              'load
                              (if (if (eq? (if (if (vector? #{x 20313}#)
                                                 (if (= (vector-length
                                                          #{x 20313}#)
                                                        4)
                                                   (eq? (vector-ref
                                                          #{x 20313}#
                                                          0)
                                                        'syntax-object)
                                                   #f)
                                                 #f)
                                             (vector-ref #{x 20313}# 1)
                                             #{x 20313}#)
                                           (if (if (= (vector-length
                                                        '#(syntax-object
                                                           eval
                                                           ((top)
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i1754"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(f
                                                                when-list
                                                                situations)
                                                              #((top)
                                                                (top)
                                                                (top))
                                                              #("i1748"
                                                                "i1749"
                                                                "i1750"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(e when-list w)
                                                              #((top)
                                                                (top)
                                                                (top))
                                                              #("i1745"
                                                                "i1746"
                                                                "i1747"))
                                                            #(ribcage
                                                              (lambda-var-list
                                                                gen-var
                                                                strip
                                                                chi-lambda-case
                                                                lambda*-formals
                                                                chi-simple-lambda
                                                                lambda-formals
                                                                ellipsis?
                                                                chi-void
                                                                eval-local-transformer
                                                                chi-local-syntax
                                                                chi-body
                                                                chi-macro
                                                                chi-application
                                                                chi-expr
                                                                chi
                                                                syntax-type
                                                                chi-when-list
                                                                chi-install-global
                                                                chi-top-sequence
                                                                chi-sequence
                                                                source-wrap
                                                                wrap
                                                                bound-id-member?
                                                                distinct-bound-ids?
                                                                valid-bound-ids?
                                                                bound-id=?
                                                                free-id=?
                                                                id-var-name
                                                                same-marks?
                                                                join-marks
                                                                join-wraps
                                                                smart-append
                                                                make-binding-wrap
                                                                extend-ribcage!
                                                                make-empty-ribcage
                                                                new-mark
                                                                anti-mark
                                                                the-anti-mark
                                                                top-marked?
                                                                top-wrap
                                                                empty-wrap
                                                                set-ribcage-labels!
                                                                set-ribcage-marks!
                                                                set-ribcage-symnames!
                                                                ribcage-labels
                                                                ribcage-marks
                                                                ribcage-symnames
                                                                ribcage?
                                                                make-ribcage
                                                                gen-labels
                                                                gen-label
                                                                make-rename
                                                                rename-marks
                                                                rename-new
                                                                rename-old
                                                                subst-rename?
                                                                wrap-subst
                                                                wrap-marks
                                                                make-wrap
                                                                id-sym-name&marks
                                                                id-sym-name
                                                                id?
                                                                nonsymbol-id?
                                                                global-extend
                                                                lookup
                                                                macros-only-env
                                                                extend-var-env
                                                                extend-env
                                                                null-env
                                                                binding-value
                                                                binding-type
                                                                make-binding
                                                                arg-check
                                                                source-annotation
                                                                no-source
                                                                set-syntax-object-module!
                                                                set-syntax-object-wrap!
                                                                set-syntax-object-expression!
                                                                syntax-object-module
                                                                syntax-object-wrap
                                                                syntax-object-expression
                                                                syntax-object?
                                                                make-syntax-object
                                                                build-lexical-var
                                                                build-letrec
                                                                build-named-let
                                                                build-let
                                                                build-sequence
                                                                build-data
                                                                build-primref
                                                                build-lambda-case
                                                                build-case-lambda
                                                                build-simple-lambda
                                                                build-global-definition
                                                                build-global-assignment
                                                                build-global-reference
                                                                analyze-variable
                                                                build-lexical-assignment
                                                                build-lexical-reference
                                                                build-dynlet
                                                                build-conditional
                                                                build-application
                                                                build-void
                                                                maybe-name-value!
                                                                decorate-source
                                                                get-global-definition-hook
                                                                put-global-definition-hook
                                                                gensym-hook
                                                                local-eval-hook
                                                                top-level-eval-hook
                                                                fx<
                                                                fx=
                                                                fx-
                                                                fx+
                                                                set-lambda-meta!
                                                                lambda-meta
                                                                lambda?
                                                                make-dynlet
                                                                make-letrec
                                                                make-let
                                                                make-lambda-case
                                                                make-lambda
                                                                make-sequence
                                                                make-application
                                                                make-conditional
                                                                make-toplevel-define
                                                                make-toplevel-set
                                                                make-toplevel-ref
                                                                make-module-set
                                                                make-module-ref
                                                                make-lexical-set
                                                                make-lexical-ref
                                                                make-primitive-ref
                                                                make-const
                                                                make-void)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i467"
                                                               "i465"
                                                               "i463"
                                                               "i461"
                                                               "i459"
                                                               "i457"
                                                               "i455"
                                                               "i453"
                                                               "i451"
                                                               "i449"
                                                               "i447"
                                                               "i445"
                                                               "i443"
                                                               "i441"
                                                               "i439"
                                                               "i437"
                                                               "i435"
                                                               "i433"
                                                               "i431"
                                                               "i429"
                                                               "i427"
                                                               "i425"
                                                               "i423"
                                                               "i421"
                                                               "i419"
                                                               "i417"
                                                               "i415"
                                                               "i413"
                                                               "i411"
                                                               "i409"
                                                               "i407"
                                                               "i405"
                                                               "i403"
                                                               "i401"
                                                               "i399"
                                                               "i398"
                                                               "i396"
                                                               "i393"
                                                               "i392"
                                                               "i391"
                                                               "i389"
                                                               "i388"
                                                               "i386"
                                                               "i384"
                                                               "i382"
                                                               "i380"
                                                               "i378"
                                                               "i376"
                                                               "i374"
                                                               "i372"
                                                               "i369"
                                                               "i367"
                                                               "i366"
                                                               "i364"
                                                               "i362"
                                                               "i360"
                                                               "i358"
                                                               "i357"
                                                               "i356"
                                                               "i355"
                                                               "i353"
                                                               "i352"
                                                               "i349"
                                                               "i347"
                                                               "i345"
                                                               "i343"
                                                               "i341"
                                                               "i339"
                                                               "i337"
                                                               "i336"
                                                               "i335"
                                                               "i333"
                                                               "i331"
                                                               "i330"
                                                               "i327"
                                                               "i326"
                                                               "i324"
                                                               "i322"
                                                               "i320"
                                                               "i318"
                                                               "i316"
                                                               "i314"
                                                               "i312"
                                                               "i310"
                                                               "i308"
                                                               "i305"
                                                               "i303"
                                                               "i301"
                                                               "i299"
                                                               "i297"
                                                               "i295"
                                                               "i293"
                                                               "i291"
                                                               "i289"
                                                               "i287"
                                                               "i285"
                                                               "i283"
                                                               "i281"
                                                               "i279"
                                                               "i277"
                                                               "i275"
                                                               "i273"
                                                               "i271"
                                                               "i269"
                                                               "i267"
                                                               "i265"
                                                               "i263"
                                                               "i261"
                                                               "i260"
                                                               "i257"
                                                               "i255"
                                                               "i254"
                                                               "i253"
                                                               "i252"
                                                               "i251"
                                                               "i249"
                                                               "i247"
                                                               "i245"
                                                               "i242"
                                                               "i240"
                                                               "i238"
                                                               "i236"
                                                               "i234"
                                                               "i232"
                                                               "i230"
                                                               "i228"
                                                               "i226"
                                                               "i224"
                                                               "i222"
                                                               "i220"
                                                               "i218"
                                                               "i216"
                                                               "i214"
                                                               "i212"
                                                               "i210"
                                                               "i208"))
                                                            #(ribcage
                                                              (define-structure
                                                                define-expansion-accessors
                                                                define-expansion-constructors)
                                                              ((top)
                                                               (top)
                                                               (top))
                                                              ("i46"
                                                               "i45"
                                                               "i44")))
                                                           (hygiene guile)))
                                                      4)
                                                 (eq? (vector-ref
                                                        '#(syntax-object
                                                           eval
                                                           ((top)
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i1754"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(f
                                                                when-list
                                                                situations)
                                                              #((top)
                                                                (top)
                                                                (top))
                                                              #("i1748"
                                                                "i1749"
                                                                "i1750"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(e when-list w)
                                                              #((top)
                                                                (top)
                                                                (top))
                                                              #("i1745"
                                                                "i1746"
                                                                "i1747"))
                                                            #(ribcage
                                                              (lambda-var-list
                                                                gen-var
                                                                strip
                                                                chi-lambda-case
                                                                lambda*-formals
                                                                chi-simple-lambda
                                                                lambda-formals
                                                                ellipsis?
                                                                chi-void
                                                                eval-local-transformer
                                                                chi-local-syntax
                                                                chi-body
                                                                chi-macro
                                                                chi-application
                                                                chi-expr
                                                                chi
                                                                syntax-type
                                                                chi-when-list
                                                                chi-install-global
                                                                chi-top-sequence
                                                                chi-sequence
                                                                source-wrap
                                                                wrap
                                                                bound-id-member?
                                                                distinct-bound-ids?
                                                                valid-bound-ids?
                                                                bound-id=?
                                                                free-id=?
                                                                id-var-name
                                                                same-marks?
                                                                join-marks
                                                                join-wraps
                                                                smart-append
                                                                make-binding-wrap
                                                                extend-ribcage!
                                                                make-empty-ribcage
                                                                new-mark
                                                                anti-mark
                                                                the-anti-mark
                                                                top-marked?
                                                                top-wrap
                                                                empty-wrap
                                                                set-ribcage-labels!
                                                                set-ribcage-marks!
                                                                set-ribcage-symnames!
                                                                ribcage-labels
                                                                ribcage-marks
                                                                ribcage-symnames
                                                                ribcage?
                                                                make-ribcage
                                                                gen-labels
                                                                gen-label
                                                                make-rename
                                                                rename-marks
                                                                rename-new
                                                                rename-old
                                                                subst-rename?
                                                                wrap-subst
                                                                wrap-marks
                                                                make-wrap
                                                                id-sym-name&marks
                                                                id-sym-name
                                                                id?
                                                                nonsymbol-id?
                                                                global-extend
                                                                lookup
                                                                macros-only-env
                                                                extend-var-env
                                                                extend-env
                                                                null-env
                                                                binding-value
                                                                binding-type
                                                                make-binding
                                                                arg-check
                                                                source-annotation
                                                                no-source
                                                                set-syntax-object-module!
                                                                set-syntax-object-wrap!
                                                                set-syntax-object-expression!
                                                                syntax-object-module
                                                                syntax-object-wrap
                                                                syntax-object-expression
                                                                syntax-object?
                                                                make-syntax-object
                                                                build-lexical-var
                                                                build-letrec
                                                                build-named-let
                                                                build-let
                                                                build-sequence
                                                                build-data
                                                                build-primref
                                                                build-lambda-case
                                                                build-case-lambda
                                                                build-simple-lambda
                                                                build-global-definition
                                                                build-global-assignment
                                                                build-global-reference
                                                                analyze-variable
                                                                build-lexical-assignment
                                                                build-lexical-reference
                                                                build-dynlet
                                                                build-conditional
                                                                build-application
                                                                build-void
                                                                maybe-name-value!
                                                                decorate-source
                                                                get-global-definition-hook
                                                                put-global-definition-hook
                                                                gensym-hook
                                                                local-eval-hook
                                                                top-level-eval-hook
                                                                fx<
                                                                fx=
                                                                fx-
                                                                fx+
                                                                set-lambda-meta!
                                                                lambda-meta
                                                                lambda?
                                                                make-dynlet
                                                                make-letrec
                                                                make-let
                                                                make-lambda-case
                                                                make-lambda
                                                                make-sequence
                                                                make-application
                                                                make-conditional
                                                                make-toplevel-define
                                                                make-toplevel-set
                                                                make-toplevel-ref
                                                                make-module-set
                                                                make-module-ref
                                                                make-lexical-set
                                                                make-lexical-ref
                                                                make-primitive-ref
                                                                make-const
                                                                make-void)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i467"
                                                               "i465"
                                                               "i463"
                                                               "i461"
                                                               "i459"
                                                               "i457"
                                                               "i455"
                                                               "i453"
                                                               "i451"
                                                               "i449"
                                                               "i447"
                                                               "i445"
                                                               "i443"
                                                               "i441"
                                                               "i439"
                                                               "i437"
                                                               "i435"
                                                               "i433"
                                                               "i431"
                                                               "i429"
                                                               "i427"
                                                               "i425"
                                                               "i423"
                                                               "i421"
                                                               "i419"
                                                               "i417"
                                                               "i415"
                                                               "i413"
                                                               "i411"
                                                               "i409"
                                                               "i407"
                                                               "i405"
                                                               "i403"
                                                               "i401"
                                                               "i399"
                                                               "i398"
                                                               "i396"
                                                               "i393"
                                                               "i392"
                                                               "i391"
                                                               "i389"
                                                               "i388"
                                                               "i386"
                                                               "i384"
                                                               "i382"
                                                               "i380"
                                                               "i378"
                                                               "i376"
                                                               "i374"
                                                               "i372"
                                                               "i369"
                                                               "i367"
                                                               "i366"
                                                               "i364"
                                                               "i362"
                                                               "i360"
                                                               "i358"
                                                               "i357"
                                                               "i356"
                                                               "i355"
                                                               "i353"
                                                               "i352"
                                                               "i349"
                                                               "i347"
                                                               "i345"
                                                               "i343"
                                                               "i341"
                                                               "i339"
                                                               "i337"
                                                               "i336"
                                                               "i335"
                                                               "i333"
                                                               "i331"
                                                               "i330"
                                                               "i327"
                                                               "i326"
                                                               "i324"
                                                               "i322"
                                                               "i320"
                                                               "i318"
                                                               "i316"
                                                               "i314"
                                                               "i312"
                                                               "i310"
                                                               "i308"
                                                               "i305"
                                                               "i303"
                                                               "i301"
                                                               "i299"
                                                               "i297"
                                                               "i295"
                                                               "i293"
                                                               "i291"
                                                               "i289"
                                                               "i287"
                                                               "i285"
                                                               "i283"
                                                               "i281"
                                                               "i279"
                                                               "i277"
                                                               "i275"
                                                               "i273"
                                                               "i271"
                                                               "i269"
                                                               "i267"
                                                               "i265"
                                                               "i263"
                                                               "i261"
                                                               "i260"
                                                               "i257"
                                                               "i255"
                                                               "i254"
                                                               "i253"
                                                               "i252"
                                                               "i251"
                                                               "i249"
                                                               "i247"
                                                               "i245"
                                                               "i242"
                                                               "i240"
                                                               "i238"
                                                               "i236"
                                                               "i234"
                                                               "i232"
                                                               "i230"
                                                               "i228"
                                                               "i226"
                                                               "i224"
                                                               "i222"
                                                               "i220"
                                                               "i218"
                                                               "i216"
                                                               "i214"
                                                               "i212"
                                                               "i210"
                                                               "i208"))
                                                            #(ribcage
                                                              (define-structure
                                                                define-expansion-accessors
                                                                define-expansion-constructors)
                                                              ((top)
                                                               (top)
                                                               (top))
                                                              ("i46"
                                                               "i45"
                                                               "i44")))
                                                           (hygiene guile))
                                                        0)
                                                      'syntax-object)
                                                 #f)
                                             (vector-ref
                                               '#(syntax-object
                                                  eval
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i1754"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(f when-list situations)
                                                     #((top) (top) (top))
                                                     #("i1748"
                                                       "i1749"
                                                       "i1750"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(e when-list w)
                                                     #((top) (top) (top))
                                                     #("i1745"
                                                       "i1746"
                                                       "i1747"))
                                                   #(ribcage
                                                     (lambda-var-list
                                                       gen-var
                                                       strip
                                                       chi-lambda-case
                                                       lambda*-formals
                                                       chi-simple-lambda
                                                       lambda-formals
                                                       ellipsis?
                                                       chi-void
                                                       eval-local-transformer
                                                       chi-local-syntax
                                                       chi-body
                                                       chi-macro
                                                       chi-application
                                                       chi-expr
                                                       chi
                                                       syntax-type
                                                       chi-when-list
                                                       chi-install-global
                                                       chi-top-sequence
                                                       chi-sequence
                                                       source-wrap
                                                       wrap
                                                       bound-id-member?
                                                       distinct-bound-ids?
                                                       valid-bound-ids?
                                                       bound-id=?
                                                       free-id=?
                                                       id-var-name
                                                       same-marks?
                                                       join-marks
                                                       join-wraps
                                                       smart-append
                                                       make-binding-wrap
                                                       extend-ribcage!
                                                       make-empty-ribcage
                                                       new-mark
                                                       anti-mark
                                                       the-anti-mark
                                                       top-marked?
                                                       top-wrap
                                                       empty-wrap
                                                       set-ribcage-labels!
                                                       set-ribcage-marks!
                                                       set-ribcage-symnames!
                                                       ribcage-labels
                                                       ribcage-marks
                                                       ribcage-symnames
                                                       ribcage?
                                                       make-ribcage
                                                       gen-labels
                                                       gen-label
                                                       make-rename
                                                       rename-marks
                                                       rename-new
                                                       rename-old
                                                       subst-rename?
                                                       wrap-subst
                                                       wrap-marks
                                                       make-wrap
                                                       id-sym-name&marks
                                                       id-sym-name
                                                       id?
                                                       nonsymbol-id?
                                                       global-extend
                                                       lookup
                                                       macros-only-env
                                                       extend-var-env
                                                       extend-env
                                                       null-env
                                                       binding-value
                                                       binding-type
                                                       make-binding
                                                       arg-check
                                                       source-annotation
                                                       no-source
                                                       set-syntax-object-module!
                                                       set-syntax-object-wrap!
                                                       set-syntax-object-expression!
                                                       syntax-object-module
                                                       syntax-object-wrap
                                                       syntax-object-expression
                                                       syntax-object?
                                                       make-syntax-object
                                                       build-lexical-var
                                                       build-letrec
                                                       build-named-let
                                                       build-let
                                                       build-sequence
                                                       build-data
                                                       build-primref
                                                       build-lambda-case
                                                       build-case-lambda
                                                       build-simple-lambda
                                                       build-global-definition
                                                       build-global-assignment
                                                       build-global-reference
                                                       analyze-variable
                                                       build-lexical-assignment
                                                       build-lexical-reference
                                                       build-dynlet
                                                       build-conditional
                                                       build-application
                                                       build-void
                                                       maybe-name-value!
                                                       decorate-source
                                                       get-global-definition-hook
                                                       put-global-definition-hook
                                                       gensym-hook
                                                       local-eval-hook
                                                       top-level-eval-hook
                                                       fx<
                                                       fx=
                                                       fx-
                                                       fx+
                                                       set-lambda-meta!
                                                       lambda-meta
                                                       lambda?
                                                       make-dynlet
                                                       make-letrec
                                                       make-let
                                                       make-lambda-case
                                                       make-lambda
                                                       make-sequence
                                                       make-application
                                                       make-conditional
                                                       make-toplevel-define
                                                       make-toplevel-set
                                                       make-toplevel-ref
                                                       make-module-set
                                                       make-module-ref
                                                       make-lexical-set
                                                       make-lexical-ref
                                                       make-primitive-ref
                                                       make-const
                                                       make-void)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i467"
                                                      "i465"
                                                      "i463"
                                                      "i461"
                                                      "i459"
                                                      "i457"
                                                      "i455"
                                                      "i453"
                                                      "i451"
                                                      "i449"
                                                      "i447"
                                                      "i445"
                                                      "i443"
                                                      "i441"
                                                      "i439"
                                                      "i437"
                                                      "i435"
                                                      "i433"
                                                      "i431"
                                                      "i429"
                                                      "i427"
                                                      "i425"
                                                      "i423"
                                                      "i421"
                                                      "i419"
                                                      "i417"
                                                      "i415"
                                                      "i413"
                                                      "i411"
                                                      "i409"
                                                      "i407"
                                                      "i405"
                                                      "i403"
                                                      "i401"
                                                      "i399"
                                                      "i398"
                                                      "i396"
                                                      "i393"
                                                      "i392"
                                                      "i391"
                                                      "i389"
                                                      "i388"
                                                      "i386"
                                                      "i384"
                                                      "i382"
                                                      "i380"
                                                      "i378"
                                                      "i376"
                                                      "i374"
                                                      "i372"
                                                      "i369"
                                                      "i367"
                                                      "i366"
                                                      "i364"
                                                      "i362"
                                                      "i360"
                                                      "i358"
                                                      "i357"
                                                      "i356"
                                                      "i355"
                                                      "i353"
                                                      "i352"
                                                      "i349"
                                                      "i347"
                                                      "i345"
                                                      "i343"
                                                      "i341"
                                                      "i339"
                                                      "i337"
                                                      "i336"
                                                      "i335"
                                                      "i333"
                                                      "i331"
                                                      "i330"
                                                      "i327"
                                                      "i326"
                                                      "i324"
                                                      "i322"
                                                      "i320"
                                                      "i318"
                                                      "i316"
                                                      "i314"
                                                      "i312"
                                                      "i310"
                                                      "i308"
                                                      "i305"
                                                      "i303"
                                                      "i301"
                                                      "i299"
                                                      "i297"
                                                      "i295"
                                                      "i293"
                                                      "i291"
                                                      "i289"
                                                      "i287"
                                                      "i285"
                                                      "i283"
                                                      "i281"
                                                      "i279"
                                                      "i277"
                                                      "i275"
                                                      "i273"
                                                      "i271"
                                                      "i269"
                                                      "i267"
                                                      "i265"
                                                      "i263"
                                                      "i261"
                                                      "i260"
                                                      "i257"
                                                      "i255"
                                                      "i254"
                                                      "i253"
                                                      "i252"
                                                      "i251"
                                                      "i249"
                                                      "i247"
                                                      "i245"
                                                      "i242"
                                                      "i240"
                                                      "i238"
                                                      "i236"
                                                      "i234"
                                                      "i232"
                                                      "i230"
                                                      "i228"
                                                      "i226"
                                                      "i224"
                                                      "i222"
                                                      "i220"
                                                      "i218"
                                                      "i216"
                                                      "i214"
                                                      "i212"
                                                      "i210"
                                                      "i208"))
                                                   #(ribcage
                                                     (define-structure
                                                       define-expansion-accessors
                                                       define-expansion-constructors)
                                                     ((top) (top) (top))
                                                     ("i46" "i45" "i44")))
                                                  (hygiene guile))
                                               1)
                                             '#(syntax-object
                                                eval
                                                ((top)
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i1754"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f when-list situations)
                                                   #((top) (top) (top))
                                                   #("i1748" "i1749" "i1750"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(e when-list w)
                                                   #((top) (top) (top))
                                                   #("i1745" "i1746" "i1747"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i467"
                                                    "i465"
                                                    "i463"
                                                    "i461"
                                                    "i459"
                                                    "i457"
                                                    "i455"
                                                    "i453"
                                                    "i451"
                                                    "i449"
                                                    "i447"
                                                    "i445"
                                                    "i443"
                                                    "i441"
                                                    "i439"
                                                    "i437"
                                                    "i435"
                                                    "i433"
                                                    "i431"
                                                    "i429"
                                                    "i427"
                                                    "i425"
                                                    "i423"
                                                    "i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i398"
                                                    "i396"
                                                    "i393"
                                                    "i392"
                                                    "i391"
                                                    "i389"
                                                    "i388"
                                                    "i386"
                                                    "i384"
                                                    "i382"
                                                    "i380"
                                                    "i378"
                                                    "i376"
                                                    "i374"
                                                    "i372"
                                                    "i369"
                                                    "i367"
                                                    "i366"
                                                    "i364"
                                                    "i362"
                                                    "i360"
                                                    "i358"
                                                    "i357"
                                                    "i356"
                                                    "i355"
                                                    "i353"
                                                    "i352"
                                                    "i349"
                                                    "i347"
                                                    "i345"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i336"
                                                    "i335"
                                                    "i333"
                                                    "i331"
                                                    "i330"
                                                    "i327"
                                                    "i326"
                                                    "i324"
                                                    "i322"
                                                    "i320"
                                                    "i318"
                                                    "i316"
                                                    "i314"
                                                    "i312"
                                                    "i310"
                                                    "i308"
                                                    "i305"
                                                    "i303"
                                                    "i301"
                                                    "i299"
                                                    "i297"
                                                    "i295"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i287"
                                                    "i285"
                                                    "i283"
                                                    "i281"
                                                    "i279"
                                                    "i277"
                                                    "i275"
                                                    "i273"
                                                    "i271"
                                                    "i269"
                                                    "i267"
                                                    "i265"
                                                    "i263"
                                                    "i261"
                                                    "i260"
                                                    "i257"
                                                    "i255"
                                                    "i254"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i249"
                                                    "i247"
                                                    "i245"
                                                    "i242"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i218"
                                                    "i216"
                                                    "i214"
                                                    "i212"
                                                    "i210"
                                                    "i208"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i46" "i45" "i44")))
                                                (hygiene guile))))
                                    (eq? (#{id-var-name 4332}#
                                           #{x 20313}#
                                           '(()))
                                         (#{id-var-name 4332}#
                                           '#(syntax-object
                                              eval
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i1754"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(f when-list situations)
                                                 #((top) (top) (top))
                                                 #("i1748" "i1749" "i1750"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(e when-list w)
                                                 #((top) (top) (top))
                                                 #("i1745" "i1746" "i1747"))
                                               #(ribcage
                                                 (lambda-var-list
                                                   gen-var
                                                   strip
                                                   chi-lambda-case
                                                   lambda*-formals
                                                   chi-simple-lambda
                                                   lambda-formals
                                                   ellipsis?
                                                   chi-void
                                                   eval-local-transformer
                                                   chi-local-syntax
                                                   chi-body
                                                   chi-macro
                                                   chi-application
                                                   chi-expr
                                                   chi
                                                   syntax-type
                                                   chi-when-list
                                                   chi-install-global
                                                   chi-top-sequence
                                                   chi-sequence
                                                   source-wrap
                                                   wrap
                                                   bound-id-member?
                                                   distinct-bound-ids?
                                                   valid-bound-ids?
                                                   bound-id=?
                                                   free-id=?
                                                   id-var-name
                                                   same-marks?
                                                   join-marks
                                                   join-wraps
                                                   smart-append
                                                   make-binding-wrap
                                                   extend-ribcage!
                                                   make-empty-ribcage
                                                   new-mark
                                                   anti-mark
                                                   the-anti-mark
                                                   top-marked?
                                                   top-wrap
                                                   empty-wrap
                                                   set-ribcage-labels!
                                                   set-ribcage-marks!
                                                   set-ribcage-symnames!
                                                   ribcage-labels
                                                   ribcage-marks
                                                   ribcage-symnames
                                                   ribcage?
                                                   make-ribcage
                                                   gen-labels
                                                   gen-label
                                                   make-rename
                                                   rename-marks
                                                   rename-new
                                                   rename-old
                                                   subst-rename?
                                                   wrap-subst
                                                   wrap-marks
                                                   make-wrap
                                                   id-sym-name&marks
                                                   id-sym-name
                                                   id?
                                                   nonsymbol-id?
                                                   global-extend
                                                   lookup
                                                   macros-only-env
                                                   extend-var-env
                                                   extend-env
                                                   null-env
                                                   binding-value
                                                   binding-type
                                                   make-binding
                                                   arg-check
                                                   source-annotation
                                                   no-source
                                                   set-syntax-object-module!
                                                   set-syntax-object-wrap!
                                                   set-syntax-object-expression!
                                                   syntax-object-module
                                                   syntax-object-wrap
                                                   syntax-object-expression
                                                   syntax-object?
                                                   make-syntax-object
                                                   build-lexical-var
                                                   build-letrec
                                                   build-named-let
                                                   build-let
                                                   build-sequence
                                                   build-data
                                                   build-primref
                                                   build-lambda-case
                                                   build-case-lambda
                                                   build-simple-lambda
                                                   build-global-definition
                                                   build-global-assignment
                                                   build-global-reference
                                                   analyze-variable
                                                   build-lexical-assignment
                                                   build-lexical-reference
                                                   build-dynlet
                                                   build-conditional
                                                   build-application
                                                   build-void
                                                   maybe-name-value!
                                                   decorate-source
                                                   get-global-definition-hook
                                                   put-global-definition-hook
                                                   gensym-hook
                                                   local-eval-hook
                                                   top-level-eval-hook
                                                   fx<
                                                   fx=
                                                   fx-
                                                   fx+
                                                   set-lambda-meta!
                                                   lambda-meta
                                                   lambda?
                                                   make-dynlet
                                                   make-letrec
                                                   make-let
                                                   make-lambda-case
                                                   make-lambda
                                                   make-sequence
                                                   make-application
                                                   make-conditional
                                                   make-toplevel-define
                                                   make-toplevel-set
                                                   make-toplevel-ref
                                                   make-module-set
                                                   make-module-ref
                                                   make-lexical-set
                                                   make-lexical-ref
                                                   make-primitive-ref
                                                   make-const
                                                   make-void)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i467"
                                                  "i465"
                                                  "i463"
                                                  "i461"
                                                  "i459"
                                                  "i457"
                                                  "i455"
                                                  "i453"
                                                  "i451"
                                                  "i449"
                                                  "i447"
                                                  "i445"
                                                  "i443"
                                                  "i441"
                                                  "i439"
                                                  "i437"
                                                  "i435"
                                                  "i433"
                                                  "i431"
                                                  "i429"
                                                  "i427"
                                                  "i425"
                                                  "i423"
                                                  "i421"
                                                  "i419"
                                                  "i417"
                                                  "i415"
                                                  "i413"
                                                  "i411"
                                                  "i409"
                                                  "i407"
                                                  "i405"
                                                  "i403"
                                                  "i401"
                                                  "i399"
                                                  "i398"
                                                  "i396"
                                                  "i393"
                                                  "i392"
                                                  "i391"
                                                  "i389"
                                                  "i388"
                                                  "i386"
                                                  "i384"
                                                  "i382"
                                                  "i380"
                                                  "i378"
                                                  "i376"
                                                  "i374"
                                                  "i372"
                                                  "i369"
                                                  "i367"
                                                  "i366"
                                                  "i364"
                                                  "i362"
                                                  "i360"
                                                  "i358"
                                                  "i357"
                                                  "i356"
                                                  "i355"
                                                  "i353"
                                                  "i352"
                                                  "i349"
                                                  "i347"
                                                  "i345"
                                                  "i343"
                                                  "i341"
                                                  "i339"
                                                  "i337"
                                                  "i336"
                                                  "i335"
                                                  "i333"
                                                  "i331"
                                                  "i330"
                                                  "i327"
                                                  "i326"
                                                  "i324"
                                                  "i322"
                                                  "i320"
                                                  "i318"
                                                  "i316"
                                                  "i314"
                                                  "i312"
                                                  "i310"
                                                  "i308"
                                                  "i305"
                                                  "i303"
                                                  "i301"
                                                  "i299"
                                                  "i297"
                                                  "i295"
                                                  "i293"
                                                  "i291"
                                                  "i289"
                                                  "i287"
                                                  "i285"
                                                  "i283"
                                                  "i281"
                                                  "i279"
                                                  "i277"
                                                  "i275"
                                                  "i273"
                                                  "i271"
                                                  "i269"
                                                  "i267"
                                                  "i265"
                                                  "i263"
                                                  "i261"
                                                  "i260"
                                                  "i257"
                                                  "i255"
                                                  "i254"
                                                  "i253"
                                                  "i252"
                                                  "i251"
                                                  "i249"
                                                  "i247"
                                                  "i245"
                                                  "i242"
                                                  "i240"
                                                  "i238"
                                                  "i236"
                                                  "i234"
                                                  "i232"
                                                  "i230"
                                                  "i228"
                                                  "i226"
                                                  "i224"
                                                  "i222"
                                                  "i220"
                                                  "i218"
                                                  "i216"
                                                  "i214"
                                                  "i212"
                                                  "i210"
                                                  "i208"))
                                               #(ribcage
                                                 (define-structure
                                                   define-expansion-accessors
                                                   define-expansion-constructors)
                                                 ((top) (top) (top))
                                                 ("i46" "i45" "i44")))
                                              (hygiene guile))
                                           '(())))
                                    #f)
                                'eval
                                (if (if (eq? (if (if (vector? #{x 20313}#)
                                                   (if (= (vector-length
                                                            #{x 20313}#)
                                                          4)
                                                     (eq? (vector-ref
                                                            #{x 20313}#
                                                            0)
                                                          'syntax-object)
                                                     #f)
                                                   #f)
                                               (vector-ref #{x 20313}# 1)
                                               #{x 20313}#)
                                             (if (if (= (vector-length
                                                          '#(syntax-object
                                                             expand
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i1754"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(f
                                                                  when-list
                                                                  situations)
                                                                #((top)
                                                                  (top)
                                                                  (top))
                                                                #("i1748"
                                                                  "i1749"
                                                                  "i1750"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(e
                                                                  when-list
                                                                  w)
                                                                #((top)
                                                                  (top)
                                                                  (top))
                                                                #("i1745"
                                                                  "i1746"
                                                                  "i1747"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i467"
                                                                 "i465"
                                                                 "i463"
                                                                 "i461"
                                                                 "i459"
                                                                 "i457"
                                                                 "i455"
                                                                 "i453"
                                                                 "i451"
                                                                 "i449"
                                                                 "i447"
                                                                 "i445"
                                                                 "i443"
                                                                 "i441"
                                                                 "i439"
                                                                 "i437"
                                                                 "i435"
                                                                 "i433"
                                                                 "i431"
                                                                 "i429"
                                                                 "i427"
                                                                 "i425"
                                                                 "i423"
                                                                 "i421"
                                                                 "i419"
                                                                 "i417"
                                                                 "i415"
                                                                 "i413"
                                                                 "i411"
                                                                 "i409"
                                                                 "i407"
                                                                 "i405"
                                                                 "i403"
                                                                 "i401"
                                                                 "i399"
                                                                 "i398"
                                                                 "i396"
                                                                 "i393"
                                                                 "i392"
                                                                 "i391"
                                                                 "i389"
                                                                 "i388"
                                                                 "i386"
                                                                 "i384"
                                                                 "i382"
                                                                 "i380"
                                                                 "i378"
                                                                 "i376"
                                                                 "i374"
                                                                 "i372"
                                                                 "i369"
                                                                 "i367"
                                                                 "i366"
                                                                 "i364"
                                                                 "i362"
                                                                 "i360"
                                                                 "i358"
                                                                 "i357"
                                                                 "i356"
                                                                 "i355"
                                                                 "i353"
                                                                 "i352"
                                                                 "i349"
                                                                 "i347"
                                                                 "i345"
                                                                 "i343"
                                                                 "i341"
                                                                 "i339"
                                                                 "i337"
                                                                 "i336"
                                                                 "i335"
                                                                 "i333"
                                                                 "i331"
                                                                 "i330"
                                                                 "i327"
                                                                 "i326"
                                                                 "i324"
                                                                 "i322"
                                                                 "i320"
                                                                 "i318"
                                                                 "i316"
                                                                 "i314"
                                                                 "i312"
                                                                 "i310"
                                                                 "i308"
                                                                 "i305"
                                                                 "i303"
                                                                 "i301"
                                                                 "i299"
                                                                 "i297"
                                                                 "i295"
                                                                 "i293"
                                                                 "i291"
                                                                 "i289"
                                                                 "i287"
                                                                 "i285"
                                                                 "i283"
                                                                 "i281"
                                                                 "i279"
                                                                 "i277"
                                                                 "i275"
                                                                 "i273"
                                                                 "i271"
                                                                 "i269"
                                                                 "i267"
                                                                 "i265"
                                                                 "i263"
                                                                 "i261"
                                                                 "i260"
                                                                 "i257"
                                                                 "i255"
                                                                 "i254"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i249"
                                                                 "i247"
                                                                 "i245"
                                                                 "i242"
                                                                 "i240"
                                                                 "i238"
                                                                 "i236"
                                                                 "i234"
                                                                 "i232"
                                                                 "i230"
                                                                 "i228"
                                                                 "i226"
                                                                 "i224"
                                                                 "i222"
                                                                 "i220"
                                                                 "i218"
                                                                 "i216"
                                                                 "i214"
                                                                 "i212"
                                                                 "i210"
                                                                 "i208"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i46"
                                                                 "i45"
                                                                 "i44")))
                                                             (hygiene guile)))
                                                        4)
                                                   (eq? (vector-ref
                                                          '#(syntax-object
                                                             expand
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i1754"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(f
                                                                  when-list
                                                                  situations)
                                                                #((top)
                                                                  (top)
                                                                  (top))
                                                                #("i1748"
                                                                  "i1749"
                                                                  "i1750"))
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(e
                                                                  when-list
                                                                  w)
                                                                #((top)
                                                                  (top)
                                                                  (top))
                                                                #("i1745"
                                                                  "i1746"
                                                                  "i1747"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i467"
                                                                 "i465"
                                                                 "i463"
                                                                 "i461"
                                                                 "i459"
                                                                 "i457"
                                                                 "i455"
                                                                 "i453"
                                                                 "i451"
                                                                 "i449"
                                                                 "i447"
                                                                 "i445"
                                                                 "i443"
                                                                 "i441"
                                                                 "i439"
                                                                 "i437"
                                                                 "i435"
                                                                 "i433"
                                                                 "i431"
                                                                 "i429"
                                                                 "i427"
                                                                 "i425"
                                                                 "i423"
                                                                 "i421"
                                                                 "i419"
                                                                 "i417"
                                                                 "i415"
                                                                 "i413"
                                                                 "i411"
                                                                 "i409"
                                                                 "i407"
                                                                 "i405"
                                                                 "i403"
                                                                 "i401"
                                                                 "i399"
                                                                 "i398"
                                                                 "i396"
                                                                 "i393"
                                                                 "i392"
                                                                 "i391"
                                                                 "i389"
                                                                 "i388"
                                                                 "i386"
                                                                 "i384"
                                                                 "i382"
                                                                 "i380"
                                                                 "i378"
                                                                 "i376"
                                                                 "i374"
                                                                 "i372"
                                                                 "i369"
                                                                 "i367"
                                                                 "i366"
                                                                 "i364"
                                                                 "i362"
                                                                 "i360"
                                                                 "i358"
                                                                 "i357"
                                                                 "i356"
                                                                 "i355"
                                                                 "i353"
                                                                 "i352"
                                                                 "i349"
                                                                 "i347"
                                                                 "i345"
                                                                 "i343"
                                                                 "i341"
                                                                 "i339"
                                                                 "i337"
                                                                 "i336"
                                                                 "i335"
                                                                 "i333"
                                                                 "i331"
                                                                 "i330"
                                                                 "i327"
                                                                 "i326"
                                                                 "i324"
                                                                 "i322"
                                                                 "i320"
                                                                 "i318"
                                                                 "i316"
                                                                 "i314"
                                                                 "i312"
                                                                 "i310"
                                                                 "i308"
                                                                 "i305"
                                                                 "i303"
                                                                 "i301"
                                                                 "i299"
                                                                 "i297"
                                                                 "i295"
                                                                 "i293"
                                                                 "i291"
                                                                 "i289"
                                                                 "i287"
                                                                 "i285"
                                                                 "i283"
                                                                 "i281"
                                                                 "i279"
                                                                 "i277"
                                                                 "i275"
                                                                 "i273"
                                                                 "i271"
                                                                 "i269"
                                                                 "i267"
                                                                 "i265"
                                                                 "i263"
                                                                 "i261"
                                                                 "i260"
                                                                 "i257"
                                                                 "i255"
                                                                 "i254"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i249"
                                                                 "i247"
                                                                 "i245"
                                                                 "i242"
                                                                 "i240"
                                                                 "i238"
                                                                 "i236"
                                                                 "i234"
                                                                 "i232"
                                                                 "i230"
                                                                 "i228"
                                                                 "i226"
                                                                 "i224"
                                                                 "i222"
                                                                 "i220"
                                                                 "i218"
                                                                 "i216"
                                                                 "i214"
                                                                 "i212"
                                                                 "i210"
                                                                 "i208"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i46"
                                                                 "i45"
                                                                 "i44")))
                                                             (hygiene guile))
                                                          0)
                                                        'syntax-object)
                                                   #f)
                                               (vector-ref
                                                 '#(syntax-object
                                                    expand
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i1754"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(f
                                                         when-list
                                                         situations)
                                                       #((top) (top) (top))
                                                       #("i1748"
                                                         "i1749"
                                                         "i1750"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(e when-list w)
                                                       #((top) (top) (top))
                                                       #("i1745"
                                                         "i1746"
                                                         "i1747"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i467"
                                                        "i465"
                                                        "i463"
                                                        "i461"
                                                        "i459"
                                                        "i457"
                                                        "i455"
                                                        "i453"
                                                        "i451"
                                                        "i449"
                                                        "i447"
                                                        "i445"
                                                        "i443"
                                                        "i441"
                                                        "i439"
                                                        "i437"
                                                        "i435"
                                                        "i433"
                                                        "i431"
                                                        "i429"
                                                        "i427"
                                                        "i425"
                                                        "i423"
                                                        "i421"
                                                        "i419"
                                                        "i417"
                                                        "i415"
                                                        "i413"
                                                        "i411"
                                                        "i409"
                                                        "i407"
                                                        "i405"
                                                        "i403"
                                                        "i401"
                                                        "i399"
                                                        "i398"
                                                        "i396"
                                                        "i393"
                                                        "i392"
                                                        "i391"
                                                        "i389"
                                                        "i388"
                                                        "i386"
                                                        "i384"
                                                        "i382"
                                                        "i380"
                                                        "i378"
                                                        "i376"
                                                        "i374"
                                                        "i372"
                                                        "i369"
                                                        "i367"
                                                        "i366"
                                                        "i364"
                                                        "i362"
                                                        "i360"
                                                        "i358"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i353"
                                                        "i352"
                                                        "i349"
                                                        "i347"
                                                        "i345"
                                                        "i343"
                                                        "i341"
                                                        "i339"
                                                        "i337"
                                                        "i336"
                                                        "i335"
                                                        "i333"
                                                        "i331"
                                                        "i330"
                                                        "i327"
                                                        "i326"
                                                        "i324"
                                                        "i322"
                                                        "i320"
                                                        "i318"
                                                        "i316"
                                                        "i314"
                                                        "i312"
                                                        "i310"
                                                        "i308"
                                                        "i305"
                                                        "i303"
                                                        "i301"
                                                        "i299"
                                                        "i297"
                                                        "i295"
                                                        "i293"
                                                        "i291"
                                                        "i289"
                                                        "i287"
                                                        "i285"
                                                        "i283"
                                                        "i281"
                                                        "i279"
                                                        "i277"
                                                        "i275"
                                                        "i273"
                                                        "i271"
                                                        "i269"
                                                        "i267"
                                                        "i265"
                                                        "i263"
                                                        "i261"
                                                        "i260"
                                                        "i257"
                                                        "i255"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i249"
                                                        "i247"
                                                        "i245"
                                                        "i242"
                                                        "i240"
                                                        "i238"
                                                        "i236"
                                                        "i234"
                                                        "i232"
                                                        "i230"
                                                        "i228"
                                                        "i226"
                                                        "i224"
                                                        "i222"
                                                        "i220"
                                                        "i218"
                                                        "i216"
                                                        "i214"
                                                        "i212"
                                                        "i210"
                                                        "i208"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i46" "i45" "i44")))
                                                    (hygiene guile))
                                                 1)
                                               '#(syntax-object
                                                  expand
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i1754"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(f when-list situations)
                                                     #((top) (top) (top))
                                                     #("i1748"
                                                       "i1749"
                                                       "i1750"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(e when-list w)
                                                     #((top) (top) (top))
                                                     #("i1745"
                                                       "i1746"
                                                       "i1747"))
                                                   #(ribcage
                                                     (lambda-var-list
                                                       gen-var
                                                       strip
                                                       chi-lambda-case
                                                       lambda*-formals
                                                       chi-simple-lambda
                                                       lambda-formals
                                                       ellipsis?
                                                       chi-void
                                                       eval-local-transformer
                                                       chi-local-syntax
                                                       chi-body
                                                       chi-macro
                                                       chi-application
                                                       chi-expr
                                                       chi
                                                       syntax-type
                                                       chi-when-list
                                                       chi-install-global
                                                       chi-top-sequence
                                                       chi-sequence
                                                       source-wrap
                                                       wrap
                                                       bound-id-member?
                                                       distinct-bound-ids?
                                                       valid-bound-ids?
                                                       bound-id=?
                                                       free-id=?
                                                       id-var-name
                                                       same-marks?
                                                       join-marks
                                                       join-wraps
                                                       smart-append
                                                       make-binding-wrap
                                                       extend-ribcage!
                                                       make-empty-ribcage
                                                       new-mark
                                                       anti-mark
                                                       the-anti-mark
                                                       top-marked?
                                                       top-wrap
                                                       empty-wrap
                                                       set-ribcage-labels!
                                                       set-ribcage-marks!
                                                       set-ribcage-symnames!
                                                       ribcage-labels
                                                       ribcage-marks
                                                       ribcage-symnames
                                                       ribcage?
                                                       make-ribcage
                                                       gen-labels
                                                       gen-label
                                                       make-rename
                                                       rename-marks
                                                       rename-new
                                                       rename-old
                                                       subst-rename?
                                                       wrap-subst
                                                       wrap-marks
                                                       make-wrap
                                                       id-sym-name&marks
                                                       id-sym-name
                                                       id?
                                                       nonsymbol-id?
                                                       global-extend
                                                       lookup
                                                       macros-only-env
                                                       extend-var-env
                                                       extend-env
                                                       null-env
                                                       binding-value
                                                       binding-type
                                                       make-binding
                                                       arg-check
                                                       source-annotation
                                                       no-source
                                                       set-syntax-object-module!
                                                       set-syntax-object-wrap!
                                                       set-syntax-object-expression!
                                                       syntax-object-module
                                                       syntax-object-wrap
                                                       syntax-object-expression
                                                       syntax-object?
                                                       make-syntax-object
                                                       build-lexical-var
                                                       build-letrec
                                                       build-named-let
                                                       build-let
                                                       build-sequence
                                                       build-data
                                                       build-primref
                                                       build-lambda-case
                                                       build-case-lambda
                                                       build-simple-lambda
                                                       build-global-definition
                                                       build-global-assignment
                                                       build-global-reference
                                                       analyze-variable
                                                       build-lexical-assignment
                                                       build-lexical-reference
                                                       build-dynlet
                                                       build-conditional
                                                       build-application
                                                       build-void
                                                       maybe-name-value!
                                                       decorate-source
                                                       get-global-definition-hook
                                                       put-global-definition-hook
                                                       gensym-hook
                                                       local-eval-hook
                                                       top-level-eval-hook
                                                       fx<
                                                       fx=
                                                       fx-
                                                       fx+
                                                       set-lambda-meta!
                                                       lambda-meta
                                                       lambda?
                                                       make-dynlet
                                                       make-letrec
                                                       make-let
                                                       make-lambda-case
                                                       make-lambda
                                                       make-sequence
                                                       make-application
                                                       make-conditional
                                                       make-toplevel-define
                                                       make-toplevel-set
                                                       make-toplevel-ref
                                                       make-module-set
                                                       make-module-ref
                                                       make-lexical-set
                                                       make-lexical-ref
                                                       make-primitive-ref
                                                       make-const
                                                       make-void)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i467"
                                                      "i465"
                                                      "i463"
                                                      "i461"
                                                      "i459"
                                                      "i457"
                                                      "i455"
                                                      "i453"
                                                      "i451"
                                                      "i449"
                                                      "i447"
                                                      "i445"
                                                      "i443"
                                                      "i441"
                                                      "i439"
                                                      "i437"
                                                      "i435"
                                                      "i433"
                                                      "i431"
                                                      "i429"
                                                      "i427"
                                                      "i425"
                                                      "i423"
                                                      "i421"
                                                      "i419"
                                                      "i417"
                                                      "i415"
                                                      "i413"
                                                      "i411"
                                                      "i409"
                                                      "i407"
                                                      "i405"
                                                      "i403"
                                                      "i401"
                                                      "i399"
                                                      "i398"
                                                      "i396"
                                                      "i393"
                                                      "i392"
                                                      "i391"
                                                      "i389"
                                                      "i388"
                                                      "i386"
                                                      "i384"
                                                      "i382"
                                                      "i380"
                                                      "i378"
                                                      "i376"
                                                      "i374"
                                                      "i372"
                                                      "i369"
                                                      "i367"
                                                      "i366"
                                                      "i364"
                                                      "i362"
                                                      "i360"
                                                      "i358"
                                                      "i357"
                                                      "i356"
                                                      "i355"
                                                      "i353"
                                                      "i352"
                                                      "i349"
                                                      "i347"
                                                      "i345"
                                                      "i343"
                                                      "i341"
                                                      "i339"
                                                      "i337"
                                                      "i336"
                                                      "i335"
                                                      "i333"
                                                      "i331"
                                                      "i330"
                                                      "i327"
                                                      "i326"
                                                      "i324"
                                                      "i322"
                                                      "i320"
                                                      "i318"
                                                      "i316"
                                                      "i314"
                                                      "i312"
                                                      "i310"
                                                      "i308"
                                                      "i305"
                                                      "i303"
                                                      "i301"
                                                      "i299"
                                                      "i297"
                                                      "i295"
                                                      "i293"
                                                      "i291"
                                                      "i289"
                                                      "i287"
                                                      "i285"
                                                      "i283"
                                                      "i281"
                                                      "i279"
                                                      "i277"
                                                      "i275"
                                                      "i273"
                                                      "i271"
                                                      "i269"
                                                      "i267"
                                                      "i265"
                                                      "i263"
                                                      "i261"
                                                      "i260"
                                                      "i257"
                                                      "i255"
                                                      "i254"
                                                      "i253"
                                                      "i252"
                                                      "i251"
                                                      "i249"
                                                      "i247"
                                                      "i245"
                                                      "i242"
                                                      "i240"
                                                      "i238"
                                                      "i236"
                                                      "i234"
                                                      "i232"
                                                      "i230"
                                                      "i228"
                                                      "i226"
                                                      "i224"
                                                      "i222"
                                                      "i220"
                                                      "i218"
                                                      "i216"
                                                      "i214"
                                                      "i212"
                                                      "i210"
                                                      "i208"))
                                                   #(ribcage
                                                     (define-structure
                                                       define-expansion-accessors
                                                       define-expansion-constructors)
                                                     ((top) (top) (top))
                                                     ("i46" "i45" "i44")))
                                                  (hygiene guile))))
                                      (eq? (#{id-var-name 4332}#
                                             #{x 20313}#
                                             '(()))
                                           (#{id-var-name 4332}#
                                             '#(syntax-object
                                                expand
                                                ((top)
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i1754"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f when-list situations)
                                                   #((top) (top) (top))
                                                   #("i1748" "i1749" "i1750"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(e when-list w)
                                                   #((top) (top) (top))
                                                   #("i1745" "i1746" "i1747"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i467"
                                                    "i465"
                                                    "i463"
                                                    "i461"
                                                    "i459"
                                                    "i457"
                                                    "i455"
                                                    "i453"
                                                    "i451"
                                                    "i449"
                                                    "i447"
                                                    "i445"
                                                    "i443"
                                                    "i441"
                                                    "i439"
                                                    "i437"
                                                    "i435"
                                                    "i433"
                                                    "i431"
                                                    "i429"
                                                    "i427"
                                                    "i425"
                                                    "i423"
                                                    "i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i398"
                                                    "i396"
                                                    "i393"
                                                    "i392"
                                                    "i391"
                                                    "i389"
                                                    "i388"
                                                    "i386"
                                                    "i384"
                                                    "i382"
                                                    "i380"
                                                    "i378"
                                                    "i376"
                                                    "i374"
                                                    "i372"
                                                    "i369"
                                                    "i367"
                                                    "i366"
                                                    "i364"
                                                    "i362"
                                                    "i360"
                                                    "i358"
                                                    "i357"
                                                    "i356"
                                                    "i355"
                                                    "i353"
                                                    "i352"
                                                    "i349"
                                                    "i347"
                                                    "i345"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i336"
                                                    "i335"
                                                    "i333"
                                                    "i331"
                                                    "i330"
                                                    "i327"
                                                    "i326"
                                                    "i324"
                                                    "i322"
                                                    "i320"
                                                    "i318"
                                                    "i316"
                                                    "i314"
                                                    "i312"
                                                    "i310"
                                                    "i308"
                                                    "i305"
                                                    "i303"
                                                    "i301"
                                                    "i299"
                                                    "i297"
                                                    "i295"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i287"
                                                    "i285"
                                                    "i283"
                                                    "i281"
                                                    "i279"
                                                    "i277"
                                                    "i275"
                                                    "i273"
                                                    "i271"
                                                    "i269"
                                                    "i267"
                                                    "i265"
                                                    "i263"
                                                    "i261"
                                                    "i260"
                                                    "i257"
                                                    "i255"
                                                    "i254"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i249"
                                                    "i247"
                                                    "i245"
                                                    "i242"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i218"
                                                    "i216"
                                                    "i214"
                                                    "i212"
                                                    "i210"
                                                    "i208"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i46" "i45" "i44")))
                                                (hygiene guile))
                                             '(())))
                                      #f)
                                  'expand
                                  (syntax-violation
                                    'eval-when
                                    "invalid situation"
                                    #{e 20305}#
                                    (#{wrap 4338}#
                                      #{x 20313}#
                                      #{w 20307}#
                                      #f)))))))
                        #{situations 20312}#))))))
         (#{f 20308}# #{when-list 20306}# '()))))
   (#{syntax-type 4344}#
     (lambda (#{e 20516}#
              #{r 20517}#
              #{w 20518}#
              #{s 20519}#
              #{rib 20520}#
              #{mod 20521}#
              #{for-car? 20522}#)
       (if (symbol? #{e 20516}#)
         (let ((#{n 20523}#
                 (#{id-var-name 4332}# #{e 20516}# #{w 20518}#)))
           (let ((#{b 20524}#
                   (let ((#{t 21099}# (assq #{n 20523}# #{r 20517}#)))
                     (if #{t 21099}#
                       (cdr #{t 21099}#)
                       (if (symbol? #{n 20523}#)
                         (let ((#{t 21104}#
                                 (begin
                                   (if (if (not #{mod 20521}#)
                                         (current-module)
                                         #f)
                                     (warn "module system is booted, we should have a module"
                                           #{n 20523}#))
                                   (let ((#{v 21141}#
                                           (module-variable
                                             (if #{mod 20521}#
                                               (resolve-module
                                                 (cdr #{mod 20521}#))
                                               (current-module))
                                             #{n 20523}#)))
                                     (if #{v 21141}#
                                       (if (variable-bound? #{v 21141}#)
                                         (let ((#{val 21150}#
                                                 (variable-ref #{v 21141}#)))
                                           (if (macro? #{val 21150}#)
                                             (if (macro-type #{val 21150}#)
                                               (cons (macro-type #{val 21150}#)
                                                     (macro-binding
                                                       #{val 21150}#))
                                               #f)
                                             #f))
                                         #f)
                                       #f)))))
                           (if #{t 21104}# #{t 21104}# '(global)))
                         '(displaced-lexical))))))
             (let ((#{type 20525}# (car #{b 20524}#)))
               (if (let ((#{t 20559}# #{type 20525}#))
                     (eqv? #{t 20559}# 'lexical))
                 (values
                   #{type 20525}#
                   (cdr #{b 20524}#)
                   #{e 20516}#
                   #{w 20518}#
                   #{s 20519}#
                   #{mod 20521}#)
                 (if (let ((#{t 20716}# #{type 20525}#))
                       (eqv? #{t 20716}# 'global))
                   (values
                     #{type 20525}#
                     #{n 20523}#
                     #{e 20516}#
                     #{w 20518}#
                     #{s 20519}#
                     #{mod 20521}#)
                   (if (let ((#{t 20842}# #{type 20525}#))
                         (eqv? #{t 20842}# 'macro))
                     (if #{for-car? 20522}#
                       (values
                         #{type 20525}#
                         (cdr #{b 20524}#)
                         #{e 20516}#
                         #{w 20518}#
                         #{s 20519}#
                         #{mod 20521}#)
                       (#{syntax-type 4344}#
                         (#{chi-macro 4348}#
                           (cdr #{b 20524}#)
                           #{e 20516}#
                           #{r 20517}#
                           #{w 20518}#
                           #{s 20519}#
                           #{rib 20520}#
                           #{mod 20521}#)
                         #{r 20517}#
                         '(())
                         #{s 20519}#
                         #{rib 20520}#
                         #{mod 20521}#
                         #f))
                     (values
                       #{type 20525}#
                       (cdr #{b 20524}#)
                       #{e 20516}#
                       #{w 20518}#
                       #{s 20519}#
                       #{mod 20521}#)))))))
         (if (pair? #{e 20516}#)
           (let ((#{first 21161}# (car #{e 20516}#)))
             (call-with-values
               (lambda ()
                 (#{syntax-type 4344}#
                   #{first 21161}#
                   #{r 20517}#
                   #{w 20518}#
                   #{s 20519}#
                   #{rib 20520}#
                   #{mod 20521}#
                   #t))
               (lambda (#{ftype 21163}#
                        #{fval 21164}#
                        #{fe 21165}#
                        #{fw 21166}#
                        #{fs 21167}#
                        #{fmod 21168}#)
                 (if (eqv? #{ftype 21163}# 'lexical)
                   (values
                     'lexical-call
                     #{fval 21164}#
                     #{e 20516}#
                     #{w 20518}#
                     #{s 20519}#
                     #{mod 20521}#)
                   (if (eqv? #{ftype 21163}# 'global)
                     (values
                       'global-call
                       (vector
                         'syntax-object
                         #{fval 21164}#
                         #{w 20518}#
                         #{fmod 21168}#)
                       #{e 20516}#
                       #{w 20518}#
                       #{s 20519}#
                       #{mod 20521}#)
                     (if (eqv? #{ftype 21163}# 'macro)
                       (#{syntax-type 4344}#
                         (#{chi-macro 4348}#
                           #{fval 21164}#
                           #{e 20516}#
                           #{r 20517}#
                           #{w 20518}#
                           #{s 20519}#
                           #{rib 20520}#
                           #{mod 20521}#)
                         #{r 20517}#
                         '(())
                         #{s 20519}#
                         #{rib 20520}#
                         #{mod 20521}#
                         #{for-car? 20522}#)
                       (if (eqv? #{ftype 21163}# 'module-ref)
                         (call-with-values
                           (lambda ()
                             (#{fval 21164}#
                               #{e 20516}#
                               #{r 20517}#
                               #{w 20518}#))
                           (lambda (#{e 21189}#
                                    #{r 21190}#
                                    #{w 21191}#
                                    #{s 21192}#
                                    #{mod 21193}#)
                             (#{syntax-type 4344}#
                               #{e 21189}#
                               #{r 21190}#
                               #{w 21191}#
                               #{s 21192}#
                               #{rib 20520}#
                               #{mod 21193}#
                               #{for-car? 20522}#)))
                         (if (eqv? #{ftype 21163}# 'core)
                           (values
                             'core-form
                             #{fval 21164}#
                             #{e 20516}#
                             #{w 20518}#
                             #{s 20519}#
                             #{mod 20521}#)
                           (if (eqv? #{ftype 21163}# 'local-syntax)
                             (values
                               'local-syntax-form
                               #{fval 21164}#
                               #{e 20516}#
                               #{w 20518}#
                               #{s 20519}#
                               #{mod 20521}#)
                             (if (eqv? #{ftype 21163}# 'begin)
                               (values
                                 'begin-form
                                 #f
                                 #{e 20516}#
                                 #{w 20518}#
                                 #{s 20519}#
                                 #{mod 20521}#)
                               (if (eqv? #{ftype 21163}# 'eval-when)
                                 (values
                                   'eval-when-form
                                   #f
                                   #{e 20516}#
                                   #{w 20518}#
                                   #{s 20519}#
                                   #{mod 20521}#)
                                 (if (eqv? #{ftype 21163}# 'define)
                                   (let ((#{tmp 21210}#
                                           ($sc-dispatch
                                             #{e 20516}#
                                             '(_ any any))))
                                     (if (if #{tmp 21210}#
                                           (@apply
                                             (lambda (#{name 21214}#
                                                      #{val 21215}#)
                                               (if (symbol? #{name 21214}#)
                                                 #t
                                                 (if (if (vector?
                                                           #{name 21214}#)
                                                       (if (= (vector-length
                                                                #{name 21214}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{name 21214}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (symbol?
                                                     (vector-ref
                                                       #{name 21214}#
                                                       1))
                                                   #f)))
                                             #{tmp 21210}#)
                                           #f)
                                       (@apply
                                         (lambda (#{name 21242}# #{val 21243}#)
                                           (values
                                             'define-form
                                             #{name 21242}#
                                             #{val 21243}#
                                             #{w 20518}#
                                             #{s 20519}#
                                             #{mod 20521}#))
                                         #{tmp 21210}#)
                                       (let ((#{tmp 21244}#
                                               ($sc-dispatch
                                                 #{e 20516}#
                                                 '(_ (any . any)
                                                     any
                                                     .
                                                     each-any))))
                                         (if (if #{tmp 21244}#
                                               (@apply
                                                 (lambda (#{name 21248}#
                                                          #{args 21249}#
                                                          #{e1 21250}#
                                                          #{e2 21251}#)
                                                   (if (if (symbol?
                                                             #{name 21248}#)
                                                         #t
                                                         (if (if (vector?
                                                                   #{name 21248}#)
                                                               (if (= (vector-length
                                                                        #{name 21248}#)
                                                                      4)
                                                                 (eq? (vector-ref
                                                                        #{name 21248}#
                                                                        0)
                                                                      'syntax-object)
                                                                 #f)
                                                               #f)
                                                           (symbol?
                                                             (vector-ref
                                                               #{name 21248}#
                                                               1))
                                                           #f))
                                                     (#{valid-bound-ids? 4335}#
                                                       (letrec*
                                                         ((#{lvl 21400}#
                                                            (lambda (#{vars 21402}#
                                                                     #{ls 21403}#
                                                                     #{w 21404}#)
                                                              (if (pair? #{vars 21402}#)
                                                                (#{lvl 21400}#
                                                                  (cdr #{vars 21402}#)
                                                                  (cons (#{wrap 4338}#
                                                                          (car #{vars 21402}#)
                                                                          #{w 21404}#
                                                                          #f)
                                                                        #{ls 21403}#)
                                                                  #{w 21404}#)
                                                                (if (if (symbol?
                                                                          #{vars 21402}#)
                                                                      #t
                                                                      (if (if (vector?
                                                                                #{vars 21402}#)
                                                                            (if (= (vector-length
                                                                                     #{vars 21402}#)
                                                                                   4)
                                                                              (eq? (vector-ref
                                                                                     #{vars 21402}#
                                                                                     0)
                                                                                   'syntax-object)
                                                                              #f)
                                                                            #f)
                                                                        (symbol?
                                                                          (vector-ref
                                                                            #{vars 21402}#
                                                                            1))
                                                                        #f))
                                                                  (cons (#{wrap 4338}#
                                                                          #{vars 21402}#
                                                                          #{w 21404}#
                                                                          #f)
                                                                        #{ls 21403}#)
                                                                  (if (null? #{vars 21402}#)
                                                                    #{ls 21403}#
                                                                    (if (if (vector?
                                                                              #{vars 21402}#)
                                                                          (if (= (vector-length
                                                                                   #{vars 21402}#)
                                                                                 4)
                                                                            (eq? (vector-ref
                                                                                   #{vars 21402}#
                                                                                   0)
                                                                                 'syntax-object)
                                                                            #f)
                                                                          #f)
                                                                      (#{lvl 21400}#
                                                                        (vector-ref
                                                                          #{vars 21402}#
                                                                          1)
                                                                        #{ls 21403}#
                                                                        (#{join-wraps 4329}#
                                                                          #{w 21404}#
                                                                          (vector-ref
                                                                            #{vars 21402}#
                                                                            2)))
                                                                      (cons #{vars 21402}#
                                                                            #{ls 21403}#))))))))
                                                         (#{lvl 21400}#
                                                           #{args 21249}#
                                                           '()
                                                           '(()))))
                                                     #f))
                                                 #{tmp 21244}#)
                                               #f)
                                           (@apply
                                             (lambda (#{name 21448}#
                                                      #{args 21449}#
                                                      #{e1 21450}#
                                                      #{e2 21451}#)
                                               (values
                                                 'define-form
                                                 (#{wrap 4338}#
                                                   #{name 21448}#
                                                   #{w 20518}#
                                                   #{mod 20521}#)
                                                 (let ((#{e 21457}#
                                                         (cons '#(syntax-object
                                                                  lambda
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(name
                                                                       args
                                                                       e1
                                                                       e2)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i1855"
                                                                       "i1856"
                                                                       "i1857"
                                                                       "i1858"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(ftype
                                                                       fval
                                                                       fe
                                                                       fw
                                                                       fs
                                                                       fmod)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i1808"
                                                                       "i1809"
                                                                       "i1810"
                                                                       "i1811"
                                                                       "i1812"
                                                                       "i1813"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(first)
                                                                     #((top))
                                                                     #("i1800"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(e
                                                                       r
                                                                       w
                                                                       s
                                                                       rib
                                                                       mod
                                                                       for-car?)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i1772"
                                                                       "i1773"
                                                                       "i1774"
                                                                       "i1775"
                                                                       "i1776"
                                                                       "i1777"
                                                                       "i1778"))
                                                                   #(ribcage
                                                                     (lambda-var-list
                                                                       gen-var
                                                                       strip
                                                                       chi-lambda-case
                                                                       lambda*-formals
                                                                       chi-simple-lambda
                                                                       lambda-formals
                                                                       ellipsis?
                                                                       chi-void
                                                                       eval-local-transformer
                                                                       chi-local-syntax
                                                                       chi-body
                                                                       chi-macro
                                                                       chi-application
                                                                       chi-expr
                                                                       chi
                                                                       syntax-type
                                                                       chi-when-list
                                                                       chi-install-global
                                                                       chi-top-sequence
                                                                       chi-sequence
                                                                       source-wrap
                                                                       wrap
                                                                       bound-id-member?
                                                                       distinct-bound-ids?
                                                                       valid-bound-ids?
                                                                       bound-id=?
                                                                       free-id=?
                                                                       id-var-name
                                                                       same-marks?
                                                                       join-marks
                                                                       join-wraps
                                                                       smart-append
                                                                       make-binding-wrap
                                                                       extend-ribcage!
                                                                       make-empty-ribcage
                                                                       new-mark
                                                                       anti-mark
                                                                       the-anti-mark
                                                                       top-marked?
                                                                       top-wrap
                                                                       empty-wrap
                                                                       set-ribcage-labels!
                                                                       set-ribcage-marks!
                                                                       set-ribcage-symnames!
                                                                       ribcage-labels
                                                                       ribcage-marks
                                                                       ribcage-symnames
                                                                       ribcage?
                                                                       make-ribcage
                                                                       gen-labels
                                                                       gen-label
                                                                       make-rename
                                                                       rename-marks
                                                                       rename-new
                                                                       rename-old
                                                                       subst-rename?
                                                                       wrap-subst
                                                                       wrap-marks
                                                                       make-wrap
                                                                       id-sym-name&marks
                                                                       id-sym-name
                                                                       id?
                                                                       nonsymbol-id?
                                                                       global-extend
                                                                       lookup
                                                                       macros-only-env
                                                                       extend-var-env
                                                                       extend-env
                                                                       null-env
                                                                       binding-value
                                                                       binding-type
                                                                       make-binding
                                                                       arg-check
                                                                       source-annotation
                                                                       no-source
                                                                       set-syntax-object-module!
                                                                       set-syntax-object-wrap!
                                                                       set-syntax-object-expression!
                                                                       syntax-object-module
                                                                       syntax-object-wrap
                                                                       syntax-object-expression
                                                                       syntax-object?
                                                                       make-syntax-object
                                                                       build-lexical-var
                                                                       build-letrec
                                                                       build-named-let
                                                                       build-let
                                                                       build-sequence
                                                                       build-data
                                                                       build-primref
                                                                       build-lambda-case
                                                                       build-case-lambda
                                                                       build-simple-lambda
                                                                       build-global-definition
                                                                       build-global-assignment
                                                                       build-global-reference
                                                                       analyze-variable
                                                                       build-lexical-assignment
                                                                       build-lexical-reference
                                                                       build-dynlet
                                                                       build-conditional
                                                                       build-application
                                                                       build-void
                                                                       maybe-name-value!
                                                                       decorate-source
                                                                       get-global-definition-hook
                                                                       put-global-definition-hook
                                                                       gensym-hook
                                                                       local-eval-hook
                                                                       top-level-eval-hook
                                                                       fx<
                                                                       fx=
                                                                       fx-
                                                                       fx+
                                                                       set-lambda-meta!
                                                                       lambda-meta
                                                                       lambda?
                                                                       make-dynlet
                                                                       make-letrec
                                                                       make-let
                                                                       make-lambda-case
                                                                       make-lambda
                                                                       make-sequence
                                                                       make-application
                                                                       make-conditional
                                                                       make-toplevel-define
                                                                       make-toplevel-set
                                                                       make-toplevel-ref
                                                                       make-module-set
                                                                       make-module-ref
                                                                       make-lexical-set
                                                                       make-lexical-ref
                                                                       make-primitive-ref
                                                                       make-const
                                                                       make-void)
                                                                     ((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                     ("i467"
                                                                      "i465"
                                                                      "i463"
                                                                      "i461"
                                                                      "i459"
                                                                      "i457"
                                                                      "i455"
                                                                      "i453"
                                                                      "i451"
                                                                      "i449"
                                                                      "i447"
                                                                      "i445"
                                                                      "i443"
                                                                      "i441"
                                                                      "i439"
                                                                      "i437"
                                                                      "i435"
                                                                      "i433"
                                                                      "i431"
                                                                      "i429"
                                                                      "i427"
                                                                      "i425"
                                                                      "i423"
                                                                      "i421"
                                                                      "i419"
                                                                      "i417"
                                                                      "i415"
                                                                      "i413"
                                                                      "i411"
                                                                      "i409"
                                                                      "i407"
                                                                      "i405"
                                                                      "i403"
                                                                      "i401"
                                                                      "i399"
                                                                      "i398"
                                                                      "i396"
                                                                      "i393"
                                                                      "i392"
                                                                      "i391"
                                                                      "i389"
                                                                      "i388"
                                                                      "i386"
                                                                      "i384"
                                                                      "i382"
                                                                      "i380"
                                                                      "i378"
                                                                      "i376"
                                                                      "i374"
                                                                      "i372"
                                                                      "i369"
                                                                      "i367"
                                                                      "i366"
                                                                      "i364"
                                                                      "i362"
                                                                      "i360"
                                                                      "i358"
                                                                      "i357"
                                                                      "i356"
                                                                      "i355"
                                                                      "i353"
                                                                      "i352"
                                                                      "i349"
                                                                      "i347"
                                                                      "i345"
                                                                      "i343"
                                                                      "i341"
                                                                      "i339"
                                                                      "i337"
                                                                      "i336"
                                                                      "i335"
                                                                      "i333"
                                                                      "i331"
                                                                      "i330"
                                                                      "i327"
                                                                      "i326"
                                                                      "i324"
                                                                      "i322"
                                                                      "i320"
                                                                      "i318"
                                                                      "i316"
                                                                      "i314"
                                                                      "i312"
                                                                      "i310"
                                                                      "i308"
                                                                      "i305"
                                                                      "i303"
                                                                      "i301"
                                                                      "i299"
                                                                      "i297"
                                                                      "i295"
                                                                      "i293"
                                                                      "i291"
                                                                      "i289"
                                                                      "i287"
                                                                      "i285"
                                                                      "i283"
                                                                      "i281"
                                                                      "i279"
                                                                      "i277"
                                                                      "i275"
                                                                      "i273"
                                                                      "i271"
                                                                      "i269"
                                                                      "i267"
                                                                      "i265"
                                                                      "i263"
                                                                      "i261"
                                                                      "i260"
                                                                      "i257"
                                                                      "i255"
                                                                      "i254"
                                                                      "i253"
                                                                      "i252"
                                                                      "i251"
                                                                      "i249"
                                                                      "i247"
                                                                      "i245"
                                                                      "i242"
                                                                      "i240"
                                                                      "i238"
                                                                      "i236"
                                                                      "i234"
                                                                      "i232"
                                                                      "i230"
                                                                      "i228"
                                                                      "i226"
                                                                      "i224"
                                                                      "i222"
                                                                      "i220"
                                                                      "i218"
                                                                      "i216"
                                                                      "i214"
                                                                      "i212"
                                                                      "i210"
                                                                      "i208"))
                                                                   #(ribcage
                                                                     (define-structure
                                                                       define-expansion-accessors
                                                                       define-expansion-constructors)
                                                                     ((top)
                                                                      (top)
                                                                      (top))
                                                                     ("i46"
                                                                      "i45"
                                                                      "i44")))
                                                                  (hygiene
                                                                    guile))
                                                               (#{wrap 4338}#
                                                                 (cons #{args 21449}#
                                                                       (cons #{e1 21450}#
                                                                             #{e2 21451}#))
                                                                 #{w 20518}#
                                                                 #{mod 20521}#))))
                                                   (begin
                                                     (if (if (pair? #{e 21457}#)
                                                           #{s 20519}#
                                                           #f)
                                                       (set-source-properties!
                                                         #{e 21457}#
                                                         #{s 20519}#))
                                                     #{e 21457}#))
                                                 '(())
                                                 #{s 20519}#
                                                 #{mod 20521}#))
                                             #{tmp 21244}#)
                                           (let ((#{tmp 21464}#
                                                   ($sc-dispatch
                                                     #{e 20516}#
                                                     '(_ any))))
                                             (if (if #{tmp 21464}#
                                                   (@apply
                                                     (lambda (#{name 21468}#)
                                                       (if (symbol?
                                                             #{name 21468}#)
                                                         #t
                                                         (if (if (vector?
                                                                   #{name 21468}#)
                                                               (if (= (vector-length
                                                                        #{name 21468}#)
                                                                      4)
                                                                 (eq? (vector-ref
                                                                        #{name 21468}#
                                                                        0)
                                                                      'syntax-object)
                                                                 #f)
                                                               #f)
                                                           (symbol?
                                                             (vector-ref
                                                               #{name 21468}#
                                                               1))
                                                           #f)))
                                                     #{tmp 21464}#)
                                                   #f)
                                               (@apply
                                                 (lambda (#{name 21495}#)
                                                   (values
                                                     'define-form
                                                     (#{wrap 4338}#
                                                       #{name 21495}#
                                                       #{w 20518}#
                                                       #{mod 20521}#)
                                                     '(#(syntax-object
                                                         if
                                                         ((top)
                                                          #(ribcage
                                                            #(name)
                                                            #((top))
                                                            #("i1868"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(ftype
                                                              fval
                                                              fe
                                                              fw
                                                              fs
                                                              fmod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1808"
                                                              "i1809"
                                                              "i1810"
                                                              "i1811"
                                                              "i1812"
                                                              "i1813"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(first)
                                                            #((top))
                                                            #("i1800"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e
                                                              r
                                                              w
                                                              s
                                                              rib
                                                              mod
                                                              for-car?)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1772"
                                                              "i1773"
                                                              "i1774"
                                                              "i1775"
                                                              "i1776"
                                                              "i1777"
                                                              "i1778"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i467"
                                                             "i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i398"
                                                             "i396"
                                                             "i393"
                                                             "i392"
                                                             "i391"
                                                             "i389"
                                                             "i388"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i369"
                                                             "i367"
                                                             "i366"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i353"
                                                             "i352"
                                                             "i349"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i336"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i330"
                                                             "i327"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i305"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i46"
                                                             "i45"
                                                             "i44")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         #f
                                                         ((top)
                                                          #(ribcage
                                                            #(name)
                                                            #((top))
                                                            #("i1868"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(ftype
                                                              fval
                                                              fe
                                                              fw
                                                              fs
                                                              fmod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1808"
                                                              "i1809"
                                                              "i1810"
                                                              "i1811"
                                                              "i1812"
                                                              "i1813"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(first)
                                                            #((top))
                                                            #("i1800"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e
                                                              r
                                                              w
                                                              s
                                                              rib
                                                              mod
                                                              for-car?)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1772"
                                                              "i1773"
                                                              "i1774"
                                                              "i1775"
                                                              "i1776"
                                                              "i1777"
                                                              "i1778"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i467"
                                                             "i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i398"
                                                             "i396"
                                                             "i393"
                                                             "i392"
                                                             "i391"
                                                             "i389"
                                                             "i388"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i369"
                                                             "i367"
                                                             "i366"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i353"
                                                             "i352"
                                                             "i349"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i336"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i330"
                                                             "i327"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i305"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i46"
                                                             "i45"
                                                             "i44")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         #f
                                                         ((top)
                                                          #(ribcage
                                                            #(name)
                                                            #((top))
                                                            #("i1868"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(ftype
                                                              fval
                                                              fe
                                                              fw
                                                              fs
                                                              fmod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1808"
                                                              "i1809"
                                                              "i1810"
                                                              "i1811"
                                                              "i1812"
                                                              "i1813"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(first)
                                                            #((top))
                                                            #("i1800"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(e
                                                              r
                                                              w
                                                              s
                                                              rib
                                                              mod
                                                              for-car?)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i1772"
                                                              "i1773"
                                                              "i1774"
                                                              "i1775"
                                                              "i1776"
                                                              "i1777"
                                                              "i1778"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i467"
                                                             "i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i398"
                                                             "i396"
                                                             "i393"
                                                             "i392"
                                                             "i391"
                                                             "i389"
                                                             "i388"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i369"
                                                             "i367"
                                                             "i366"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i353"
                                                             "i352"
                                                             "i349"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i336"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i330"
                                                             "i327"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i305"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i46"
                                                             "i45"
                                                             "i44")))
                                                         (hygiene guile)))
                                                     '(())
                                                     #{s 20519}#
                                                     #{mod 20521}#))
                                                 #{tmp 21464}#)
                                               (syntax-violation
                                                 #f
                                                 "source expression failed to match any pattern"
                                                 #{e 20516}#)))))))
                                   (if (eqv? #{ftype 21163}# 'define-syntax)
                                     (let ((#{tmp 21514}#
                                             ($sc-dispatch
                                               #{e 20516}#
                                               '(_ any any))))
                                       (if (if #{tmp 21514}#
                                             (@apply
                                               (lambda (#{name 21518}#
                                                        #{val 21519}#)
                                                 (if (symbol? #{name 21518}#)
                                                   #t
                                                   (if (if (vector?
                                                             #{name 21518}#)
                                                         (if (= (vector-length
                                                                  #{name 21518}#)
                                                                4)
                                                           (eq? (vector-ref
                                                                  #{name 21518}#
                                                                  0)
                                                                'syntax-object)
                                                           #f)
                                                         #f)
                                                     (symbol?
                                                       (vector-ref
                                                         #{name 21518}#
                                                         1))
                                                     #f)))
                                               #{tmp 21514}#)
                                             #f)
                                         (@apply
                                           (lambda (#{name 21546}#
                                                    #{val 21547}#)
                                             (values
                                               'define-syntax-form
                                               #{name 21546}#
                                               #{val 21547}#
                                               #{w 20518}#
                                               #{s 20519}#
                                               #{mod 20521}#))
                                           #{tmp 21514}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{e 20516}#)))
                                     (values
                                       'call
                                       #f
                                       #{e 20516}#
                                       #{w 20518}#
                                       #{s 20519}#
                                       #{mod 20521}#))))))))))))))
           (if (if (vector? #{e 20516}#)
                 (if (= (vector-length #{e 20516}#) 4)
                   (eq? (vector-ref #{e 20516}# 0) 'syntax-object)
                   #f)
                 #f)
             (#{syntax-type 4344}#
               (vector-ref #{e 20516}# 1)
               #{r 20517}#
               (#{join-wraps 4329}#
                 #{w 20518}#
                 (vector-ref #{e 20516}# 2))
               (let ((#{t 21574}#
                       (#{source-annotation 4306}# #{e 20516}#)))
                 (if #{t 21574}# #{t 21574}# #{s 20519}#))
               #{rib 20520}#
               (let ((#{t 21834}# (vector-ref #{e 20516}# 3)))
                 (if #{t 21834}# #{t 21834}# #{mod 20521}#))
               #{for-car? 20522}#)
             (if (self-evaluating? #{e 20516}#)
               (values
                 'constant
                 #f
                 #{e 20516}#
                 #{w 20518}#
                 #{s 20519}#
                 #{mod 20521}#)
               (values
                 'other
                 #f
                 #{e 20516}#
                 #{w 20518}#
                 #{s 20519}#
                 #{mod 20521}#)))))))
   (#{chi 4345}#
     (lambda (#{e 21843}#
              #{r 21844}#
              #{w 21845}#
              #{mod 21846}#)
       (call-with-values
         (lambda ()
           (#{syntax-type 4344}#
             #{e 21843}#
             #{r 21844}#
             #{w 21845}#
             (#{source-annotation 4306}# #{e 21843}#)
             #f
             #{mod 21846}#
             #f))
         (lambda (#{type 22020}#
                  #{value 22021}#
                  #{e 22022}#
                  #{w 22023}#
                  #{s 22024}#
                  #{mod 22025}#)
           (#{chi-expr 4346}#
             #{type 22020}#
             #{value 22021}#
             #{e 22022}#
             #{r 21844}#
             #{w 22023}#
             #{s 22024}#
             #{mod 22025}#)))))
   (#{chi-expr 4346}#
     (lambda (#{type 22028}#
              #{value 22029}#
              #{e 22030}#
              #{r 22031}#
              #{w 22032}#
              #{s 22033}#
              #{mod 22034}#)
       (if (eqv? #{type 22028}# 'lexical)
         (make-struct/no-tail
           (vector-ref %expanded-vtables 3)
           #{s 22033}#
           #{e 22030}#
           #{value 22029}#)
         (if (if (eqv? #{type 22028}# 'core)
               #t
               (eqv? #{type 22028}# 'core-form))
           (#{value 22029}#
             #{e 22030}#
             #{r 22031}#
             #{w 22032}#
             #{s 22033}#
             #{mod 22034}#)
           (if (eqv? #{type 22028}# 'module-ref)
             (call-with-values
               (lambda ()
                 (#{value 22029}#
                   #{e 22030}#
                   #{r 22031}#
                   #{w 22032}#))
               (lambda (#{e 22060}#
                        #{r 22061}#
                        #{w 22062}#
                        #{s 22063}#
                        #{mod 22064}#)
                 (#{chi 4345}#
                   #{e 22060}#
                   #{r 22061}#
                   #{w 22062}#
                   #{mod 22064}#)))
             (if (eqv? #{type 22028}# 'lexical-call)
               (#{chi-application 4347}#
                 (let ((#{id 22144}# (car #{e 22030}#)))
                   (#{build-lexical-reference 4283}#
                     'fun
                     (#{source-annotation 4306}# #{id 22144}#)
                     (if (if (vector? #{id 22144}#)
                           (if (= (vector-length #{id 22144}#) 4)
                             (eq? (vector-ref #{id 22144}# 0) 'syntax-object)
                             #f)
                           #f)
                       (syntax->datum #{id 22144}#)
                       #{id 22144}#)
                     #{value 22029}#))
                 #{e 22030}#
                 #{r 22031}#
                 #{w 22032}#
                 #{s 22033}#
                 #{mod 22034}#)
               (if (eqv? #{type 22028}# 'global-call)
                 (#{chi-application 4347}#
                   (#{build-global-reference 4286}#
                     (#{source-annotation 4306}# (car #{e 22030}#))
                     (if (if (vector? #{value 22029}#)
                           (if (= (vector-length #{value 22029}#) 4)
                             (eq? (vector-ref #{value 22029}# 0)
                                  'syntax-object)
                             #f)
                           #f)
                       (vector-ref #{value 22029}# 1)
                       #{value 22029}#)
                     (if (if (vector? #{value 22029}#)
                           (if (= (vector-length #{value 22029}#) 4)
                             (eq? (vector-ref #{value 22029}# 0)
                                  'syntax-object)
                             #f)
                           #f)
                       (vector-ref #{value 22029}# 3)
                       #{mod 22034}#))
                   #{e 22030}#
                   #{r 22031}#
                   #{w 22032}#
                   #{s 22033}#
                   #{mod 22034}#)
                 (if (eqv? #{type 22028}# 'constant)
                   (let ((#{exp 22680}#
                           (#{strip 4358}#
                             (#{wrap 4338}#
                               (begin
                                 (if (if (pair? #{e 22030}#) #{s 22033}# #f)
                                   (set-source-properties!
                                     #{e 22030}#
                                     #{s 22033}#))
                                 #{e 22030}#)
                               #{w 22032}#
                               #{mod 22034}#)
                             '(()))))
                     (make-struct/no-tail
                       (vector-ref %expanded-vtables 1)
                       #{s 22033}#
                       #{exp 22680}#))
                   (if (eqv? #{type 22028}# 'global)
                     (#{analyze-variable 4285}#
                       #{mod 22034}#
                       #{value 22029}#
                       (lambda (#{mod 22716}# #{var 22717}# #{public? 22718}#)
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 5)
                           #{s 22033}#
                           #{mod 22716}#
                           #{var 22717}#
                           #{public? 22718}#))
                       (lambda (#{var 22727}#)
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 7)
                           #{s 22033}#
                           #{var 22727}#)))
                     (if (eqv? #{type 22028}# 'call)
                       (#{chi-application 4347}#
                         (#{chi 4345}#
                           (car #{e 22030}#)
                           #{r 22031}#
                           #{w 22032}#
                           #{mod 22034}#)
                         #{e 22030}#
                         #{r 22031}#
                         #{w 22032}#
                         #{s 22033}#
                         #{mod 22034}#)
                       (if (eqv? #{type 22028}# 'begin-form)
                         (let ((#{tmp 22807}#
                                 ($sc-dispatch
                                   #{e 22030}#
                                   '(_ any . each-any))))
                           (if #{tmp 22807}#
                             (@apply
                               (lambda (#{e1 22811}# #{e2 22812}#)
                                 (#{chi-sequence 4340}#
                                   (cons #{e1 22811}# #{e2 22812}#)
                                   #{r 22031}#
                                   #{w 22032}#
                                   #{s 22033}#
                                   #{mod 22034}#))
                               #{tmp 22807}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{e 22030}#)))
                         (if (eqv? #{type 22028}# 'local-syntax-form)
                           (#{chi-local-syntax 4350}#
                             #{value 22029}#
                             #{e 22030}#
                             #{r 22031}#
                             #{w 22032}#
                             #{s 22033}#
                             #{mod 22034}#
                             #{chi-sequence 4340}#)
                           (if (eqv? #{type 22028}# 'eval-when-form)
                             (let ((#{tmp 22978}#
                                     ($sc-dispatch
                                       #{e 22030}#
                                       '(_ each-any any . each-any))))
                               (if #{tmp 22978}#
                                 (@apply
                                   (lambda (#{x 22982}#
                                            #{e1 22983}#
                                            #{e2 22984}#)
                                     (let ((#{when-list 22985}#
                                             (#{chi-when-list 4343}#
                                               #{e 22030}#
                                               #{x 22982}#
                                               #{w 22032}#)))
                                       (if (memq 'eval #{when-list 22985}#)
                                         (#{chi-sequence 4340}#
                                           (cons #{e1 22983}# #{e2 22984}#)
                                           #{r 22031}#
                                           #{w 22032}#
                                           #{s 22033}#
                                           #{mod 22034}#)
                                         (make-struct/no-tail
                                           (vector-ref %expanded-vtables 0)
                                           #f))))
                                   #{tmp 22978}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{e 22030}#)))
                             (if (if (eqv? #{type 22028}# 'define-form)
                                   #t
                                   (eqv? #{type 22028}# 'define-syntax-form))
                               (syntax-violation
                                 #f
                                 "definition in expression context"
                                 #{e 22030}#
                                 (#{wrap 4338}#
                                   #{value 22029}#
                                   #{w 22032}#
                                   #{mod 22034}#))
                               (if (eqv? #{type 22028}# 'syntax)
                                 (syntax-violation
                                   #f
                                   "reference to pattern variable outside syntax form"
                                   (#{wrap 4338}#
                                     (begin
                                       (if (if (pair? #{e 22030}#)
                                             #{s 22033}#
                                             #f)
                                         (set-source-properties!
                                           #{e 22030}#
                                           #{s 22033}#))
                                       #{e 22030}#)
                                     #{w 22032}#
                                     #{mod 22034}#))
                                 (if (eqv? #{type 22028}# 'displaced-lexical)
                                   (syntax-violation
                                     #f
                                     "reference to identifier outside its scope"
                                     (#{wrap 4338}#
                                       (begin
                                         (if (if (pair? #{e 22030}#)
                                               #{s 22033}#
                                               #f)
                                           (set-source-properties!
                                             #{e 22030}#
                                             #{s 22033}#))
                                         #{e 22030}#)
                                       #{w 22032}#
                                       #{mod 22034}#))
                                   (syntax-violation
                                     #f
                                     "unexpected syntax"
                                     (#{wrap 4338}#
                                       (begin
                                         (if (if (pair? #{e 22030}#)
                                               #{s 22033}#
                                               #f)
                                           (set-source-properties!
                                             #{e 22030}#
                                             #{s 22033}#))
                                         #{e 22030}#)
                                       #{w 22032}#
                                       #{mod 22034}#))))))))))))))))))
   (#{chi-application 4347}#
     (lambda (#{x 23174}#
              #{e 23175}#
              #{r 23176}#
              #{w 23177}#
              #{s 23178}#
              #{mod 23179}#)
       (let ((#{tmp 23181}#
               ($sc-dispatch #{e 23175}# '(any . each-any))))
         (if #{tmp 23181}#
           (@apply
             (lambda (#{e0 23185}# #{e1 23186}#)
               (#{build-application 4280}#
                 #{s 23178}#
                 #{x 23174}#
                 (map (lambda (#{e 23271}#)
                        (#{chi 4345}#
                          #{e 23271}#
                          #{r 23176}#
                          #{w 23177}#
                          #{mod 23179}#))
                      #{e1 23186}#)))
             #{tmp 23181}#)
           (syntax-violation
             #f
             "source expression failed to match any pattern"
             #{e 23175}#)))))
   (#{chi-macro 4348}#
     (lambda (#{p 23352}#
              #{e 23353}#
              #{r 23354}#
              #{w 23355}#
              #{s 23356}#
              #{rib 23357}#
              #{mod 23358}#)
       (letrec*
         ((#{rebuild-macro-output 23359}#
            (lambda (#{x 23390}# #{m 23391}#)
              (if (pair? #{x 23390}#)
                (let ((#{e 23395}#
                        (cons (#{rebuild-macro-output 23359}#
                                (car #{x 23390}#)
                                #{m 23391}#)
                              (#{rebuild-macro-output 23359}#
                                (cdr #{x 23390}#)
                                #{m 23391}#))))
                  (begin
                    (if (if (pair? #{e 23395}#) #{s 23356}# #f)
                      (set-source-properties! #{e 23395}# #{s 23356}#))
                    #{e 23395}#))
                (if (if (vector? #{x 23390}#)
                      (if (= (vector-length #{x 23390}#) 4)
                        (eq? (vector-ref #{x 23390}# 0) 'syntax-object)
                        #f)
                      #f)
                  (let ((#{w 23411}# (vector-ref #{x 23390}# 2)))
                    (let ((#{ms 23412}# (car #{w 23411}#))
                          (#{s 23413}# (cdr #{w 23411}#)))
                      (if (if (pair? #{ms 23412}#)
                            (eq? (car #{ms 23412}#) #f)
                            #f)
                        (let ((#{expression 23421}# (vector-ref #{x 23390}# 1))
                              (#{wrap 23422}#
                                (cons (cdr #{ms 23412}#)
                                      (if #{rib 23357}#
                                        (cons #{rib 23357}# (cdr #{s 23413}#))
                                        (cdr #{s 23413}#))))
                              (#{module 23423}# (vector-ref #{x 23390}# 3)))
                          (vector
                            'syntax-object
                            #{expression 23421}#
                            #{wrap 23422}#
                            #{module 23423}#))
                        (let ((#{expression 23433}#
                                (let ((#{e 23438}# (vector-ref #{x 23390}# 1)))
                                  (begin
                                    (if (if (pair? #{e 23438}#) #{s 23413}# #f)
                                      (set-source-properties!
                                        #{e 23438}#
                                        #{s 23413}#))
                                    #{e 23438}#)))
                              (#{wrap 23434}#
                                (cons (cons #{m 23391}# #{ms 23412}#)
                                      (if #{rib 23357}#
                                        (cons #{rib 23357}#
                                              (cons 'shift #{s 23413}#))
                                        (cons 'shift #{s 23413}#))))
                              (#{module 23435}# (vector-ref #{x 23390}# 3)))
                          (vector
                            'syntax-object
                            #{expression 23433}#
                            #{wrap 23434}#
                            #{module 23435}#)))))
                  (if (vector? #{x 23390}#)
                    (let ((#{n 23450}# (vector-length #{x 23390}#)))
                      (let ((#{v 23451}#
                              (let ((#{e 23459}# (make-vector #{n 23450}#)))
                                (begin
                                  (if (if (pair? #{e 23459}#) #{x 23390}# #f)
                                    (set-source-properties!
                                      #{e 23459}#
                                      #{x 23390}#))
                                  #{e 23459}#))))
                        (letrec*
                          ((#{loop 23452}#
                             (lambda (#{i 23504}#)
                               (if (= #{i 23504}# #{n 23450}#)
                                 #{v 23451}#
                                 (begin
                                   (vector-set!
                                     #{v 23451}#
                                     #{i 23504}#
                                     (#{rebuild-macro-output 23359}#
                                       (vector-ref #{x 23390}# #{i 23504}#)
                                       #{m 23391}#))
                                   (#{loop 23452}# (#{1+}# #{i 23504}#)))))))
                          (#{loop 23452}# 0))))
                    (if (symbol? #{x 23390}#)
                      (syntax-violation
                        #f
                        "encountered raw symbol in macro output"
                        (let ((#{s 23510}# (cdr #{w 23355}#)))
                          (#{wrap 4338}#
                            (begin
                              (if (if (pair? #{e 23353}#) #{s 23510}# #f)
                                (set-source-properties!
                                  #{e 23353}#
                                  #{s 23510}#))
                              #{e 23353}#)
                            #{w 23355}#
                            #{mod 23358}#))
                        #{x 23390}#)
                      (begin
                        (if (if (pair? #{x 23390}#) #{s 23356}# #f)
                          (set-source-properties! #{x 23390}# #{s 23356}#))
                        #{x 23390}#))))))))
         (#{rebuild-macro-output 23359}#
           (#{p 23352}#
             (let ((#{w 23366}#
                     (cons (cons #f (car #{w 23355}#))
                           (cons 'shift (cdr #{w 23355}#)))))
               (#{wrap 4338}#
                 (begin
                   (if (if (pair? #{e 23353}#) #{s 23356}# #f)
                     (set-source-properties! #{e 23353}# #{s 23356}#))
                   #{e 23353}#)
                 #{w 23366}#
                 #{mod 23358}#)))
           (gensym "m")))))
   (#{chi-body 4349}#
     (lambda (#{body 23542}#
              #{outer-form 23543}#
              #{r 23544}#
              #{w 23545}#
              #{mod 23546}#)
       (let ((#{r 23547}#
               (cons '("placeholder" placeholder) #{r 23544}#)))
         (let ((#{ribcage 23548}# (vector 'ribcage '() '() '())))
           (let ((#{w 23549}#
                   (cons (car #{w 23545}#)
                         (cons #{ribcage 23548}# (cdr #{w 23545}#)))))
             (letrec*
               ((#{parse 23550}#
                  (lambda (#{body 23563}#
                           #{ids 23564}#
                           #{labels 23565}#
                           #{var-ids 23566}#
                           #{vars 23567}#
                           #{vals 23568}#
                           #{bindings 23569}#)
                    (if (null? #{body 23563}#)
                      (syntax-violation
                        #f
                        "no expressions in body"
                        #{outer-form 23543}#)
                      (let ((#{e 23570}# (cdr (car #{body 23563}#)))
                            (#{er 23571}# (car (car #{body 23563}#))))
                        (call-with-values
                          (lambda ()
                            (#{syntax-type 4344}#
                              #{e 23570}#
                              #{er 23571}#
                              '(())
                              (#{source-annotation 4306}# #{er 23571}#)
                              #{ribcage 23548}#
                              #{mod 23546}#
                              #f))
                          (lambda (#{type 23747}#
                                   #{value 23748}#
                                   #{e 23749}#
                                   #{w 23750}#
                                   #{s 23751}#
                                   #{mod 23752}#)
                            (if (eqv? #{type 23747}# 'define-form)
                              (let ((#{id 23756}#
                                      (#{wrap 4338}#
                                        #{value 23748}#
                                        #{w 23750}#
                                        #{mod 23752}#))
                                    (#{label 23757}#
                                      (symbol->string (gensym "i"))))
                                (let ((#{var 23758}#
                                        (let ((#{id 23818}#
                                                (if (if (vector? #{id 23756}#)
                                                      (if (= (vector-length
                                                               #{id 23756}#)
                                                             4)
                                                        (eq? (vector-ref
                                                               #{id 23756}#
                                                               0)
                                                             'syntax-object)
                                                        #f)
                                                      #f)
                                                  (vector-ref #{id 23756}# 1)
                                                  #{id 23756}#)))
                                          (gensym
                                            (string-append
                                              (symbol->string #{id 23818}#)
                                              " ")))))
                                  (begin
                                    (let ((#{update 23808}#
                                            (cons (vector-ref #{id 23756}# 1)
                                                  (vector-ref
                                                    #{ribcage 23548}#
                                                    1))))
                                      (vector-set!
                                        #{ribcage 23548}#
                                        1
                                        #{update 23808}#))
                                    (let ((#{update 23810}#
                                            (cons (car (vector-ref
                                                         #{id 23756}#
                                                         2))
                                                  (vector-ref
                                                    #{ribcage 23548}#
                                                    2))))
                                      (vector-set!
                                        #{ribcage 23548}#
                                        2
                                        #{update 23810}#))
                                    (let ((#{update 23812}#
                                            (cons #{label 23757}#
                                                  (vector-ref
                                                    #{ribcage 23548}#
                                                    3))))
                                      (vector-set!
                                        #{ribcage 23548}#
                                        3
                                        #{update 23812}#))
                                    (#{parse 23550}#
                                      (cdr #{body 23563}#)
                                      (cons #{id 23756}# #{ids 23564}#)
                                      (cons #{label 23757}# #{labels 23565}#)
                                      (cons #{id 23756}# #{var-ids 23566}#)
                                      (cons #{var 23758}# #{vars 23567}#)
                                      (cons (cons #{er 23571}#
                                                  (#{wrap 4338}#
                                                    #{e 23749}#
                                                    #{w 23750}#
                                                    #{mod 23752}#))
                                            #{vals 23568}#)
                                      (cons (cons 'lexical #{var 23758}#)
                                            #{bindings 23569}#)))))
                              (if (eqv? #{type 23747}# 'define-syntax-form)
                                (let ((#{id 23846}#
                                        (#{wrap 4338}#
                                          #{value 23748}#
                                          #{w 23750}#
                                          #{mod 23752}#))
                                      (#{label 23847}#
                                        (symbol->string (gensym "i"))))
                                  (begin
                                    (let ((#{update 23897}#
                                            (cons (vector-ref #{id 23846}# 1)
                                                  (vector-ref
                                                    #{ribcage 23548}#
                                                    1))))
                                      (vector-set!
                                        #{ribcage 23548}#
                                        1
                                        #{update 23897}#))
                                    (let ((#{update 23899}#
                                            (cons (car (vector-ref
                                                         #{id 23846}#
                                                         2))
                                                  (vector-ref
                                                    #{ribcage 23548}#
                                                    2))))
                                      (vector-set!
                                        #{ribcage 23548}#
                                        2
                                        #{update 23899}#))
                                    (let ((#{update 23901}#
                                            (cons #{label 23847}#
                                                  (vector-ref
                                                    #{ribcage 23548}#
                                                    3))))
                                      (vector-set!
                                        #{ribcage 23548}#
                                        3
                                        #{update 23901}#))
                                    (#{parse 23550}#
                                      (cdr #{body 23563}#)
                                      (cons #{id 23846}# #{ids 23564}#)
                                      (cons #{label 23847}# #{labels 23565}#)
                                      #{var-ids 23566}#
                                      #{vars 23567}#
                                      #{vals 23568}#
                                      (cons (cons 'macro
                                                  (cons #{er 23571}#
                                                        (#{wrap 4338}#
                                                          #{e 23749}#
                                                          #{w 23750}#
                                                          #{mod 23752}#)))
                                            #{bindings 23569}#))))
                                (if (eqv? #{type 23747}# 'begin-form)
                                  (let ((#{tmp 23909}#
                                          ($sc-dispatch
                                            #{e 23749}#
                                            '(_ . each-any))))
                                    (if #{tmp 23909}#
                                      (@apply
                                        (lambda (#{e1 23913}#)
                                          (#{parse 23550}#
                                            (letrec*
                                              ((#{f 23914}#
                                                 (lambda (#{forms 23977}#)
                                                   (if (null? #{forms 23977}#)
                                                     (cdr #{body 23563}#)
                                                     (cons (cons #{er 23571}#
                                                                 (#{wrap 4338}#
                                                                   (car #{forms 23977}#)
                                                                   #{w 23750}#
                                                                   #{mod 23752}#))
                                                           (#{f 23914}#
                                                             (cdr #{forms 23977}#)))))))
                                              (#{f 23914}# #{e1 23913}#))
                                            #{ids 23564}#
                                            #{labels 23565}#
                                            #{var-ids 23566}#
                                            #{vars 23567}#
                                            #{vals 23568}#
                                            #{bindings 23569}#))
                                        #{tmp 23909}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{e 23749}#)))
                                  (if (eqv? #{type 23747}# 'local-syntax-form)
                                    (#{chi-local-syntax 4350}#
                                      #{value 23748}#
                                      #{e 23749}#
                                      #{er 23571}#
                                      #{w 23750}#
                                      #{s 23751}#
                                      #{mod 23752}#
                                      (lambda (#{forms 23991}#
                                               #{er 23992}#
                                               #{w 23993}#
                                               #{s 23994}#
                                               #{mod 23995}#)
                                        (#{parse 23550}#
                                          (letrec*
                                            ((#{f 23996}#
                                               (lambda (#{forms 24059}#)
                                                 (if (null? #{forms 24059}#)
                                                   (cdr #{body 23563}#)
                                                   (cons (cons #{er 23992}#
                                                               (#{wrap 4338}#
                                                                 (car #{forms 24059}#)
                                                                 #{w 23993}#
                                                                 #{mod 23995}#))
                                                         (#{f 23996}#
                                                           (cdr #{forms 24059}#)))))))
                                            (#{f 23996}# #{forms 23991}#))
                                          #{ids 23564}#
                                          #{labels 23565}#
                                          #{var-ids 23566}#
                                          #{vars 23567}#
                                          #{vals 23568}#
                                          #{bindings 23569}#)))
                                    (if (null? #{ids 23564}#)
                                      (#{build-sequence 4294}#
                                        #f
                                        (map (lambda (#{x 24129}#)
                                               (#{chi 4345}#
                                                 (cdr #{x 24129}#)
                                                 (car #{x 24129}#)
                                                 '(())
                                                 #{mod 23752}#))
                                             (cons (cons #{er 23571}#
                                                         (#{wrap 4338}#
                                                           (begin
                                                             (if (if (pair? #{e 23749}#)
                                                                   #{s 23751}#
                                                                   #f)
                                                               (set-source-properties!
                                                                 #{e 23749}#
                                                                 #{s 23751}#))
                                                             #{e 23749}#)
                                                           #{w 23750}#
                                                           #{mod 23752}#))
                                                   (cdr #{body 23563}#))))
                                      (begin
                                        (if (not (#{valid-bound-ids? 4335}#
                                                   #{ids 23564}#))
                                          (syntax-violation
                                            #f
                                            "invalid or duplicate identifier in definition"
                                            #{outer-form 23543}#))
                                        (letrec*
                                          ((#{loop 24291}#
                                             (lambda (#{bs 24294}#
                                                      #{er-cache 24295}#
                                                      #{r-cache 24296}#)
                                               (if (not (null? #{bs 24294}#))
                                                 (let ((#{b 24297}#
                                                         (car #{bs 24294}#)))
                                                   (if (eq? (car #{b 24297}#)
                                                            'macro)
                                                     (let ((#{er 24299}#
                                                             (car (cdr #{b 24297}#))))
                                                       (let ((#{r-cache 24300}#
                                                               (if (eq? #{er 24299}#
                                                                        #{er-cache 24295}#)
                                                                 #{r-cache 24296}#
                                                                 (#{macros-only-env 4309}#
                                                                   #{er 24299}#))))
                                                         (begin
                                                           (set-cdr!
                                                             #{b 24297}#
                                                             (#{eval-local-transformer 4351}#
                                                               (#{chi 4345}#
                                                                 (cdr (cdr #{b 24297}#))
                                                                 #{r-cache 24300}#
                                                                 '(())
                                                                 #{mod 23752}#)
                                                               #{mod 23752}#))
                                                           (#{loop 24291}#
                                                             (cdr #{bs 24294}#)
                                                             #{er 24299}#
                                                             #{r-cache 24300}#))))
                                                     (#{loop 24291}#
                                                       (cdr #{bs 24294}#)
                                                       #{er-cache 24295}#
                                                       #{r-cache 24296}#)))))))
                                          (#{loop 24291}#
                                            #{bindings 23569}#
                                            #f
                                            #f))
                                        (set-cdr!
                                          #{r 23547}#
                                          (#{extend-env 4307}#
                                            #{labels 23565}#
                                            #{bindings 23569}#
                                            (cdr #{r 23547}#)))
                                        (#{build-letrec 4297}#
                                          #f
                                          #t
                                          (reverse
                                            (map syntax->datum
                                                 #{var-ids 23566}#))
                                          (reverse #{vars 23567}#)
                                          (map (lambda (#{x 24653}#)
                                                 (#{chi 4345}#
                                                   (cdr #{x 24653}#)
                                                   (car #{x 24653}#)
                                                   '(())
                                                   #{mod 23752}#))
                                               (reverse #{vals 23568}#))
                                          (#{build-sequence 4294}#
                                            #f
                                            (map (lambda (#{x 24783}#)
                                                   (#{chi 4345}#
                                                     (cdr #{x 24783}#)
                                                     (car #{x 24783}#)
                                                     '(())
                                                     #{mod 23752}#))
                                                 (cons (cons #{er 23571}#
                                                             (#{wrap 4338}#
                                                               (begin
                                                                 (if (if (pair? #{e 23749}#)
                                                                       #{s 23751}#
                                                                       #f)
                                                                   (set-source-properties!
                                                                     #{e 23749}#
                                                                     #{s 23751}#))
                                                                 #{e 23749}#)
                                                               #{w 23750}#
                                                               #{mod 23752}#))
                                                       (cdr #{body 23563}#))))))))))))))))))
               (#{parse 23550}#
                 (map (lambda (#{x 23553}#)
                        (cons #{r 23547}#
                              (#{wrap 4338}#
                                #{x 23553}#
                                #{w 23549}#
                                #{mod 23546}#)))
                      #{body 23542}#)
                 '()
                 '()
                 '()
                 '()
                 '()
                 '())))))))
   (#{chi-local-syntax 4350}#
     (lambda (#{rec? 24868}#
              #{e 24869}#
              #{r 24870}#
              #{w 24871}#
              #{s 24872}#
              #{mod 24873}#
              #{k 24874}#)
       (let ((#{tmp 24876}#
               ($sc-dispatch
                 #{e 24869}#
                 '(_ #(each (any any)) any . each-any))))
         (if #{tmp 24876}#
           (@apply
             (lambda (#{id 24880}#
                      #{val 24881}#
                      #{e1 24882}#
                      #{e2 24883}#)
               (if (not (#{valid-bound-ids? 4335}# #{id 24880}#))
                 (syntax-violation
                   #f
                   "duplicate bound keyword"
                   #{e 24869}#)
                 (let ((#{labels 24973}#
                         (#{gen-labels 4316}# #{id 24880}#)))
                   (let ((#{new-w 24974}#
                           (#{make-binding-wrap 4327}#
                             #{id 24880}#
                             #{labels 24973}#
                             #{w 24871}#)))
                     (#{k 24874}#
                       (cons #{e1 24882}# #{e2 24883}#)
                       (#{extend-env 4307}#
                         #{labels 24973}#
                         (let ((#{trans-r 25012}#
                                 (#{macros-only-env 4309}# #{r 24870}#)))
                           (begin
                             (if #{rec? 24868}# (if #f #f))
                             (map (lambda (#{x 25013}#)
                                    (cons 'macro
                                          (#{eval-local-transformer 4351}#
                                            (#{chi 4345}#
                                              #{x 25013}#
                                              #{trans-r 25012}#
                                              (if #{rec? 24868}#
                                                #{new-w 24974}#
                                                #{w 24871}#)
                                              #{mod 24873}#)
                                            #{mod 24873}#)))
                                  #{val 24881}#)))
                         #{r 24870}#)
                       #{new-w 24974}#
                       #{s 24872}#
                       #{mod 24873}#)))))
             #{tmp 24876}#)
           (syntax-violation
             #f
             "bad local syntax definition"
             (#{wrap 4338}#
               (begin
                 (if (if (pair? #{e 24869}#) #{s 24872}# #f)
                   (set-source-properties! #{e 24869}# #{s 24872}#))
                 #{e 24869}#)
               #{w 24871}#
               #{mod 24873}#))))))
   (#{eval-local-transformer 4351}#
     (lambda (#{expanded 25314}# #{mod 25315}#)
       (let ((#{p 25316}# (primitive-eval #{expanded 25314}#)))
         (if (procedure? #{p 25316}#)
           #{p 25316}#
           (syntax-violation
             #f
             "nonprocedure transformer"
             #{p 25316}#)))))
   (#{ellipsis? 4353}#
     (lambda (#{x 5159}#)
       (if (if (if (vector? #{x 5159}#)
                 (if (= (vector-length #{x 5159}#) 4)
                   (eq? (vector-ref #{x 5159}# 0) 'syntax-object)
                   #f)
                 #f)
             (symbol? (vector-ref #{x 5159}# 1))
             #f)
         (if (eq? (if (if (vector? #{x 5159}#)
                        (if (= (vector-length #{x 5159}#) 4)
                          (eq? (vector-ref #{x 5159}# 0) 'syntax-object)
                          #f)
                        #f)
                    (vector-ref #{x 5159}# 1)
                    #{x 5159}#)
                  (if (if (= (vector-length
                               '#(syntax-object
                                  ...
                                  ((top)
                                   #(ribcage () () ())
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i2230"))
                                   #(ribcage
                                     (lambda-var-list
                                       gen-var
                                       strip
                                       chi-lambda-case
                                       lambda*-formals
                                       chi-simple-lambda
                                       lambda-formals
                                       ellipsis?
                                       chi-void
                                       eval-local-transformer
                                       chi-local-syntax
                                       chi-body
                                       chi-macro
                                       chi-application
                                       chi-expr
                                       chi
                                       syntax-type
                                       chi-when-list
                                       chi-install-global
                                       chi-top-sequence
                                       chi-sequence
                                       source-wrap
                                       wrap
                                       bound-id-member?
                                       distinct-bound-ids?
                                       valid-bound-ids?
                                       bound-id=?
                                       free-id=?
                                       id-var-name
                                       same-marks?
                                       join-marks
                                       join-wraps
                                       smart-append
                                       make-binding-wrap
                                       extend-ribcage!
                                       make-empty-ribcage
                                       new-mark
                                       anti-mark
                                       the-anti-mark
                                       top-marked?
                                       top-wrap
                                       empty-wrap
                                       set-ribcage-labels!
                                       set-ribcage-marks!
                                       set-ribcage-symnames!
                                       ribcage-labels
                                       ribcage-marks
                                       ribcage-symnames
                                       ribcage?
                                       make-ribcage
                                       gen-labels
                                       gen-label
                                       make-rename
                                       rename-marks
                                       rename-new
                                       rename-old
                                       subst-rename?
                                       wrap-subst
                                       wrap-marks
                                       make-wrap
                                       id-sym-name&marks
                                       id-sym-name
                                       id?
                                       nonsymbol-id?
                                       global-extend
                                       lookup
                                       macros-only-env
                                       extend-var-env
                                       extend-env
                                       null-env
                                       binding-value
                                       binding-type
                                       make-binding
                                       arg-check
                                       source-annotation
                                       no-source
                                       set-syntax-object-module!
                                       set-syntax-object-wrap!
                                       set-syntax-object-expression!
                                       syntax-object-module
                                       syntax-object-wrap
                                       syntax-object-expression
                                       syntax-object?
                                       make-syntax-object
                                       build-lexical-var
                                       build-letrec
                                       build-named-let
                                       build-let
                                       build-sequence
                                       build-data
                                       build-primref
                                       build-lambda-case
                                       build-case-lambda
                                       build-simple-lambda
                                       build-global-definition
                                       build-global-assignment
                                       build-global-reference
                                       analyze-variable
                                       build-lexical-assignment
                                       build-lexical-reference
                                       build-dynlet
                                       build-conditional
                                       build-application
                                       build-void
                                       maybe-name-value!
                                       decorate-source
                                       get-global-definition-hook
                                       put-global-definition-hook
                                       gensym-hook
                                       local-eval-hook
                                       top-level-eval-hook
                                       fx<
                                       fx=
                                       fx-
                                       fx+
                                       set-lambda-meta!
                                       lambda-meta
                                       lambda?
                                       make-dynlet
                                       make-letrec
                                       make-let
                                       make-lambda-case
                                       make-lambda
                                       make-sequence
                                       make-application
                                       make-conditional
                                       make-toplevel-define
                                       make-toplevel-set
                                       make-toplevel-ref
                                       make-module-set
                                       make-module-ref
                                       make-lexical-set
                                       make-lexical-ref
                                       make-primitive-ref
                                       make-const
                                       make-void)
                                     ((top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top))
                                     ("i467"
                                      "i465"
                                      "i463"
                                      "i461"
                                      "i459"
                                      "i457"
                                      "i455"
                                      "i453"
                                      "i451"
                                      "i449"
                                      "i447"
                                      "i445"
                                      "i443"
                                      "i441"
                                      "i439"
                                      "i437"
                                      "i435"
                                      "i433"
                                      "i431"
                                      "i429"
                                      "i427"
                                      "i425"
                                      "i423"
                                      "i421"
                                      "i419"
                                      "i417"
                                      "i415"
                                      "i413"
                                      "i411"
                                      "i409"
                                      "i407"
                                      "i405"
                                      "i403"
                                      "i401"
                                      "i399"
                                      "i398"
                                      "i396"
                                      "i393"
                                      "i392"
                                      "i391"
                                      "i389"
                                      "i388"
                                      "i386"
                                      "i384"
                                      "i382"
                                      "i380"
                                      "i378"
                                      "i376"
                                      "i374"
                                      "i372"
                                      "i369"
                                      "i367"
                                      "i366"
                                      "i364"
                                      "i362"
                                      "i360"
                                      "i358"
                                      "i357"
                                      "i356"
                                      "i355"
                                      "i353"
                                      "i352"
                                      "i349"
                                      "i347"
                                      "i345"
                                      "i343"
                                      "i341"
                                      "i339"
                                      "i337"
                                      "i336"
                                      "i335"
                                      "i333"
                                      "i331"
                                      "i330"
                                      "i327"
                                      "i326"
                                      "i324"
                                      "i322"
                                      "i320"
                                      "i318"
                                      "i316"
                                      "i314"
                                      "i312"
                                      "i310"
                                      "i308"
                                      "i305"
                                      "i303"
                                      "i301"
                                      "i299"
                                      "i297"
                                      "i295"
                                      "i293"
                                      "i291"
                                      "i289"
                                      "i287"
                                      "i285"
                                      "i283"
                                      "i281"
                                      "i279"
                                      "i277"
                                      "i275"
                                      "i273"
                                      "i271"
                                      "i269"
                                      "i267"
                                      "i265"
                                      "i263"
                                      "i261"
                                      "i260"
                                      "i257"
                                      "i255"
                                      "i254"
                                      "i253"
                                      "i252"
                                      "i251"
                                      "i249"
                                      "i247"
                                      "i245"
                                      "i242"
                                      "i240"
                                      "i238"
                                      "i236"
                                      "i234"
                                      "i232"
                                      "i230"
                                      "i228"
                                      "i226"
                                      "i224"
                                      "i222"
                                      "i220"
                                      "i218"
                                      "i216"
                                      "i214"
                                      "i212"
                                      "i210"
                                      "i208"))
                                   #(ribcage
                                     (define-structure
                                       define-expansion-accessors
                                       define-expansion-constructors)
                                     ((top) (top) (top))
                                     ("i46" "i45" "i44")))
                                  (hygiene guile)))
                             4)
                        (eq? (vector-ref
                               '#(syntax-object
                                  ...
                                  ((top)
                                   #(ribcage () () ())
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i2230"))
                                   #(ribcage
                                     (lambda-var-list
                                       gen-var
                                       strip
                                       chi-lambda-case
                                       lambda*-formals
                                       chi-simple-lambda
                                       lambda-formals
                                       ellipsis?
                                       chi-void
                                       eval-local-transformer
                                       chi-local-syntax
                                       chi-body
                                       chi-macro
                                       chi-application
                                       chi-expr
                                       chi
                                       syntax-type
                                       chi-when-list
                                       chi-install-global
                                       chi-top-sequence
                                       chi-sequence
                                       source-wrap
                                       wrap
                                       bound-id-member?
                                       distinct-bound-ids?
                                       valid-bound-ids?
                                       bound-id=?
                                       free-id=?
                                       id-var-name
                                       same-marks?
                                       join-marks
                                       join-wraps
                                       smart-append
                                       make-binding-wrap
                                       extend-ribcage!
                                       make-empty-ribcage
                                       new-mark
                                       anti-mark
                                       the-anti-mark
                                       top-marked?
                                       top-wrap
                                       empty-wrap
                                       set-ribcage-labels!
                                       set-ribcage-marks!
                                       set-ribcage-symnames!
                                       ribcage-labels
                                       ribcage-marks
                                       ribcage-symnames
                                       ribcage?
                                       make-ribcage
                                       gen-labels
                                       gen-label
                                       make-rename
                                       rename-marks
                                       rename-new
                                       rename-old
                                       subst-rename?
                                       wrap-subst
                                       wrap-marks
                                       make-wrap
                                       id-sym-name&marks
                                       id-sym-name
                                       id?
                                       nonsymbol-id?
                                       global-extend
                                       lookup
                                       macros-only-env
                                       extend-var-env
                                       extend-env
                                       null-env
                                       binding-value
                                       binding-type
                                       make-binding
                                       arg-check
                                       source-annotation
                                       no-source
                                       set-syntax-object-module!
                                       set-syntax-object-wrap!
                                       set-syntax-object-expression!
                                       syntax-object-module
                                       syntax-object-wrap
                                       syntax-object-expression
                                       syntax-object?
                                       make-syntax-object
                                       build-lexical-var
                                       build-letrec
                                       build-named-let
                                       build-let
                                       build-sequence
                                       build-data
                                       build-primref
                                       build-lambda-case
                                       build-case-lambda
                                       build-simple-lambda
                                       build-global-definition
                                       build-global-assignment
                                       build-global-reference
                                       analyze-variable
                                       build-lexical-assignment
                                       build-lexical-reference
                                       build-dynlet
                                       build-conditional
                                       build-application
                                       build-void
                                       maybe-name-value!
                                       decorate-source
                                       get-global-definition-hook
                                       put-global-definition-hook
                                       gensym-hook
                                       local-eval-hook
                                       top-level-eval-hook
                                       fx<
                                       fx=
                                       fx-
                                       fx+
                                       set-lambda-meta!
                                       lambda-meta
                                       lambda?
                                       make-dynlet
                                       make-letrec
                                       make-let
                                       make-lambda-case
                                       make-lambda
                                       make-sequence
                                       make-application
                                       make-conditional
                                       make-toplevel-define
                                       make-toplevel-set
                                       make-toplevel-ref
                                       make-module-set
                                       make-module-ref
                                       make-lexical-set
                                       make-lexical-ref
                                       make-primitive-ref
                                       make-const
                                       make-void)
                                     ((top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top)
                                      (top))
                                     ("i467"
                                      "i465"
                                      "i463"
                                      "i461"
                                      "i459"
                                      "i457"
                                      "i455"
                                      "i453"
                                      "i451"
                                      "i449"
                                      "i447"
                                      "i445"
                                      "i443"
                                      "i441"
                                      "i439"
                                      "i437"
                                      "i435"
                                      "i433"
                                      "i431"
                                      "i429"
                                      "i427"
                                      "i425"
                                      "i423"
                                      "i421"
                                      "i419"
                                      "i417"
                                      "i415"
                                      "i413"
                                      "i411"
                                      "i409"
                                      "i407"
                                      "i405"
                                      "i403"
                                      "i401"
                                      "i399"
                                      "i398"
                                      "i396"
                                      "i393"
                                      "i392"
                                      "i391"
                                      "i389"
                                      "i388"
                                      "i386"
                                      "i384"
                                      "i382"
                                      "i380"
                                      "i378"
                                      "i376"
                                      "i374"
                                      "i372"
                                      "i369"
                                      "i367"
                                      "i366"
                                      "i364"
                                      "i362"
                                      "i360"
                                      "i358"
                                      "i357"
                                      "i356"
                                      "i355"
                                      "i353"
                                      "i352"
                                      "i349"
                                      "i347"
                                      "i345"
                                      "i343"
                                      "i341"
                                      "i339"
                                      "i337"
                                      "i336"
                                      "i335"
                                      "i333"
                                      "i331"
                                      "i330"
                                      "i327"
                                      "i326"
                                      "i324"
                                      "i322"
                                      "i320"
                                      "i318"
                                      "i316"
                                      "i314"
                                      "i312"
                                      "i310"
                                      "i308"
                                      "i305"
                                      "i303"
                                      "i301"
                                      "i299"
                                      "i297"
                                      "i295"
                                      "i293"
                                      "i291"
                                      "i289"
                                      "i287"
                                      "i285"
                                      "i283"
                                      "i281"
                                      "i279"
                                      "i277"
                                      "i275"
                                      "i273"
                                      "i271"
                                      "i269"
                                      "i267"
                                      "i265"
                                      "i263"
                                      "i261"
                                      "i260"
                                      "i257"
                                      "i255"
                                      "i254"
                                      "i253"
                                      "i252"
                                      "i251"
                                      "i249"
                                      "i247"
                                      "i245"
                                      "i242"
                                      "i240"
                                      "i238"
                                      "i236"
                                      "i234"
                                      "i232"
                                      "i230"
                                      "i228"
                                      "i226"
                                      "i224"
                                      "i222"
                                      "i220"
                                      "i218"
                                      "i216"
                                      "i214"
                                      "i212"
                                      "i210"
                                      "i208"))
                                   #(ribcage
                                     (define-structure
                                       define-expansion-accessors
                                       define-expansion-constructors)
                                     ((top) (top) (top))
                                     ("i46" "i45" "i44")))
                                  (hygiene guile))
                               0)
                             'syntax-object)
                        #f)
                    (vector-ref
                      '#(syntax-object
                         ...
                         ((top)
                          #(ribcage () () ())
                          #(ribcage () () ())
                          #(ribcage #(x) #((top)) #("i2230"))
                          #(ribcage
                            (lambda-var-list
                              gen-var
                              strip
                              chi-lambda-case
                              lambda*-formals
                              chi-simple-lambda
                              lambda-formals
                              ellipsis?
                              chi-void
                              eval-local-transformer
                              chi-local-syntax
                              chi-body
                              chi-macro
                              chi-application
                              chi-expr
                              chi
                              syntax-type
                              chi-when-list
                              chi-install-global
                              chi-top-sequence
                              chi-sequence
                              source-wrap
                              wrap
                              bound-id-member?
                              distinct-bound-ids?
                              valid-bound-ids?
                              bound-id=?
                              free-id=?
                              id-var-name
                              same-marks?
                              join-marks
                              join-wraps
                              smart-append
                              make-binding-wrap
                              extend-ribcage!
                              make-empty-ribcage
                              new-mark
                              anti-mark
                              the-anti-mark
                              top-marked?
                              top-wrap
                              empty-wrap
                              set-ribcage-labels!
                              set-ribcage-marks!
                              set-ribcage-symnames!
                              ribcage-labels
                              ribcage-marks
                              ribcage-symnames
                              ribcage?
                              make-ribcage
                              gen-labels
                              gen-label
                              make-rename
                              rename-marks
                              rename-new
                              rename-old
                              subst-rename?
                              wrap-subst
                              wrap-marks
                              make-wrap
                              id-sym-name&marks
                              id-sym-name
                              id?
                              nonsymbol-id?
                              global-extend
                              lookup
                              macros-only-env
                              extend-var-env
                              extend-env
                              null-env
                              binding-value
                              binding-type
                              make-binding
                              arg-check
                              source-annotation
                              no-source
                              set-syntax-object-module!
                              set-syntax-object-wrap!
                              set-syntax-object-expression!
                              syntax-object-module
                              syntax-object-wrap
                              syntax-object-expression
                              syntax-object?
                              make-syntax-object
                              build-lexical-var
                              build-letrec
                              build-named-let
                              build-let
                              build-sequence
                              build-data
                              build-primref
                              build-lambda-case
                              build-case-lambda
                              build-simple-lambda
                              build-global-definition
                              build-global-assignment
                              build-global-reference
                              analyze-variable
                              build-lexical-assignment
                              build-lexical-reference
                              build-dynlet
                              build-conditional
                              build-application
                              build-void
                              maybe-name-value!
                              decorate-source
                              get-global-definition-hook
                              put-global-definition-hook
                              gensym-hook
                              local-eval-hook
                              top-level-eval-hook
                              fx<
                              fx=
                              fx-
                              fx+
                              set-lambda-meta!
                              lambda-meta
                              lambda?
                              make-dynlet
                              make-letrec
                              make-let
                              make-lambda-case
                              make-lambda
                              make-sequence
                              make-application
                              make-conditional
                              make-toplevel-define
                              make-toplevel-set
                              make-toplevel-ref
                              make-module-set
                              make-module-ref
                              make-lexical-set
                              make-lexical-ref
                              make-primitive-ref
                              make-const
                              make-void)
                            ((top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top)
                             (top))
                            ("i467"
                             "i465"
                             "i463"
                             "i461"
                             "i459"
                             "i457"
                             "i455"
                             "i453"
                             "i451"
                             "i449"
                             "i447"
                             "i445"
                             "i443"
                             "i441"
                             "i439"
                             "i437"
                             "i435"
                             "i433"
                             "i431"
                             "i429"
                             "i427"
                             "i425"
                             "i423"
                             "i421"
                             "i419"
                             "i417"
                             "i415"
                             "i413"
                             "i411"
                             "i409"
                             "i407"
                             "i405"
                             "i403"
                             "i401"
                             "i399"
                             "i398"
                             "i396"
                             "i393"
                             "i392"
                             "i391"
                             "i389"
                             "i388"
                             "i386"
                             "i384"
                             "i382"
                             "i380"
                             "i378"
                             "i376"
                             "i374"
                             "i372"
                             "i369"
                             "i367"
                             "i366"
                             "i364"
                             "i362"
                             "i360"
                             "i358"
                             "i357"
                             "i356"
                             "i355"
                             "i353"
                             "i352"
                             "i349"
                             "i347"
                             "i345"
                             "i343"
                             "i341"
                             "i339"
                             "i337"
                             "i336"
                             "i335"
                             "i333"
                             "i331"
                             "i330"
                             "i327"
                             "i326"
                             "i324"
                             "i322"
                             "i320"
                             "i318"
                             "i316"
                             "i314"
                             "i312"
                             "i310"
                             "i308"
                             "i305"
                             "i303"
                             "i301"
                             "i299"
                             "i297"
                             "i295"
                             "i293"
                             "i291"
                             "i289"
                             "i287"
                             "i285"
                             "i283"
                             "i281"
                             "i279"
                             "i277"
                             "i275"
                             "i273"
                             "i271"
                             "i269"
                             "i267"
                             "i265"
                             "i263"
                             "i261"
                             "i260"
                             "i257"
                             "i255"
                             "i254"
                             "i253"
                             "i252"
                             "i251"
                             "i249"
                             "i247"
                             "i245"
                             "i242"
                             "i240"
                             "i238"
                             "i236"
                             "i234"
                             "i232"
                             "i230"
                             "i228"
                             "i226"
                             "i224"
                             "i222"
                             "i220"
                             "i218"
                             "i216"
                             "i214"
                             "i212"
                             "i210"
                             "i208"))
                          #(ribcage
                            (define-structure
                              define-expansion-accessors
                              define-expansion-constructors)
                            ((top) (top) (top))
                            ("i46" "i45" "i44")))
                         (hygiene guile))
                      1)
                    '#(syntax-object
                       ...
                       ((top)
                        #(ribcage () () ())
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i2230"))
                        #(ribcage
                          (lambda-var-list
                            gen-var
                            strip
                            chi-lambda-case
                            lambda*-formals
                            chi-simple-lambda
                            lambda-formals
                            ellipsis?
                            chi-void
                            eval-local-transformer
                            chi-local-syntax
                            chi-body
                            chi-macro
                            chi-application
                            chi-expr
                            chi
                            syntax-type
                            chi-when-list
                            chi-install-global
                            chi-top-sequence
                            chi-sequence
                            source-wrap
                            wrap
                            bound-id-member?
                            distinct-bound-ids?
                            valid-bound-ids?
                            bound-id=?
                            free-id=?
                            id-var-name
                            same-marks?
                            join-marks
                            join-wraps
                            smart-append
                            make-binding-wrap
                            extend-ribcage!
                            make-empty-ribcage
                            new-mark
                            anti-mark
                            the-anti-mark
                            top-marked?
                            top-wrap
                            empty-wrap
                            set-ribcage-labels!
                            set-ribcage-marks!
                            set-ribcage-symnames!
                            ribcage-labels
                            ribcage-marks
                            ribcage-symnames
                            ribcage?
                            make-ribcage
                            gen-labels
                            gen-label
                            make-rename
                            rename-marks
                            rename-new
                            rename-old
                            subst-rename?
                            wrap-subst
                            wrap-marks
                            make-wrap
                            id-sym-name&marks
                            id-sym-name
                            id?
                            nonsymbol-id?
                            global-extend
                            lookup
                            macros-only-env
                            extend-var-env
                            extend-env
                            null-env
                            binding-value
                            binding-type
                            make-binding
                            arg-check
                            source-annotation
                            no-source
                            set-syntax-object-module!
                            set-syntax-object-wrap!
                            set-syntax-object-expression!
                            syntax-object-module
                            syntax-object-wrap
                            syntax-object-expression
                            syntax-object?
                            make-syntax-object
                            build-lexical-var
                            build-letrec
                            build-named-let
                            build-let
                            build-sequence
                            build-data
                            build-primref
                            build-lambda-case
                            build-case-lambda
                            build-simple-lambda
                            build-global-definition
                            build-global-assignment
                            build-global-reference
                            analyze-variable
                            build-lexical-assignment
                            build-lexical-reference
                            build-dynlet
                            build-conditional
                            build-application
                            build-void
                            maybe-name-value!
                            decorate-source
                            get-global-definition-hook
                            put-global-definition-hook
                            gensym-hook
                            local-eval-hook
                            top-level-eval-hook
                            fx<
                            fx=
                            fx-
                            fx+
                            set-lambda-meta!
                            lambda-meta
                            lambda?
                            make-dynlet
                            make-letrec
                            make-let
                            make-lambda-case
                            make-lambda
                            make-sequence
                            make-application
                            make-conditional
                            make-toplevel-define
                            make-toplevel-set
                            make-toplevel-ref
                            make-module-set
                            make-module-ref
                            make-lexical-set
                            make-lexical-ref
                            make-primitive-ref
                            make-const
                            make-void)
                          ((top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top)
                           (top))
                          ("i467"
                           "i465"
                           "i463"
                           "i461"
                           "i459"
                           "i457"
                           "i455"
                           "i453"
                           "i451"
                           "i449"
                           "i447"
                           "i445"
                           "i443"
                           "i441"
                           "i439"
                           "i437"
                           "i435"
                           "i433"
                           "i431"
                           "i429"
                           "i427"
                           "i425"
                           "i423"
                           "i421"
                           "i419"
                           "i417"
                           "i415"
                           "i413"
                           "i411"
                           "i409"
                           "i407"
                           "i405"
                           "i403"
                           "i401"
                           "i399"
                           "i398"
                           "i396"
                           "i393"
                           "i392"
                           "i391"
                           "i389"
                           "i388"
                           "i386"
                           "i384"
                           "i382"
                           "i380"
                           "i378"
                           "i376"
                           "i374"
                           "i372"
                           "i369"
                           "i367"
                           "i366"
                           "i364"
                           "i362"
                           "i360"
                           "i358"
                           "i357"
                           "i356"
                           "i355"
                           "i353"
                           "i352"
                           "i349"
                           "i347"
                           "i345"
                           "i343"
                           "i341"
                           "i339"
                           "i337"
                           "i336"
                           "i335"
                           "i333"
                           "i331"
                           "i330"
                           "i327"
                           "i326"
                           "i324"
                           "i322"
                           "i320"
                           "i318"
                           "i316"
                           "i314"
                           "i312"
                           "i310"
                           "i308"
                           "i305"
                           "i303"
                           "i301"
                           "i299"
                           "i297"
                           "i295"
                           "i293"
                           "i291"
                           "i289"
                           "i287"
                           "i285"
                           "i283"
                           "i281"
                           "i279"
                           "i277"
                           "i275"
                           "i273"
                           "i271"
                           "i269"
                           "i267"
                           "i265"
                           "i263"
                           "i261"
                           "i260"
                           "i257"
                           "i255"
                           "i254"
                           "i253"
                           "i252"
                           "i251"
                           "i249"
                           "i247"
                           "i245"
                           "i242"
                           "i240"
                           "i238"
                           "i236"
                           "i234"
                           "i232"
                           "i230"
                           "i228"
                           "i226"
                           "i224"
                           "i222"
                           "i220"
                           "i218"
                           "i216"
                           "i214"
                           "i212"
                           "i210"
                           "i208"))
                        #(ribcage
                          (define-structure
                            define-expansion-accessors
                            define-expansion-constructors)
                          ((top) (top) (top))
                          ("i46" "i45" "i44")))
                       (hygiene guile))))
           (eq? (#{id-var-name 4332}# #{x 5159}# '(()))
                (#{id-var-name 4332}#
                  '#(syntax-object
                     ...
                     ((top)
                      #(ribcage () () ())
                      #(ribcage () () ())
                      #(ribcage #(x) #((top)) #("i2230"))
                      #(ribcage
                        (lambda-var-list
                          gen-var
                          strip
                          chi-lambda-case
                          lambda*-formals
                          chi-simple-lambda
                          lambda-formals
                          ellipsis?
                          chi-void
                          eval-local-transformer
                          chi-local-syntax
                          chi-body
                          chi-macro
                          chi-application
                          chi-expr
                          chi
                          syntax-type
                          chi-when-list
                          chi-install-global
                          chi-top-sequence
                          chi-sequence
                          source-wrap
                          wrap
                          bound-id-member?
                          distinct-bound-ids?
                          valid-bound-ids?
                          bound-id=?
                          free-id=?
                          id-var-name
                          same-marks?
                          join-marks
                          join-wraps
                          smart-append
                          make-binding-wrap
                          extend-ribcage!
                          make-empty-ribcage
                          new-mark
                          anti-mark
                          the-anti-mark
                          top-marked?
                          top-wrap
                          empty-wrap
                          set-ribcage-labels!
                          set-ribcage-marks!
                          set-ribcage-symnames!
                          ribcage-labels
                          ribcage-marks
                          ribcage-symnames
                          ribcage?
                          make-ribcage
                          gen-labels
                          gen-label
                          make-rename
                          rename-marks
                          rename-new
                          rename-old
                          subst-rename?
                          wrap-subst
                          wrap-marks
                          make-wrap
                          id-sym-name&marks
                          id-sym-name
                          id?
                          nonsymbol-id?
                          global-extend
                          lookup
                          macros-only-env
                          extend-var-env
                          extend-env
                          null-env
                          binding-value
                          binding-type
                          make-binding
                          arg-check
                          source-annotation
                          no-source
                          set-syntax-object-module!
                          set-syntax-object-wrap!
                          set-syntax-object-expression!
                          syntax-object-module
                          syntax-object-wrap
                          syntax-object-expression
                          syntax-object?
                          make-syntax-object
                          build-lexical-var
                          build-letrec
                          build-named-let
                          build-let
                          build-sequence
                          build-data
                          build-primref
                          build-lambda-case
                          build-case-lambda
                          build-simple-lambda
                          build-global-definition
                          build-global-assignment
                          build-global-reference
                          analyze-variable
                          build-lexical-assignment
                          build-lexical-reference
                          build-dynlet
                          build-conditional
                          build-application
                          build-void
                          maybe-name-value!
                          decorate-source
                          get-global-definition-hook
                          put-global-definition-hook
                          gensym-hook
                          local-eval-hook
                          top-level-eval-hook
                          fx<
                          fx=
                          fx-
                          fx+
                          set-lambda-meta!
                          lambda-meta
                          lambda?
                          make-dynlet
                          make-letrec
                          make-let
                          make-lambda-case
                          make-lambda
                          make-sequence
                          make-application
                          make-conditional
                          make-toplevel-define
                          make-toplevel-set
                          make-toplevel-ref
                          make-module-set
                          make-module-ref
                          make-lexical-set
                          make-lexical-ref
                          make-primitive-ref
                          make-const
                          make-void)
                        ((top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top)
                         (top))
                        ("i467"
                         "i465"
                         "i463"
                         "i461"
                         "i459"
                         "i457"
                         "i455"
                         "i453"
                         "i451"
                         "i449"
                         "i447"
                         "i445"
                         "i443"
                         "i441"
                         "i439"
                         "i437"
                         "i435"
                         "i433"
                         "i431"
                         "i429"
                         "i427"
                         "i425"
                         "i423"
                         "i421"
                         "i419"
                         "i417"
                         "i415"
                         "i413"
                         "i411"
                         "i409"
                         "i407"
                         "i405"
                         "i403"
                         "i401"
                         "i399"
                         "i398"
                         "i396"
                         "i393"
                         "i392"
                         "i391"
                         "i389"
                         "i388"
                         "i386"
                         "i384"
                         "i382"
                         "i380"
                         "i378"
                         "i376"
                         "i374"
                         "i372"
                         "i369"
                         "i367"
                         "i366"
                         "i364"
                         "i362"
                         "i360"
                         "i358"
                         "i357"
                         "i356"
                         "i355"
                         "i353"
                         "i352"
                         "i349"
                         "i347"
                         "i345"
                         "i343"
                         "i341"
                         "i339"
                         "i337"
                         "i336"
                         "i335"
                         "i333"
                         "i331"
                         "i330"
                         "i327"
                         "i326"
                         "i324"
                         "i322"
                         "i320"
                         "i318"
                         "i316"
                         "i314"
                         "i312"
                         "i310"
                         "i308"
                         "i305"
                         "i303"
                         "i301"
                         "i299"
                         "i297"
                         "i295"
                         "i293"
                         "i291"
                         "i289"
                         "i287"
                         "i285"
                         "i283"
                         "i281"
                         "i279"
                         "i277"
                         "i275"
                         "i273"
                         "i271"
                         "i269"
                         "i267"
                         "i265"
                         "i263"
                         "i261"
                         "i260"
                         "i257"
                         "i255"
                         "i254"
                         "i253"
                         "i252"
                         "i251"
                         "i249"
                         "i247"
                         "i245"
                         "i242"
                         "i240"
                         "i238"
                         "i236"
                         "i234"
                         "i232"
                         "i230"
                         "i228"
                         "i226"
                         "i224"
                         "i222"
                         "i220"
                         "i218"
                         "i216"
                         "i214"
                         "i212"
                         "i210"
                         "i208"))
                      #(ribcage
                        (define-structure
                          define-expansion-accessors
                          define-expansion-constructors)
                        ((top) (top) (top))
                        ("i46" "i45" "i44")))
                     (hygiene guile))
                  '(())))
           #f)
         #f)))
   (#{lambda-formals 4354}#
     (lambda (#{orig-args 25321}#)
       (letrec*
         ((#{req 25322}#
            (lambda (#{args 25326}# #{rreq 25327}#)
              (let ((#{tmp 25329}# ($sc-dispatch #{args 25326}# '())))
                (if #{tmp 25329}#
                  (@apply
                    (lambda ()
                      (#{check 25323}# (reverse #{rreq 25327}#) #f))
                    #{tmp 25329}#)
                  (let ((#{tmp 25456}#
                          ($sc-dispatch #{args 25326}# '(any . any))))
                    (if (if #{tmp 25456}#
                          (@apply
                            (lambda (#{a 25460}# #{b 25461}#)
                              (if (symbol? #{a 25460}#)
                                #t
                                (if (if (vector? #{a 25460}#)
                                      (if (= (vector-length #{a 25460}#) 4)
                                        (eq? (vector-ref #{a 25460}# 0)
                                             'syntax-object)
                                        #f)
                                      #f)
                                  (symbol? (vector-ref #{a 25460}# 1))
                                  #f)))
                            #{tmp 25456}#)
                          #f)
                      (@apply
                        (lambda (#{a 25488}# #{b 25489}#)
                          (#{req 25322}#
                            #{b 25489}#
                            (cons #{a 25488}# #{rreq 25327}#)))
                        #{tmp 25456}#)
                      (let ((#{tmp 25490}# (list #{args 25326}#)))
                        (if (@apply
                              (lambda (#{r 25492}#)
                                (if (symbol? #{r 25492}#)
                                  #t
                                  (if (if (vector? #{r 25492}#)
                                        (if (= (vector-length #{r 25492}#) 4)
                                          (eq? (vector-ref #{r 25492}# 0)
                                               'syntax-object)
                                          #f)
                                        #f)
                                    (symbol? (vector-ref #{r 25492}# 1))
                                    #f)))
                              #{tmp 25490}#)
                          (@apply
                            (lambda (#{r 25522}#)
                              (#{check 25323}#
                                (reverse #{rreq 25327}#)
                                #{r 25522}#))
                            #{tmp 25490}#)
                          (syntax-violation
                            'lambda
                            "invalid argument list"
                            #{orig-args 25321}#
                            #{args 25326}#)))))))))
          (#{check 25323}#
            (lambda (#{req 25657}# #{rest 25658}#)
              (if (#{distinct-bound-ids? 4336}#
                    (if #{rest 25658}#
                      (cons #{rest 25658}# #{req 25657}#)
                      #{req 25657}#))
                (values #{req 25657}# #f #{rest 25658}# #f)
                (syntax-violation
                  'lambda
                  "duplicate identifier in argument list"
                  #{orig-args 25321}#)))))
         (#{req 25322}# #{orig-args 25321}# '()))))
   (#{chi-simple-lambda 4355}#
     (lambda (#{e 25778}#
              #{r 25779}#
              #{w 25780}#
              #{s 25781}#
              #{mod 25782}#
              #{req 25783}#
              #{rest 25784}#
              #{meta 25785}#
              #{body 25786}#)
       (let ((#{ids 25787}#
               (if #{rest 25784}#
                 (append #{req 25783}# (list #{rest 25784}#))
                 #{req 25783}#)))
         (let ((#{vars 25788}#
                 (map #{gen-var 4359}# #{ids 25787}#)))
           (let ((#{labels 25789}#
                   (#{gen-labels 4316}# #{ids 25787}#)))
             (#{build-simple-lambda 4289}#
               #{s 25781}#
               (map syntax->datum #{req 25783}#)
               (if #{rest 25784}#
                 (syntax->datum #{rest 25784}#)
                 #f)
               #{vars 25788}#
               #{meta 25785}#
               (#{chi-body 4349}#
                 #{body 25786}#
                 (#{wrap 4338}#
                   (begin
                     (if (if (pair? #{e 25778}#) #{s 25781}# #f)
                       (set-source-properties! #{e 25778}# #{s 25781}#))
                     #{e 25778}#)
                   #{w 25780}#
                   #{mod 25782}#)
                 (#{extend-var-env 4308}#
                   #{labels 25789}#
                   #{vars 25788}#
                   #{r 25779}#)
                 (#{make-binding-wrap 4327}#
                   #{ids 25787}#
                   #{labels 25789}#
                   #{w 25780}#)
                 #{mod 25782}#)))))))
   (#{lambda*-formals 4356}#
     (lambda (#{orig-args 26089}#)
       (letrec*
         ((#{req 26090}#
            (lambda (#{args 26097}# #{rreq 26098}#)
              (let ((#{tmp 26100}# ($sc-dispatch #{args 26097}# '())))
                (if #{tmp 26100}#
                  (@apply
                    (lambda ()
                      (#{check 26094}#
                        (reverse #{rreq 26098}#)
                        '()
                        #f
                        '()))
                    #{tmp 26100}#)
                  (let ((#{tmp 26106}#
                          ($sc-dispatch #{args 26097}# '(any . any))))
                    (if (if #{tmp 26106}#
                          (@apply
                            (lambda (#{a 26110}# #{b 26111}#)
                              (if (symbol? #{a 26110}#)
                                #t
                                (if (if (vector? #{a 26110}#)
                                      (if (= (vector-length #{a 26110}#) 4)
                                        (eq? (vector-ref #{a 26110}# 0)
                                             'syntax-object)
                                        #f)
                                      #f)
                                  (symbol? (vector-ref #{a 26110}# 1))
                                  #f)))
                            #{tmp 26106}#)
                          #f)
                      (@apply
                        (lambda (#{a 26138}# #{b 26139}#)
                          (#{req 26090}#
                            #{b 26139}#
                            (cons #{a 26138}# #{rreq 26098}#)))
                        #{tmp 26106}#)
                      (let ((#{tmp 26140}#
                              ($sc-dispatch #{args 26097}# '(any . any))))
                        (if (if #{tmp 26140}#
                              (@apply
                                (lambda (#{a 26144}# #{b 26145}#)
                                  (eq? (syntax->datum #{a 26144}#) #:optional))
                                #{tmp 26140}#)
                              #f)
                          (@apply
                            (lambda (#{a 26146}# #{b 26147}#)
                              (#{opt 26091}#
                                #{b 26147}#
                                (reverse #{rreq 26098}#)
                                '()))
                            #{tmp 26140}#)
                          (let ((#{tmp 26150}#
                                  ($sc-dispatch #{args 26097}# '(any . any))))
                            (if (if #{tmp 26150}#
                                  (@apply
                                    (lambda (#{a 26154}# #{b 26155}#)
                                      (eq? (syntax->datum #{a 26154}#) #:key))
                                    #{tmp 26150}#)
                                  #f)
                              (@apply
                                (lambda (#{a 26156}# #{b 26157}#)
                                  (#{key 26092}#
                                    #{b 26157}#
                                    (reverse #{rreq 26098}#)
                                    '()
                                    '()))
                                #{tmp 26150}#)
                              (let ((#{tmp 26160}#
                                      ($sc-dispatch
                                        #{args 26097}#
                                        '(any any))))
                                (if (if #{tmp 26160}#
                                      (@apply
                                        (lambda (#{a 26164}# #{b 26165}#)
                                          (eq? (syntax->datum #{a 26164}#)
                                               #:rest))
                                        #{tmp 26160}#)
                                      #f)
                                  (@apply
                                    (lambda (#{a 26166}# #{b 26167}#)
                                      (#{rest 26093}#
                                        #{b 26167}#
                                        (reverse #{rreq 26098}#)
                                        '()
                                        '()))
                                    #{tmp 26160}#)
                                  (let ((#{tmp 26170}# (list #{args 26097}#)))
                                    (if (@apply
                                          (lambda (#{r 26172}#)
                                            (if (symbol? #{r 26172}#)
                                              #t
                                              (if (if (vector? #{r 26172}#)
                                                    (if (= (vector-length
                                                             #{r 26172}#)
                                                           4)
                                                      (eq? (vector-ref
                                                             #{r 26172}#
                                                             0)
                                                           'syntax-object)
                                                      #f)
                                                    #f)
                                                (symbol?
                                                  (vector-ref #{r 26172}# 1))
                                                #f)))
                                          #{tmp 26170}#)
                                      (@apply
                                        (lambda (#{r 26202}#)
                                          (#{rest 26093}#
                                            #{r 26202}#
                                            (reverse #{rreq 26098}#)
                                            '()
                                            '()))
                                        #{tmp 26170}#)
                                      (syntax-violation
                                        'lambda*
                                        "invalid argument list"
                                        #{orig-args 26089}#
                                        #{args 26097}#)))))))))))))))
          (#{opt 26091}#
            (lambda (#{args 26221}# #{req 26222}# #{ropt 26223}#)
              (let ((#{tmp 26225}# ($sc-dispatch #{args 26221}# '())))
                (if #{tmp 26225}#
                  (@apply
                    (lambda ()
                      (#{check 26094}#
                        #{req 26222}#
                        (reverse #{ropt 26223}#)
                        #f
                        '()))
                    #{tmp 26225}#)
                  (let ((#{tmp 26231}#
                          ($sc-dispatch #{args 26221}# '(any . any))))
                    (if (if #{tmp 26231}#
                          (@apply
                            (lambda (#{a 26235}# #{b 26236}#)
                              (if (symbol? #{a 26235}#)
                                #t
                                (if (if (vector? #{a 26235}#)
                                      (if (= (vector-length #{a 26235}#) 4)
                                        (eq? (vector-ref #{a 26235}# 0)
                                             'syntax-object)
                                        #f)
                                      #f)
                                  (symbol? (vector-ref #{a 26235}# 1))
                                  #f)))
                            #{tmp 26231}#)
                          #f)
                      (@apply
                        (lambda (#{a 26263}# #{b 26264}#)
                          (#{opt 26091}#
                            #{b 26264}#
                            #{req 26222}#
                            (cons (cons #{a 26263}#
                                        '(#(syntax-object
                                            #f
                                            ((top)
                                             #(ribcage
                                               #(a b)
                                               #((top) (top))
                                               #("i2369" "i2370"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(args req ropt)
                                               #((top) (top) (top))
                                               #("i2359" "i2360" "i2361"))
                                             #(ribcage
                                               (check rest key opt req)
                                               ((top) (top) (top) (top) (top))
                                               ("i2305"
                                                "i2303"
                                                "i2301"
                                                "i2299"
                                                "i2297"))
                                             #(ribcage
                                               #(orig-args)
                                               #((top))
                                               #("i2296"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i467"
                                                "i465"
                                                "i463"
                                                "i461"
                                                "i459"
                                                "i457"
                                                "i455"
                                                "i453"
                                                "i451"
                                                "i449"
                                                "i447"
                                                "i445"
                                                "i443"
                                                "i441"
                                                "i439"
                                                "i437"
                                                "i435"
                                                "i433"
                                                "i431"
                                                "i429"
                                                "i427"
                                                "i425"
                                                "i423"
                                                "i421"
                                                "i419"
                                                "i417"
                                                "i415"
                                                "i413"
                                                "i411"
                                                "i409"
                                                "i407"
                                                "i405"
                                                "i403"
                                                "i401"
                                                "i399"
                                                "i398"
                                                "i396"
                                                "i393"
                                                "i392"
                                                "i391"
                                                "i389"
                                                "i388"
                                                "i386"
                                                "i384"
                                                "i382"
                                                "i380"
                                                "i378"
                                                "i376"
                                                "i374"
                                                "i372"
                                                "i369"
                                                "i367"
                                                "i366"
                                                "i364"
                                                "i362"
                                                "i360"
                                                "i358"
                                                "i357"
                                                "i356"
                                                "i355"
                                                "i353"
                                                "i352"
                                                "i349"
                                                "i347"
                                                "i345"
                                                "i343"
                                                "i341"
                                                "i339"
                                                "i337"
                                                "i336"
                                                "i335"
                                                "i333"
                                                "i331"
                                                "i330"
                                                "i327"
                                                "i326"
                                                "i324"
                                                "i322"
                                                "i320"
                                                "i318"
                                                "i316"
                                                "i314"
                                                "i312"
                                                "i310"
                                                "i308"
                                                "i305"
                                                "i303"
                                                "i301"
                                                "i299"
                                                "i297"
                                                "i295"
                                                "i293"
                                                "i291"
                                                "i289"
                                                "i287"
                                                "i285"
                                                "i283"
                                                "i281"
                                                "i279"
                                                "i277"
                                                "i275"
                                                "i273"
                                                "i271"
                                                "i269"
                                                "i267"
                                                "i265"
                                                "i263"
                                                "i261"
                                                "i260"
                                                "i257"
                                                "i255"
                                                "i254"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i249"
                                                "i247"
                                                "i245"
                                                "i242"
                                                "i240"
                                                "i238"
                                                "i236"
                                                "i234"
                                                "i232"
                                                "i230"
                                                "i228"
                                                "i226"
                                                "i224"
                                                "i222"
                                                "i220"
                                                "i218"
                                                "i216"
                                                "i214"
                                                "i212"
                                                "i210"
                                                "i208"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i46" "i45" "i44")))
                                            (hygiene guile))))
                                  #{ropt 26223}#)))
                        #{tmp 26231}#)
                      (let ((#{tmp 26265}#
                              ($sc-dispatch
                                #{args 26221}#
                                '((any any) . any))))
                        (if (if #{tmp 26265}#
                              (@apply
                                (lambda (#{a 26269}#
                                         #{init 26270}#
                                         #{b 26271}#)
                                  (if (symbol? #{a 26269}#)
                                    #t
                                    (if (if (vector? #{a 26269}#)
                                          (if (= (vector-length #{a 26269}#) 4)
                                            (eq? (vector-ref #{a 26269}# 0)
                                                 'syntax-object)
                                            #f)
                                          #f)
                                      (symbol? (vector-ref #{a 26269}# 1))
                                      #f)))
                                #{tmp 26265}#)
                              #f)
                          (@apply
                            (lambda (#{a 26298}# #{init 26299}# #{b 26300}#)
                              (#{opt 26091}#
                                #{b 26300}#
                                #{req 26222}#
                                (cons (list #{a 26298}# #{init 26299}#)
                                      #{ropt 26223}#)))
                            #{tmp 26265}#)
                          (let ((#{tmp 26301}#
                                  ($sc-dispatch #{args 26221}# '(any . any))))
                            (if (if #{tmp 26301}#
                                  (@apply
                                    (lambda (#{a 26305}# #{b 26306}#)
                                      (eq? (syntax->datum #{a 26305}#) #:key))
                                    #{tmp 26301}#)
                                  #f)
                              (@apply
                                (lambda (#{a 26307}# #{b 26308}#)
                                  (#{key 26092}#
                                    #{b 26308}#
                                    #{req 26222}#
                                    (reverse #{ropt 26223}#)
                                    '()))
                                #{tmp 26301}#)
                              (let ((#{tmp 26311}#
                                      ($sc-dispatch
                                        #{args 26221}#
                                        '(any any))))
                                (if (if #{tmp 26311}#
                                      (@apply
                                        (lambda (#{a 26315}# #{b 26316}#)
                                          (eq? (syntax->datum #{a 26315}#)
                                               #:rest))
                                        #{tmp 26311}#)
                                      #f)
                                  (@apply
                                    (lambda (#{a 26317}# #{b 26318}#)
                                      (#{rest 26093}#
                                        #{b 26318}#
                                        #{req 26222}#
                                        (reverse #{ropt 26223}#)
                                        '()))
                                    #{tmp 26311}#)
                                  (let ((#{tmp 26321}# (list #{args 26221}#)))
                                    (if (@apply
                                          (lambda (#{r 26323}#)
                                            (if (symbol? #{r 26323}#)
                                              #t
                                              (if (if (vector? #{r 26323}#)
                                                    (if (= (vector-length
                                                             #{r 26323}#)
                                                           4)
                                                      (eq? (vector-ref
                                                             #{r 26323}#
                                                             0)
                                                           'syntax-object)
                                                      #f)
                                                    #f)
                                                (symbol?
                                                  (vector-ref #{r 26323}# 1))
                                                #f)))
                                          #{tmp 26321}#)
                                      (@apply
                                        (lambda (#{r 26353}#)
                                          (#{rest 26093}#
                                            #{r 26353}#
                                            #{req 26222}#
                                            (reverse #{ropt 26223}#)
                                            '()))
                                        #{tmp 26321}#)
                                      (syntax-violation
                                        'lambda*
                                        "invalid optional argument list"
                                        #{orig-args 26089}#
                                        #{args 26221}#)))))))))))))))
          (#{key 26092}#
            (lambda (#{args 26372}#
                     #{req 26373}#
                     #{opt 26374}#
                     #{rkey 26375}#)
              (let ((#{tmp 26377}# ($sc-dispatch #{args 26372}# '())))
                (if #{tmp 26377}#
                  (@apply
                    (lambda ()
                      (#{check 26094}#
                        #{req 26373}#
                        #{opt 26374}#
                        #f
                        (cons #f (reverse #{rkey 26375}#))))
                    #{tmp 26377}#)
                  (let ((#{tmp 26383}#
                          ($sc-dispatch #{args 26372}# '(any . any))))
                    (if (if #{tmp 26383}#
                          (@apply
                            (lambda (#{a 26387}# #{b 26388}#)
                              (if (symbol? #{a 26387}#)
                                #t
                                (if (if (vector? #{a 26387}#)
                                      (if (= (vector-length #{a 26387}#) 4)
                                        (eq? (vector-ref #{a 26387}# 0)
                                             'syntax-object)
                                        #f)
                                      #f)
                                  (symbol? (vector-ref #{a 26387}# 1))
                                  #f)))
                            #{tmp 26383}#)
                          #f)
                      (@apply
                        (lambda (#{a 26415}# #{b 26416}#)
                          (let ((#{tmp 26417}#
                                  (symbol->keyword
                                    (syntax->datum #{a 26415}#))))
                            (#{key 26092}#
                              #{b 26416}#
                              #{req 26373}#
                              #{opt 26374}#
                              (cons (cons #{tmp 26417}#
                                          (cons #{a 26415}#
                                                '(#(syntax-object
                                                    #f
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(k)
                                                       #((top))
                                                       #("i2432"))
                                                     #(ribcage
                                                       #(a b)
                                                       #((top) (top))
                                                       #("i2426" "i2427"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(args req opt rkey)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i2415"
                                                         "i2416"
                                                         "i2417"
                                                         "i2418"))
                                                     #(ribcage
                                                       (check rest key opt req)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i2305"
                                                        "i2303"
                                                        "i2301"
                                                        "i2299"
                                                        "i2297"))
                                                     #(ribcage
                                                       #(orig-args)
                                                       #((top))
                                                       #("i2296"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i467"
                                                        "i465"
                                                        "i463"
                                                        "i461"
                                                        "i459"
                                                        "i457"
                                                        "i455"
                                                        "i453"
                                                        "i451"
                                                        "i449"
                                                        "i447"
                                                        "i445"
                                                        "i443"
                                                        "i441"
                                                        "i439"
                                                        "i437"
                                                        "i435"
                                                        "i433"
                                                        "i431"
                                                        "i429"
                                                        "i427"
                                                        "i425"
                                                        "i423"
                                                        "i421"
                                                        "i419"
                                                        "i417"
                                                        "i415"
                                                        "i413"
                                                        "i411"
                                                        "i409"
                                                        "i407"
                                                        "i405"
                                                        "i403"
                                                        "i401"
                                                        "i399"
                                                        "i398"
                                                        "i396"
                                                        "i393"
                                                        "i392"
                                                        "i391"
                                                        "i389"
                                                        "i388"
                                                        "i386"
                                                        "i384"
                                                        "i382"
                                                        "i380"
                                                        "i378"
                                                        "i376"
                                                        "i374"
                                                        "i372"
                                                        "i369"
                                                        "i367"
                                                        "i366"
                                                        "i364"
                                                        "i362"
                                                        "i360"
                                                        "i358"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i353"
                                                        "i352"
                                                        "i349"
                                                        "i347"
                                                        "i345"
                                                        "i343"
                                                        "i341"
                                                        "i339"
                                                        "i337"
                                                        "i336"
                                                        "i335"
                                                        "i333"
                                                        "i331"
                                                        "i330"
                                                        "i327"
                                                        "i326"
                                                        "i324"
                                                        "i322"
                                                        "i320"
                                                        "i318"
                                                        "i316"
                                                        "i314"
                                                        "i312"
                                                        "i310"
                                                        "i308"
                                                        "i305"
                                                        "i303"
                                                        "i301"
                                                        "i299"
                                                        "i297"
                                                        "i295"
                                                        "i293"
                                                        "i291"
                                                        "i289"
                                                        "i287"
                                                        "i285"
                                                        "i283"
                                                        "i281"
                                                        "i279"
                                                        "i277"
                                                        "i275"
                                                        "i273"
                                                        "i271"
                                                        "i269"
                                                        "i267"
                                                        "i265"
                                                        "i263"
                                                        "i261"
                                                        "i260"
                                                        "i257"
                                                        "i255"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i249"
                                                        "i247"
                                                        "i245"
                                                        "i242"
                                                        "i240"
                                                        "i238"
                                                        "i236"
                                                        "i234"
                                                        "i232"
                                                        "i230"
                                                        "i228"
                                                        "i226"
                                                        "i224"
                                                        "i222"
                                                        "i220"
                                                        "i218"
                                                        "i216"
                                                        "i214"
                                                        "i212"
                                                        "i210"
                                                        "i208"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i46" "i45" "i44")))
                                                    (hygiene guile)))))
                                    #{rkey 26375}#))))
                        #{tmp 26383}#)
                      (let ((#{tmp 26420}#
                              ($sc-dispatch
                                #{args 26372}#
                                '((any any) . any))))
                        (if (if #{tmp 26420}#
                              (@apply
                                (lambda (#{a 26424}#
                                         #{init 26425}#
                                         #{b 26426}#)
                                  (if (symbol? #{a 26424}#)
                                    #t
                                    (if (if (vector? #{a 26424}#)
                                          (if (= (vector-length #{a 26424}#) 4)
                                            (eq? (vector-ref #{a 26424}# 0)
                                                 'syntax-object)
                                            #f)
                                          #f)
                                      (symbol? (vector-ref #{a 26424}# 1))
                                      #f)))
                                #{tmp 26420}#)
                              #f)
                          (@apply
                            (lambda (#{a 26453}# #{init 26454}# #{b 26455}#)
                              (let ((#{tmp 26456}#
                                      (symbol->keyword
                                        (syntax->datum #{a 26453}#))))
                                (#{key 26092}#
                                  #{b 26455}#
                                  #{req 26373}#
                                  #{opt 26374}#
                                  (cons (list #{tmp 26456}#
                                              #{a 26453}#
                                              #{init 26454}#)
                                        #{rkey 26375}#))))
                            #{tmp 26420}#)
                          (let ((#{tmp 26459}#
                                  ($sc-dispatch
                                    #{args 26372}#
                                    '((any any any) . any))))
                            (if (if #{tmp 26459}#
                                  (@apply
                                    (lambda (#{a 26463}#
                                             #{init 26464}#
                                             #{k 26465}#
                                             #{b 26466}#)
                                      (if (if (symbol? #{a 26463}#)
                                            #t
                                            (if (if (vector? #{a 26463}#)
                                                  (if (= (vector-length
                                                           #{a 26463}#)
                                                         4)
                                                    (eq? (vector-ref
                                                           #{a 26463}#
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                  #f)
                                              (symbol?
                                                (vector-ref #{a 26463}# 1))
                                              #f))
                                        (keyword? (syntax->datum #{k 26465}#))
                                        #f))
                                    #{tmp 26459}#)
                                  #f)
                              (@apply
                                (lambda (#{a 26493}#
                                         #{init 26494}#
                                         #{k 26495}#
                                         #{b 26496}#)
                                  (#{key 26092}#
                                    #{b 26496}#
                                    #{req 26373}#
                                    #{opt 26374}#
                                    (cons (list #{k 26495}#
                                                #{a 26493}#
                                                #{init 26494}#)
                                          #{rkey 26375}#)))
                                #{tmp 26459}#)
                              (let ((#{tmp 26497}#
                                      ($sc-dispatch #{args 26372}# '(any))))
                                (if (if #{tmp 26497}#
                                      (@apply
                                        (lambda (#{aok 26501}#)
                                          (eq? (syntax->datum #{aok 26501}#)
                                               #:allow-other-keys))
                                        #{tmp 26497}#)
                                      #f)
                                  (@apply
                                    (lambda (#{aok 26502}#)
                                      (#{check 26094}#
                                        #{req 26373}#
                                        #{opt 26374}#
                                        #f
                                        (cons #t (reverse #{rkey 26375}#))))
                                    #{tmp 26497}#)
                                  (let ((#{tmp 26505}#
                                          ($sc-dispatch
                                            #{args 26372}#
                                            '(any any any))))
                                    (if (if #{tmp 26505}#
                                          (@apply
                                            (lambda (#{aok 26509}#
                                                     #{a 26510}#
                                                     #{b 26511}#)
                                              (if (eq? (syntax->datum
                                                         #{aok 26509}#)
                                                       #:allow-other-keys)
                                                (eq? (syntax->datum
                                                       #{a 26510}#)
                                                     #:rest)
                                                #f))
                                            #{tmp 26505}#)
                                          #f)
                                      (@apply
                                        (lambda (#{aok 26512}#
                                                 #{a 26513}#
                                                 #{b 26514}#)
                                          (#{rest 26093}#
                                            #{b 26514}#
                                            #{req 26373}#
                                            #{opt 26374}#
                                            (cons #t
                                                  (reverse #{rkey 26375}#))))
                                        #{tmp 26505}#)
                                      (let ((#{tmp 26517}#
                                              ($sc-dispatch
                                                #{args 26372}#
                                                '(any . any))))
                                        (if (if #{tmp 26517}#
                                              (@apply
                                                (lambda (#{aok 26521}#
                                                         #{r 26522}#)
                                                  (if (eq? (syntax->datum
                                                             #{aok 26521}#)
                                                           #:allow-other-keys)
                                                    (if (symbol? #{r 26522}#)
                                                      #t
                                                      (if (if (vector?
                                                                #{r 26522}#)
                                                            (if (= (vector-length
                                                                     #{r 26522}#)
                                                                   4)
                                                              (eq? (vector-ref
                                                                     #{r 26522}#
                                                                     0)
                                                                   'syntax-object)
                                                              #f)
                                                            #f)
                                                        (symbol?
                                                          (vector-ref
                                                            #{r 26522}#
                                                            1))
                                                        #f))
                                                    #f))
                                                #{tmp 26517}#)
                                              #f)
                                          (@apply
                                            (lambda (#{aok 26549}# #{r 26550}#)
                                              (#{rest 26093}#
                                                #{r 26550}#
                                                #{req 26373}#
                                                #{opt 26374}#
                                                (cons #t
                                                      (reverse
                                                        #{rkey 26375}#))))
                                            #{tmp 26517}#)
                                          (let ((#{tmp 26553}#
                                                  ($sc-dispatch
                                                    #{args 26372}#
                                                    '(any any))))
                                            (if (if #{tmp 26553}#
                                                  (@apply
                                                    (lambda (#{a 26557}#
                                                             #{b 26558}#)
                                                      (eq? (syntax->datum
                                                             #{a 26557}#)
                                                           #:rest))
                                                    #{tmp 26553}#)
                                                  #f)
                                              (@apply
                                                (lambda (#{a 26559}#
                                                         #{b 26560}#)
                                                  (#{rest 26093}#
                                                    #{b 26560}#
                                                    #{req 26373}#
                                                    #{opt 26374}#
                                                    (cons #f
                                                          (reverse
                                                            #{rkey 26375}#))))
                                                #{tmp 26553}#)
                                              (let ((#{tmp 26563}#
                                                      (list #{args 26372}#)))
                                                (if (@apply
                                                      (lambda (#{r 26565}#)
                                                        (if (symbol?
                                                              #{r 26565}#)
                                                          #t
                                                          (if (if (vector?
                                                                    #{r 26565}#)
                                                                (if (= (vector-length
                                                                         #{r 26565}#)
                                                                       4)
                                                                  (eq? (vector-ref
                                                                         #{r 26565}#
                                                                         0)
                                                                       'syntax-object)
                                                                  #f)
                                                                #f)
                                                            (symbol?
                                                              (vector-ref
                                                                #{r 26565}#
                                                                1))
                                                            #f)))
                                                      #{tmp 26563}#)
                                                  (@apply
                                                    (lambda (#{r 26595}#)
                                                      (#{rest 26093}#
                                                        #{r 26595}#
                                                        #{req 26373}#
                                                        #{opt 26374}#
                                                        (cons #f
                                                              (reverse
                                                                #{rkey 26375}#))))
                                                    #{tmp 26563}#)
                                                  (syntax-violation
                                                    'lambda*
                                                    "invalid keyword argument list"
                                                    #{orig-args 26089}#
                                                    #{args 26372}#)))))))))))))))))))))
          (#{rest 26093}#
            (lambda (#{args 26623}#
                     #{req 26624}#
                     #{opt 26625}#
                     #{kw 26626}#)
              (let ((#{tmp 26628}# (list #{args 26623}#)))
                (if (@apply
                      (lambda (#{r 26630}#)
                        (if (symbol? #{r 26630}#)
                          #t
                          (if (if (vector? #{r 26630}#)
                                (if (= (vector-length #{r 26630}#) 4)
                                  (eq? (vector-ref #{r 26630}# 0)
                                       'syntax-object)
                                  #f)
                                #f)
                            (symbol? (vector-ref #{r 26630}# 1))
                            #f)))
                      #{tmp 26628}#)
                  (@apply
                    (lambda (#{r 26660}#)
                      (#{check 26094}#
                        #{req 26624}#
                        #{opt 26625}#
                        #{r 26660}#
                        #{kw 26626}#))
                    #{tmp 26628}#)
                  (syntax-violation
                    'lambda*
                    "invalid rest argument"
                    #{orig-args 26089}#
                    #{args 26623}#)))))
          (#{check 26094}#
            (lambda (#{req 26664}#
                     #{opt 26665}#
                     #{rest 26666}#
                     #{kw 26667}#)
              (if (#{distinct-bound-ids? 4336}#
                    (append
                      #{req 26664}#
                      (map car #{opt 26665}#)
                      (if #{rest 26666}# (list #{rest 26666}#) '())
                      (if (pair? #{kw 26667}#)
                        (map cadr (cdr #{kw 26667}#))
                        '())))
                (values
                  #{req 26664}#
                  #{opt 26665}#
                  #{rest 26666}#
                  #{kw 26667}#)
                (syntax-violation
                  'lambda*
                  "duplicate identifier in argument list"
                  #{orig-args 26089}#)))))
         (#{req 26090}# #{orig-args 26089}# '()))))
   (#{chi-lambda-case 4357}#
     (lambda (#{e 26787}#
              #{r 26788}#
              #{w 26789}#
              #{s 26790}#
              #{mod 26791}#
              #{get-formals 26792}#
              #{clauses 26793}#)
       (letrec*
         ((#{expand-req 26794}#
            (lambda (#{req 26928}#
                     #{opt 26929}#
                     #{rest 26930}#
                     #{kw 26931}#
                     #{body 26932}#)
              (let ((#{vars 26933}#
                      (map #{gen-var 4359}# #{req 26928}#))
                    (#{labels 26934}#
                      (#{gen-labels 4316}# #{req 26928}#)))
                (let ((#{r* 26935}#
                        (#{extend-var-env 4308}#
                          #{labels 26934}#
                          #{vars 26933}#
                          #{r 26788}#))
                      (#{w* 26936}#
                        (#{make-binding-wrap 4327}#
                          #{req 26928}#
                          #{labels 26934}#
                          #{w 26789}#)))
                  (#{expand-opt 26795}#
                    (map syntax->datum #{req 26928}#)
                    #{opt 26929}#
                    #{rest 26930}#
                    #{kw 26931}#
                    #{body 26932}#
                    (reverse #{vars 26933}#)
                    #{r* 26935}#
                    #{w* 26936}#
                    '()
                    '())))))
          (#{expand-opt 26795}#
            (lambda (#{req 27152}#
                     #{opt 27153}#
                     #{rest 27154}#
                     #{kw 27155}#
                     #{body 27156}#
                     #{vars 27157}#
                     #{r* 27158}#
                     #{w* 27159}#
                     #{out 27160}#
                     #{inits 27161}#)
              (if (pair? #{opt 27153}#)
                (let ((#{tmp 27162}# (car #{opt 27153}#)))
                  (let ((#{tmp 27163}#
                          ($sc-dispatch #{tmp 27162}# '(any any))))
                    (if #{tmp 27163}#
                      (@apply
                        (lambda (#{id 27165}# #{i 27166}#)
                          (let ((#{v 27167}#
                                  (let ((#{id 27175}#
                                          (if (if (vector? #{id 27165}#)
                                                (if (= (vector-length
                                                         #{id 27165}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{id 27165}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (vector-ref #{id 27165}# 1)
                                            #{id 27165}#)))
                                    (gensym
                                      (string-append
                                        (symbol->string #{id 27175}#)
                                        " ")))))
                            (let ((#{l 27168}#
                                    (#{gen-labels 4316}# (list #{v 27167}#))))
                              (let ((#{r** 27169}#
                                      (#{extend-var-env 4308}#
                                        #{l 27168}#
                                        (list #{v 27167}#)
                                        #{r* 27158}#)))
                                (let ((#{w** 27170}#
                                        (#{make-binding-wrap 4327}#
                                          (list #{id 27165}#)
                                          #{l 27168}#
                                          #{w* 27159}#)))
                                  (#{expand-opt 26795}#
                                    #{req 27152}#
                                    (cdr #{opt 27153}#)
                                    #{rest 27154}#
                                    #{kw 27155}#
                                    #{body 27156}#
                                    (cons #{v 27167}# #{vars 27157}#)
                                    #{r** 27169}#
                                    #{w** 27170}#
                                    (cons (syntax->datum #{id 27165}#)
                                          #{out 27160}#)
                                    (cons (#{chi 4345}#
                                            #{i 27166}#
                                            #{r* 27158}#
                                            #{w* 27159}#
                                            #{mod 26791}#)
                                          #{inits 27161}#)))))))
                        #{tmp 27163}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp 27162}#))))
                (if #{rest 27154}#
                  (let ((#{v 27447}#
                          (let ((#{id 27457}#
                                  (if (if (vector? #{rest 27154}#)
                                        (if (= (vector-length #{rest 27154}#)
                                               4)
                                          (eq? (vector-ref #{rest 27154}# 0)
                                               'syntax-object)
                                          #f)
                                        #f)
                                    (vector-ref #{rest 27154}# 1)
                                    #{rest 27154}#)))
                            (gensym
                              (string-append
                                (symbol->string #{id 27457}#)
                                " ")))))
                    (let ((#{l 27448}#
                            (#{gen-labels 4316}# (list #{v 27447}#))))
                      (let ((#{r* 27449}#
                              (#{extend-var-env 4308}#
                                #{l 27448}#
                                (list #{v 27447}#)
                                #{r* 27158}#)))
                        (let ((#{w* 27450}#
                                (#{make-binding-wrap 4327}#
                                  (list #{rest 27154}#)
                                  #{l 27448}#
                                  #{w* 27159}#)))
                          (#{expand-kw 26796}#
                            #{req 27152}#
                            (if (pair? #{out 27160}#)
                              (reverse #{out 27160}#)
                              #f)
                            (syntax->datum #{rest 27154}#)
                            (if (pair? #{kw 27155}#)
                              (cdr #{kw 27155}#)
                              #{kw 27155}#)
                            #{body 27156}#
                            (cons #{v 27447}# #{vars 27157}#)
                            #{r* 27449}#
                            #{w* 27450}#
                            (if (pair? #{kw 27155}#) (car #{kw 27155}#) #f)
                            '()
                            #{inits 27161}#)))))
                  (#{expand-kw 26796}#
                    #{req 27152}#
                    (if (pair? #{out 27160}#)
                      (reverse #{out 27160}#)
                      #f)
                    #f
                    (if (pair? #{kw 27155}#)
                      (cdr #{kw 27155}#)
                      #{kw 27155}#)
                    #{body 27156}#
                    #{vars 27157}#
                    #{r* 27158}#
                    #{w* 27159}#
                    (if (pair? #{kw 27155}#) (car #{kw 27155}#) #f)
                    '()
                    #{inits 27161}#)))))
          (#{expand-kw 26796}#
            (lambda (#{req 27657}#
                     #{opt 27658}#
                     #{rest 27659}#
                     #{kw 27660}#
                     #{body 27661}#
                     #{vars 27662}#
                     #{r* 27663}#
                     #{w* 27664}#
                     #{aok 27665}#
                     #{out 27666}#
                     #{inits 27667}#)
              (if (pair? #{kw 27660}#)
                (let ((#{tmp 27668}# (car #{kw 27660}#)))
                  (let ((#{tmp 27669}#
                          ($sc-dispatch #{tmp 27668}# '(any any any))))
                    (if #{tmp 27669}#
                      (@apply
                        (lambda (#{k 27671}# #{id 27672}# #{i 27673}#)
                          (let ((#{v 27674}#
                                  (let ((#{id 27682}#
                                          (if (if (vector? #{id 27672}#)
                                                (if (= (vector-length
                                                         #{id 27672}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{id 27672}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (vector-ref #{id 27672}# 1)
                                            #{id 27672}#)))
                                    (gensym
                                      (string-append
                                        (symbol->string #{id 27682}#)
                                        " ")))))
                            (let ((#{l 27675}#
                                    (#{gen-labels 4316}# (list #{v 27674}#))))
                              (let ((#{r** 27676}#
                                      (#{extend-var-env 4308}#
                                        #{l 27675}#
                                        (list #{v 27674}#)
                                        #{r* 27663}#)))
                                (let ((#{w** 27677}#
                                        (#{make-binding-wrap 4327}#
                                          (list #{id 27672}#)
                                          #{l 27675}#
                                          #{w* 27664}#)))
                                  (#{expand-kw 26796}#
                                    #{req 27657}#
                                    #{opt 27658}#
                                    #{rest 27659}#
                                    (cdr #{kw 27660}#)
                                    #{body 27661}#
                                    (cons #{v 27674}# #{vars 27662}#)
                                    #{r** 27676}#
                                    #{w** 27677}#
                                    #{aok 27665}#
                                    (cons (list (syntax->datum #{k 27671}#)
                                                (syntax->datum #{id 27672}#)
                                                #{v 27674}#)
                                          #{out 27666}#)
                                    (cons (#{chi 4345}#
                                            #{i 27673}#
                                            #{r* 27663}#
                                            #{w* 27664}#
                                            #{mod 26791}#)
                                          #{inits 27667}#)))))))
                        #{tmp 27669}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp 27668}#))))
                (#{expand-body 26797}#
                  #{req 27657}#
                  #{opt 27658}#
                  #{rest 27659}#
                  (if (if #{aok 27665}#
                        #{aok 27665}#
                        (pair? #{out 27666}#))
                    (cons #{aok 27665}# (reverse #{out 27666}#))
                    #f)
                  #{body 27661}#
                  (reverse #{vars 27662}#)
                  #{r* 27663}#
                  #{w* 27664}#
                  (reverse #{inits 27667}#)
                  '()))))
          (#{expand-body 26797}#
            (lambda (#{req 27963}#
                     #{opt 27964}#
                     #{rest 27965}#
                     #{kw 27966}#
                     #{body 27967}#
                     #{vars 27968}#
                     #{r* 27969}#
                     #{w* 27970}#
                     #{inits 27971}#
                     #{meta 27972}#)
              (let ((#{tmp 27974}#
                      ($sc-dispatch
                        #{body 27967}#
                        '(any any . each-any))))
                (if (if #{tmp 27974}#
                      (@apply
                        (lambda (#{docstring 27978}# #{e1 27979}# #{e2 27980}#)
                          (string? (syntax->datum #{docstring 27978}#)))
                        #{tmp 27974}#)
                      #f)
                  (@apply
                    (lambda (#{docstring 27981}# #{e1 27982}# #{e2 27983}#)
                      (#{expand-body 26797}#
                        #{req 27963}#
                        #{opt 27964}#
                        #{rest 27965}#
                        #{kw 27966}#
                        (cons #{e1 27982}# #{e2 27983}#)
                        #{vars 27968}#
                        #{r* 27969}#
                        #{w* 27970}#
                        #{inits 27971}#
                        (append
                          #{meta 27972}#
                          (list (cons 'documentation
                                      (syntax->datum #{docstring 27981}#))))))
                    #{tmp 27974}#)
                  (let ((#{tmp 27984}#
                          ($sc-dispatch
                            #{body 27967}#
                            '(#(vector #(each (any . any))) any . each-any))))
                    (if #{tmp 27984}#
                      (@apply
                        (lambda (#{k 27988}#
                                 #{v 27989}#
                                 #{e1 27990}#
                                 #{e2 27991}#)
                          (#{expand-body 26797}#
                            #{req 27963}#
                            #{opt 27964}#
                            #{rest 27965}#
                            #{kw 27966}#
                            (cons #{e1 27990}# #{e2 27991}#)
                            #{vars 27968}#
                            #{r* 27969}#
                            #{w* 27970}#
                            #{inits 27971}#
                            (append
                              #{meta 27972}#
                              (syntax->datum
                                (map cons #{k 27988}# #{v 27989}#)))))
                        #{tmp 27984}#)
                      (let ((#{tmp 27992}#
                              ($sc-dispatch #{body 27967}# '(any . each-any))))
                        (if #{tmp 27992}#
                          (@apply
                            (lambda (#{e1 27996}# #{e2 27997}#)
                              (values
                                #{meta 27972}#
                                #{req 27963}#
                                #{opt 27964}#
                                #{rest 27965}#
                                #{kw 27966}#
                                #{inits 27971}#
                                #{vars 27968}#
                                (#{chi-body 4349}#
                                  (cons #{e1 27996}# #{e2 27997}#)
                                  (#{wrap 4338}#
                                    (begin
                                      (if (if (pair? #{e 26787}#)
                                            #{s 26790}#
                                            #f)
                                        (set-source-properties!
                                          #{e 26787}#
                                          #{s 26790}#))
                                      #{e 26787}#)
                                    #{w 26789}#
                                    #{mod 26791}#)
                                  #{r* 27969}#
                                  #{w* 27970}#
                                  #{mod 26791}#)))
                            #{tmp 27992}#)
                          (syntax-violation
                            #f
                            "source expression failed to match any pattern"
                            #{body 27967}#))))))))))
         (let ((#{tmp 26799}#
                 ($sc-dispatch #{clauses 26793}# '())))
           (if #{tmp 26799}#
             (@apply
               (lambda () (values '() #f))
               #{tmp 26799}#)
             (let ((#{tmp 26804}#
                     ($sc-dispatch
                       #{clauses 26793}#
                       '((any any . each-any)
                         .
                         #(each (any any . each-any))))))
               (if #{tmp 26804}#
                 (@apply
                   (lambda (#{args 26808}#
                            #{e1 26809}#
                            #{e2 26810}#
                            #{args* 26811}#
                            #{e1* 26812}#
                            #{e2* 26813}#)
                     (call-with-values
                       (lambda ()
                         (#{get-formals 26792}# #{args 26808}#))
                       (lambda (#{req 26814}#
                                #{opt 26815}#
                                #{rest 26816}#
                                #{kw 26817}#)
                         (call-with-values
                           (lambda ()
                             (#{expand-req 26794}#
                               #{req 26814}#
                               #{opt 26815}#
                               #{rest 26816}#
                               #{kw 26817}#
                               (cons #{e1 26809}# #{e2 26810}#)))
                           (lambda (#{meta 26884}#
                                    #{req 26885}#
                                    #{opt 26886}#
                                    #{rest 26887}#
                                    #{kw 26888}#
                                    #{inits 26889}#
                                    #{vars 26890}#
                                    #{body 26891}#)
                             (call-with-values
                               (lambda ()
                                 (#{chi-lambda-case 4357}#
                                   #{e 26787}#
                                   #{r 26788}#
                                   #{w 26789}#
                                   #{s 26790}#
                                   #{mod 26791}#
                                   #{get-formals 26792}#
                                   (map (lambda (#{tmp 2775 26892}#
                                                 #{tmp 2774 26893}#
                                                 #{tmp 2773 26894}#)
                                          (cons #{tmp 2773 26894}#
                                                (cons #{tmp 2774 26893}#
                                                      #{tmp 2775 26892}#)))
                                        #{e2* 26813}#
                                        #{e1* 26812}#
                                        #{args* 26811}#)))
                               (lambda (#{meta* 26895}# #{else* 26896}#)
                                 (values
                                   (append #{meta 26884}# #{meta* 26895}#)
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 14)
                                     #{s 26790}#
                                     #{req 26885}#
                                     #{opt 26886}#
                                     #{rest 26887}#
                                     #{kw 26888}#
                                     #{inits 26889}#
                                     #{vars 26890}#
                                     #{body 26891}#
                                     #{else* 26896}#)))))))))
                   #{tmp 26804}#)
                 (syntax-violation
                   #f
                   "source expression failed to match any pattern"
                   #{clauses 26793}#))))))))
   (#{strip 4358}#
     (lambda (#{x 28034}# #{w 28035}#)
       (if (memq 'top (car #{w 28035}#))
         #{x 28034}#
         (letrec*
           ((#{f 28036}#
              (lambda (#{x 28039}#)
                (if (if (vector? #{x 28039}#)
                      (if (= (vector-length #{x 28039}#) 4)
                        (eq? (vector-ref #{x 28039}# 0) 'syntax-object)
                        #f)
                      #f)
                  (#{strip 4358}#
                    (vector-ref #{x 28039}# 1)
                    (vector-ref #{x 28039}# 2))
                  (if (pair? #{x 28039}#)
                    (let ((#{a 28058}# (#{f 28036}# (car #{x 28039}#)))
                          (#{d 28059}# (#{f 28036}# (cdr #{x 28039}#))))
                      (if (if (eq? #{a 28058}# (car #{x 28039}#))
                            (eq? #{d 28059}# (cdr #{x 28039}#))
                            #f)
                        #{x 28039}#
                        (cons #{a 28058}# #{d 28059}#)))
                    (if (vector? #{x 28039}#)
                      (let ((#{old 28062}# (vector->list #{x 28039}#)))
                        (let ((#{new 28063}# (map #{f 28036}# #{old 28062}#)))
                          (letrec*
                            ((#{lp 28064}#
                               (lambda (#{l1 28140}# #{l2 28141}#)
                                 (if (null? #{l1 28140}#)
                                   #{x 28039}#
                                   (if (eq? (car #{l1 28140}#)
                                            (car #{l2 28141}#))
                                     (#{lp 28064}#
                                       (cdr #{l1 28140}#)
                                       (cdr #{l2 28141}#))
                                     (list->vector #{new 28063}#))))))
                            (#{lp 28064}# #{old 28062}# #{new 28063}#))))
                      #{x 28039}#))))))
           (#{f 28036}# #{x 28034}#)))))
   (#{gen-var 4359}#
     (lambda (#{id 26940}#)
       (let ((#{id 26941}#
               (if (if (vector? #{id 26940}#)
                     (if (= (vector-length #{id 26940}#) 4)
                       (eq? (vector-ref #{id 26940}# 0) 'syntax-object)
                       #f)
                     #f)
                 (vector-ref #{id 26940}# 1)
                 #{id 26940}#)))
         (gensym
           (string-append (symbol->string #{id 26941}#) " "))))))
  (begin
    (module-define!
      (current-module)
      'letrec-syntax
      (make-syntax-transformer
        'letrec-syntax
        'local-syntax
        #t))
    (module-define!
      (current-module)
      'let-syntax
      (make-syntax-transformer
        'let-syntax
        'local-syntax
        #f))
    (#{global-extend 4311}#
      'core
      'fluid-let-syntax
      (lambda (#{e 4480}#
               #{r 4481}#
               #{w 4482}#
               #{s 4483}#
               #{mod 4484}#)
        (let ((#{tmp 4486}#
                ($sc-dispatch
                  #{e 4480}#
                  '(_ #(each (any any)) any . each-any))))
          (if (if #{tmp 4486}#
                (@apply
                  (lambda (#{var 4490}#
                           #{val 4491}#
                           #{e1 4492}#
                           #{e2 4493}#)
                    (#{valid-bound-ids? 4335}# #{var 4490}#))
                  #{tmp 4486}#)
                #f)
            (@apply
              (lambda (#{var 4571}#
                       #{val 4572}#
                       #{e1 4573}#
                       #{e2 4574}#)
                (let ((#{names 4575}#
                        (map (lambda (#{x 4765}#)
                               (#{id-var-name 4332}# #{x 4765}# #{w 4482}#))
                             #{var 4571}#)))
                  (begin
                    (for-each
                      (lambda (#{id 4576}# #{n 4577}#)
                        (let ((#{atom-key 4578}#
                                (car (let ((#{t 4702}#
                                             (assq #{n 4577}# #{r 4481}#)))
                                       (if #{t 4702}#
                                         (cdr #{t 4702}#)
                                         (if (symbol? #{n 4577}#)
                                           (let ((#{t 4707}#
                                                   (begin
                                                     (if (if (not #{mod 4484}#)
                                                           (current-module)
                                                           #f)
                                                       (warn "module system is booted, we should have a module"
                                                             #{n 4577}#))
                                                     (let ((#{v 4744}#
                                                             (module-variable
                                                               (if #{mod 4484}#
                                                                 (resolve-module
                                                                   (cdr #{mod 4484}#))
                                                                 (current-module))
                                                               #{n 4577}#)))
                                                       (if #{v 4744}#
                                                         (if (variable-bound?
                                                               #{v 4744}#)
                                                           (let ((#{val 4753}#
                                                                   (variable-ref
                                                                     #{v 4744}#)))
                                                             (if (macro?
                                                                   #{val 4753}#)
                                                               (if (macro-type
                                                                     #{val 4753}#)
                                                                 (cons (macro-type
                                                                         #{val 4753}#)
                                                                       (macro-binding
                                                                         #{val 4753}#))
                                                                 #f)
                                                               #f))
                                                           #f)
                                                         #f)))))
                                             (if #{t 4707}#
                                               #{t 4707}#
                                               '(global)))
                                           '(displaced-lexical)))))))
                          (if (let ((#{t 4611}# #{atom-key 4578}#))
                                (eqv? #{t 4611}# 'displaced-lexical))
                            (syntax-violation
                              'fluid-let-syntax
                              "identifier out of context"
                              #{e 4480}#
                              (#{wrap 4338}#
                                (begin
                                  (if (if (pair? #{id 4576}#) #{s 4483}# #f)
                                    (set-source-properties!
                                      #{id 4576}#
                                      #{s 4483}#))
                                  #{id 4576}#)
                                #{w 4482}#
                                #{mod 4484}#)))))
                      #{var 4571}#
                      #{names 4575}#)
                    (#{chi-body 4349}#
                      (cons #{e1 4573}# #{e2 4574}#)
                      (#{wrap 4338}#
                        (begin
                          (if (if (pair? #{e 4480}#) #{s 4483}# #f)
                            (set-source-properties! #{e 4480}# #{s 4483}#))
                          #{e 4480}#)
                        #{w 4482}#
                        #{mod 4484}#)
                      (#{extend-env 4307}#
                        #{names 4575}#
                        (let ((#{trans-r 4851}#
                                (#{macros-only-env 4309}# #{r 4481}#)))
                          (map (lambda (#{x 4852}#)
                                 (cons 'macro
                                       (#{eval-local-transformer 4351}#
                                         (#{chi 4345}#
                                           #{x 4852}#
                                           #{trans-r 4851}#
                                           #{w 4482}#
                                           #{mod 4484}#)
                                         #{mod 4484}#)))
                               #{val 4572}#))
                        #{r 4481}#)
                      #{w 4482}#
                      #{mod 4484}#))))
              #{tmp 4486}#)
            (syntax-violation
              'fluid-let-syntax
              "bad syntax"
              (#{wrap 4338}#
                (begin
                  (if (if (pair? #{e 4480}#) #{s 4483}# #f)
                    (set-source-properties! #{e 4480}# #{s 4483}#))
                  #{e 4480}#)
                #{w 4482}#
                #{mod 4484}#))))))
    (module-define!
      (current-module)
      'quote
      (make-syntax-transformer
        'quote
        'core
        (lambda (#{e 5066}#
                 #{r 5067}#
                 #{w 5068}#
                 #{s 5069}#
                 #{mod 5070}#)
          (let ((#{tmp 5072}# ($sc-dispatch #{e 5066}# '(_ any))))
            (if #{tmp 5072}#
              (@apply
                (lambda (#{e 5075}#)
                  (let ((#{exp 5079}#
                          (#{strip 4358}# #{e 5075}# #{w 5068}#)))
                    (make-struct/no-tail
                      (vector-ref %expanded-vtables 1)
                      #{s 5069}#
                      #{exp 5079}#)))
                #{tmp 5072}#)
              (syntax-violation
                'quote
                "bad syntax"
                (#{wrap 4338}#
                  (begin
                    (if (if (pair? #{e 5066}#) #{s 5069}# #f)
                      (set-source-properties! #{e 5066}# #{s 5069}#))
                    #{e 5066}#)
                  #{w 5068}#
                  #{mod 5070}#)))))))
    (#{global-extend 4311}#
      'core
      'syntax
      (letrec*
        ((#{gen-syntax 5303}#
           (lambda (#{src 5405}#
                    #{e 5406}#
                    #{r 5407}#
                    #{maps 5408}#
                    #{ellipsis? 5409}#
                    #{mod 5410}#)
             (if (if (symbol? #{e 5406}#)
                   #t
                   (if (if (vector? #{e 5406}#)
                         (if (= (vector-length #{e 5406}#) 4)
                           (eq? (vector-ref #{e 5406}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{e 5406}# 1))
                     #f))
               (let ((#{label 5437}#
                       (#{id-var-name 4332}# #{e 5406}# '(()))))
                 (let ((#{b 5438}#
                         (let ((#{t 5575}# (assq #{label 5437}# #{r 5407}#)))
                           (if #{t 5575}#
                             (cdr #{t 5575}#)
                             (if (symbol? #{label 5437}#)
                               (let ((#{t 5580}#
                                       (begin
                                         (if (if (not #{mod 5410}#)
                                               (current-module)
                                               #f)
                                           (warn "module system is booted, we should have a module"
                                                 #{label 5437}#))
                                         (let ((#{v 5617}#
                                                 (module-variable
                                                   (if #{mod 5410}#
                                                     (resolve-module
                                                       (cdr #{mod 5410}#))
                                                     (current-module))
                                                   #{label 5437}#)))
                                           (if #{v 5617}#
                                             (if (variable-bound? #{v 5617}#)
                                               (let ((#{val 5626}#
                                                       (variable-ref
                                                         #{v 5617}#)))
                                                 (if (macro? #{val 5626}#)
                                                   (if (macro-type
                                                         #{val 5626}#)
                                                     (cons (macro-type
                                                             #{val 5626}#)
                                                           (macro-binding
                                                             #{val 5626}#))
                                                     #f)
                                                   #f))
                                               #f)
                                             #f)))))
                                 (if #{t 5580}# #{t 5580}# '(global)))
                               '(displaced-lexical))))))
                   (if (eq? (car #{b 5438}#) 'syntax)
                     (call-with-values
                       (lambda ()
                         (let ((#{var.lev 5471}# (cdr #{b 5438}#)))
                           (#{gen-ref 5304}#
                             #{src 5405}#
                             (car #{var.lev 5471}#)
                             (cdr #{var.lev 5471}#)
                             #{maps 5408}#)))
                       (lambda (#{var 5567}# #{maps 5568}#)
                         (values (list 'ref #{var 5567}#) #{maps 5568}#)))
                     (if (#{ellipsis? 5409}# #{e 5406}#)
                       (syntax-violation
                         'syntax
                         "misplaced ellipsis"
                         #{src 5405}#)
                       (values (list 'quote #{e 5406}#) #{maps 5408}#)))))
               (let ((#{tmp 5638}#
                       ($sc-dispatch #{e 5406}# '(any any))))
                 (if (if #{tmp 5638}#
                       (@apply
                         (lambda (#{dots 5642}# #{e 5643}#)
                           (#{ellipsis? 5409}# #{dots 5642}#))
                         #{tmp 5638}#)
                       #f)
                   (@apply
                     (lambda (#{dots 5644}# #{e 5645}#)
                       (#{gen-syntax 5303}#
                         #{src 5405}#
                         #{e 5645}#
                         #{r 5407}#
                         #{maps 5408}#
                         (lambda (#{x 5646}#) #f)
                         #{mod 5410}#))
                     #{tmp 5638}#)
                   (let ((#{tmp 5647}#
                           ($sc-dispatch #{e 5406}# '(any any . any))))
                     (if (if #{tmp 5647}#
                           (@apply
                             (lambda (#{x 5651}# #{dots 5652}# #{y 5653}#)
                               (#{ellipsis? 5409}# #{dots 5652}#))
                             #{tmp 5647}#)
                           #f)
                       (@apply
                         (lambda (#{x 5654}# #{dots 5655}# #{y 5656}#)
                           (letrec*
                             ((#{f 5657}#
                                (lambda (#{y 5665}# #{k 5666}#)
                                  (let ((#{tmp 5668}#
                                          ($sc-dispatch
                                            #{y 5665}#
                                            '(any . any))))
                                    (if (if #{tmp 5668}#
                                          (@apply
                                            (lambda (#{dots 5672}# #{y 5673}#)
                                              (#{ellipsis? 5409}#
                                                #{dots 5672}#))
                                            #{tmp 5668}#)
                                          #f)
                                      (@apply
                                        (lambda (#{dots 5674}# #{y 5675}#)
                                          (#{f 5657}#
                                            #{y 5675}#
                                            (lambda (#{maps 5676}#)
                                              (call-with-values
                                                (lambda ()
                                                  (#{k 5666}#
                                                    (cons '() #{maps 5676}#)))
                                                (lambda (#{x 5677}#
                                                         #{maps 5678}#)
                                                  (if (null? (car #{maps 5678}#))
                                                    (syntax-violation
                                                      'syntax
                                                      "extra ellipsis"
                                                      #{src 5405}#)
                                                    (values
                                                      (let ((#{map-env 5682}#
                                                              (car #{maps 5678}#)))
                                                        (list 'apply
                                                              '(primitive
                                                                 append)
                                                              (#{gen-map 5306}#
                                                                #{x 5677}#
                                                                #{map-env 5682}#)))
                                                      (cdr #{maps 5678}#))))))))
                                        #{tmp 5668}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{gen-syntax 5303}#
                                            #{src 5405}#
                                            #{y 5665}#
                                            #{r 5407}#
                                            #{maps 5408}#
                                            #{ellipsis? 5409}#
                                            #{mod 5410}#))
                                        (lambda (#{y 5685}# #{maps 5686}#)
                                          (call-with-values
                                            (lambda ()
                                              (#{k 5666}# #{maps 5686}#))
                                            (lambda (#{x 5687}# #{maps 5688}#)
                                              (values
                                                (if (equal? #{y 5685}# ''())
                                                  #{x 5687}#
                                                  (list 'append
                                                        #{x 5687}#
                                                        #{y 5685}#))
                                                #{maps 5688}#))))))))))
                             (#{f 5657}#
                               #{y 5656}#
                               (lambda (#{maps 5660}#)
                                 (call-with-values
                                   (lambda ()
                                     (#{gen-syntax 5303}#
                                       #{src 5405}#
                                       #{x 5654}#
                                       #{r 5407}#
                                       (cons '() #{maps 5660}#)
                                       #{ellipsis? 5409}#
                                       #{mod 5410}#))
                                   (lambda (#{x 5661}# #{maps 5662}#)
                                     (if (null? (car #{maps 5662}#))
                                       (syntax-violation
                                         'syntax
                                         "extra ellipsis"
                                         #{src 5405}#)
                                       (values
                                         (#{gen-map 5306}#
                                           #{x 5661}#
                                           (car #{maps 5662}#))
                                         (cdr #{maps 5662}#)))))))))
                         #{tmp 5647}#)
                       (let ((#{tmp 5704}#
                               ($sc-dispatch #{e 5406}# '(any . any))))
                         (if #{tmp 5704}#
                           (@apply
                             (lambda (#{x 5708}# #{y 5709}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax 5303}#
                                     #{src 5405}#
                                     #{x 5708}#
                                     #{r 5407}#
                                     #{maps 5408}#
                                     #{ellipsis? 5409}#
                                     #{mod 5410}#))
                                 (lambda (#{x 5710}# #{maps 5711}#)
                                   (call-with-values
                                     (lambda ()
                                       (#{gen-syntax 5303}#
                                         #{src 5405}#
                                         #{y 5709}#
                                         #{r 5407}#
                                         #{maps 5711}#
                                         #{ellipsis? 5409}#
                                         #{mod 5410}#))
                                     (lambda (#{y 5712}# #{maps 5713}#)
                                       (values
                                         (let ((#{atom-key 5718}#
                                                 (car #{y 5712}#)))
                                           (if (eqv? #{atom-key 5718}# 'quote)
                                             (if (eq? (car #{x 5710}#) 'quote)
                                               (list 'quote
                                                     (cons (car (cdr #{x 5710}#))
                                                           (car (cdr #{y 5712}#))))
                                               (if (eq? (car (cdr #{y 5712}#))
                                                        '())
                                                 (list 'list #{x 5710}#)
                                                 (list 'cons
                                                       #{x 5710}#
                                                       #{y 5712}#)))
                                             (if (eqv? #{atom-key 5718}# 'list)
                                               (cons 'list
                                                     (cons #{x 5710}#
                                                           (cdr #{y 5712}#)))
                                               (list 'cons
                                                     #{x 5710}#
                                                     #{y 5712}#))))
                                         #{maps 5713}#))))))
                             #{tmp 5704}#)
                           (let ((#{tmp 5747}#
                                   ($sc-dispatch
                                     #{e 5406}#
                                     '#(vector (any . each-any)))))
                             (if #{tmp 5747}#
                               (@apply
                                 (lambda (#{e1 5751}# #{e2 5752}#)
                                   (call-with-values
                                     (lambda ()
                                       (#{gen-syntax 5303}#
                                         #{src 5405}#
                                         (cons #{e1 5751}# #{e2 5752}#)
                                         #{r 5407}#
                                         #{maps 5408}#
                                         #{ellipsis? 5409}#
                                         #{mod 5410}#))
                                     (lambda (#{e 5753}# #{maps 5754}#)
                                       (values
                                         (if (eq? (car #{e 5753}#) 'list)
                                           (cons 'vector (cdr #{e 5753}#))
                                           (if (eq? (car #{e 5753}#) 'quote)
                                             (list 'quote
                                                   (list->vector
                                                     (car (cdr #{e 5753}#))))
                                             (list 'list->vector #{e 5753}#)))
                                         #{maps 5754}#))))
                                 #{tmp 5747}#)
                               (values
                                 (list 'quote #{e 5406}#)
                                 #{maps 5408}#))))))))))))
         (#{gen-ref 5304}#
           (lambda (#{src 5781}#
                    #{var 5782}#
                    #{level 5783}#
                    #{maps 5784}#)
             (if (= #{level 5783}# 0)
               (values #{var 5782}# #{maps 5784}#)
               (if (null? #{maps 5784}#)
                 (syntax-violation
                   'syntax
                   "missing ellipsis"
                   #{src 5781}#)
                 (call-with-values
                   (lambda ()
                     (#{gen-ref 5304}#
                       #{src 5781}#
                       #{var 5782}#
                       (#{1-}# #{level 5783}#)
                       (cdr #{maps 5784}#)))
                   (lambda (#{outer-var 5785}# #{outer-maps 5786}#)
                     (let ((#{b 5787}#
                             (assq #{outer-var 5785}# (car #{maps 5784}#))))
                       (if #{b 5787}#
                         (values (cdr #{b 5787}#) #{maps 5784}#)
                         (let ((#{inner-var 5789}#
                                 (gensym
                                   (string-append (symbol->string 'tmp) " "))))
                           (values
                             #{inner-var 5789}#
                             (cons (cons (cons #{outer-var 5785}#
                                               #{inner-var 5789}#)
                                         (car #{maps 5784}#))
                                   #{outer-maps 5786}#)))))))))))
         (#{gen-map 5306}#
           (lambda (#{e 5803}# #{map-env 5804}#)
             (let ((#{formals 5805}# (map cdr #{map-env 5804}#))
                   (#{actuals 5806}#
                     (map (lambda (#{x 5808}#)
                            (list 'ref (car #{x 5808}#)))
                          #{map-env 5804}#)))
               (if (eq? (car #{e 5803}#) 'ref)
                 (car #{actuals 5806}#)
                 (if (and-map
                       (lambda (#{x 5809}#)
                         (if (eq? (car #{x 5809}#) 'ref)
                           (memq (car (cdr #{x 5809}#)) #{formals 5805}#)
                           #f))
                       (cdr #{e 5803}#))
                   (cons 'map
                         (cons (list 'primitive (car #{e 5803}#))
                               (map (let ((#{r 5811}#
                                            (map cons
                                                 #{formals 5805}#
                                                 #{actuals 5806}#)))
                                      (lambda (#{x 5812}#)
                                        (cdr (assq (car (cdr #{x 5812}#))
                                                   #{r 5811}#))))
                                    (cdr #{e 5803}#))))
                   (cons 'map
                         (cons (list 'lambda #{formals 5805}# #{e 5803}#)
                               #{actuals 5806}#)))))))
         (#{regen 5310}#
           (lambda (#{x 5814}#)
             (let ((#{atom-key 5815}# (car #{x 5814}#)))
               (if (eqv? #{atom-key 5815}# 'ref)
                 (let ((#{name 5825}# (car (cdr #{x 5814}#)))
                       (#{var 5826}# (car (cdr #{x 5814}#))))
                   (make-struct/no-tail
                     (vector-ref %expanded-vtables 3)
                     #f
                     #{name 5825}#
                     #{var 5826}#))
                 (if (eqv? #{atom-key 5815}# 'primitive)
                   (let ((#{name 5838}# (car (cdr #{x 5814}#))))
                     (if (equal? (module-name (current-module)) '(guile))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 7)
                         #f
                         #{name 5838}#)
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 5)
                         #f
                         '(guile)
                         #{name 5838}#
                         #f)))
                   (if (eqv? #{atom-key 5815}# 'quote)
                     (let ((#{exp 5856}# (car (cdr #{x 5814}#))))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 1)
                         #f
                         #{exp 5856}#))
                     (if (eqv? #{atom-key 5815}# 'lambda)
                       (if (list? (car (cdr #{x 5814}#)))
                         (let ((#{req 5867}# (car (cdr #{x 5814}#)))
                               (#{vars 5869}# (car (cdr #{x 5814}#)))
                               (#{exp 5871}#
                                 (#{regen 5310}#
                                   (car (cdr (cdr #{x 5814}#))))))
                           (let ((#{body 5876}#
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 14)
                                     #f
                                     #{req 5867}#
                                     #f
                                     #f
                                     #f
                                     '()
                                     #{vars 5869}#
                                     #{exp 5871}#
                                     #f)))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 13)
                               #f
                               '()
                               #{body 5876}#)))
                         (error "how did we get here" #{x 5814}#))
                       (let ((#{fun-exp 5892}#
                               (let ((#{name 5901}# (car #{x 5814}#)))
                                 (if (equal?
                                       (module-name (current-module))
                                       '(guile))
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 7)
                                     #f
                                     #{name 5901}#)
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 5)
                                     #f
                                     '(guile)
                                     #{name 5901}#
                                     #f))))
                             (#{arg-exps 5893}#
                               (map #{regen 5310}# (cdr #{x 5814}#))))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 11)
                           #f
                           #{fun-exp 5892}#
                           #{arg-exps 5893}#))))))))))
        (lambda (#{e 5311}#
                 #{r 5312}#
                 #{w 5313}#
                 #{s 5314}#
                 #{mod 5315}#)
          (let ((#{e 5316}#
                  (#{wrap 4338}#
                    (begin
                      (if (if (pair? #{e 5311}#) #{s 5314}# #f)
                        (set-source-properties! #{e 5311}# #{s 5314}#))
                      #{e 5311}#)
                    #{w 5313}#
                    #{mod 5315}#)))
            (let ((#{tmp 5318}# ($sc-dispatch #{e 5316}# '(_ any))))
              (if #{tmp 5318}#
                (@apply
                  (lambda (#{x 5343}#)
                    (call-with-values
                      (lambda ()
                        (#{gen-syntax 5303}#
                          #{e 5316}#
                          #{x 5343}#
                          #{r 5312}#
                          '()
                          #{ellipsis? 4353}#
                          #{mod 5315}#))
                      (lambda (#{e 5397}# #{maps 5398}#)
                        (#{regen 5310}# #{e 5397}#))))
                  #{tmp 5318}#)
                (syntax-violation
                  'syntax
                  "bad `syntax' form"
                  #{e 5316}#)))))))
    (#{global-extend 4311}#
      'core
      'lambda
      (lambda (#{e 6096}#
               #{r 6097}#
               #{w 6098}#
               #{s 6099}#
               #{mod 6100}#)
        (let ((#{tmp 6102}#
                ($sc-dispatch #{e 6096}# '(_ any any . each-any))))
          (if #{tmp 6102}#
            (@apply
              (lambda (#{args 6106}# #{e1 6107}# #{e2 6108}#)
                (call-with-values
                  (lambda ()
                    (#{lambda-formals 4354}# #{args 6106}#))
                  (lambda (#{req 6111}#
                           #{opt 6112}#
                           #{rest 6113}#
                           #{kw 6114}#)
                    (letrec*
                      ((#{lp 6115}#
                         (lambda (#{body 6118}# #{meta 6119}#)
                           (let ((#{tmp 6121}#
                                   ($sc-dispatch
                                     #{body 6118}#
                                     '(any any . each-any))))
                             (if (if #{tmp 6121}#
                                   (@apply
                                     (lambda (#{docstring 6125}#
                                              #{e1 6126}#
                                              #{e2 6127}#)
                                       (string?
                                         (syntax->datum #{docstring 6125}#)))
                                     #{tmp 6121}#)
                                   #f)
                               (@apply
                                 (lambda (#{docstring 6128}#
                                          #{e1 6129}#
                                          #{e2 6130}#)
                                   (#{lp 6115}#
                                     (cons #{e1 6129}# #{e2 6130}#)
                                     (append
                                       #{meta 6119}#
                                       (list (cons 'documentation
                                                   (syntax->datum
                                                     #{docstring 6128}#))))))
                                 #{tmp 6121}#)
                               (let ((#{tmp 6131}#
                                       ($sc-dispatch
                                         #{body 6118}#
                                         '(#(vector #(each (any . any)))
                                           any
                                           .
                                           each-any))))
                                 (if #{tmp 6131}#
                                   (@apply
                                     (lambda (#{k 6135}#
                                              #{v 6136}#
                                              #{e1 6137}#
                                              #{e2 6138}#)
                                       (#{lp 6115}#
                                         (cons #{e1 6137}# #{e2 6138}#)
                                         (append
                                           #{meta 6119}#
                                           (syntax->datum
                                             (map cons
                                                  #{k 6135}#
                                                  #{v 6136}#)))))
                                     #{tmp 6131}#)
                                   (#{chi-simple-lambda 4355}#
                                     #{e 6096}#
                                     #{r 6097}#
                                     #{w 6098}#
                                     #{s 6099}#
                                     #{mod 6100}#
                                     #{req 6111}#
                                     #{rest 6113}#
                                     #{meta 6119}#
                                     #{body 6118}#))))))))
                      (#{lp 6115}# (cons #{e1 6107}# #{e2 6108}#) '())))))
              #{tmp 6102}#)
            (syntax-violation
              'lambda
              "bad lambda"
              #{e 6096}#)))))
    (#{global-extend 4311}#
      'core
      'lambda*
      (lambda (#{e 6430}#
               #{r 6431}#
               #{w 6432}#
               #{s 6433}#
               #{mod 6434}#)
        (let ((#{tmp 6436}#
                ($sc-dispatch #{e 6430}# '(_ any any . each-any))))
          (if #{tmp 6436}#
            (@apply
              (lambda (#{args 6440}# #{e1 6441}# #{e2 6442}#)
                (call-with-values
                  (lambda ()
                    (#{chi-lambda-case 4357}#
                      #{e 6430}#
                      #{r 6431}#
                      #{w 6432}#
                      #{s 6433}#
                      #{mod 6434}#
                      #{lambda*-formals 4356}#
                      (list (cons #{args 6440}#
                                  (cons #{e1 6441}# #{e2 6442}#)))))
                  (lambda (#{meta 6445}# #{lcase 6446}#)
                    (make-struct/no-tail
                      (vector-ref %expanded-vtables 13)
                      #{s 6433}#
                      #{meta 6445}#
                      #{lcase 6446}#))))
              #{tmp 6436}#)
            (syntax-violation
              'lambda
              "bad lambda*"
              #{e 6430}#)))))
    (#{global-extend 4311}#
      'core
      'case-lambda
      (lambda (#{e 6620}#
               #{r 6621}#
               #{w 6622}#
               #{s 6623}#
               #{mod 6624}#)
        (let ((#{tmp 6626}#
                ($sc-dispatch
                  #{e 6620}#
                  '(_ (any any . each-any)
                      .
                      #(each (any any . each-any))))))
          (if #{tmp 6626}#
            (@apply
              (lambda (#{args 6630}#
                       #{e1 6631}#
                       #{e2 6632}#
                       #{args* 6633}#
                       #{e1* 6634}#
                       #{e2* 6635}#)
                (call-with-values
                  (lambda ()
                    (#{chi-lambda-case 4357}#
                      #{e 6620}#
                      #{r 6621}#
                      #{w 6622}#
                      #{s 6623}#
                      #{mod 6624}#
                      #{lambda-formals 4354}#
                      (cons (cons #{args 6630}#
                                  (cons #{e1 6631}# #{e2 6632}#))
                            (map (lambda (#{tmp 3274 6638}#
                                          #{tmp 3273 6639}#
                                          #{tmp 3272 6640}#)
                                   (cons #{tmp 3272 6640}#
                                         (cons #{tmp 3273 6639}#
                                               #{tmp 3274 6638}#)))
                                 #{e2* 6635}#
                                 #{e1* 6634}#
                                 #{args* 6633}#))))
                  (lambda (#{meta 6641}# #{lcase 6642}#)
                    (make-struct/no-tail
                      (vector-ref %expanded-vtables 13)
                      #{s 6623}#
                      #{meta 6641}#
                      #{lcase 6642}#))))
              #{tmp 6626}#)
            (syntax-violation
              'case-lambda
              "bad case-lambda"
              #{e 6620}#)))))
    (#{global-extend 4311}#
      'core
      'case-lambda*
      (lambda (#{e 6805}#
               #{r 6806}#
               #{w 6807}#
               #{s 6808}#
               #{mod 6809}#)
        (let ((#{tmp 6811}#
                ($sc-dispatch
                  #{e 6805}#
                  '(_ (any any . each-any)
                      .
                      #(each (any any . each-any))))))
          (if #{tmp 6811}#
            (@apply
              (lambda (#{args 6815}#
                       #{e1 6816}#
                       #{e2 6817}#
                       #{args* 6818}#
                       #{e1* 6819}#
                       #{e2* 6820}#)
                (call-with-values
                  (lambda ()
                    (#{chi-lambda-case 4357}#
                      #{e 6805}#
                      #{r 6806}#
                      #{w 6807}#
                      #{s 6808}#
                      #{mod 6809}#
                      #{lambda*-formals 4356}#
                      (cons (cons #{args 6815}#
                                  (cons #{e1 6816}# #{e2 6817}#))
                            (map (lambda (#{tmp 3309 6823}#
                                          #{tmp 3308 6824}#
                                          #{tmp 3307 6825}#)
                                   (cons #{tmp 3307 6825}#
                                         (cons #{tmp 3308 6824}#
                                               #{tmp 3309 6823}#)))
                                 #{e2* 6820}#
                                 #{e1* 6819}#
                                 #{args* 6818}#))))
                  (lambda (#{meta 6826}# #{lcase 6827}#)
                    (make-struct/no-tail
                      (vector-ref %expanded-vtables 13)
                      #{s 6808}#
                      #{meta 6826}#
                      #{lcase 6827}#))))
              #{tmp 6811}#)
            (syntax-violation
              'case-lambda
              "bad case-lambda*"
              #{e 6805}#)))))
    (#{global-extend 4311}#
      'core
      'let
      (letrec*
        ((#{chi-let 7019}#
           (lambda (#{e 7168}#
                    #{r 7169}#
                    #{w 7170}#
                    #{s 7171}#
                    #{mod 7172}#
                    #{constructor 7173}#
                    #{ids 7174}#
                    #{vals 7175}#
                    #{exps 7176}#)
             (if (not (#{valid-bound-ids? 4335}# #{ids 7174}#))
               (syntax-violation
                 'let
                 "duplicate bound variable"
                 #{e 7168}#)
               (let ((#{labels 7254}#
                       (#{gen-labels 4316}# #{ids 7174}#))
                     (#{new-vars 7255}#
                       (map #{gen-var 4359}# #{ids 7174}#)))
                 (let ((#{nw 7256}#
                         (#{make-binding-wrap 4327}#
                           #{ids 7174}#
                           #{labels 7254}#
                           #{w 7170}#))
                       (#{nr 7257}#
                         (#{extend-var-env 4308}#
                           #{labels 7254}#
                           #{new-vars 7255}#
                           #{r 7169}#)))
                   (#{constructor 7173}#
                     #{s 7171}#
                     (map syntax->datum #{ids 7174}#)
                     #{new-vars 7255}#
                     (map (lambda (#{x 7274}#)
                            (#{chi 4345}#
                              #{x 7274}#
                              #{r 7169}#
                              #{w 7170}#
                              #{mod 7172}#))
                          #{vals 7175}#)
                     (#{chi-body 4349}#
                       #{exps 7176}#
                       (#{source-wrap 4339}#
                         #{e 7168}#
                         #{nw 7256}#
                         #{s 7171}#
                         #{mod 7172}#)
                       #{nr 7257}#
                       #{nw 7256}#
                       #{mod 7172}#))))))))
        (lambda (#{e 7020}#
                 #{r 7021}#
                 #{w 7022}#
                 #{s 7023}#
                 #{mod 7024}#)
          (let ((#{tmp 7026}#
                  ($sc-dispatch
                    #{e 7020}#
                    '(_ #(each (any any)) any . each-any))))
            (if (if #{tmp 7026}#
                  (@apply
                    (lambda (#{id 7030}#
                             #{val 7031}#
                             #{e1 7032}#
                             #{e2 7033}#)
                      (and-map #{id? 4313}# #{id 7030}#))
                    #{tmp 7026}#)
                  #f)
              (@apply
                (lambda (#{id 7049}#
                         #{val 7050}#
                         #{e1 7051}#
                         #{e2 7052}#)
                  (#{chi-let 7019}#
                    #{e 7020}#
                    #{r 7021}#
                    #{w 7022}#
                    #{s 7023}#
                    #{mod 7024}#
                    #{build-let 4295}#
                    #{id 7049}#
                    #{val 7050}#
                    (cons #{e1 7051}# #{e2 7052}#)))
                #{tmp 7026}#)
              (let ((#{tmp 7082}#
                      ($sc-dispatch
                        #{e 7020}#
                        '(_ any #(each (any any)) any . each-any))))
                (if (if #{tmp 7082}#
                      (@apply
                        (lambda (#{f 7086}#
                                 #{id 7087}#
                                 #{val 7088}#
                                 #{e1 7089}#
                                 #{e2 7090}#)
                          (if (if (symbol? #{f 7086}#)
                                #t
                                (if (if (vector? #{f 7086}#)
                                      (if (= (vector-length #{f 7086}#) 4)
                                        (eq? (vector-ref #{f 7086}# 0)
                                             'syntax-object)
                                        #f)
                                      #f)
                                  (symbol? (vector-ref #{f 7086}# 1))
                                  #f))
                            (and-map #{id? 4313}# #{id 7087}#)
                            #f))
                        #{tmp 7082}#)
                      #f)
                  (@apply
                    (lambda (#{f 7132}#
                             #{id 7133}#
                             #{val 7134}#
                             #{e1 7135}#
                             #{e2 7136}#)
                      (#{chi-let 7019}#
                        #{e 7020}#
                        #{r 7021}#
                        #{w 7022}#
                        #{s 7023}#
                        #{mod 7024}#
                        #{build-named-let 4296}#
                        (cons #{f 7132}# #{id 7133}#)
                        #{val 7134}#
                        (cons #{e1 7135}# #{e2 7136}#)))
                    #{tmp 7082}#)
                  (syntax-violation
                    'let
                    "bad let"
                    (#{wrap 4338}#
                      (begin
                        (if (if (pair? #{e 7020}#) #{s 7023}# #f)
                          (set-source-properties! #{e 7020}# #{s 7023}#))
                        #{e 7020}#)
                      #{w 7022}#
                      #{mod 7024}#)))))))))
    (#{global-extend 4311}#
      'core
      'letrec
      (lambda (#{e 7723}#
               #{r 7724}#
               #{w 7725}#
               #{s 7726}#
               #{mod 7727}#)
        (let ((#{tmp 7729}#
                ($sc-dispatch
                  #{e 7723}#
                  '(_ #(each (any any)) any . each-any))))
          (if (if #{tmp 7729}#
                (@apply
                  (lambda (#{id 7733}#
                           #{val 7734}#
                           #{e1 7735}#
                           #{e2 7736}#)
                    (and-map #{id? 4313}# #{id 7733}#))
                  #{tmp 7729}#)
                #f)
            (@apply
              (lambda (#{id 7752}#
                       #{val 7753}#
                       #{e1 7754}#
                       #{e2 7755}#)
                (if (not (#{valid-bound-ids? 4335}# #{id 7752}#))
                  (syntax-violation
                    'letrec
                    "duplicate bound variable"
                    #{e 7723}#)
                  (let ((#{labels 7845}#
                          (#{gen-labels 4316}# #{id 7752}#))
                        (#{new-vars 7846}#
                          (map #{gen-var 4359}# #{id 7752}#)))
                    (let ((#{w 7847}#
                            (#{make-binding-wrap 4327}#
                              #{id 7752}#
                              #{labels 7845}#
                              #{w 7725}#))
                          (#{r 7848}#
                            (#{extend-var-env 4308}#
                              #{labels 7845}#
                              #{new-vars 7846}#
                              #{r 7724}#)))
                      (#{build-letrec 4297}#
                        #{s 7726}#
                        #f
                        (map syntax->datum #{id 7752}#)
                        #{new-vars 7846}#
                        (map (lambda (#{x 7935}#)
                               (#{chi 4345}#
                                 #{x 7935}#
                                 #{r 7848}#
                                 #{w 7847}#
                                 #{mod 7727}#))
                             #{val 7753}#)
                        (#{chi-body 4349}#
                          (cons #{e1 7754}# #{e2 7755}#)
                          (#{wrap 4338}#
                            (begin
                              (if (if (pair? #{e 7723}#) #{s 7726}# #f)
                                (set-source-properties! #{e 7723}# #{s 7726}#))
                              #{e 7723}#)
                            #{w 7847}#
                            #{mod 7727}#)
                          #{r 7848}#
                          #{w 7847}#
                          #{mod 7727}#))))))
              #{tmp 7729}#)
            (syntax-violation
              'letrec
              "bad letrec"
              (#{wrap 4338}#
                (begin
                  (if (if (pair? #{e 7723}#) #{s 7726}# #f)
                    (set-source-properties! #{e 7723}# #{s 7726}#))
                  #{e 7723}#)
                #{w 7725}#
                #{mod 7727}#))))))
    (#{global-extend 4311}#
      'core
      'letrec*
      (lambda (#{e 8352}#
               #{r 8353}#
               #{w 8354}#
               #{s 8355}#
               #{mod 8356}#)
        (let ((#{tmp 8358}#
                ($sc-dispatch
                  #{e 8352}#
                  '(_ #(each (any any)) any . each-any))))
          (if (if #{tmp 8358}#
                (@apply
                  (lambda (#{id 8362}#
                           #{val 8363}#
                           #{e1 8364}#
                           #{e2 8365}#)
                    (and-map #{id? 4313}# #{id 8362}#))
                  #{tmp 8358}#)
                #f)
            (@apply
              (lambda (#{id 8381}#
                       #{val 8382}#
                       #{e1 8383}#
                       #{e2 8384}#)
                (if (not (#{valid-bound-ids? 4335}# #{id 8381}#))
                  (syntax-violation
                    'letrec*
                    "duplicate bound variable"
                    #{e 8352}#)
                  (let ((#{labels 8474}#
                          (#{gen-labels 4316}# #{id 8381}#))
                        (#{new-vars 8475}#
                          (map #{gen-var 4359}# #{id 8381}#)))
                    (let ((#{w 8476}#
                            (#{make-binding-wrap 4327}#
                              #{id 8381}#
                              #{labels 8474}#
                              #{w 8354}#))
                          (#{r 8477}#
                            (#{extend-var-env 4308}#
                              #{labels 8474}#
                              #{new-vars 8475}#
                              #{r 8353}#)))
                      (#{build-letrec 4297}#
                        #{s 8355}#
                        #t
                        (map syntax->datum #{id 8381}#)
                        #{new-vars 8475}#
                        (map (lambda (#{x 8564}#)
                               (#{chi 4345}#
                                 #{x 8564}#
                                 #{r 8477}#
                                 #{w 8476}#
                                 #{mod 8356}#))
                             #{val 8382}#)
                        (#{chi-body 4349}#
                          (cons #{e1 8383}# #{e2 8384}#)
                          (#{wrap 4338}#
                            (begin
                              (if (if (pair? #{e 8352}#) #{s 8355}# #f)
                                (set-source-properties! #{e 8352}# #{s 8355}#))
                              #{e 8352}#)
                            #{w 8476}#
                            #{mod 8356}#)
                          #{r 8477}#
                          #{w 8476}#
                          #{mod 8356}#))))))
              #{tmp 8358}#)
            (syntax-violation
              'letrec*
              "bad letrec*"
              (#{wrap 4338}#
                (begin
                  (if (if (pair? #{e 8352}#) #{s 8355}# #f)
                    (set-source-properties! #{e 8352}# #{s 8355}#))
                  #{e 8352}#)
                #{w 8354}#
                #{mod 8356}#))))))
    (#{global-extend 4311}#
      'core
      'set!
      (lambda (#{e 9035}#
               #{r 9036}#
               #{w 9037}#
               #{s 9038}#
               #{mod 9039}#)
        (let ((#{tmp 9041}#
                ($sc-dispatch #{e 9035}# '(_ any any))))
          (if (if #{tmp 9041}#
                (@apply
                  (lambda (#{id 9045}# #{val 9046}#)
                    (if (symbol? #{id 9045}#)
                      #t
                      (if (if (vector? #{id 9045}#)
                            (if (= (vector-length #{id 9045}#) 4)
                              (eq? (vector-ref #{id 9045}# 0) 'syntax-object)
                              #f)
                            #f)
                        (symbol? (vector-ref #{id 9045}# 1))
                        #f)))
                  #{tmp 9041}#)
                #f)
            (@apply
              (lambda (#{id 9073}# #{val 9074}#)
                (let ((#{n 9075}#
                        (#{id-var-name 4332}# #{id 9073}# #{w 9037}#))
                      (#{id-mod 9076}#
                        (if (if (vector? #{id 9073}#)
                              (if (= (vector-length #{id 9073}#) 4)
                                (eq? (vector-ref #{id 9073}# 0) 'syntax-object)
                                #f)
                              #f)
                          (vector-ref #{id 9073}# 3)
                          #{mod 9039}#)))
                  (let ((#{b 9077}#
                          (let ((#{t 9764}# (assq #{n 9075}# #{r 9036}#)))
                            (if #{t 9764}#
                              (cdr #{t 9764}#)
                              (if (symbol? #{n 9075}#)
                                (let ((#{t 9769}#
                                        (begin
                                          (if (if (not #{id-mod 9076}#)
                                                (current-module)
                                                #f)
                                            (warn "module system is booted, we should have a module"
                                                  #{n 9075}#))
                                          (let ((#{v 9806}#
                                                  (module-variable
                                                    (if #{id-mod 9076}#
                                                      (resolve-module
                                                        (cdr #{id-mod 9076}#))
                                                      (current-module))
                                                    #{n 9075}#)))
                                            (if #{v 9806}#
                                              (if (variable-bound? #{v 9806}#)
                                                (let ((#{val 9815}#
                                                        (variable-ref
                                                          #{v 9806}#)))
                                                  (if (macro? #{val 9815}#)
                                                    (if (macro-type
                                                          #{val 9815}#)
                                                      (cons (macro-type
                                                              #{val 9815}#)
                                                            (macro-binding
                                                              #{val 9815}#))
                                                      #f)
                                                    #f))
                                                #f)
                                              #f)))))
                                  (if #{t 9769}# #{t 9769}# '(global)))
                                '(displaced-lexical))))))
                    (let ((#{atom-key 9078}# (car #{b 9077}#)))
                      (if (let ((#{t 9115}# #{atom-key 9078}#))
                            (eqv? #{t 9115}# 'lexical))
                        (#{build-lexical-assignment 4284}#
                          #{s 9038}#
                          (syntax->datum #{id 9073}#)
                          (cdr #{b 9077}#)
                          (#{chi 4345}#
                            #{val 9074}#
                            #{r 9036}#
                            #{w 9037}#
                            #{mod 9039}#))
                        (if (let ((#{t 9400}# #{atom-key 9078}#))
                              (eqv? #{t 9400}# 'global))
                          (#{build-global-assignment 4287}#
                            #{s 9038}#
                            #{n 9075}#
                            (#{chi 4345}#
                              #{val 9074}#
                              #{r 9036}#
                              #{w 9037}#
                              #{mod 9039}#)
                            #{id-mod 9076}#)
                          (if (let ((#{t 9655}# #{atom-key 9078}#))
                                (eqv? #{t 9655}# 'macro))
                            (let ((#{p 9718}# (cdr #{b 9077}#)))
                              (if (procedure-property
                                    #{p 9718}#
                                    'variable-transformer)
                                (#{chi 4345}#
                                  (#{chi-macro 4348}#
                                    #{p 9718}#
                                    #{e 9035}#
                                    #{r 9036}#
                                    #{w 9037}#
                                    #{s 9038}#
                                    #f
                                    #{mod 9039}#)
                                  #{r 9036}#
                                  '(())
                                  #{mod 9039}#)
                                (syntax-violation
                                  'set!
                                  "not a variable transformer"
                                  (#{wrap 4338}#
                                    #{e 9035}#
                                    #{w 9037}#
                                    #{mod 9039}#)
                                  (#{wrap 4338}#
                                    #{id 9073}#
                                    #{w 9037}#
                                    #{id-mod 9076}#))))
                            (if (eqv? #{atom-key 9078}# 'displaced-lexical)
                              (syntax-violation
                                'set!
                                "identifier out of context"
                                (#{wrap 4338}#
                                  #{id 9073}#
                                  #{w 9037}#
                                  #{mod 9039}#))
                              (syntax-violation
                                'set!
                                "bad set!"
                                (#{wrap 4338}#
                                  (begin
                                    (if (if (pair? #{e 9035}#) #{s 9038}# #f)
                                      (set-source-properties!
                                        #{e 9035}#
                                        #{s 9038}#))
                                    #{e 9035}#)
                                  #{w 9037}#
                                  #{mod 9039}#))))))))))
              #{tmp 9041}#)
            (let ((#{tmp 9916}#
                    ($sc-dispatch
                      #{e 9035}#
                      '(_ (any . each-any) any))))
              (if #{tmp 9916}#
                (@apply
                  (lambda (#{head 9920}# #{tail 9921}# #{val 9922}#)
                    (call-with-values
                      (lambda ()
                        (#{syntax-type 4344}#
                          #{head 9920}#
                          #{r 9036}#
                          '(())
                          #f
                          #f
                          #{mod 9039}#
                          #t))
                      (lambda (#{type 9925}#
                               #{value 9926}#
                               #{ee 9927}#
                               #{ww 9928}#
                               #{ss 9929}#
                               #{modmod 9930}#)
                        (if (eqv? #{type 9925}# 'module-ref)
                          (let ((#{val 9934}#
                                  (#{chi 4345}#
                                    #{val 9922}#
                                    #{r 9036}#
                                    #{w 9037}#
                                    #{mod 9039}#)))
                            (call-with-values
                              (lambda ()
                                (#{value 9926}#
                                  (cons #{head 9920}# #{tail 9921}#)
                                  #{r 9036}#
                                  #{w 9037}#))
                              (lambda (#{e 9935}#
                                       #{r 9936}#
                                       #{w 9937}#
                                       #{s* 9938}#
                                       #{mod 9939}#)
                                (let ((#{tmp 9941}# (list #{e 9935}#)))
                                  (if (@apply
                                        (lambda (#{e 9943}#)
                                          (if (symbol? #{e 9943}#)
                                            #t
                                            (if (if (vector? #{e 9943}#)
                                                  (if (= (vector-length
                                                           #{e 9943}#)
                                                         4)
                                                    (eq? (vector-ref
                                                           #{e 9943}#
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                  #f)
                                              (symbol?
                                                (vector-ref #{e 9943}# 1))
                                              #f)))
                                        #{tmp 9941}#)
                                    (@apply
                                      (lambda (#{e 9973}#)
                                        (#{build-global-assignment 4287}#
                                          #{s 9038}#
                                          (syntax->datum #{e 9973}#)
                                          #{val 9934}#
                                          #{mod 9939}#))
                                      #{tmp 9941}#)
                                    (syntax-violation
                                      #f
                                      "source expression failed to match any pattern"
                                      #{e 9935}#))))))
                          (#{build-application 4280}#
                            #{s 9038}#
                            (#{chi 4345}#
                              (list '#(syntax-object
                                       setter
                                       ((top)
                                        #(ribcage () () ())
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(type value ee ww ss modmod)
                                          #((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                          #("i3555"
                                            "i3556"
                                            "i3557"
                                            "i3558"
                                            "i3559"
                                            "i3560"))
                                        #(ribcage
                                          #(head tail val)
                                          #((top) (top) (top))
                                          #("i3541" "i3542" "i3543"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(e r w s mod)
                                          #((top) (top) (top) (top) (top))
                                          #("i3505"
                                            "i3506"
                                            "i3507"
                                            "i3508"
                                            "i3509"))
                                        #(ribcage
                                          (lambda-var-list
                                            gen-var
                                            strip
                                            chi-lambda-case
                                            lambda*-formals
                                            chi-simple-lambda
                                            lambda-formals
                                            ellipsis?
                                            chi-void
                                            eval-local-transformer
                                            chi-local-syntax
                                            chi-body
                                            chi-macro
                                            chi-application
                                            chi-expr
                                            chi
                                            syntax-type
                                            chi-when-list
                                            chi-install-global
                                            chi-top-sequence
                                            chi-sequence
                                            source-wrap
                                            wrap
                                            bound-id-member?
                                            distinct-bound-ids?
                                            valid-bound-ids?
                                            bound-id=?
                                            free-id=?
                                            id-var-name
                                            same-marks?
                                            join-marks
                                            join-wraps
                                            smart-append
                                            make-binding-wrap
                                            extend-ribcage!
                                            make-empty-ribcage
                                            new-mark
                                            anti-mark
                                            the-anti-mark
                                            top-marked?
                                            top-wrap
                                            empty-wrap
                                            set-ribcage-labels!
                                            set-ribcage-marks!
                                            set-ribcage-symnames!
                                            ribcage-labels
                                            ribcage-marks
                                            ribcage-symnames
                                            ribcage?
                                            make-ribcage
                                            gen-labels
                                            gen-label
                                            make-rename
                                            rename-marks
                                            rename-new
                                            rename-old
                                            subst-rename?
                                            wrap-subst
                                            wrap-marks
                                            make-wrap
                                            id-sym-name&marks
                                            id-sym-name
                                            id?
                                            nonsymbol-id?
                                            global-extend
                                            lookup
                                            macros-only-env
                                            extend-var-env
                                            extend-env
                                            null-env
                                            binding-value
                                            binding-type
                                            make-binding
                                            arg-check
                                            source-annotation
                                            no-source
                                            set-syntax-object-module!
                                            set-syntax-object-wrap!
                                            set-syntax-object-expression!
                                            syntax-object-module
                                            syntax-object-wrap
                                            syntax-object-expression
                                            syntax-object?
                                            make-syntax-object
                                            build-lexical-var
                                            build-letrec
                                            build-named-let
                                            build-let
                                            build-sequence
                                            build-data
                                            build-primref
                                            build-lambda-case
                                            build-case-lambda
                                            build-simple-lambda
                                            build-global-definition
                                            build-global-assignment
                                            build-global-reference
                                            analyze-variable
                                            build-lexical-assignment
                                            build-lexical-reference
                                            build-dynlet
                                            build-conditional
                                            build-application
                                            build-void
                                            maybe-name-value!
                                            decorate-source
                                            get-global-definition-hook
                                            put-global-definition-hook
                                            gensym-hook
                                            local-eval-hook
                                            top-level-eval-hook
                                            fx<
                                            fx=
                                            fx-
                                            fx+
                                            set-lambda-meta!
                                            lambda-meta
                                            lambda?
                                            make-dynlet
                                            make-letrec
                                            make-let
                                            make-lambda-case
                                            make-lambda
                                            make-sequence
                                            make-application
                                            make-conditional
                                            make-toplevel-define
                                            make-toplevel-set
                                            make-toplevel-ref
                                            make-module-set
                                            make-module-ref
                                            make-lexical-set
                                            make-lexical-ref
                                            make-primitive-ref
                                            make-const
                                            make-void)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i467"
                                           "i465"
                                           "i463"
                                           "i461"
                                           "i459"
                                           "i457"
                                           "i455"
                                           "i453"
                                           "i451"
                                           "i449"
                                           "i447"
                                           "i445"
                                           "i443"
                                           "i441"
                                           "i439"
                                           "i437"
                                           "i435"
                                           "i433"
                                           "i431"
                                           "i429"
                                           "i427"
                                           "i425"
                                           "i423"
                                           "i421"
                                           "i419"
                                           "i417"
                                           "i415"
                                           "i413"
                                           "i411"
                                           "i409"
                                           "i407"
                                           "i405"
                                           "i403"
                                           "i401"
                                           "i399"
                                           "i398"
                                           "i396"
                                           "i393"
                                           "i392"
                                           "i391"
                                           "i389"
                                           "i388"
                                           "i386"
                                           "i384"
                                           "i382"
                                           "i380"
                                           "i378"
                                           "i376"
                                           "i374"
                                           "i372"
                                           "i369"
                                           "i367"
                                           "i366"
                                           "i364"
                                           "i362"
                                           "i360"
                                           "i358"
                                           "i357"
                                           "i356"
                                           "i355"
                                           "i353"
                                           "i352"
                                           "i349"
                                           "i347"
                                           "i345"
                                           "i343"
                                           "i341"
                                           "i339"
                                           "i337"
                                           "i336"
                                           "i335"
                                           "i333"
                                           "i331"
                                           "i330"
                                           "i327"
                                           "i326"
                                           "i324"
                                           "i322"
                                           "i320"
                                           "i318"
                                           "i316"
                                           "i314"
                                           "i312"
                                           "i310"
                                           "i308"
                                           "i305"
                                           "i303"
                                           "i301"
                                           "i299"
                                           "i297"
                                           "i295"
                                           "i293"
                                           "i291"
                                           "i289"
                                           "i287"
                                           "i285"
                                           "i283"
                                           "i281"
                                           "i279"
                                           "i277"
                                           "i275"
                                           "i273"
                                           "i271"
                                           "i269"
                                           "i267"
                                           "i265"
                                           "i263"
                                           "i261"
                                           "i260"
                                           "i257"
                                           "i255"
                                           "i254"
                                           "i253"
                                           "i252"
                                           "i251"
                                           "i249"
                                           "i247"
                                           "i245"
                                           "i242"
                                           "i240"
                                           "i238"
                                           "i236"
                                           "i234"
                                           "i232"
                                           "i230"
                                           "i228"
                                           "i226"
                                           "i224"
                                           "i222"
                                           "i220"
                                           "i218"
                                           "i216"
                                           "i214"
                                           "i212"
                                           "i210"
                                           "i208"))
                                        #(ribcage
                                          (define-structure
                                            define-expansion-accessors
                                            define-expansion-constructors)
                                          ((top) (top) (top))
                                          ("i46" "i45" "i44")))
                                       (hygiene guile))
                                    #{head 9920}#)
                              #{r 9036}#
                              #{w 9037}#
                              #{mod 9039}#)
                            (map (lambda (#{e 10274}#)
                                   (#{chi 4345}#
                                     #{e 10274}#
                                     #{r 9036}#
                                     #{w 9037}#
                                     #{mod 9039}#))
                                 (append
                                   #{tail 9921}#
                                   (list #{val 9922}#))))))))
                  #{tmp 9916}#)
                (syntax-violation
                  'set!
                  "bad set!"
                  (#{wrap 4338}#
                    (begin
                      (if (if (pair? #{e 9035}#) #{s 9038}# #f)
                        (set-source-properties! #{e 9035}# #{s 9038}#))
                      #{e 9035}#)
                    #{w 9037}#
                    #{mod 9039}#))))))))
    (module-define!
      (current-module)
      '@
      (make-syntax-transformer
        '@
        'module-ref
        (lambda (#{e 10388}# #{r 10389}# #{w 10390}#)
          (let ((#{tmp 10392}#
                  ($sc-dispatch #{e 10388}# '(_ each-any any))))
            (if (if #{tmp 10392}#
                  (@apply
                    (lambda (#{mod 10395}# #{id 10396}#)
                      (if (and-map #{id? 4313}# #{mod 10395}#)
                        (if (symbol? #{id 10396}#)
                          #t
                          (if (if (vector? #{id 10396}#)
                                (if (= (vector-length #{id 10396}#) 4)
                                  (eq? (vector-ref #{id 10396}# 0)
                                       'syntax-object)
                                  #f)
                                #f)
                            (symbol? (vector-ref #{id 10396}# 1))
                            #f))
                        #f))
                    #{tmp 10392}#)
                  #f)
              (@apply
                (lambda (#{mod 10436}# #{id 10437}#)
                  (values
                    (syntax->datum #{id 10437}#)
                    #{r 10389}#
                    #{w 10390}#
                    #f
                    (syntax->datum
                      (cons '#(syntax-object
                               public
                               ((top)
                                #(ribcage
                                  #(mod id)
                                  #((top) (top))
                                  #("i3602" "i3603"))
                                #(ribcage () () ())
                                #(ribcage
                                  #(e r w)
                                  #((top) (top) (top))
                                  #("i3590" "i3591" "i3592"))
                                #(ribcage
                                  (lambda-var-list
                                    gen-var
                                    strip
                                    chi-lambda-case
                                    lambda*-formals
                                    chi-simple-lambda
                                    lambda-formals
                                    ellipsis?
                                    chi-void
                                    eval-local-transformer
                                    chi-local-syntax
                                    chi-body
                                    chi-macro
                                    chi-application
                                    chi-expr
                                    chi
                                    syntax-type
                                    chi-when-list
                                    chi-install-global
                                    chi-top-sequence
                                    chi-sequence
                                    source-wrap
                                    wrap
                                    bound-id-member?
                                    distinct-bound-ids?
                                    valid-bound-ids?
                                    bound-id=?
                                    free-id=?
                                    id-var-name
                                    same-marks?
                                    join-marks
                                    join-wraps
                                    smart-append
                                    make-binding-wrap
                                    extend-ribcage!
                                    make-empty-ribcage
                                    new-mark
                                    anti-mark
                                    the-anti-mark
                                    top-marked?
                                    top-wrap
                                    empty-wrap
                                    set-ribcage-labels!
                                    set-ribcage-marks!
                                    set-ribcage-symnames!
                                    ribcage-labels
                                    ribcage-marks
                                    ribcage-symnames
                                    ribcage?
                                    make-ribcage
                                    gen-labels
                                    gen-label
                                    make-rename
                                    rename-marks
                                    rename-new
                                    rename-old
                                    subst-rename?
                                    wrap-subst
                                    wrap-marks
                                    make-wrap
                                    id-sym-name&marks
                                    id-sym-name
                                    id?
                                    nonsymbol-id?
                                    global-extend
                                    lookup
                                    macros-only-env
                                    extend-var-env
                                    extend-env
                                    null-env
                                    binding-value
                                    binding-type
                                    make-binding
                                    arg-check
                                    source-annotation
                                    no-source
                                    set-syntax-object-module!
                                    set-syntax-object-wrap!
                                    set-syntax-object-expression!
                                    syntax-object-module
                                    syntax-object-wrap
                                    syntax-object-expression
                                    syntax-object?
                                    make-syntax-object
                                    build-lexical-var
                                    build-letrec
                                    build-named-let
                                    build-let
                                    build-sequence
                                    build-data
                                    build-primref
                                    build-lambda-case
                                    build-case-lambda
                                    build-simple-lambda
                                    build-global-definition
                                    build-global-assignment
                                    build-global-reference
                                    analyze-variable
                                    build-lexical-assignment
                                    build-lexical-reference
                                    build-dynlet
                                    build-conditional
                                    build-application
                                    build-void
                                    maybe-name-value!
                                    decorate-source
                                    get-global-definition-hook
                                    put-global-definition-hook
                                    gensym-hook
                                    local-eval-hook
                                    top-level-eval-hook
                                    fx<
                                    fx=
                                    fx-
                                    fx+
                                    set-lambda-meta!
                                    lambda-meta
                                    lambda?
                                    make-dynlet
                                    make-letrec
                                    make-let
                                    make-lambda-case
                                    make-lambda
                                    make-sequence
                                    make-application
                                    make-conditional
                                    make-toplevel-define
                                    make-toplevel-set
                                    make-toplevel-ref
                                    make-module-set
                                    make-module-ref
                                    make-lexical-set
                                    make-lexical-ref
                                    make-primitive-ref
                                    make-const
                                    make-void)
                                  ((top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top)
                                   (top))
                                  ("i467"
                                   "i465"
                                   "i463"
                                   "i461"
                                   "i459"
                                   "i457"
                                   "i455"
                                   "i453"
                                   "i451"
                                   "i449"
                                   "i447"
                                   "i445"
                                   "i443"
                                   "i441"
                                   "i439"
                                   "i437"
                                   "i435"
                                   "i433"
                                   "i431"
                                   "i429"
                                   "i427"
                                   "i425"
                                   "i423"
                                   "i421"
                                   "i419"
                                   "i417"
                                   "i415"
                                   "i413"
                                   "i411"
                                   "i409"
                                   "i407"
                                   "i405"
                                   "i403"
                                   "i401"
                                   "i399"
                                   "i398"
                                   "i396"
                                   "i393"
                                   "i392"
                                   "i391"
                                   "i389"
                                   "i388"
                                   "i386"
                                   "i384"
                                   "i382"
                                   "i380"
                                   "i378"
                                   "i376"
                                   "i374"
                                   "i372"
                                   "i369"
                                   "i367"
                                   "i366"
                                   "i364"
                                   "i362"
                                   "i360"
                                   "i358"
                                   "i357"
                                   "i356"
                                   "i355"
                                   "i353"
                                   "i352"
                                   "i349"
                                   "i347"
                                   "i345"
                                   "i343"
                                   "i341"
                                   "i339"
                                   "i337"
                                   "i336"
                                   "i335"
                                   "i333"
                                   "i331"
                                   "i330"
                                   "i327"
                                   "i326"
                                   "i324"
                                   "i322"
                                   "i320"
                                   "i318"
                                   "i316"
                                   "i314"
                                   "i312"
                                   "i310"
                                   "i308"
                                   "i305"
                                   "i303"
                                   "i301"
                                   "i299"
                                   "i297"
                                   "i295"
                                   "i293"
                                   "i291"
                                   "i289"
                                   "i287"
                                   "i285"
                                   "i283"
                                   "i281"
                                   "i279"
                                   "i277"
                                   "i275"
                                   "i273"
                                   "i271"
                                   "i269"
                                   "i267"
                                   "i265"
                                   "i263"
                                   "i261"
                                   "i260"
                                   "i257"
                                   "i255"
                                   "i254"
                                   "i253"
                                   "i252"
                                   "i251"
                                   "i249"
                                   "i247"
                                   "i245"
                                   "i242"
                                   "i240"
                                   "i238"
                                   "i236"
                                   "i234"
                                   "i232"
                                   "i230"
                                   "i228"
                                   "i226"
                                   "i224"
                                   "i222"
                                   "i220"
                                   "i218"
                                   "i216"
                                   "i214"
                                   "i212"
                                   "i210"
                                   "i208"))
                                #(ribcage
                                  (define-structure
                                    define-expansion-accessors
                                    define-expansion-constructors)
                                  ((top) (top) (top))
                                  ("i46" "i45" "i44")))
                               (hygiene guile))
                            #{mod 10436}#))))
                #{tmp 10392}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{e 10388}#))))))
    (#{global-extend 4311}#
      'module-ref
      '@@
      (lambda (#{e 10534}# #{r 10535}# #{w 10536}#)
        (letrec*
          ((#{remodulate 10537}#
             (lambda (#{x 10743}# #{mod 10744}#)
               (if (pair? #{x 10743}#)
                 (cons (#{remodulate 10537}#
                         (car #{x 10743}#)
                         #{mod 10744}#)
                       (#{remodulate 10537}#
                         (cdr #{x 10743}#)
                         #{mod 10744}#))
                 (if (if (vector? #{x 10743}#)
                       (if (= (vector-length #{x 10743}#) 4)
                         (eq? (vector-ref #{x 10743}# 0) 'syntax-object)
                         #f)
                       #f)
                   (let ((#{expression 10758}#
                           (#{remodulate 10537}#
                             (vector-ref #{x 10743}# 1)
                             #{mod 10744}#))
                         (#{wrap 10759}# (vector-ref #{x 10743}# 2)))
                     (vector
                       'syntax-object
                       #{expression 10758}#
                       #{wrap 10759}#
                       #{mod 10744}#))
                   (if (vector? #{x 10743}#)
                     (let ((#{n 10767}# (vector-length #{x 10743}#)))
                       (let ((#{v 10768}# (make-vector #{n 10767}#)))
                         (letrec*
                           ((#{loop 10769}#
                              (lambda (#{i 10816}#)
                                (if (= #{i 10816}# #{n 10767}#)
                                  #{v 10768}#
                                  (begin
                                    (vector-set!
                                      #{v 10768}#
                                      #{i 10816}#
                                      (#{remodulate 10537}#
                                        (vector-ref #{x 10743}# #{i 10816}#)
                                        #{mod 10744}#))
                                    (#{loop 10769}# (#{1+}# #{i 10816}#)))))))
                           (#{loop 10769}# 0))))
                     #{x 10743}#))))))
          (let ((#{tmp 10539}#
                  ($sc-dispatch #{e 10534}# '(_ each-any any))))
            (if (if #{tmp 10539}#
                  (@apply
                    (lambda (#{mod 10543}# #{exp 10544}#)
                      (and-map #{id? 4313}# #{mod 10543}#))
                    #{tmp 10539}#)
                  #f)
              (@apply
                (lambda (#{mod 10560}# #{exp 10561}#)
                  (let ((#{mod 10562}#
                          (syntax->datum
                            (cons '#(syntax-object
                                     private
                                     ((top)
                                      #(ribcage
                                        #(mod exp)
                                        #((top) (top))
                                        #("i3646" "i3647"))
                                      #(ribcage (remodulate) ((top)) ("i3613"))
                                      #(ribcage
                                        #(e r w)
                                        #((top) (top) (top))
                                        #("i3610" "i3611" "i3612"))
                                      #(ribcage
                                        (lambda-var-list
                                          gen-var
                                          strip
                                          chi-lambda-case
                                          lambda*-formals
                                          chi-simple-lambda
                                          lambda-formals
                                          ellipsis?
                                          chi-void
                                          eval-local-transformer
                                          chi-local-syntax
                                          chi-body
                                          chi-macro
                                          chi-application
                                          chi-expr
                                          chi
                                          syntax-type
                                          chi-when-list
                                          chi-install-global
                                          chi-top-sequence
                                          chi-sequence
                                          source-wrap
                                          wrap
                                          bound-id-member?
                                          distinct-bound-ids?
                                          valid-bound-ids?
                                          bound-id=?
                                          free-id=?
                                          id-var-name
                                          same-marks?
                                          join-marks
                                          join-wraps
                                          smart-append
                                          make-binding-wrap
                                          extend-ribcage!
                                          make-empty-ribcage
                                          new-mark
                                          anti-mark
                                          the-anti-mark
                                          top-marked?
                                          top-wrap
                                          empty-wrap
                                          set-ribcage-labels!
                                          set-ribcage-marks!
                                          set-ribcage-symnames!
                                          ribcage-labels
                                          ribcage-marks
                                          ribcage-symnames
                                          ribcage?
                                          make-ribcage
                                          gen-labels
                                          gen-label
                                          make-rename
                                          rename-marks
                                          rename-new
                                          rename-old
                                          subst-rename?
                                          wrap-subst
                                          wrap-marks
                                          make-wrap
                                          id-sym-name&marks
                                          id-sym-name
                                          id?
                                          nonsymbol-id?
                                          global-extend
                                          lookup
                                          macros-only-env
                                          extend-var-env
                                          extend-env
                                          null-env
                                          binding-value
                                          binding-type
                                          make-binding
                                          arg-check
                                          source-annotation
                                          no-source
                                          set-syntax-object-module!
                                          set-syntax-object-wrap!
                                          set-syntax-object-expression!
                                          syntax-object-module
                                          syntax-object-wrap
                                          syntax-object-expression
                                          syntax-object?
                                          make-syntax-object
                                          build-lexical-var
                                          build-letrec
                                          build-named-let
                                          build-let
                                          build-sequence
                                          build-data
                                          build-primref
                                          build-lambda-case
                                          build-case-lambda
                                          build-simple-lambda
                                          build-global-definition
                                          build-global-assignment
                                          build-global-reference
                                          analyze-variable
                                          build-lexical-assignment
                                          build-lexical-reference
                                          build-dynlet
                                          build-conditional
                                          build-application
                                          build-void
                                          maybe-name-value!
                                          decorate-source
                                          get-global-definition-hook
                                          put-global-definition-hook
                                          gensym-hook
                                          local-eval-hook
                                          top-level-eval-hook
                                          fx<
                                          fx=
                                          fx-
                                          fx+
                                          set-lambda-meta!
                                          lambda-meta
                                          lambda?
                                          make-dynlet
                                          make-letrec
                                          make-let
                                          make-lambda-case
                                          make-lambda
                                          make-sequence
                                          make-application
                                          make-conditional
                                          make-toplevel-define
                                          make-toplevel-set
                                          make-toplevel-ref
                                          make-module-set
                                          make-module-ref
                                          make-lexical-set
                                          make-lexical-ref
                                          make-primitive-ref
                                          make-const
                                          make-void)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i467"
                                         "i465"
                                         "i463"
                                         "i461"
                                         "i459"
                                         "i457"
                                         "i455"
                                         "i453"
                                         "i451"
                                         "i449"
                                         "i447"
                                         "i445"
                                         "i443"
                                         "i441"
                                         "i439"
                                         "i437"
                                         "i435"
                                         "i433"
                                         "i431"
                                         "i429"
                                         "i427"
                                         "i425"
                                         "i423"
                                         "i421"
                                         "i419"
                                         "i417"
                                         "i415"
                                         "i413"
                                         "i411"
                                         "i409"
                                         "i407"
                                         "i405"
                                         "i403"
                                         "i401"
                                         "i399"
                                         "i398"
                                         "i396"
                                         "i393"
                                         "i392"
                                         "i391"
                                         "i389"
                                         "i388"
                                         "i386"
                                         "i384"
                                         "i382"
                                         "i380"
                                         "i378"
                                         "i376"
                                         "i374"
                                         "i372"
                                         "i369"
                                         "i367"
                                         "i366"
                                         "i364"
                                         "i362"
                                         "i360"
                                         "i358"
                                         "i357"
                                         "i356"
                                         "i355"
                                         "i353"
                                         "i352"
                                         "i349"
                                         "i347"
                                         "i345"
                                         "i343"
                                         "i341"
                                         "i339"
                                         "i337"
                                         "i336"
                                         "i335"
                                         "i333"
                                         "i331"
                                         "i330"
                                         "i327"
                                         "i326"
                                         "i324"
                                         "i322"
                                         "i320"
                                         "i318"
                                         "i316"
                                         "i314"
                                         "i312"
                                         "i310"
                                         "i308"
                                         "i305"
                                         "i303"
                                         "i301"
                                         "i299"
                                         "i297"
                                         "i295"
                                         "i293"
                                         "i291"
                                         "i289"
                                         "i287"
                                         "i285"
                                         "i283"
                                         "i281"
                                         "i279"
                                         "i277"
                                         "i275"
                                         "i273"
                                         "i271"
                                         "i269"
                                         "i267"
                                         "i265"
                                         "i263"
                                         "i261"
                                         "i260"
                                         "i257"
                                         "i255"
                                         "i254"
                                         "i253"
                                         "i252"
                                         "i251"
                                         "i249"
                                         "i247"
                                         "i245"
                                         "i242"
                                         "i240"
                                         "i238"
                                         "i236"
                                         "i234"
                                         "i232"
                                         "i230"
                                         "i228"
                                         "i226"
                                         "i224"
                                         "i222"
                                         "i220"
                                         "i218"
                                         "i216"
                                         "i214"
                                         "i212"
                                         "i210"
                                         "i208"))
                                      #(ribcage
                                        (define-structure
                                          define-expansion-accessors
                                          define-expansion-constructors)
                                        ((top) (top) (top))
                                        ("i46" "i45" "i44")))
                                     (hygiene guile))
                                  #{mod 10560}#))))
                    (values
                      (#{remodulate 10537}#
                        #{exp 10561}#
                        #{mod 10562}#)
                      #{r 10535}#
                      #{w 10536}#
                      (#{source-annotation 4306}# #{exp 10561}#)
                      #{mod 10562}#)))
                #{tmp 10539}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{e 10534}#))))))
    (#{global-extend 4311}#
      'core
      'if
      (lambda (#{e 10922}#
               #{r 10923}#
               #{w 10924}#
               #{s 10925}#
               #{mod 10926}#)
        (let ((#{tmp 10928}#
                ($sc-dispatch #{e 10922}# '(_ any any))))
          (if #{tmp 10928}#
            (@apply
              (lambda (#{test 10932}# #{then 10933}#)
                (#{build-conditional 4281}#
                  #{s 10925}#
                  (#{chi 4345}#
                    #{test 10932}#
                    #{r 10923}#
                    #{w 10924}#
                    #{mod 10926}#)
                  (#{chi 4345}#
                    #{then 10933}#
                    #{r 10923}#
                    #{w 10924}#
                    #{mod 10926}#)
                  (make-struct/no-tail
                    (vector-ref %expanded-vtables 0)
                    #f)))
              #{tmp 10928}#)
            (let ((#{tmp 11173}#
                    ($sc-dispatch #{e 10922}# '(_ any any any))))
              (if #{tmp 11173}#
                (@apply
                  (lambda (#{test 11177}# #{then 11178}# #{else 11179}#)
                    (#{build-conditional 4281}#
                      #{s 10925}#
                      (#{chi 4345}#
                        #{test 11177}#
                        #{r 10923}#
                        #{w 10924}#
                        #{mod 10926}#)
                      (#{chi 4345}#
                        #{then 11178}#
                        #{r 10923}#
                        #{w 10924}#
                        #{mod 10926}#)
                      (#{chi 4345}#
                        #{else 11179}#
                        #{r 10923}#
                        #{w 10924}#
                        #{mod 10926}#)))
                  #{tmp 11173}#)
                (syntax-violation
                  #f
                  "source expression failed to match any pattern"
                  #{e 10922}#)))))))
    (#{global-extend 4311}#
      'core
      'with-fluids
      (lambda (#{e 11603}#
               #{r 11604}#
               #{w 11605}#
               #{s 11606}#
               #{mod 11607}#)
        (let ((#{tmp 11609}#
                ($sc-dispatch
                  #{e 11603}#
                  '(_ #(each (any any)) any . each-any))))
          (if #{tmp 11609}#
            (@apply
              (lambda (#{fluid 11613}#
                       #{val 11614}#
                       #{b 11615}#
                       #{b* 11616}#)
                (#{build-dynlet 4282}#
                  #{s 11606}#
                  (map (lambda (#{x 11702}#)
                         (#{chi 4345}#
                           #{x 11702}#
                           #{r 11604}#
                           #{w 11605}#
                           #{mod 11607}#))
                       #{fluid 11613}#)
                  (map (lambda (#{x 11777}#)
                         (#{chi 4345}#
                           #{x 11777}#
                           #{r 11604}#
                           #{w 11605}#
                           #{mod 11607}#))
                       #{val 11614}#)
                  (#{chi-body 4349}#
                    (cons #{b 11615}# #{b* 11616}#)
                    (#{wrap 4338}#
                      (begin
                        (if (if (pair? #{e 11603}#) #{s 11606}# #f)
                          (set-source-properties! #{e 11603}# #{s 11606}#))
                        #{e 11603}#)
                      #{w 11605}#
                      #{mod 11607}#)
                    #{r 11604}#
                    #{w 11605}#
                    #{mod 11607}#)))
              #{tmp 11609}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{e 11603}#)))))
    (module-define!
      (current-module)
      'begin
      (make-syntax-transformer 'begin 'begin '()))
    (module-define!
      (current-module)
      'define
      (make-syntax-transformer 'define 'define '()))
    (module-define!
      (current-module)
      'define-syntax
      (make-syntax-transformer
        'define-syntax
        'define-syntax
        '()))
    (module-define!
      (current-module)
      'eval-when
      (make-syntax-transformer
        'eval-when
        'eval-when
        '()))
    (#{global-extend 4311}#
      'core
      'syntax-case
      (letrec*
        ((#{convert-pattern 12148}#
           (lambda (#{pattern 13759}# #{keys 13760}#)
             (letrec*
               ((#{cvt* 13761}#
                  (lambda (#{p* 14378}# #{n 14379}# #{ids 14380}#)
                    (if (not (pair? #{p* 14378}#))
                      (#{cvt 13763}#
                        #{p* 14378}#
                        #{n 14379}#
                        #{ids 14380}#)
                      (call-with-values
                        (lambda ()
                          (#{cvt* 13761}#
                            (cdr #{p* 14378}#)
                            #{n 14379}#
                            #{ids 14380}#))
                        (lambda (#{y 14383}# #{ids 14384}#)
                          (call-with-values
                            (lambda ()
                              (#{cvt 13763}#
                                (car #{p* 14378}#)
                                #{n 14379}#
                                #{ids 14384}#))
                            (lambda (#{x 14387}# #{ids 14388}#)
                              (values
                                (cons #{x 14387}# #{y 14383}#)
                                #{ids 14388}#))))))))
                (#{v-reverse 13762}#
                  (lambda (#{x 14389}#)
                    (letrec*
                      ((#{loop 14390}#
                         (lambda (#{r 14467}# #{x 14468}#)
                           (if (not (pair? #{x 14468}#))
                             (values #{r 14467}# #{x 14468}#)
                             (#{loop 14390}#
                               (cons (car #{x 14468}#) #{r 14467}#)
                               (cdr #{x 14468}#))))))
                      (#{loop 14390}# '() #{x 14389}#))))
                (#{cvt 13763}#
                  (lambda (#{p 13766}# #{n 13767}# #{ids 13768}#)
                    (if (if (symbol? #{p 13766}#)
                          #t
                          (if (if (vector? #{p 13766}#)
                                (if (= (vector-length #{p 13766}#) 4)
                                  (eq? (vector-ref #{p 13766}# 0)
                                       'syntax-object)
                                  #f)
                                #f)
                            (symbol? (vector-ref #{p 13766}# 1))
                            #f))
                      (if (#{bound-id-member? 4337}#
                            #{p 13766}#
                            #{keys 13760}#)
                        (values
                          (vector 'free-id #{p 13766}#)
                          #{ids 13768}#)
                        (if (if (eq? (if (if (vector? #{p 13766}#)
                                           (if (= (vector-length #{p 13766}#)
                                                  4)
                                             (eq? (vector-ref #{p 13766}# 0)
                                                  'syntax-object)
                                             #f)
                                           #f)
                                       (vector-ref #{p 13766}# 1)
                                       #{p 13766}#)
                                     (if (if (= (vector-length
                                                  '#(syntax-object
                                                     _
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(p n ids)
                                                        #((top) (top) (top))
                                                        #("i3747"
                                                          "i3748"
                                                          "i3749"))
                                                      #(ribcage
                                                        (cvt v-reverse cvt*)
                                                        ((top) (top) (top))
                                                        ("i3720"
                                                         "i3718"
                                                         "i3716"))
                                                      #(ribcage
                                                        #(pattern keys)
                                                        #((top) (top))
                                                        #("i3714" "i3715"))
                                                      #(ribcage
                                                        (gen-syntax-case
                                                          gen-clause
                                                          build-dispatch-call
                                                          convert-pattern)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i3710"
                                                         "i3708"
                                                         "i3706"
                                                         "i3704"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i467"
                                                         "i465"
                                                         "i463"
                                                         "i461"
                                                         "i459"
                                                         "i457"
                                                         "i455"
                                                         "i453"
                                                         "i451"
                                                         "i449"
                                                         "i447"
                                                         "i445"
                                                         "i443"
                                                         "i441"
                                                         "i439"
                                                         "i437"
                                                         "i435"
                                                         "i433"
                                                         "i431"
                                                         "i429"
                                                         "i427"
                                                         "i425"
                                                         "i423"
                                                         "i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i398"
                                                         "i396"
                                                         "i393"
                                                         "i392"
                                                         "i391"
                                                         "i389"
                                                         "i388"
                                                         "i386"
                                                         "i384"
                                                         "i382"
                                                         "i380"
                                                         "i378"
                                                         "i376"
                                                         "i374"
                                                         "i372"
                                                         "i369"
                                                         "i367"
                                                         "i366"
                                                         "i364"
                                                         "i362"
                                                         "i360"
                                                         "i358"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i353"
                                                         "i352"
                                                         "i349"
                                                         "i347"
                                                         "i345"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i336"
                                                         "i335"
                                                         "i333"
                                                         "i331"
                                                         "i330"
                                                         "i327"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i305"
                                                         "i303"
                                                         "i301"
                                                         "i299"
                                                         "i297"
                                                         "i295"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i287"
                                                         "i285"
                                                         "i283"
                                                         "i281"
                                                         "i279"
                                                         "i277"
                                                         "i275"
                                                         "i273"
                                                         "i271"
                                                         "i269"
                                                         "i267"
                                                         "i265"
                                                         "i263"
                                                         "i261"
                                                         "i260"
                                                         "i257"
                                                         "i255"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i249"
                                                         "i247"
                                                         "i245"
                                                         "i242"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i218"
                                                         "i216"
                                                         "i214"
                                                         "i212"
                                                         "i210"
                                                         "i208"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i46" "i45" "i44")))
                                                     (hygiene guile)))
                                                4)
                                           (eq? (vector-ref
                                                  '#(syntax-object
                                                     _
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(p n ids)
                                                        #((top) (top) (top))
                                                        #("i3747"
                                                          "i3748"
                                                          "i3749"))
                                                      #(ribcage
                                                        (cvt v-reverse cvt*)
                                                        ((top) (top) (top))
                                                        ("i3720"
                                                         "i3718"
                                                         "i3716"))
                                                      #(ribcage
                                                        #(pattern keys)
                                                        #((top) (top))
                                                        #("i3714" "i3715"))
                                                      #(ribcage
                                                        (gen-syntax-case
                                                          gen-clause
                                                          build-dispatch-call
                                                          convert-pattern)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i3710"
                                                         "i3708"
                                                         "i3706"
                                                         "i3704"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i467"
                                                         "i465"
                                                         "i463"
                                                         "i461"
                                                         "i459"
                                                         "i457"
                                                         "i455"
                                                         "i453"
                                                         "i451"
                                                         "i449"
                                                         "i447"
                                                         "i445"
                                                         "i443"
                                                         "i441"
                                                         "i439"
                                                         "i437"
                                                         "i435"
                                                         "i433"
                                                         "i431"
                                                         "i429"
                                                         "i427"
                                                         "i425"
                                                         "i423"
                                                         "i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i398"
                                                         "i396"
                                                         "i393"
                                                         "i392"
                                                         "i391"
                                                         "i389"
                                                         "i388"
                                                         "i386"
                                                         "i384"
                                                         "i382"
                                                         "i380"
                                                         "i378"
                                                         "i376"
                                                         "i374"
                                                         "i372"
                                                         "i369"
                                                         "i367"
                                                         "i366"
                                                         "i364"
                                                         "i362"
                                                         "i360"
                                                         "i358"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i353"
                                                         "i352"
                                                         "i349"
                                                         "i347"
                                                         "i345"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i336"
                                                         "i335"
                                                         "i333"
                                                         "i331"
                                                         "i330"
                                                         "i327"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i305"
                                                         "i303"
                                                         "i301"
                                                         "i299"
                                                         "i297"
                                                         "i295"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i287"
                                                         "i285"
                                                         "i283"
                                                         "i281"
                                                         "i279"
                                                         "i277"
                                                         "i275"
                                                         "i273"
                                                         "i271"
                                                         "i269"
                                                         "i267"
                                                         "i265"
                                                         "i263"
                                                         "i261"
                                                         "i260"
                                                         "i257"
                                                         "i255"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i249"
                                                         "i247"
                                                         "i245"
                                                         "i242"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i218"
                                                         "i216"
                                                         "i214"
                                                         "i212"
                                                         "i210"
                                                         "i208"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i46" "i45" "i44")))
                                                     (hygiene guile))
                                                  0)
                                                'syntax-object)
                                           #f)
                                       (vector-ref
                                         '#(syntax-object
                                            _
                                            ((top)
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(p n ids)
                                               #((top) (top) (top))
                                               #("i3747" "i3748" "i3749"))
                                             #(ribcage
                                               (cvt v-reverse cvt*)
                                               ((top) (top) (top))
                                               ("i3720" "i3718" "i3716"))
                                             #(ribcage
                                               #(pattern keys)
                                               #((top) (top))
                                               #("i3714" "i3715"))
                                             #(ribcage
                                               (gen-syntax-case
                                                 gen-clause
                                                 build-dispatch-call
                                                 convert-pattern)
                                               ((top) (top) (top) (top))
                                               ("i3710"
                                                "i3708"
                                                "i3706"
                                                "i3704"))
                                             #(ribcage
                                               (lambda-var-list
                                                 gen-var
                                                 strip
                                                 chi-lambda-case
                                                 lambda*-formals
                                                 chi-simple-lambda
                                                 lambda-formals
                                                 ellipsis?
                                                 chi-void
                                                 eval-local-transformer
                                                 chi-local-syntax
                                                 chi-body
                                                 chi-macro
                                                 chi-application
                                                 chi-expr
                                                 chi
                                                 syntax-type
                                                 chi-when-list
                                                 chi-install-global
                                                 chi-top-sequence
                                                 chi-sequence
                                                 source-wrap
                                                 wrap
                                                 bound-id-member?
                                                 distinct-bound-ids?
                                                 valid-bound-ids?
                                                 bound-id=?
                                                 free-id=?
                                                 id-var-name
                                                 same-marks?
                                                 join-marks
                                                 join-wraps
                                                 smart-append
                                                 make-binding-wrap
                                                 extend-ribcage!
                                                 make-empty-ribcage
                                                 new-mark
                                                 anti-mark
                                                 the-anti-mark
                                                 top-marked?
                                                 top-wrap
                                                 empty-wrap
                                                 set-ribcage-labels!
                                                 set-ribcage-marks!
                                                 set-ribcage-symnames!
                                                 ribcage-labels
                                                 ribcage-marks
                                                 ribcage-symnames
                                                 ribcage?
                                                 make-ribcage
                                                 gen-labels
                                                 gen-label
                                                 make-rename
                                                 rename-marks
                                                 rename-new
                                                 rename-old
                                                 subst-rename?
                                                 wrap-subst
                                                 wrap-marks
                                                 make-wrap
                                                 id-sym-name&marks
                                                 id-sym-name
                                                 id?
                                                 nonsymbol-id?
                                                 global-extend
                                                 lookup
                                                 macros-only-env
                                                 extend-var-env
                                                 extend-env
                                                 null-env
                                                 binding-value
                                                 binding-type
                                                 make-binding
                                                 arg-check
                                                 source-annotation
                                                 no-source
                                                 set-syntax-object-module!
                                                 set-syntax-object-wrap!
                                                 set-syntax-object-expression!
                                                 syntax-object-module
                                                 syntax-object-wrap
                                                 syntax-object-expression
                                                 syntax-object?
                                                 make-syntax-object
                                                 build-lexical-var
                                                 build-letrec
                                                 build-named-let
                                                 build-let
                                                 build-sequence
                                                 build-data
                                                 build-primref
                                                 build-lambda-case
                                                 build-case-lambda
                                                 build-simple-lambda
                                                 build-global-definition
                                                 build-global-assignment
                                                 build-global-reference
                                                 analyze-variable
                                                 build-lexical-assignment
                                                 build-lexical-reference
                                                 build-dynlet
                                                 build-conditional
                                                 build-application
                                                 build-void
                                                 maybe-name-value!
                                                 decorate-source
                                                 get-global-definition-hook
                                                 put-global-definition-hook
                                                 gensym-hook
                                                 local-eval-hook
                                                 top-level-eval-hook
                                                 fx<
                                                 fx=
                                                 fx-
                                                 fx+
                                                 set-lambda-meta!
                                                 lambda-meta
                                                 lambda?
                                                 make-dynlet
                                                 make-letrec
                                                 make-let
                                                 make-lambda-case
                                                 make-lambda
                                                 make-sequence
                                                 make-application
                                                 make-conditional
                                                 make-toplevel-define
                                                 make-toplevel-set
                                                 make-toplevel-ref
                                                 make-module-set
                                                 make-module-ref
                                                 make-lexical-set
                                                 make-lexical-ref
                                                 make-primitive-ref
                                                 make-const
                                                 make-void)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i467"
                                                "i465"
                                                "i463"
                                                "i461"
                                                "i459"
                                                "i457"
                                                "i455"
                                                "i453"
                                                "i451"
                                                "i449"
                                                "i447"
                                                "i445"
                                                "i443"
                                                "i441"
                                                "i439"
                                                "i437"
                                                "i435"
                                                "i433"
                                                "i431"
                                                "i429"
                                                "i427"
                                                "i425"
                                                "i423"
                                                "i421"
                                                "i419"
                                                "i417"
                                                "i415"
                                                "i413"
                                                "i411"
                                                "i409"
                                                "i407"
                                                "i405"
                                                "i403"
                                                "i401"
                                                "i399"
                                                "i398"
                                                "i396"
                                                "i393"
                                                "i392"
                                                "i391"
                                                "i389"
                                                "i388"
                                                "i386"
                                                "i384"
                                                "i382"
                                                "i380"
                                                "i378"
                                                "i376"
                                                "i374"
                                                "i372"
                                                "i369"
                                                "i367"
                                                "i366"
                                                "i364"
                                                "i362"
                                                "i360"
                                                "i358"
                                                "i357"
                                                "i356"
                                                "i355"
                                                "i353"
                                                "i352"
                                                "i349"
                                                "i347"
                                                "i345"
                                                "i343"
                                                "i341"
                                                "i339"
                                                "i337"
                                                "i336"
                                                "i335"
                                                "i333"
                                                "i331"
                                                "i330"
                                                "i327"
                                                "i326"
                                                "i324"
                                                "i322"
                                                "i320"
                                                "i318"
                                                "i316"
                                                "i314"
                                                "i312"
                                                "i310"
                                                "i308"
                                                "i305"
                                                "i303"
                                                "i301"
                                                "i299"
                                                "i297"
                                                "i295"
                                                "i293"
                                                "i291"
                                                "i289"
                                                "i287"
                                                "i285"
                                                "i283"
                                                "i281"
                                                "i279"
                                                "i277"
                                                "i275"
                                                "i273"
                                                "i271"
                                                "i269"
                                                "i267"
                                                "i265"
                                                "i263"
                                                "i261"
                                                "i260"
                                                "i257"
                                                "i255"
                                                "i254"
                                                "i253"
                                                "i252"
                                                "i251"
                                                "i249"
                                                "i247"
                                                "i245"
                                                "i242"
                                                "i240"
                                                "i238"
                                                "i236"
                                                "i234"
                                                "i232"
                                                "i230"
                                                "i228"
                                                "i226"
                                                "i224"
                                                "i222"
                                                "i220"
                                                "i218"
                                                "i216"
                                                "i214"
                                                "i212"
                                                "i210"
                                                "i208"))
                                             #(ribcage
                                               (define-structure
                                                 define-expansion-accessors
                                                 define-expansion-constructors)
                                               ((top) (top) (top))
                                               ("i46" "i45" "i44")))
                                            (hygiene guile))
                                         1)
                                       '#(syntax-object
                                          _
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(p n ids)
                                             #((top) (top) (top))
                                             #("i3747" "i3748" "i3749"))
                                           #(ribcage
                                             (cvt v-reverse cvt*)
                                             ((top) (top) (top))
                                             ("i3720" "i3718" "i3716"))
                                           #(ribcage
                                             #(pattern keys)
                                             #((top) (top))
                                             #("i3714" "i3715"))
                                           #(ribcage
                                             (gen-syntax-case
                                               gen-clause
                                               build-dispatch-call
                                               convert-pattern)
                                             ((top) (top) (top) (top))
                                             ("i3710" "i3708" "i3706" "i3704"))
                                           #(ribcage
                                             (lambda-var-list
                                               gen-var
                                               strip
                                               chi-lambda-case
                                               lambda*-formals
                                               chi-simple-lambda
                                               lambda-formals
                                               ellipsis?
                                               chi-void
                                               eval-local-transformer
                                               chi-local-syntax
                                               chi-body
                                               chi-macro
                                               chi-application
                                               chi-expr
                                               chi
                                               syntax-type
                                               chi-when-list
                                               chi-install-global
                                               chi-top-sequence
                                               chi-sequence
                                               source-wrap
                                               wrap
                                               bound-id-member?
                                               distinct-bound-ids?
                                               valid-bound-ids?
                                               bound-id=?
                                               free-id=?
                                               id-var-name
                                               same-marks?
                                               join-marks
                                               join-wraps
                                               smart-append
                                               make-binding-wrap
                                               extend-ribcage!
                                               make-empty-ribcage
                                               new-mark
                                               anti-mark
                                               the-anti-mark
                                               top-marked?
                                               top-wrap
                                               empty-wrap
                                               set-ribcage-labels!
                                               set-ribcage-marks!
                                               set-ribcage-symnames!
                                               ribcage-labels
                                               ribcage-marks
                                               ribcage-symnames
                                               ribcage?
                                               make-ribcage
                                               gen-labels
                                               gen-label
                                               make-rename
                                               rename-marks
                                               rename-new
                                               rename-old
                                               subst-rename?
                                               wrap-subst
                                               wrap-marks
                                               make-wrap
                                               id-sym-name&marks
                                               id-sym-name
                                               id?
                                               nonsymbol-id?
                                               global-extend
                                               lookup
                                               macros-only-env
                                               extend-var-env
                                               extend-env
                                               null-env
                                               binding-value
                                               binding-type
                                               make-binding
                                               arg-check
                                               source-annotation
                                               no-source
                                               set-syntax-object-module!
                                               set-syntax-object-wrap!
                                               set-syntax-object-expression!
                                               syntax-object-module
                                               syntax-object-wrap
                                               syntax-object-expression
                                               syntax-object?
                                               make-syntax-object
                                               build-lexical-var
                                               build-letrec
                                               build-named-let
                                               build-let
                                               build-sequence
                                               build-data
                                               build-primref
                                               build-lambda-case
                                               build-case-lambda
                                               build-simple-lambda
                                               build-global-definition
                                               build-global-assignment
                                               build-global-reference
                                               analyze-variable
                                               build-lexical-assignment
                                               build-lexical-reference
                                               build-dynlet
                                               build-conditional
                                               build-application
                                               build-void
                                               maybe-name-value!
                                               decorate-source
                                               get-global-definition-hook
                                               put-global-definition-hook
                                               gensym-hook
                                               local-eval-hook
                                               top-level-eval-hook
                                               fx<
                                               fx=
                                               fx-
                                               fx+
                                               set-lambda-meta!
                                               lambda-meta
                                               lambda?
                                               make-dynlet
                                               make-letrec
                                               make-let
                                               make-lambda-case
                                               make-lambda
                                               make-sequence
                                               make-application
                                               make-conditional
                                               make-toplevel-define
                                               make-toplevel-set
                                               make-toplevel-ref
                                               make-module-set
                                               make-module-ref
                                               make-lexical-set
                                               make-lexical-ref
                                               make-primitive-ref
                                               make-const
                                               make-void)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i467"
                                              "i465"
                                              "i463"
                                              "i461"
                                              "i459"
                                              "i457"
                                              "i455"
                                              "i453"
                                              "i451"
                                              "i449"
                                              "i447"
                                              "i445"
                                              "i443"
                                              "i441"
                                              "i439"
                                              "i437"
                                              "i435"
                                              "i433"
                                              "i431"
                                              "i429"
                                              "i427"
                                              "i425"
                                              "i423"
                                              "i421"
                                              "i419"
                                              "i417"
                                              "i415"
                                              "i413"
                                              "i411"
                                              "i409"
                                              "i407"
                                              "i405"
                                              "i403"
                                              "i401"
                                              "i399"
                                              "i398"
                                              "i396"
                                              "i393"
                                              "i392"
                                              "i391"
                                              "i389"
                                              "i388"
                                              "i386"
                                              "i384"
                                              "i382"
                                              "i380"
                                              "i378"
                                              "i376"
                                              "i374"
                                              "i372"
                                              "i369"
                                              "i367"
                                              "i366"
                                              "i364"
                                              "i362"
                                              "i360"
                                              "i358"
                                              "i357"
                                              "i356"
                                              "i355"
                                              "i353"
                                              "i352"
                                              "i349"
                                              "i347"
                                              "i345"
                                              "i343"
                                              "i341"
                                              "i339"
                                              "i337"
                                              "i336"
                                              "i335"
                                              "i333"
                                              "i331"
                                              "i330"
                                              "i327"
                                              "i326"
                                              "i324"
                                              "i322"
                                              "i320"
                                              "i318"
                                              "i316"
                                              "i314"
                                              "i312"
                                              "i310"
                                              "i308"
                                              "i305"
                                              "i303"
                                              "i301"
                                              "i299"
                                              "i297"
                                              "i295"
                                              "i293"
                                              "i291"
                                              "i289"
                                              "i287"
                                              "i285"
                                              "i283"
                                              "i281"
                                              "i279"
                                              "i277"
                                              "i275"
                                              "i273"
                                              "i271"
                                              "i269"
                                              "i267"
                                              "i265"
                                              "i263"
                                              "i261"
                                              "i260"
                                              "i257"
                                              "i255"
                                              "i254"
                                              "i253"
                                              "i252"
                                              "i251"
                                              "i249"
                                              "i247"
                                              "i245"
                                              "i242"
                                              "i240"
                                              "i238"
                                              "i236"
                                              "i234"
                                              "i232"
                                              "i230"
                                              "i228"
                                              "i226"
                                              "i224"
                                              "i222"
                                              "i220"
                                              "i218"
                                              "i216"
                                              "i214"
                                              "i212"
                                              "i210"
                                              "i208"))
                                           #(ribcage
                                             (define-structure
                                               define-expansion-accessors
                                               define-expansion-constructors)
                                             ((top) (top) (top))
                                             ("i46" "i45" "i44")))
                                          (hygiene guile))))
                              (eq? (#{id-var-name 4332}# #{p 13766}# '(()))
                                   (#{id-var-name 4332}#
                                     '#(syntax-object
                                        _
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p n ids)
                                           #((top) (top) (top))
                                           #("i3747" "i3748" "i3749"))
                                         #(ribcage
                                           (cvt v-reverse cvt*)
                                           ((top) (top) (top))
                                           ("i3720" "i3718" "i3716"))
                                         #(ribcage
                                           #(pattern keys)
                                           #((top) (top))
                                           #("i3714" "i3715"))
                                         #(ribcage
                                           (gen-syntax-case
                                             gen-clause
                                             build-dispatch-call
                                             convert-pattern)
                                           ((top) (top) (top) (top))
                                           ("i3710" "i3708" "i3706" "i3704"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             maybe-name-value!
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             set-lambda-meta!
                                             lambda-meta
                                             lambda?
                                             make-dynlet
                                             make-letrec
                                             make-let
                                             make-lambda-case
                                             make-lambda
                                             make-sequence
                                             make-application
                                             make-conditional
                                             make-toplevel-define
                                             make-toplevel-set
                                             make-toplevel-ref
                                             make-module-set
                                             make-module-ref
                                             make-lexical-set
                                             make-lexical-ref
                                             make-primitive-ref
                                             make-const
                                             make-void)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i467"
                                            "i465"
                                            "i463"
                                            "i461"
                                            "i459"
                                            "i457"
                                            "i455"
                                            "i453"
                                            "i451"
                                            "i449"
                                            "i447"
                                            "i445"
                                            "i443"
                                            "i441"
                                            "i439"
                                            "i437"
                                            "i435"
                                            "i433"
                                            "i431"
                                            "i429"
                                            "i427"
                                            "i425"
                                            "i423"
                                            "i421"
                                            "i419"
                                            "i417"
                                            "i415"
                                            "i413"
                                            "i411"
                                            "i409"
                                            "i407"
                                            "i405"
                                            "i403"
                                            "i401"
                                            "i399"
                                            "i398"
                                            "i396"
                                            "i393"
                                            "i392"
                                            "i391"
                                            "i389"
                                            "i388"
                                            "i386"
                                            "i384"
                                            "i382"
                                            "i380"
                                            "i378"
                                            "i376"
                                            "i374"
                                            "i372"
                                            "i369"
                                            "i367"
                                            "i366"
                                            "i364"
                                            "i362"
                                            "i360"
                                            "i358"
                                            "i357"
                                            "i356"
                                            "i355"
                                            "i353"
                                            "i352"
                                            "i349"
                                            "i347"
                                            "i345"
                                            "i343"
                                            "i341"
                                            "i339"
                                            "i337"
                                            "i336"
                                            "i335"
                                            "i333"
                                            "i331"
                                            "i330"
                                            "i327"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i305"
                                            "i303"
                                            "i301"
                                            "i299"
                                            "i297"
                                            "i295"
                                            "i293"
                                            "i291"
                                            "i289"
                                            "i287"
                                            "i285"
                                            "i283"
                                            "i281"
                                            "i279"
                                            "i277"
                                            "i275"
                                            "i273"
                                            "i271"
                                            "i269"
                                            "i267"
                                            "i265"
                                            "i263"
                                            "i261"
                                            "i260"
                                            "i257"
                                            "i255"
                                            "i254"
                                            "i253"
                                            "i252"
                                            "i251"
                                            "i249"
                                            "i247"
                                            "i245"
                                            "i242"
                                            "i240"
                                            "i238"
                                            "i236"
                                            "i234"
                                            "i232"
                                            "i230"
                                            "i228"
                                            "i226"
                                            "i224"
                                            "i222"
                                            "i220"
                                            "i218"
                                            "i216"
                                            "i214"
                                            "i212"
                                            "i210"
                                            "i208"))
                                         #(ribcage
                                           (define-structure
                                             define-expansion-accessors
                                             define-expansion-constructors)
                                           ((top) (top) (top))
                                           ("i46" "i45" "i44")))
                                        (hygiene guile))
                                     '(())))
                              #f)
                          (values '_ #{ids 13768}#)
                          (values
                            'any
                            (cons (cons #{p 13766}# #{n 13767}#)
                                  #{ids 13768}#))))
                      (let ((#{tmp 14087}#
                              ($sc-dispatch #{p 13766}# '(any any))))
                        (if (if #{tmp 14087}#
                              (@apply
                                (lambda (#{x 14091}# #{dots 14092}#)
                                  (if (if (if (vector? #{dots 14092}#)
                                            (if (= (vector-length
                                                     #{dots 14092}#)
                                                   4)
                                              (eq? (vector-ref
                                                     #{dots 14092}#
                                                     0)
                                                   'syntax-object)
                                              #f)
                                            #f)
                                        (symbol? (vector-ref #{dots 14092}# 1))
                                        #f)
                                    (if (eq? (if (if (vector? #{dots 14092}#)
                                                   (if (= (vector-length
                                                            #{dots 14092}#)
                                                          4)
                                                     (eq? (vector-ref
                                                            #{dots 14092}#
                                                            0)
                                                          'syntax-object)
                                                     #f)
                                                   #f)
                                               (vector-ref #{dots 14092}# 1)
                                               #{dots 14092}#)
                                             (if (if (= (vector-length
                                                          '#(syntax-object
                                                             ...
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i2230"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i467"
                                                                 "i465"
                                                                 "i463"
                                                                 "i461"
                                                                 "i459"
                                                                 "i457"
                                                                 "i455"
                                                                 "i453"
                                                                 "i451"
                                                                 "i449"
                                                                 "i447"
                                                                 "i445"
                                                                 "i443"
                                                                 "i441"
                                                                 "i439"
                                                                 "i437"
                                                                 "i435"
                                                                 "i433"
                                                                 "i431"
                                                                 "i429"
                                                                 "i427"
                                                                 "i425"
                                                                 "i423"
                                                                 "i421"
                                                                 "i419"
                                                                 "i417"
                                                                 "i415"
                                                                 "i413"
                                                                 "i411"
                                                                 "i409"
                                                                 "i407"
                                                                 "i405"
                                                                 "i403"
                                                                 "i401"
                                                                 "i399"
                                                                 "i398"
                                                                 "i396"
                                                                 "i393"
                                                                 "i392"
                                                                 "i391"
                                                                 "i389"
                                                                 "i388"
                                                                 "i386"
                                                                 "i384"
                                                                 "i382"
                                                                 "i380"
                                                                 "i378"
                                                                 "i376"
                                                                 "i374"
                                                                 "i372"
                                                                 "i369"
                                                                 "i367"
                                                                 "i366"
                                                                 "i364"
                                                                 "i362"
                                                                 "i360"
                                                                 "i358"
                                                                 "i357"
                                                                 "i356"
                                                                 "i355"
                                                                 "i353"
                                                                 "i352"
                                                                 "i349"
                                                                 "i347"
                                                                 "i345"
                                                                 "i343"
                                                                 "i341"
                                                                 "i339"
                                                                 "i337"
                                                                 "i336"
                                                                 "i335"
                                                                 "i333"
                                                                 "i331"
                                                                 "i330"
                                                                 "i327"
                                                                 "i326"
                                                                 "i324"
                                                                 "i322"
                                                                 "i320"
                                                                 "i318"
                                                                 "i316"
                                                                 "i314"
                                                                 "i312"
                                                                 "i310"
                                                                 "i308"
                                                                 "i305"
                                                                 "i303"
                                                                 "i301"
                                                                 "i299"
                                                                 "i297"
                                                                 "i295"
                                                                 "i293"
                                                                 "i291"
                                                                 "i289"
                                                                 "i287"
                                                                 "i285"
                                                                 "i283"
                                                                 "i281"
                                                                 "i279"
                                                                 "i277"
                                                                 "i275"
                                                                 "i273"
                                                                 "i271"
                                                                 "i269"
                                                                 "i267"
                                                                 "i265"
                                                                 "i263"
                                                                 "i261"
                                                                 "i260"
                                                                 "i257"
                                                                 "i255"
                                                                 "i254"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i249"
                                                                 "i247"
                                                                 "i245"
                                                                 "i242"
                                                                 "i240"
                                                                 "i238"
                                                                 "i236"
                                                                 "i234"
                                                                 "i232"
                                                                 "i230"
                                                                 "i228"
                                                                 "i226"
                                                                 "i224"
                                                                 "i222"
                                                                 "i220"
                                                                 "i218"
                                                                 "i216"
                                                                 "i214"
                                                                 "i212"
                                                                 "i210"
                                                                 "i208"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i46"
                                                                 "i45"
                                                                 "i44")))
                                                             (hygiene guile)))
                                                        4)
                                                   (eq? (vector-ref
                                                          '#(syntax-object
                                                             ...
                                                             ((top)
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                ()
                                                                ()
                                                                ())
                                                              #(ribcage
                                                                #(x)
                                                                #((top))
                                                                #("i2230"))
                                                              #(ribcage
                                                                (lambda-var-list
                                                                  gen-var
                                                                  strip
                                                                  chi-lambda-case
                                                                  lambda*-formals
                                                                  chi-simple-lambda
                                                                  lambda-formals
                                                                  ellipsis?
                                                                  chi-void
                                                                  eval-local-transformer
                                                                  chi-local-syntax
                                                                  chi-body
                                                                  chi-macro
                                                                  chi-application
                                                                  chi-expr
                                                                  chi
                                                                  syntax-type
                                                                  chi-when-list
                                                                  chi-install-global
                                                                  chi-top-sequence
                                                                  chi-sequence
                                                                  source-wrap
                                                                  wrap
                                                                  bound-id-member?
                                                                  distinct-bound-ids?
                                                                  valid-bound-ids?
                                                                  bound-id=?
                                                                  free-id=?
                                                                  id-var-name
                                                                  same-marks?
                                                                  join-marks
                                                                  join-wraps
                                                                  smart-append
                                                                  make-binding-wrap
                                                                  extend-ribcage!
                                                                  make-empty-ribcage
                                                                  new-mark
                                                                  anti-mark
                                                                  the-anti-mark
                                                                  top-marked?
                                                                  top-wrap
                                                                  empty-wrap
                                                                  set-ribcage-labels!
                                                                  set-ribcage-marks!
                                                                  set-ribcage-symnames!
                                                                  ribcage-labels
                                                                  ribcage-marks
                                                                  ribcage-symnames
                                                                  ribcage?
                                                                  make-ribcage
                                                                  gen-labels
                                                                  gen-label
                                                                  make-rename
                                                                  rename-marks
                                                                  rename-new
                                                                  rename-old
                                                                  subst-rename?
                                                                  wrap-subst
                                                                  wrap-marks
                                                                  make-wrap
                                                                  id-sym-name&marks
                                                                  id-sym-name
                                                                  id?
                                                                  nonsymbol-id?
                                                                  global-extend
                                                                  lookup
                                                                  macros-only-env
                                                                  extend-var-env
                                                                  extend-env
                                                                  null-env
                                                                  binding-value
                                                                  binding-type
                                                                  make-binding
                                                                  arg-check
                                                                  source-annotation
                                                                  no-source
                                                                  set-syntax-object-module!
                                                                  set-syntax-object-wrap!
                                                                  set-syntax-object-expression!
                                                                  syntax-object-module
                                                                  syntax-object-wrap
                                                                  syntax-object-expression
                                                                  syntax-object?
                                                                  make-syntax-object
                                                                  build-lexical-var
                                                                  build-letrec
                                                                  build-named-let
                                                                  build-let
                                                                  build-sequence
                                                                  build-data
                                                                  build-primref
                                                                  build-lambda-case
                                                                  build-case-lambda
                                                                  build-simple-lambda
                                                                  build-global-definition
                                                                  build-global-assignment
                                                                  build-global-reference
                                                                  analyze-variable
                                                                  build-lexical-assignment
                                                                  build-lexical-reference
                                                                  build-dynlet
                                                                  build-conditional
                                                                  build-application
                                                                  build-void
                                                                  maybe-name-value!
                                                                  decorate-source
                                                                  get-global-definition-hook
                                                                  put-global-definition-hook
                                                                  gensym-hook
                                                                  local-eval-hook
                                                                  top-level-eval-hook
                                                                  fx<
                                                                  fx=
                                                                  fx-
                                                                  fx+
                                                                  set-lambda-meta!
                                                                  lambda-meta
                                                                  lambda?
                                                                  make-dynlet
                                                                  make-letrec
                                                                  make-let
                                                                  make-lambda-case
                                                                  make-lambda
                                                                  make-sequence
                                                                  make-application
                                                                  make-conditional
                                                                  make-toplevel-define
                                                                  make-toplevel-set
                                                                  make-toplevel-ref
                                                                  make-module-set
                                                                  make-module-ref
                                                                  make-lexical-set
                                                                  make-lexical-ref
                                                                  make-primitive-ref
                                                                  make-const
                                                                  make-void)
                                                                ((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                                ("i467"
                                                                 "i465"
                                                                 "i463"
                                                                 "i461"
                                                                 "i459"
                                                                 "i457"
                                                                 "i455"
                                                                 "i453"
                                                                 "i451"
                                                                 "i449"
                                                                 "i447"
                                                                 "i445"
                                                                 "i443"
                                                                 "i441"
                                                                 "i439"
                                                                 "i437"
                                                                 "i435"
                                                                 "i433"
                                                                 "i431"
                                                                 "i429"
                                                                 "i427"
                                                                 "i425"
                                                                 "i423"
                                                                 "i421"
                                                                 "i419"
                                                                 "i417"
                                                                 "i415"
                                                                 "i413"
                                                                 "i411"
                                                                 "i409"
                                                                 "i407"
                                                                 "i405"
                                                                 "i403"
                                                                 "i401"
                                                                 "i399"
                                                                 "i398"
                                                                 "i396"
                                                                 "i393"
                                                                 "i392"
                                                                 "i391"
                                                                 "i389"
                                                                 "i388"
                                                                 "i386"
                                                                 "i384"
                                                                 "i382"
                                                                 "i380"
                                                                 "i378"
                                                                 "i376"
                                                                 "i374"
                                                                 "i372"
                                                                 "i369"
                                                                 "i367"
                                                                 "i366"
                                                                 "i364"
                                                                 "i362"
                                                                 "i360"
                                                                 "i358"
                                                                 "i357"
                                                                 "i356"
                                                                 "i355"
                                                                 "i353"
                                                                 "i352"
                                                                 "i349"
                                                                 "i347"
                                                                 "i345"
                                                                 "i343"
                                                                 "i341"
                                                                 "i339"
                                                                 "i337"
                                                                 "i336"
                                                                 "i335"
                                                                 "i333"
                                                                 "i331"
                                                                 "i330"
                                                                 "i327"
                                                                 "i326"
                                                                 "i324"
                                                                 "i322"
                                                                 "i320"
                                                                 "i318"
                                                                 "i316"
                                                                 "i314"
                                                                 "i312"
                                                                 "i310"
                                                                 "i308"
                                                                 "i305"
                                                                 "i303"
                                                                 "i301"
                                                                 "i299"
                                                                 "i297"
                                                                 "i295"
                                                                 "i293"
                                                                 "i291"
                                                                 "i289"
                                                                 "i287"
                                                                 "i285"
                                                                 "i283"
                                                                 "i281"
                                                                 "i279"
                                                                 "i277"
                                                                 "i275"
                                                                 "i273"
                                                                 "i271"
                                                                 "i269"
                                                                 "i267"
                                                                 "i265"
                                                                 "i263"
                                                                 "i261"
                                                                 "i260"
                                                                 "i257"
                                                                 "i255"
                                                                 "i254"
                                                                 "i253"
                                                                 "i252"
                                                                 "i251"
                                                                 "i249"
                                                                 "i247"
                                                                 "i245"
                                                                 "i242"
                                                                 "i240"
                                                                 "i238"
                                                                 "i236"
                                                                 "i234"
                                                                 "i232"
                                                                 "i230"
                                                                 "i228"
                                                                 "i226"
                                                                 "i224"
                                                                 "i222"
                                                                 "i220"
                                                                 "i218"
                                                                 "i216"
                                                                 "i214"
                                                                 "i212"
                                                                 "i210"
                                                                 "i208"))
                                                              #(ribcage
                                                                (define-structure
                                                                  define-expansion-accessors
                                                                  define-expansion-constructors)
                                                                ((top)
                                                                 (top)
                                                                 (top))
                                                                ("i46"
                                                                 "i45"
                                                                 "i44")))
                                                             (hygiene guile))
                                                          0)
                                                        'syntax-object)
                                                   #f)
                                               (vector-ref
                                                 '#(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i2230"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i467"
                                                        "i465"
                                                        "i463"
                                                        "i461"
                                                        "i459"
                                                        "i457"
                                                        "i455"
                                                        "i453"
                                                        "i451"
                                                        "i449"
                                                        "i447"
                                                        "i445"
                                                        "i443"
                                                        "i441"
                                                        "i439"
                                                        "i437"
                                                        "i435"
                                                        "i433"
                                                        "i431"
                                                        "i429"
                                                        "i427"
                                                        "i425"
                                                        "i423"
                                                        "i421"
                                                        "i419"
                                                        "i417"
                                                        "i415"
                                                        "i413"
                                                        "i411"
                                                        "i409"
                                                        "i407"
                                                        "i405"
                                                        "i403"
                                                        "i401"
                                                        "i399"
                                                        "i398"
                                                        "i396"
                                                        "i393"
                                                        "i392"
                                                        "i391"
                                                        "i389"
                                                        "i388"
                                                        "i386"
                                                        "i384"
                                                        "i382"
                                                        "i380"
                                                        "i378"
                                                        "i376"
                                                        "i374"
                                                        "i372"
                                                        "i369"
                                                        "i367"
                                                        "i366"
                                                        "i364"
                                                        "i362"
                                                        "i360"
                                                        "i358"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i353"
                                                        "i352"
                                                        "i349"
                                                        "i347"
                                                        "i345"
                                                        "i343"
                                                        "i341"
                                                        "i339"
                                                        "i337"
                                                        "i336"
                                                        "i335"
                                                        "i333"
                                                        "i331"
                                                        "i330"
                                                        "i327"
                                                        "i326"
                                                        "i324"
                                                        "i322"
                                                        "i320"
                                                        "i318"
                                                        "i316"
                                                        "i314"
                                                        "i312"
                                                        "i310"
                                                        "i308"
                                                        "i305"
                                                        "i303"
                                                        "i301"
                                                        "i299"
                                                        "i297"
                                                        "i295"
                                                        "i293"
                                                        "i291"
                                                        "i289"
                                                        "i287"
                                                        "i285"
                                                        "i283"
                                                        "i281"
                                                        "i279"
                                                        "i277"
                                                        "i275"
                                                        "i273"
                                                        "i271"
                                                        "i269"
                                                        "i267"
                                                        "i265"
                                                        "i263"
                                                        "i261"
                                                        "i260"
                                                        "i257"
                                                        "i255"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i249"
                                                        "i247"
                                                        "i245"
                                                        "i242"
                                                        "i240"
                                                        "i238"
                                                        "i236"
                                                        "i234"
                                                        "i232"
                                                        "i230"
                                                        "i228"
                                                        "i226"
                                                        "i224"
                                                        "i222"
                                                        "i220"
                                                        "i218"
                                                        "i216"
                                                        "i214"
                                                        "i212"
                                                        "i210"
                                                        "i208"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i46" "i45" "i44")))
                                                    (hygiene guile))
                                                 1)
                                               '#(syntax-object
                                                  ...
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i2230"))
                                                   #(ribcage
                                                     (lambda-var-list
                                                       gen-var
                                                       strip
                                                       chi-lambda-case
                                                       lambda*-formals
                                                       chi-simple-lambda
                                                       lambda-formals
                                                       ellipsis?
                                                       chi-void
                                                       eval-local-transformer
                                                       chi-local-syntax
                                                       chi-body
                                                       chi-macro
                                                       chi-application
                                                       chi-expr
                                                       chi
                                                       syntax-type
                                                       chi-when-list
                                                       chi-install-global
                                                       chi-top-sequence
                                                       chi-sequence
                                                       source-wrap
                                                       wrap
                                                       bound-id-member?
                                                       distinct-bound-ids?
                                                       valid-bound-ids?
                                                       bound-id=?
                                                       free-id=?
                                                       id-var-name
                                                       same-marks?
                                                       join-marks
                                                       join-wraps
                                                       smart-append
                                                       make-binding-wrap
                                                       extend-ribcage!
                                                       make-empty-ribcage
                                                       new-mark
                                                       anti-mark
                                                       the-anti-mark
                                                       top-marked?
                                                       top-wrap
                                                       empty-wrap
                                                       set-ribcage-labels!
                                                       set-ribcage-marks!
                                                       set-ribcage-symnames!
                                                       ribcage-labels
                                                       ribcage-marks
                                                       ribcage-symnames
                                                       ribcage?
                                                       make-ribcage
                                                       gen-labels
                                                       gen-label
                                                       make-rename
                                                       rename-marks
                                                       rename-new
                                                       rename-old
                                                       subst-rename?
                                                       wrap-subst
                                                       wrap-marks
                                                       make-wrap
                                                       id-sym-name&marks
                                                       id-sym-name
                                                       id?
                                                       nonsymbol-id?
                                                       global-extend
                                                       lookup
                                                       macros-only-env
                                                       extend-var-env
                                                       extend-env
                                                       null-env
                                                       binding-value
                                                       binding-type
                                                       make-binding
                                                       arg-check
                                                       source-annotation
                                                       no-source
                                                       set-syntax-object-module!
                                                       set-syntax-object-wrap!
                                                       set-syntax-object-expression!
                                                       syntax-object-module
                                                       syntax-object-wrap
                                                       syntax-object-expression
                                                       syntax-object?
                                                       make-syntax-object
                                                       build-lexical-var
                                                       build-letrec
                                                       build-named-let
                                                       build-let
                                                       build-sequence
                                                       build-data
                                                       build-primref
                                                       build-lambda-case
                                                       build-case-lambda
                                                       build-simple-lambda
                                                       build-global-definition
                                                       build-global-assignment
                                                       build-global-reference
                                                       analyze-variable
                                                       build-lexical-assignment
                                                       build-lexical-reference
                                                       build-dynlet
                                                       build-conditional
                                                       build-application
                                                       build-void
                                                       maybe-name-value!
                                                       decorate-source
                                                       get-global-definition-hook
                                                       put-global-definition-hook
                                                       gensym-hook
                                                       local-eval-hook
                                                       top-level-eval-hook
                                                       fx<
                                                       fx=
                                                       fx-
                                                       fx+
                                                       set-lambda-meta!
                                                       lambda-meta
                                                       lambda?
                                                       make-dynlet
                                                       make-letrec
                                                       make-let
                                                       make-lambda-case
                                                       make-lambda
                                                       make-sequence
                                                       make-application
                                                       make-conditional
                                                       make-toplevel-define
                                                       make-toplevel-set
                                                       make-toplevel-ref
                                                       make-module-set
                                                       make-module-ref
                                                       make-lexical-set
                                                       make-lexical-ref
                                                       make-primitive-ref
                                                       make-const
                                                       make-void)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i467"
                                                      "i465"
                                                      "i463"
                                                      "i461"
                                                      "i459"
                                                      "i457"
                                                      "i455"
                                                      "i453"
                                                      "i451"
                                                      "i449"
                                                      "i447"
                                                      "i445"
                                                      "i443"
                                                      "i441"
                                                      "i439"
                                                      "i437"
                                                      "i435"
                                                      "i433"
                                                      "i431"
                                                      "i429"
                                                      "i427"
                                                      "i425"
                                                      "i423"
                                                      "i421"
                                                      "i419"
                                                      "i417"
                                                      "i415"
                                                      "i413"
                                                      "i411"
                                                      "i409"
                                                      "i407"
                                                      "i405"
                                                      "i403"
                                                      "i401"
                                                      "i399"
                                                      "i398"
                                                      "i396"
                                                      "i393"
                                                      "i392"
                                                      "i391"
                                                      "i389"
                                                      "i388"
                                                      "i386"
                                                      "i384"
                                                      "i382"
                                                      "i380"
                                                      "i378"
                                                      "i376"
                                                      "i374"
                                                      "i372"
                                                      "i369"
                                                      "i367"
                                                      "i366"
                                                      "i364"
                                                      "i362"
                                                      "i360"
                                                      "i358"
                                                      "i357"
                                                      "i356"
                                                      "i355"
                                                      "i353"
                                                      "i352"
                                                      "i349"
                                                      "i347"
                                                      "i345"
                                                      "i343"
                                                      "i341"
                                                      "i339"
                                                      "i337"
                                                      "i336"
                                                      "i335"
                                                      "i333"
                                                      "i331"
                                                      "i330"
                                                      "i327"
                                                      "i326"
                                                      "i324"
                                                      "i322"
                                                      "i320"
                                                      "i318"
                                                      "i316"
                                                      "i314"
                                                      "i312"
                                                      "i310"
                                                      "i308"
                                                      "i305"
                                                      "i303"
                                                      "i301"
                                                      "i299"
                                                      "i297"
                                                      "i295"
                                                      "i293"
                                                      "i291"
                                                      "i289"
                                                      "i287"
                                                      "i285"
                                                      "i283"
                                                      "i281"
                                                      "i279"
                                                      "i277"
                                                      "i275"
                                                      "i273"
                                                      "i271"
                                                      "i269"
                                                      "i267"
                                                      "i265"
                                                      "i263"
                                                      "i261"
                                                      "i260"
                                                      "i257"
                                                      "i255"
                                                      "i254"
                                                      "i253"
                                                      "i252"
                                                      "i251"
                                                      "i249"
                                                      "i247"
                                                      "i245"
                                                      "i242"
                                                      "i240"
                                                      "i238"
                                                      "i236"
                                                      "i234"
                                                      "i232"
                                                      "i230"
                                                      "i228"
                                                      "i226"
                                                      "i224"
                                                      "i222"
                                                      "i220"
                                                      "i218"
                                                      "i216"
                                                      "i214"
                                                      "i212"
                                                      "i210"
                                                      "i208"))
                                                   #(ribcage
                                                     (define-structure
                                                       define-expansion-accessors
                                                       define-expansion-constructors)
                                                     ((top) (top) (top))
                                                     ("i46" "i45" "i44")))
                                                  (hygiene guile))))
                                      (eq? (#{id-var-name 4332}#
                                             #{dots 14092}#
                                             '(()))
                                           (#{id-var-name 4332}#
                                             '#(syntax-object
                                                ...
                                                ((top)
                                                 #(ribcage () () ())
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i2230"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     maybe-name-value!
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     set-lambda-meta!
                                                     lambda-meta
                                                     lambda?
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i467"
                                                    "i465"
                                                    "i463"
                                                    "i461"
                                                    "i459"
                                                    "i457"
                                                    "i455"
                                                    "i453"
                                                    "i451"
                                                    "i449"
                                                    "i447"
                                                    "i445"
                                                    "i443"
                                                    "i441"
                                                    "i439"
                                                    "i437"
                                                    "i435"
                                                    "i433"
                                                    "i431"
                                                    "i429"
                                                    "i427"
                                                    "i425"
                                                    "i423"
                                                    "i421"
                                                    "i419"
                                                    "i417"
                                                    "i415"
                                                    "i413"
                                                    "i411"
                                                    "i409"
                                                    "i407"
                                                    "i405"
                                                    "i403"
                                                    "i401"
                                                    "i399"
                                                    "i398"
                                                    "i396"
                                                    "i393"
                                                    "i392"
                                                    "i391"
                                                    "i389"
                                                    "i388"
                                                    "i386"
                                                    "i384"
                                                    "i382"
                                                    "i380"
                                                    "i378"
                                                    "i376"
                                                    "i374"
                                                    "i372"
                                                    "i369"
                                                    "i367"
                                                    "i366"
                                                    "i364"
                                                    "i362"
                                                    "i360"
                                                    "i358"
                                                    "i357"
                                                    "i356"
                                                    "i355"
                                                    "i353"
                                                    "i352"
                                                    "i349"
                                                    "i347"
                                                    "i345"
                                                    "i343"
                                                    "i341"
                                                    "i339"
                                                    "i337"
                                                    "i336"
                                                    "i335"
                                                    "i333"
                                                    "i331"
                                                    "i330"
                                                    "i327"
                                                    "i326"
                                                    "i324"
                                                    "i322"
                                                    "i320"
                                                    "i318"
                                                    "i316"
                                                    "i314"
                                                    "i312"
                                                    "i310"
                                                    "i308"
                                                    "i305"
                                                    "i303"
                                                    "i301"
                                                    "i299"
                                                    "i297"
                                                    "i295"
                                                    "i293"
                                                    "i291"
                                                    "i289"
                                                    "i287"
                                                    "i285"
                                                    "i283"
                                                    "i281"
                                                    "i279"
                                                    "i277"
                                                    "i275"
                                                    "i273"
                                                    "i271"
                                                    "i269"
                                                    "i267"
                                                    "i265"
                                                    "i263"
                                                    "i261"
                                                    "i260"
                                                    "i257"
                                                    "i255"
                                                    "i254"
                                                    "i253"
                                                    "i252"
                                                    "i251"
                                                    "i249"
                                                    "i247"
                                                    "i245"
                                                    "i242"
                                                    "i240"
                                                    "i238"
                                                    "i236"
                                                    "i234"
                                                    "i232"
                                                    "i230"
                                                    "i228"
                                                    "i226"
                                                    "i224"
                                                    "i222"
                                                    "i220"
                                                    "i218"
                                                    "i216"
                                                    "i214"
                                                    "i212"
                                                    "i210"
                                                    "i208"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-accessors
                                                     define-expansion-constructors)
                                                   ((top) (top) (top))
                                                   ("i46" "i45" "i44")))
                                                (hygiene guile))
                                             '(())))
                                      #f)
                                    #f))
                                #{tmp 14087}#)
                              #f)
                          (@apply
                            (lambda (#{x 14189}# #{dots 14190}#)
                              (call-with-values
                                (lambda ()
                                  (#{cvt 13763}#
                                    #{x 14189}#
                                    (#{1+}# #{n 13767}#)
                                    #{ids 13768}#))
                                (lambda (#{p 14191}# #{ids 14192}#)
                                  (values
                                    (if (eq? #{p 14191}# 'any)
                                      'each-any
                                      (vector 'each #{p 14191}#))
                                    #{ids 14192}#))))
                            #{tmp 14087}#)
                          (let ((#{tmp 14193}#
                                  ($sc-dispatch #{p 13766}# '(any any . any))))
                            (if (if #{tmp 14193}#
                                  (@apply
                                    (lambda (#{x 14197}#
                                             #{dots 14198}#
                                             #{ys 14199}#)
                                      (if (if (if (vector? #{dots 14198}#)
                                                (if (= (vector-length
                                                         #{dots 14198}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{dots 14198}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (symbol?
                                              (vector-ref #{dots 14198}# 1))
                                            #f)
                                        (if (eq? (if (if (vector?
                                                           #{dots 14198}#)
                                                       (if (= (vector-length
                                                                #{dots 14198}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{dots 14198}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref
                                                     #{dots 14198}#
                                                     1)
                                                   #{dots 14198}#)
                                                 (if (if (= (vector-length
                                                              '#(syntax-object
                                                                 ...
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i2230"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i467"
                                                                     "i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i398"
                                                                     "i396"
                                                                     "i393"
                                                                     "i392"
                                                                     "i391"
                                                                     "i389"
                                                                     "i388"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i369"
                                                                     "i367"
                                                                     "i366"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i357"
                                                                     "i356"
                                                                     "i355"
                                                                     "i353"
                                                                     "i352"
                                                                     "i349"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i336"
                                                                     "i335"
                                                                     "i333"
                                                                     "i331"
                                                                     "i330"
                                                                     "i327"
                                                                     "i326"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i305"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i260"
                                                                     "i257"
                                                                     "i255"
                                                                     "i254"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i242"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i46"
                                                                     "i45"
                                                                     "i44")))
                                                                 (hygiene
                                                                   guile)))
                                                            4)
                                                       (eq? (vector-ref
                                                              '#(syntax-object
                                                                 ...
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i2230"))
                                                                  #(ribcage
                                                                    (lambda-var-list
                                                                      gen-var
                                                                      strip
                                                                      chi-lambda-case
                                                                      lambda*-formals
                                                                      chi-simple-lambda
                                                                      lambda-formals
                                                                      ellipsis?
                                                                      chi-void
                                                                      eval-local-transformer
                                                                      chi-local-syntax
                                                                      chi-body
                                                                      chi-macro
                                                                      chi-application
                                                                      chi-expr
                                                                      chi
                                                                      syntax-type
                                                                      chi-when-list
                                                                      chi-install-global
                                                                      chi-top-sequence
                                                                      chi-sequence
                                                                      source-wrap
                                                                      wrap
                                                                      bound-id-member?
                                                                      distinct-bound-ids?
                                                                      valid-bound-ids?
                                                                      bound-id=?
                                                                      free-id=?
                                                                      id-var-name
                                                                      same-marks?
                                                                      join-marks
                                                                      join-wraps
                                                                      smart-append
                                                                      make-binding-wrap
                                                                      extend-ribcage!
                                                                      make-empty-ribcage
                                                                      new-mark
                                                                      anti-mark
                                                                      the-anti-mark
                                                                      top-marked?
                                                                      top-wrap
                                                                      empty-wrap
                                                                      set-ribcage-labels!
                                                                      set-ribcage-marks!
                                                                      set-ribcage-symnames!
                                                                      ribcage-labels
                                                                      ribcage-marks
                                                                      ribcage-symnames
                                                                      ribcage?
                                                                      make-ribcage
                                                                      gen-labels
                                                                      gen-label
                                                                      make-rename
                                                                      rename-marks
                                                                      rename-new
                                                                      rename-old
                                                                      subst-rename?
                                                                      wrap-subst
                                                                      wrap-marks
                                                                      make-wrap
                                                                      id-sym-name&marks
                                                                      id-sym-name
                                                                      id?
                                                                      nonsymbol-id?
                                                                      global-extend
                                                                      lookup
                                                                      macros-only-env
                                                                      extend-var-env
                                                                      extend-env
                                                                      null-env
                                                                      binding-value
                                                                      binding-type
                                                                      make-binding
                                                                      arg-check
                                                                      source-annotation
                                                                      no-source
                                                                      set-syntax-object-module!
                                                                      set-syntax-object-wrap!
                                                                      set-syntax-object-expression!
                                                                      syntax-object-module
                                                                      syntax-object-wrap
                                                                      syntax-object-expression
                                                                      syntax-object?
                                                                      make-syntax-object
                                                                      build-lexical-var
                                                                      build-letrec
                                                                      build-named-let
                                                                      build-let
                                                                      build-sequence
                                                                      build-data
                                                                      build-primref
                                                                      build-lambda-case
                                                                      build-case-lambda
                                                                      build-simple-lambda
                                                                      build-global-definition
                                                                      build-global-assignment
                                                                      build-global-reference
                                                                      analyze-variable
                                                                      build-lexical-assignment
                                                                      build-lexical-reference
                                                                      build-dynlet
                                                                      build-conditional
                                                                      build-application
                                                                      build-void
                                                                      maybe-name-value!
                                                                      decorate-source
                                                                      get-global-definition-hook
                                                                      put-global-definition-hook
                                                                      gensym-hook
                                                                      local-eval-hook
                                                                      top-level-eval-hook
                                                                      fx<
                                                                      fx=
                                                                      fx-
                                                                      fx+
                                                                      set-lambda-meta!
                                                                      lambda-meta
                                                                      lambda?
                                                                      make-dynlet
                                                                      make-letrec
                                                                      make-let
                                                                      make-lambda-case
                                                                      make-lambda
                                                                      make-sequence
                                                                      make-application
                                                                      make-conditional
                                                                      make-toplevel-define
                                                                      make-toplevel-set
                                                                      make-toplevel-ref
                                                                      make-module-set
                                                                      make-module-ref
                                                                      make-lexical-set
                                                                      make-lexical-ref
                                                                      make-primitive-ref
                                                                      make-const
                                                                      make-void)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i467"
                                                                     "i465"
                                                                     "i463"
                                                                     "i461"
                                                                     "i459"
                                                                     "i457"
                                                                     "i455"
                                                                     "i453"
                                                                     "i451"
                                                                     "i449"
                                                                     "i447"
                                                                     "i445"
                                                                     "i443"
                                                                     "i441"
                                                                     "i439"
                                                                     "i437"
                                                                     "i435"
                                                                     "i433"
                                                                     "i431"
                                                                     "i429"
                                                                     "i427"
                                                                     "i425"
                                                                     "i423"
                                                                     "i421"
                                                                     "i419"
                                                                     "i417"
                                                                     "i415"
                                                                     "i413"
                                                                     "i411"
                                                                     "i409"
                                                                     "i407"
                                                                     "i405"
                                                                     "i403"
                                                                     "i401"
                                                                     "i399"
                                                                     "i398"
                                                                     "i396"
                                                                     "i393"
                                                                     "i392"
                                                                     "i391"
                                                                     "i389"
                                                                     "i388"
                                                                     "i386"
                                                                     "i384"
                                                                     "i382"
                                                                     "i380"
                                                                     "i378"
                                                                     "i376"
                                                                     "i374"
                                                                     "i372"
                                                                     "i369"
                                                                     "i367"
                                                                     "i366"
                                                                     "i364"
                                                                     "i362"
                                                                     "i360"
                                                                     "i358"
                                                                     "i357"
                                                                     "i356"
                                                                     "i355"
                                                                     "i353"
                                                                     "i352"
                                                                     "i349"
                                                                     "i347"
                                                                     "i345"
                                                                     "i343"
                                                                     "i341"
                                                                     "i339"
                                                                     "i337"
                                                                     "i336"
                                                                     "i335"
                                                                     "i333"
                                                                     "i331"
                                                                     "i330"
                                                                     "i327"
                                                                     "i326"
                                                                     "i324"
                                                                     "i322"
                                                                     "i320"
                                                                     "i318"
                                                                     "i316"
                                                                     "i314"
                                                                     "i312"
                                                                     "i310"
                                                                     "i308"
                                                                     "i305"
                                                                     "i303"
                                                                     "i301"
                                                                     "i299"
                                                                     "i297"
                                                                     "i295"
                                                                     "i293"
                                                                     "i291"
                                                                     "i289"
                                                                     "i287"
                                                                     "i285"
                                                                     "i283"
                                                                     "i281"
                                                                     "i279"
                                                                     "i277"
                                                                     "i275"
                                                                     "i273"
                                                                     "i271"
                                                                     "i269"
                                                                     "i267"
                                                                     "i265"
                                                                     "i263"
                                                                     "i261"
                                                                     "i260"
                                                                     "i257"
                                                                     "i255"
                                                                     "i254"
                                                                     "i253"
                                                                     "i252"
                                                                     "i251"
                                                                     "i249"
                                                                     "i247"
                                                                     "i245"
                                                                     "i242"
                                                                     "i240"
                                                                     "i238"
                                                                     "i236"
                                                                     "i234"
                                                                     "i232"
                                                                     "i230"
                                                                     "i228"
                                                                     "i226"
                                                                     "i224"
                                                                     "i222"
                                                                     "i220"
                                                                     "i218"
                                                                     "i216"
                                                                     "i214"
                                                                     "i212"
                                                                     "i210"
                                                                     "i208"))
                                                                  #(ribcage
                                                                    (define-structure
                                                                      define-expansion-accessors
                                                                      define-expansion-constructors)
                                                                    ((top)
                                                                     (top)
                                                                     (top))
                                                                    ("i46"
                                                                     "i45"
                                                                     "i44")))
                                                                 (hygiene
                                                                   guile))
                                                              0)
                                                            'syntax-object)
                                                       #f)
                                                   (vector-ref
                                                     '#(syntax-object
                                                        ...
                                                        ((top)
                                                         #(ribcage () () ())
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i2230"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i467"
                                                            "i465"
                                                            "i463"
                                                            "i461"
                                                            "i459"
                                                            "i457"
                                                            "i455"
                                                            "i453"
                                                            "i451"
                                                            "i449"
                                                            "i447"
                                                            "i445"
                                                            "i443"
                                                            "i441"
                                                            "i439"
                                                            "i437"
                                                            "i435"
                                                            "i433"
                                                            "i431"
                                                            "i429"
                                                            "i427"
                                                            "i425"
                                                            "i423"
                                                            "i421"
                                                            "i419"
                                                            "i417"
                                                            "i415"
                                                            "i413"
                                                            "i411"
                                                            "i409"
                                                            "i407"
                                                            "i405"
                                                            "i403"
                                                            "i401"
                                                            "i399"
                                                            "i398"
                                                            "i396"
                                                            "i393"
                                                            "i392"
                                                            "i391"
                                                            "i389"
                                                            "i388"
                                                            "i386"
                                                            "i384"
                                                            "i382"
                                                            "i380"
                                                            "i378"
                                                            "i376"
                                                            "i374"
                                                            "i372"
                                                            "i369"
                                                            "i367"
                                                            "i366"
                                                            "i364"
                                                            "i362"
                                                            "i360"
                                                            "i358"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i353"
                                                            "i352"
                                                            "i349"
                                                            "i347"
                                                            "i345"
                                                            "i343"
                                                            "i341"
                                                            "i339"
                                                            "i337"
                                                            "i336"
                                                            "i335"
                                                            "i333"
                                                            "i331"
                                                            "i330"
                                                            "i327"
                                                            "i326"
                                                            "i324"
                                                            "i322"
                                                            "i320"
                                                            "i318"
                                                            "i316"
                                                            "i314"
                                                            "i312"
                                                            "i310"
                                                            "i308"
                                                            "i305"
                                                            "i303"
                                                            "i301"
                                                            "i299"
                                                            "i297"
                                                            "i295"
                                                            "i293"
                                                            "i291"
                                                            "i289"
                                                            "i287"
                                                            "i285"
                                                            "i283"
                                                            "i281"
                                                            "i279"
                                                            "i277"
                                                            "i275"
                                                            "i273"
                                                            "i271"
                                                            "i269"
                                                            "i267"
                                                            "i265"
                                                            "i263"
                                                            "i261"
                                                            "i260"
                                                            "i257"
                                                            "i255"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i249"
                                                            "i247"
                                                            "i245"
                                                            "i242"
                                                            "i240"
                                                            "i238"
                                                            "i236"
                                                            "i234"
                                                            "i232"
                                                            "i230"
                                                            "i228"
                                                            "i226"
                                                            "i224"
                                                            "i222"
                                                            "i220"
                                                            "i218"
                                                            "i216"
                                                            "i214"
                                                            "i212"
                                                            "i210"
                                                            "i208"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i46"
                                                            "i45"
                                                            "i44")))
                                                        (hygiene guile))
                                                     1)
                                                   '#(syntax-object
                                                      ...
                                                      ((top)
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i2230"))
                                                       #(ribcage
                                                         (lambda-var-list
                                                           gen-var
                                                           strip
                                                           chi-lambda-case
                                                           lambda*-formals
                                                           chi-simple-lambda
                                                           lambda-formals
                                                           ellipsis?
                                                           chi-void
                                                           eval-local-transformer
                                                           chi-local-syntax
                                                           chi-body
                                                           chi-macro
                                                           chi-application
                                                           chi-expr
                                                           chi
                                                           syntax-type
                                                           chi-when-list
                                                           chi-install-global
                                                           chi-top-sequence
                                                           chi-sequence
                                                           source-wrap
                                                           wrap
                                                           bound-id-member?
                                                           distinct-bound-ids?
                                                           valid-bound-ids?
                                                           bound-id=?
                                                           free-id=?
                                                           id-var-name
                                                           same-marks?
                                                           join-marks
                                                           join-wraps
                                                           smart-append
                                                           make-binding-wrap
                                                           extend-ribcage!
                                                           make-empty-ribcage
                                                           new-mark
                                                           anti-mark
                                                           the-anti-mark
                                                           top-marked?
                                                           top-wrap
                                                           empty-wrap
                                                           set-ribcage-labels!
                                                           set-ribcage-marks!
                                                           set-ribcage-symnames!
                                                           ribcage-labels
                                                           ribcage-marks
                                                           ribcage-symnames
                                                           ribcage?
                                                           make-ribcage
                                                           gen-labels
                                                           gen-label
                                                           make-rename
                                                           rename-marks
                                                           rename-new
                                                           rename-old
                                                           subst-rename?
                                                           wrap-subst
                                                           wrap-marks
                                                           make-wrap
                                                           id-sym-name&marks
                                                           id-sym-name
                                                           id?
                                                           nonsymbol-id?
                                                           global-extend
                                                           lookup
                                                           macros-only-env
                                                           extend-var-env
                                                           extend-env
                                                           null-env
                                                           binding-value
                                                           binding-type
                                                           make-binding
                                                           arg-check
                                                           source-annotation
                                                           no-source
                                                           set-syntax-object-module!
                                                           set-syntax-object-wrap!
                                                           set-syntax-object-expression!
                                                           syntax-object-module
                                                           syntax-object-wrap
                                                           syntax-object-expression
                                                           syntax-object?
                                                           make-syntax-object
                                                           build-lexical-var
                                                           build-letrec
                                                           build-named-let
                                                           build-let
                                                           build-sequence
                                                           build-data
                                                           build-primref
                                                           build-lambda-case
                                                           build-case-lambda
                                                           build-simple-lambda
                                                           build-global-definition
                                                           build-global-assignment
                                                           build-global-reference
                                                           analyze-variable
                                                           build-lexical-assignment
                                                           build-lexical-reference
                                                           build-dynlet
                                                           build-conditional
                                                           build-application
                                                           build-void
                                                           maybe-name-value!
                                                           decorate-source
                                                           get-global-definition-hook
                                                           put-global-definition-hook
                                                           gensym-hook
                                                           local-eval-hook
                                                           top-level-eval-hook
                                                           fx<
                                                           fx=
                                                           fx-
                                                           fx+
                                                           set-lambda-meta!
                                                           lambda-meta
                                                           lambda?
                                                           make-dynlet
                                                           make-letrec
                                                           make-let
                                                           make-lambda-case
                                                           make-lambda
                                                           make-sequence
                                                           make-application
                                                           make-conditional
                                                           make-toplevel-define
                                                           make-toplevel-set
                                                           make-toplevel-ref
                                                           make-module-set
                                                           make-module-ref
                                                           make-lexical-set
                                                           make-lexical-ref
                                                           make-primitive-ref
                                                           make-const
                                                           make-void)
                                                         ((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                         ("i467"
                                                          "i465"
                                                          "i463"
                                                          "i461"
                                                          "i459"
                                                          "i457"
                                                          "i455"
                                                          "i453"
                                                          "i451"
                                                          "i449"
                                                          "i447"
                                                          "i445"
                                                          "i443"
                                                          "i441"
                                                          "i439"
                                                          "i437"
                                                          "i435"
                                                          "i433"
                                                          "i431"
                                                          "i429"
                                                          "i427"
                                                          "i425"
                                                          "i423"
                                                          "i421"
                                                          "i419"
                                                          "i417"
                                                          "i415"
                                                          "i413"
                                                          "i411"
                                                          "i409"
                                                          "i407"
                                                          "i405"
                                                          "i403"
                                                          "i401"
                                                          "i399"
                                                          "i398"
                                                          "i396"
                                                          "i393"
                                                          "i392"
                                                          "i391"
                                                          "i389"
                                                          "i388"
                                                          "i386"
                                                          "i384"
                                                          "i382"
                                                          "i380"
                                                          "i378"
                                                          "i376"
                                                          "i374"
                                                          "i372"
                                                          "i369"
                                                          "i367"
                                                          "i366"
                                                          "i364"
                                                          "i362"
                                                          "i360"
                                                          "i358"
                                                          "i357"
                                                          "i356"
                                                          "i355"
                                                          "i353"
                                                          "i352"
                                                          "i349"
                                                          "i347"
                                                          "i345"
                                                          "i343"
                                                          "i341"
                                                          "i339"
                                                          "i337"
                                                          "i336"
                                                          "i335"
                                                          "i333"
                                                          "i331"
                                                          "i330"
                                                          "i327"
                                                          "i326"
                                                          "i324"
                                                          "i322"
                                                          "i320"
                                                          "i318"
                                                          "i316"
                                                          "i314"
                                                          "i312"
                                                          "i310"
                                                          "i308"
                                                          "i305"
                                                          "i303"
                                                          "i301"
                                                          "i299"
                                                          "i297"
                                                          "i295"
                                                          "i293"
                                                          "i291"
                                                          "i289"
                                                          "i287"
                                                          "i285"
                                                          "i283"
                                                          "i281"
                                                          "i279"
                                                          "i277"
                                                          "i275"
                                                          "i273"
                                                          "i271"
                                                          "i269"
                                                          "i267"
                                                          "i265"
                                                          "i263"
                                                          "i261"
                                                          "i260"
                                                          "i257"
                                                          "i255"
                                                          "i254"
                                                          "i253"
                                                          "i252"
                                                          "i251"
                                                          "i249"
                                                          "i247"
                                                          "i245"
                                                          "i242"
                                                          "i240"
                                                          "i238"
                                                          "i236"
                                                          "i234"
                                                          "i232"
                                                          "i230"
                                                          "i228"
                                                          "i226"
                                                          "i224"
                                                          "i222"
                                                          "i220"
                                                          "i218"
                                                          "i216"
                                                          "i214"
                                                          "i212"
                                                          "i210"
                                                          "i208"))
                                                       #(ribcage
                                                         (define-structure
                                                           define-expansion-accessors
                                                           define-expansion-constructors)
                                                         ((top) (top) (top))
                                                         ("i46" "i45" "i44")))
                                                      (hygiene guile))))
                                          (eq? (#{id-var-name 4332}#
                                                 #{dots 14198}#
                                                 '(()))
                                               (#{id-var-name 4332}#
                                                 '#(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i2230"))
                                                     #(ribcage
                                                       (lambda-var-list
                                                         gen-var
                                                         strip
                                                         chi-lambda-case
                                                         lambda*-formals
                                                         chi-simple-lambda
                                                         lambda-formals
                                                         ellipsis?
                                                         chi-void
                                                         eval-local-transformer
                                                         chi-local-syntax
                                                         chi-body
                                                         chi-macro
                                                         chi-application
                                                         chi-expr
                                                         chi
                                                         syntax-type
                                                         chi-when-list
                                                         chi-install-global
                                                         chi-top-sequence
                                                         chi-sequence
                                                         source-wrap
                                                         wrap
                                                         bound-id-member?
                                                         distinct-bound-ids?
                                                         valid-bound-ids?
                                                         bound-id=?
                                                         free-id=?
                                                         id-var-name
                                                         same-marks?
                                                         join-marks
                                                         join-wraps
                                                         smart-append
                                                         make-binding-wrap
                                                         extend-ribcage!
                                                         make-empty-ribcage
                                                         new-mark
                                                         anti-mark
                                                         the-anti-mark
                                                         top-marked?
                                                         top-wrap
                                                         empty-wrap
                                                         set-ribcage-labels!
                                                         set-ribcage-marks!
                                                         set-ribcage-symnames!
                                                         ribcage-labels
                                                         ribcage-marks
                                                         ribcage-symnames
                                                         ribcage?
                                                         make-ribcage
                                                         gen-labels
                                                         gen-label
                                                         make-rename
                                                         rename-marks
                                                         rename-new
                                                         rename-old
                                                         subst-rename?
                                                         wrap-subst
                                                         wrap-marks
                                                         make-wrap
                                                         id-sym-name&marks
                                                         id-sym-name
                                                         id?
                                                         nonsymbol-id?
                                                         global-extend
                                                         lookup
                                                         macros-only-env
                                                         extend-var-env
                                                         extend-env
                                                         null-env
                                                         binding-value
                                                         binding-type
                                                         make-binding
                                                         arg-check
                                                         source-annotation
                                                         no-source
                                                         set-syntax-object-module!
                                                         set-syntax-object-wrap!
                                                         set-syntax-object-expression!
                                                         syntax-object-module
                                                         syntax-object-wrap
                                                         syntax-object-expression
                                                         syntax-object?
                                                         make-syntax-object
                                                         build-lexical-var
                                                         build-letrec
                                                         build-named-let
                                                         build-let
                                                         build-sequence
                                                         build-data
                                                         build-primref
                                                         build-lambda-case
                                                         build-case-lambda
                                                         build-simple-lambda
                                                         build-global-definition
                                                         build-global-assignment
                                                         build-global-reference
                                                         analyze-variable
                                                         build-lexical-assignment
                                                         build-lexical-reference
                                                         build-dynlet
                                                         build-conditional
                                                         build-application
                                                         build-void
                                                         maybe-name-value!
                                                         decorate-source
                                                         get-global-definition-hook
                                                         put-global-definition-hook
                                                         gensym-hook
                                                         local-eval-hook
                                                         top-level-eval-hook
                                                         fx<
                                                         fx=
                                                         fx-
                                                         fx+
                                                         set-lambda-meta!
                                                         lambda-meta
                                                         lambda?
                                                         make-dynlet
                                                         make-letrec
                                                         make-let
                                                         make-lambda-case
                                                         make-lambda
                                                         make-sequence
                                                         make-application
                                                         make-conditional
                                                         make-toplevel-define
                                                         make-toplevel-set
                                                         make-toplevel-ref
                                                         make-module-set
                                                         make-module-ref
                                                         make-lexical-set
                                                         make-lexical-ref
                                                         make-primitive-ref
                                                         make-const
                                                         make-void)
                                                       ((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                       ("i467"
                                                        "i465"
                                                        "i463"
                                                        "i461"
                                                        "i459"
                                                        "i457"
                                                        "i455"
                                                        "i453"
                                                        "i451"
                                                        "i449"
                                                        "i447"
                                                        "i445"
                                                        "i443"
                                                        "i441"
                                                        "i439"
                                                        "i437"
                                                        "i435"
                                                        "i433"
                                                        "i431"
                                                        "i429"
                                                        "i427"
                                                        "i425"
                                                        "i423"
                                                        "i421"
                                                        "i419"
                                                        "i417"
                                                        "i415"
                                                        "i413"
                                                        "i411"
                                                        "i409"
                                                        "i407"
                                                        "i405"
                                                        "i403"
                                                        "i401"
                                                        "i399"
                                                        "i398"
                                                        "i396"
                                                        "i393"
                                                        "i392"
                                                        "i391"
                                                        "i389"
                                                        "i388"
                                                        "i386"
                                                        "i384"
                                                        "i382"
                                                        "i380"
                                                        "i378"
                                                        "i376"
                                                        "i374"
                                                        "i372"
                                                        "i369"
                                                        "i367"
                                                        "i366"
                                                        "i364"
                                                        "i362"
                                                        "i360"
                                                        "i358"
                                                        "i357"
                                                        "i356"
                                                        "i355"
                                                        "i353"
                                                        "i352"
                                                        "i349"
                                                        "i347"
                                                        "i345"
                                                        "i343"
                                                        "i341"
                                                        "i339"
                                                        "i337"
                                                        "i336"
                                                        "i335"
                                                        "i333"
                                                        "i331"
                                                        "i330"
                                                        "i327"
                                                        "i326"
                                                        "i324"
                                                        "i322"
                                                        "i320"
                                                        "i318"
                                                        "i316"
                                                        "i314"
                                                        "i312"
                                                        "i310"
                                                        "i308"
                                                        "i305"
                                                        "i303"
                                                        "i301"
                                                        "i299"
                                                        "i297"
                                                        "i295"
                                                        "i293"
                                                        "i291"
                                                        "i289"
                                                        "i287"
                                                        "i285"
                                                        "i283"
                                                        "i281"
                                                        "i279"
                                                        "i277"
                                                        "i275"
                                                        "i273"
                                                        "i271"
                                                        "i269"
                                                        "i267"
                                                        "i265"
                                                        "i263"
                                                        "i261"
                                                        "i260"
                                                        "i257"
                                                        "i255"
                                                        "i254"
                                                        "i253"
                                                        "i252"
                                                        "i251"
                                                        "i249"
                                                        "i247"
                                                        "i245"
                                                        "i242"
                                                        "i240"
                                                        "i238"
                                                        "i236"
                                                        "i234"
                                                        "i232"
                                                        "i230"
                                                        "i228"
                                                        "i226"
                                                        "i224"
                                                        "i222"
                                                        "i220"
                                                        "i218"
                                                        "i216"
                                                        "i214"
                                                        "i212"
                                                        "i210"
                                                        "i208"))
                                                     #(ribcage
                                                       (define-structure
                                                         define-expansion-accessors
                                                         define-expansion-constructors)
                                                       ((top) (top) (top))
                                                       ("i46" "i45" "i44")))
                                                    (hygiene guile))
                                                 '(())))
                                          #f)
                                        #f))
                                    #{tmp 14193}#)
                                  #f)
                              (@apply
                                (lambda (#{x 14296}#
                                         #{dots 14297}#
                                         #{ys 14298}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{cvt* 13761}#
                                        #{ys 14298}#
                                        #{n 13767}#
                                        #{ids 13768}#))
                                    (lambda (#{ys 14301}# #{ids 14302}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{cvt 13763}#
                                            #{x 14296}#
                                            (#{1+}# #{n 13767}#)
                                            #{ids 14302}#))
                                        (lambda (#{x 14303}# #{ids 14304}#)
                                          (call-with-values
                                            (lambda ()
                                              (#{v-reverse 13762}#
                                                #{ys 14301}#))
                                            (lambda (#{ys 14337}# #{e 14338}#)
                                              (values
                                                (vector
                                                  'each+
                                                  #{x 14303}#
                                                  #{ys 14337}#
                                                  #{e 14338}#)
                                                #{ids 14304}#))))))))
                                #{tmp 14193}#)
                              (let ((#{tmp 14339}#
                                      ($sc-dispatch #{p 13766}# '(any . any))))
                                (if #{tmp 14339}#
                                  (@apply
                                    (lambda (#{x 14343}# #{y 14344}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{cvt 13763}#
                                            #{y 14344}#
                                            #{n 13767}#
                                            #{ids 13768}#))
                                        (lambda (#{y 14345}# #{ids 14346}#)
                                          (call-with-values
                                            (lambda ()
                                              (#{cvt 13763}#
                                                #{x 14343}#
                                                #{n 13767}#
                                                #{ids 14346}#))
                                            (lambda (#{x 14347}# #{ids 14348}#)
                                              (values
                                                (cons #{x 14347}# #{y 14345}#)
                                                #{ids 14348}#))))))
                                    #{tmp 14339}#)
                                  (let ((#{tmp 14349}#
                                          ($sc-dispatch #{p 13766}# '())))
                                    (if #{tmp 14349}#
                                      (@apply
                                        (lambda () (values '() #{ids 13768}#))
                                        #{tmp 14349}#)
                                      (let ((#{tmp 14353}#
                                              ($sc-dispatch
                                                #{p 13766}#
                                                '#(vector each-any))))
                                        (if #{tmp 14353}#
                                          (@apply
                                            (lambda (#{x 14357}#)
                                              (call-with-values
                                                (lambda ()
                                                  (#{cvt 13763}#
                                                    #{x 14357}#
                                                    #{n 13767}#
                                                    #{ids 13768}#))
                                                (lambda (#{p 14358}#
                                                         #{ids 14359}#)
                                                  (values
                                                    (vector
                                                      'vector
                                                      #{p 14358}#)
                                                    #{ids 14359}#))))
                                            #{tmp 14353}#)
                                          (values
                                            (vector
                                              'atom
                                              (#{strip 4358}#
                                                #{p 13766}#
                                                '(())))
                                            #{ids 13768}#)))))))))))))))
               (#{cvt 13763}# #{pattern 13759}# 0 '()))))
         (#{build-dispatch-call 12149}#
           (lambda (#{pvars 14469}#
                    #{exp 14470}#
                    #{y 14471}#
                    #{r 14472}#
                    #{mod 14473}#)
             (let ((#{ids 14474}# (map car #{pvars 14469}#)))
               (begin
                 (map cdr #{pvars 14469}#)
                 (let ((#{labels 14476}#
                         (#{gen-labels 4316}# #{ids 14474}#))
                       (#{new-vars 14477}#
                         (map #{gen-var 4359}# #{ids 14474}#)))
                   (#{build-application 4280}#
                     #f
                     (if (equal? (module-name (current-module)) '(guile))
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 7)
                         #f
                         'apply)
                       (make-struct/no-tail
                         (vector-ref %expanded-vtables 5)
                         #f
                         '(guile)
                         'apply
                         #f))
                     (list (#{build-simple-lambda 4289}#
                             #f
                             (map syntax->datum #{ids 14474}#)
                             #f
                             #{new-vars 14477}#
                             '()
                             (#{chi 4345}#
                               #{exp 14470}#
                               (#{extend-env 4307}#
                                 #{labels 14476}#
                                 (map (lambda (#{var 14802}# #{level 14803}#)
                                        (cons 'syntax
                                              (cons #{var 14802}#
                                                    #{level 14803}#)))
                                      #{new-vars 14477}#
                                      (map cdr #{pvars 14469}#))
                                 #{r 14472}#)
                               (#{make-binding-wrap 4327}#
                                 #{ids 14474}#
                                 #{labels 14476}#
                                 '(()))
                               #{mod 14473}#))
                           #{y 14471}#)))))))
         (#{gen-clause 12150}#
           (lambda (#{x 13123}#
                    #{keys 13124}#
                    #{clauses 13125}#
                    #{r 13126}#
                    #{pat 13127}#
                    #{fender 13128}#
                    #{exp 13129}#
                    #{mod 13130}#)
             (call-with-values
               (lambda ()
                 (#{convert-pattern 12148}#
                   #{pat 13127}#
                   #{keys 13124}#))
               (lambda (#{p 13285}# #{pvars 13286}#)
                 (if (not (#{distinct-bound-ids? 4336}#
                            (map car #{pvars 13286}#)))
                   (syntax-violation
                     'syntax-case
                     "duplicate pattern variable"
                     #{pat 13127}#)
                   (if (not (and-map
                              (lambda (#{x 13406}#)
                                (not (let ((#{x 13410}# (car #{x 13406}#)))
                                       (if (if (if (vector? #{x 13410}#)
                                                 (if (= (vector-length
                                                          #{x 13410}#)
                                                        4)
                                                   (eq? (vector-ref
                                                          #{x 13410}#
                                                          0)
                                                        'syntax-object)
                                                   #f)
                                                 #f)
                                             (symbol?
                                               (vector-ref #{x 13410}# 1))
                                             #f)
                                         (if (eq? (if (if (vector? #{x 13410}#)
                                                        (if (= (vector-length
                                                                 #{x 13410}#)
                                                               4)
                                                          (eq? (vector-ref
                                                                 #{x 13410}#
                                                                 0)
                                                               'syntax-object)
                                                          #f)
                                                        #f)
                                                    (vector-ref #{x 13410}# 1)
                                                    #{x 13410}#)
                                                  (if (if (= (vector-length
                                                               '#(syntax-object
                                                                  ...
                                                                  ((top)
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i2230"))
                                                                   #(ribcage
                                                                     (lambda-var-list
                                                                       gen-var
                                                                       strip
                                                                       chi-lambda-case
                                                                       lambda*-formals
                                                                       chi-simple-lambda
                                                                       lambda-formals
                                                                       ellipsis?
                                                                       chi-void
                                                                       eval-local-transformer
                                                                       chi-local-syntax
                                                                       chi-body
                                                                       chi-macro
                                                                       chi-application
                                                                       chi-expr
                                                                       chi
                                                                       syntax-type
                                                                       chi-when-list
                                                                       chi-install-global
                                                                       chi-top-sequence
                                                                       chi-sequence
                                                                       source-wrap
                                                                       wrap
                                                                       bound-id-member?
                                                                       distinct-bound-ids?
                                                                       valid-bound-ids?
                                                                       bound-id=?
                                                                       free-id=?
                                                                       id-var-name
                                                                       same-marks?
                                                                       join-marks
                                                                       join-wraps
                                                                       smart-append
                                                                       make-binding-wrap
                                                                       extend-ribcage!
                                                                       make-empty-ribcage
                                                                       new-mark
                                                                       anti-mark
                                                                       the-anti-mark
                                                                       top-marked?
                                                                       top-wrap
                                                                       empty-wrap
                                                                       set-ribcage-labels!
                                                                       set-ribcage-marks!
                                                                       set-ribcage-symnames!
                                                                       ribcage-labels
                                                                       ribcage-marks
                                                                       ribcage-symnames
                                                                       ribcage?
                                                                       make-ribcage
                                                                       gen-labels
                                                                       gen-label
                                                                       make-rename
                                                                       rename-marks
                                                                       rename-new
                                                                       rename-old
                                                                       subst-rename?
                                                                       wrap-subst
                                                                       wrap-marks
                                                                       make-wrap
                                                                       id-sym-name&marks
                                                                       id-sym-name
                                                                       id?
                                                                       nonsymbol-id?
                                                                       global-extend
                                                                       lookup
                                                                       macros-only-env
                                                                       extend-var-env
                                                                       extend-env
                                                                       null-env
                                                                       binding-value
                                                                       binding-type
                                                                       make-binding
                                                                       arg-check
                                                                       source-annotation
                                                                       no-source
                                                                       set-syntax-object-module!
                                                                       set-syntax-object-wrap!
                                                                       set-syntax-object-expression!
                                                                       syntax-object-module
                                                                       syntax-object-wrap
                                                                       syntax-object-expression
                                                                       syntax-object?
                                                                       make-syntax-object
                                                                       build-lexical-var
                                                                       build-letrec
                                                                       build-named-let
                                                                       build-let
                                                                       build-sequence
                                                                       build-data
                                                                       build-primref
                                                                       build-lambda-case
                                                                       build-case-lambda
                                                                       build-simple-lambda
                                                                       build-global-definition
                                                                       build-global-assignment
                                                                       build-global-reference
                                                                       analyze-variable
                                                                       build-lexical-assignment
                                                                       build-lexical-reference
                                                                       build-dynlet
                                                                       build-conditional
                                                                       build-application
                                                                       build-void
                                                                       maybe-name-value!
                                                                       decorate-source
                                                                       get-global-definition-hook
                                                                       put-global-definition-hook
                                                                       gensym-hook
                                                                       local-eval-hook
                                                                       top-level-eval-hook
                                                                       fx<
                                                                       fx=
                                                                       fx-
                                                                       fx+
                                                                       set-lambda-meta!
                                                                       lambda-meta
                                                                       lambda?
                                                                       make-dynlet
                                                                       make-letrec
                                                                       make-let
                                                                       make-lambda-case
                                                                       make-lambda
                                                                       make-sequence
                                                                       make-application
                                                                       make-conditional
                                                                       make-toplevel-define
                                                                       make-toplevel-set
                                                                       make-toplevel-ref
                                                                       make-module-set
                                                                       make-module-ref
                                                                       make-lexical-set
                                                                       make-lexical-ref
                                                                       make-primitive-ref
                                                                       make-const
                                                                       make-void)
                                                                     ((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                     ("i467"
                                                                      "i465"
                                                                      "i463"
                                                                      "i461"
                                                                      "i459"
                                                                      "i457"
                                                                      "i455"
                                                                      "i453"
                                                                      "i451"
                                                                      "i449"
                                                                      "i447"
                                                                      "i445"
                                                                      "i443"
                                                                      "i441"
                                                                      "i439"
                                                                      "i437"
                                                                      "i435"
                                                                      "i433"
                                                                      "i431"
                                                                      "i429"
                                                                      "i427"
                                                                      "i425"
                                                                      "i423"
                                                                      "i421"
                                                                      "i419"
                                                                      "i417"
                                                                      "i415"
                                                                      "i413"
                                                                      "i411"
                                                                      "i409"
                                                                      "i407"
                                                                      "i405"
                                                                      "i403"
                                                                      "i401"
                                                                      "i399"
                                                                      "i398"
                                                                      "i396"
                                                                      "i393"
                                                                      "i392"
                                                                      "i391"
                                                                      "i389"
                                                                      "i388"
                                                                      "i386"
                                                                      "i384"
                                                                      "i382"
                                                                      "i380"
                                                                      "i378"
                                                                      "i376"
                                                                      "i374"
                                                                      "i372"
                                                                      "i369"
                                                                      "i367"
                                                                      "i366"
                                                                      "i364"
                                                                      "i362"
                                                                      "i360"
                                                                      "i358"
                                                                      "i357"
                                                                      "i356"
                                                                      "i355"
                                                                      "i353"
                                                                      "i352"
                                                                      "i349"
                                                                      "i347"
                                                                      "i345"
                                                                      "i343"
                                                                      "i341"
                                                                      "i339"
                                                                      "i337"
                                                                      "i336"
                                                                      "i335"
                                                                      "i333"
                                                                      "i331"
                                                                      "i330"
                                                                      "i327"
                                                                      "i326"
                                                                      "i324"
                                                                      "i322"
                                                                      "i320"
                                                                      "i318"
                                                                      "i316"
                                                                      "i314"
                                                                      "i312"
                                                                      "i310"
                                                                      "i308"
                                                                      "i305"
                                                                      "i303"
                                                                      "i301"
                                                                      "i299"
                                                                      "i297"
                                                                      "i295"
                                                                      "i293"
                                                                      "i291"
                                                                      "i289"
                                                                      "i287"
                                                                      "i285"
                                                                      "i283"
                                                                      "i281"
                                                                      "i279"
                                                                      "i277"
                                                                      "i275"
                                                                      "i273"
                                                                      "i271"
                                                                      "i269"
                                                                      "i267"
                                                                      "i265"
                                                                      "i263"
                                                                      "i261"
                                                                      "i260"
                                                                      "i257"
                                                                      "i255"
                                                                      "i254"
                                                                      "i253"
                                                                      "i252"
                                                                      "i251"
                                                                      "i249"
                                                                      "i247"
                                                                      "i245"
                                                                      "i242"
                                                                      "i240"
                                                                      "i238"
                                                                      "i236"
                                                                      "i234"
                                                                      "i232"
                                                                      "i230"
                                                                      "i228"
                                                                      "i226"
                                                                      "i224"
                                                                      "i222"
                                                                      "i220"
                                                                      "i218"
                                                                      "i216"
                                                                      "i214"
                                                                      "i212"
                                                                      "i210"
                                                                      "i208"))
                                                                   #(ribcage
                                                                     (define-structure
                                                                       define-expansion-accessors
                                                                       define-expansion-constructors)
                                                                     ((top)
                                                                      (top)
                                                                      (top))
                                                                     ("i46"
                                                                      "i45"
                                                                      "i44")))
                                                                  (hygiene
                                                                    guile)))
                                                             4)
                                                        (eq? (vector-ref
                                                               '#(syntax-object
                                                                  ...
                                                                  ((top)
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(x)
                                                                     #((top))
                                                                     #("i2230"))
                                                                   #(ribcage
                                                                     (lambda-var-list
                                                                       gen-var
                                                                       strip
                                                                       chi-lambda-case
                                                                       lambda*-formals
                                                                       chi-simple-lambda
                                                                       lambda-formals
                                                                       ellipsis?
                                                                       chi-void
                                                                       eval-local-transformer
                                                                       chi-local-syntax
                                                                       chi-body
                                                                       chi-macro
                                                                       chi-application
                                                                       chi-expr
                                                                       chi
                                                                       syntax-type
                                                                       chi-when-list
                                                                       chi-install-global
                                                                       chi-top-sequence
                                                                       chi-sequence
                                                                       source-wrap
                                                                       wrap
                                                                       bound-id-member?
                                                                       distinct-bound-ids?
                                                                       valid-bound-ids?
                                                                       bound-id=?
                                                                       free-id=?
                                                                       id-var-name
                                                                       same-marks?
                                                                       join-marks
                                                                       join-wraps
                                                                       smart-append
                                                                       make-binding-wrap
                                                                       extend-ribcage!
                                                                       make-empty-ribcage
                                                                       new-mark
                                                                       anti-mark
                                                                       the-anti-mark
                                                                       top-marked?
                                                                       top-wrap
                                                                       empty-wrap
                                                                       set-ribcage-labels!
                                                                       set-ribcage-marks!
                                                                       set-ribcage-symnames!
                                                                       ribcage-labels
                                                                       ribcage-marks
                                                                       ribcage-symnames
                                                                       ribcage?
                                                                       make-ribcage
                                                                       gen-labels
                                                                       gen-label
                                                                       make-rename
                                                                       rename-marks
                                                                       rename-new
                                                                       rename-old
                                                                       subst-rename?
                                                                       wrap-subst
                                                                       wrap-marks
                                                                       make-wrap
                                                                       id-sym-name&marks
                                                                       id-sym-name
                                                                       id?
                                                                       nonsymbol-id?
                                                                       global-extend
                                                                       lookup
                                                                       macros-only-env
                                                                       extend-var-env
                                                                       extend-env
                                                                       null-env
                                                                       binding-value
                                                                       binding-type
                                                                       make-binding
                                                                       arg-check
                                                                       source-annotation
                                                                       no-source
                                                                       set-syntax-object-module!
                                                                       set-syntax-object-wrap!
                                                                       set-syntax-object-expression!
                                                                       syntax-object-module
                                                                       syntax-object-wrap
                                                                       syntax-object-expression
                                                                       syntax-object?
                                                                       make-syntax-object
                                                                       build-lexical-var
                                                                       build-letrec
                                                                       build-named-let
                                                                       build-let
                                                                       build-sequence
                                                                       build-data
                                                                       build-primref
                                                                       build-lambda-case
                                                                       build-case-lambda
                                                                       build-simple-lambda
                                                                       build-global-definition
                                                                       build-global-assignment
                                                                       build-global-reference
                                                                       analyze-variable
                                                                       build-lexical-assignment
                                                                       build-lexical-reference
                                                                       build-dynlet
                                                                       build-conditional
                                                                       build-application
                                                                       build-void
                                                                       maybe-name-value!
                                                                       decorate-source
                                                                       get-global-definition-hook
                                                                       put-global-definition-hook
                                                                       gensym-hook
                                                                       local-eval-hook
                                                                       top-level-eval-hook
                                                                       fx<
                                                                       fx=
                                                                       fx-
                                                                       fx+
                                                                       set-lambda-meta!
                                                                       lambda-meta
                                                                       lambda?
                                                                       make-dynlet
                                                                       make-letrec
                                                                       make-let
                                                                       make-lambda-case
                                                                       make-lambda
                                                                       make-sequence
                                                                       make-application
                                                                       make-conditional
                                                                       make-toplevel-define
                                                                       make-toplevel-set
                                                                       make-toplevel-ref
                                                                       make-module-set
                                                                       make-module-ref
                                                                       make-lexical-set
                                                                       make-lexical-ref
                                                                       make-primitive-ref
                                                                       make-const
                                                                       make-void)
                                                                     ((top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                     ("i467"
                                                                      "i465"
                                                                      "i463"
                                                                      "i461"
                                                                      "i459"
                                                                      "i457"
                                                                      "i455"
                                                                      "i453"
                                                                      "i451"
                                                                      "i449"
                                                                      "i447"
                                                                      "i445"
                                                                      "i443"
                                                                      "i441"
                                                                      "i439"
                                                                      "i437"
                                                                      "i435"
                                                                      "i433"
                                                                      "i431"
                                                                      "i429"
                                                                      "i427"
                                                                      "i425"
                                                                      "i423"
                                                                      "i421"
                                                                      "i419"
                                                                      "i417"
                                                                      "i415"
                                                                      "i413"
                                                                      "i411"
                                                                      "i409"
                                                                      "i407"
                                                                      "i405"
                                                                      "i403"
                                                                      "i401"
                                                                      "i399"
                                                                      "i398"
                                                                      "i396"
                                                                      "i393"
                                                                      "i392"
                                                                      "i391"
                                                                      "i389"
                                                                      "i388"
                                                                      "i386"
                                                                      "i384"
                                                                      "i382"
                                                                      "i380"
                                                                      "i378"
                                                                      "i376"
                                                                      "i374"
                                                                      "i372"
                                                                      "i369"
                                                                      "i367"
                                                                      "i366"
                                                                      "i364"
                                                                      "i362"
                                                                      "i360"
                                                                      "i358"
                                                                      "i357"
                                                                      "i356"
                                                                      "i355"
                                                                      "i353"
                                                                      "i352"
                                                                      "i349"
                                                                      "i347"
                                                                      "i345"
                                                                      "i343"
                                                                      "i341"
                                                                      "i339"
                                                                      "i337"
                                                                      "i336"
                                                                      "i335"
                                                                      "i333"
                                                                      "i331"
                                                                      "i330"
                                                                      "i327"
                                                                      "i326"
                                                                      "i324"
                                                                      "i322"
                                                                      "i320"
                                                                      "i318"
                                                                      "i316"
                                                                      "i314"
                                                                      "i312"
                                                                      "i310"
                                                                      "i308"
                                                                      "i305"
                                                                      "i303"
                                                                      "i301"
                                                                      "i299"
                                                                      "i297"
                                                                      "i295"
                                                                      "i293"
                                                                      "i291"
                                                                      "i289"
                                                                      "i287"
                                                                      "i285"
                                                                      "i283"
                                                                      "i281"
                                                                      "i279"
                                                                      "i277"
                                                                      "i275"
                                                                      "i273"
                                                                      "i271"
                                                                      "i269"
                                                                      "i267"
                                                                      "i265"
                                                                      "i263"
                                                                      "i261"
                                                                      "i260"
                                                                      "i257"
                                                                      "i255"
                                                                      "i254"
                                                                      "i253"
                                                                      "i252"
                                                                      "i251"
                                                                      "i249"
                                                                      "i247"
                                                                      "i245"
                                                                      "i242"
                                                                      "i240"
                                                                      "i238"
                                                                      "i236"
                                                                      "i234"
                                                                      "i232"
                                                                      "i230"
                                                                      "i228"
                                                                      "i226"
                                                                      "i224"
                                                                      "i222"
                                                                      "i220"
                                                                      "i218"
                                                                      "i216"
                                                                      "i214"
                                                                      "i212"
                                                                      "i210"
                                                                      "i208"))
                                                                   #(ribcage
                                                                     (define-structure
                                                                       define-expansion-accessors
                                                                       define-expansion-constructors)
                                                                     ((top)
                                                                      (top)
                                                                      (top))
                                                                     ("i46"
                                                                      "i45"
                                                                      "i44")))
                                                                  (hygiene
                                                                    guile))
                                                               0)
                                                             'syntax-object)
                                                        #f)
                                                    (vector-ref
                                                      '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i2230"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              maybe-name-value!
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              set-lambda-meta!
                                                              lambda-meta
                                                              lambda?
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i467"
                                                             "i465"
                                                             "i463"
                                                             "i461"
                                                             "i459"
                                                             "i457"
                                                             "i455"
                                                             "i453"
                                                             "i451"
                                                             "i449"
                                                             "i447"
                                                             "i445"
                                                             "i443"
                                                             "i441"
                                                             "i439"
                                                             "i437"
                                                             "i435"
                                                             "i433"
                                                             "i431"
                                                             "i429"
                                                             "i427"
                                                             "i425"
                                                             "i423"
                                                             "i421"
                                                             "i419"
                                                             "i417"
                                                             "i415"
                                                             "i413"
                                                             "i411"
                                                             "i409"
                                                             "i407"
                                                             "i405"
                                                             "i403"
                                                             "i401"
                                                             "i399"
                                                             "i398"
                                                             "i396"
                                                             "i393"
                                                             "i392"
                                                             "i391"
                                                             "i389"
                                                             "i388"
                                                             "i386"
                                                             "i384"
                                                             "i382"
                                                             "i380"
                                                             "i378"
                                                             "i376"
                                                             "i374"
                                                             "i372"
                                                             "i369"
                                                             "i367"
                                                             "i366"
                                                             "i364"
                                                             "i362"
                                                             "i360"
                                                             "i358"
                                                             "i357"
                                                             "i356"
                                                             "i355"
                                                             "i353"
                                                             "i352"
                                                             "i349"
                                                             "i347"
                                                             "i345"
                                                             "i343"
                                                             "i341"
                                                             "i339"
                                                             "i337"
                                                             "i336"
                                                             "i335"
                                                             "i333"
                                                             "i331"
                                                             "i330"
                                                             "i327"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i305"
                                                             "i303"
                                                             "i301"
                                                             "i299"
                                                             "i297"
                                                             "i295"
                                                             "i293"
                                                             "i291"
                                                             "i289"
                                                             "i287"
                                                             "i285"
                                                             "i283"
                                                             "i281"
                                                             "i279"
                                                             "i277"
                                                             "i275"
                                                             "i273"
                                                             "i271"
                                                             "i269"
                                                             "i267"
                                                             "i265"
                                                             "i263"
                                                             "i261"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i249"
                                                             "i247"
                                                             "i245"
                                                             "i242"
                                                             "i240"
                                                             "i238"
                                                             "i236"
                                                             "i234"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i220"
                                                             "i218"
                                                             "i216"
                                                             "i214"
                                                             "i212"
                                                             "i210"
                                                             "i208"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-accessors
                                                              define-expansion-constructors)
                                                            ((top) (top) (top))
                                                            ("i46"
                                                             "i45"
                                                             "i44")))
                                                         (hygiene guile))
                                                      1)
                                                    '#(syntax-object
                                                       ...
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i2230"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            maybe-name-value!
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            set-lambda-meta!
                                                            lambda-meta
                                                            lambda?
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i467"
                                                           "i465"
                                                           "i463"
                                                           "i461"
                                                           "i459"
                                                           "i457"
                                                           "i455"
                                                           "i453"
                                                           "i451"
                                                           "i449"
                                                           "i447"
                                                           "i445"
                                                           "i443"
                                                           "i441"
                                                           "i439"
                                                           "i437"
                                                           "i435"
                                                           "i433"
                                                           "i431"
                                                           "i429"
                                                           "i427"
                                                           "i425"
                                                           "i423"
                                                           "i421"
                                                           "i419"
                                                           "i417"
                                                           "i415"
                                                           "i413"
                                                           "i411"
                                                           "i409"
                                                           "i407"
                                                           "i405"
                                                           "i403"
                                                           "i401"
                                                           "i399"
                                                           "i398"
                                                           "i396"
                                                           "i393"
                                                           "i392"
                                                           "i391"
                                                           "i389"
                                                           "i388"
                                                           "i386"
                                                           "i384"
                                                           "i382"
                                                           "i380"
                                                           "i378"
                                                           "i376"
                                                           "i374"
                                                           "i372"
                                                           "i369"
                                                           "i367"
                                                           "i366"
                                                           "i364"
                                                           "i362"
                                                           "i360"
                                                           "i358"
                                                           "i357"
                                                           "i356"
                                                           "i355"
                                                           "i353"
                                                           "i352"
                                                           "i349"
                                                           "i347"
                                                           "i345"
                                                           "i343"
                                                           "i341"
                                                           "i339"
                                                           "i337"
                                                           "i336"
                                                           "i335"
                                                           "i333"
                                                           "i331"
                                                           "i330"
                                                           "i327"
                                                           "i326"
                                                           "i324"
                                                           "i322"
                                                           "i320"
                                                           "i318"
                                                           "i316"
                                                           "i314"
                                                           "i312"
                                                           "i310"
                                                           "i308"
                                                           "i305"
                                                           "i303"
                                                           "i301"
                                                           "i299"
                                                           "i297"
                                                           "i295"
                                                           "i293"
                                                           "i291"
                                                           "i289"
                                                           "i287"
                                                           "i285"
                                                           "i283"
                                                           "i281"
                                                           "i279"
                                                           "i277"
                                                           "i275"
                                                           "i273"
                                                           "i271"
                                                           "i269"
                                                           "i267"
                                                           "i265"
                                                           "i263"
                                                           "i261"
                                                           "i260"
                                                           "i257"
                                                           "i255"
                                                           "i254"
                                                           "i253"
                                                           "i252"
                                                           "i251"
                                                           "i249"
                                                           "i247"
                                                           "i245"
                                                           "i242"
                                                           "i240"
                                                           "i238"
                                                           "i236"
                                                           "i234"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i222"
                                                           "i220"
                                                           "i218"
                                                           "i216"
                                                           "i214"
                                                           "i212"
                                                           "i210"
                                                           "i208"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-accessors
                                                            define-expansion-constructors)
                                                          ((top) (top) (top))
                                                          ("i46" "i45" "i44")))
                                                       (hygiene guile))))
                                           (eq? (#{id-var-name 4332}#
                                                  #{x 13410}#
                                                  '(()))
                                                (#{id-var-name 4332}#
                                                  '#(syntax-object
                                                     ...
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i2230"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i467"
                                                         "i465"
                                                         "i463"
                                                         "i461"
                                                         "i459"
                                                         "i457"
                                                         "i455"
                                                         "i453"
                                                         "i451"
                                                         "i449"
                                                         "i447"
                                                         "i445"
                                                         "i443"
                                                         "i441"
                                                         "i439"
                                                         "i437"
                                                         "i435"
                                                         "i433"
                                                         "i431"
                                                         "i429"
                                                         "i427"
                                                         "i425"
                                                         "i423"
                                                         "i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i398"
                                                         "i396"
                                                         "i393"
                                                         "i392"
                                                         "i391"
                                                         "i389"
                                                         "i388"
                                                         "i386"
                                                         "i384"
                                                         "i382"
                                                         "i380"
                                                         "i378"
                                                         "i376"
                                                         "i374"
                                                         "i372"
                                                         "i369"
                                                         "i367"
                                                         "i366"
                                                         "i364"
                                                         "i362"
                                                         "i360"
                                                         "i358"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i353"
                                                         "i352"
                                                         "i349"
                                                         "i347"
                                                         "i345"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i336"
                                                         "i335"
                                                         "i333"
                                                         "i331"
                                                         "i330"
                                                         "i327"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i305"
                                                         "i303"
                                                         "i301"
                                                         "i299"
                                                         "i297"
                                                         "i295"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i287"
                                                         "i285"
                                                         "i283"
                                                         "i281"
                                                         "i279"
                                                         "i277"
                                                         "i275"
                                                         "i273"
                                                         "i271"
                                                         "i269"
                                                         "i267"
                                                         "i265"
                                                         "i263"
                                                         "i261"
                                                         "i260"
                                                         "i257"
                                                         "i255"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i249"
                                                         "i247"
                                                         "i245"
                                                         "i242"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i218"
                                                         "i216"
                                                         "i214"
                                                         "i212"
                                                         "i210"
                                                         "i208"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i46" "i45" "i44")))
                                                     (hygiene guile))
                                                  '(())))
                                           #f)
                                         #f))))
                              #{pvars 13286}#))
                     (syntax-violation
                       'syntax-case
                       "misplaced ellipsis"
                       #{pat 13127}#)
                     (let ((#{y 13483}#
                             (gensym
                               (string-append (symbol->string 'tmp) " "))))
                       (#{build-application 4280}#
                         #f
                         (let ((#{req 13633}# (list 'tmp))
                               (#{vars 13635}# (list #{y 13483}#))
                               (#{exp 13637}#
                                 (let ((#{y 13654}#
                                         (make-struct/no-tail
                                           (vector-ref %expanded-vtables 3)
                                           #f
                                           'tmp
                                           #{y 13483}#)))
                                   (let ((#{test-exp 13658}#
                                           (let ((#{tmp 13667}#
                                                   ($sc-dispatch
                                                     #{fender 13128}#
                                                     '#(atom #t))))
                                             (if #{tmp 13667}#
                                               (@apply
                                                 (lambda () #{y 13654}#)
                                                 #{tmp 13667}#)
                                               (let ((#{then-exp 13685}#
                                                       (#{build-dispatch-call 12149}#
                                                         #{pvars 13286}#
                                                         #{fender 13128}#
                                                         #{y 13654}#
                                                         #{r 13126}#
                                                         #{mod 13130}#))
                                                     (#{else-exp 13686}#
                                                       (make-struct/no-tail
                                                         (vector-ref
                                                           %expanded-vtables
                                                           1)
                                                         #f
                                                         #f)))
                                                 (make-struct/no-tail
                                                   (vector-ref
                                                     %expanded-vtables
                                                     10)
                                                   #f
                                                   #{y 13654}#
                                                   #{then-exp 13685}#
                                                   #{else-exp 13686}#)))))
                                         (#{then-exp 13659}#
                                           (#{build-dispatch-call 12149}#
                                             #{pvars 13286}#
                                             #{exp 13129}#
                                             #{y 13654}#
                                             #{r 13126}#
                                             #{mod 13130}#))
                                         (#{else-exp 13660}#
                                           (#{gen-syntax-case 12151}#
                                             #{x 13123}#
                                             #{keys 13124}#
                                             #{clauses 13125}#
                                             #{r 13126}#
                                             #{mod 13130}#)))
                                     (make-struct/no-tail
                                       (vector-ref %expanded-vtables 10)
                                       #f
                                       #{test-exp 13658}#
                                       #{then-exp 13659}#
                                       #{else-exp 13660}#)))))
                           (let ((#{body 13642}#
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 14)
                                     #f
                                     #{req 13633}#
                                     #f
                                     #f
                                     #f
                                     '()
                                     #{vars 13635}#
                                     #{exp 13637}#
                                     #f)))
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 13)
                               #f
                               '()
                               #{body 13642}#)))
                         (list (if (eq? #{p 13285}# 'any)
                                 (let ((#{fun-exp 13708}#
                                         (if (equal?
                                               (module-name (current-module))
                                               '(guile))
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 7)
                                             #f
                                             'list)
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 5)
                                             #f
                                             '(guile)
                                             'list
                                             #f)))
                                       (#{arg-exps 13709}# (list #{x 13123}#)))
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 11)
                                     #f
                                     #{fun-exp 13708}#
                                     #{arg-exps 13709}#))
                                 (let ((#{fun-exp 13732}#
                                         (if (equal?
                                               (module-name (current-module))
                                               '(guile))
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 7)
                                             #f
                                             '$sc-dispatch)
                                           (make-struct/no-tail
                                             (vector-ref %expanded-vtables 5)
                                             #f
                                             '(guile)
                                             '$sc-dispatch
                                             #f)))
                                       (#{arg-exps 13733}#
                                         (list #{x 13123}#
                                               (make-struct/no-tail
                                                 (vector-ref
                                                   %expanded-vtables
                                                   1)
                                                 #f
                                                 #{p 13285}#))))
                                   (make-struct/no-tail
                                     (vector-ref %expanded-vtables 11)
                                     #f
                                     #{fun-exp 13732}#
                                     #{arg-exps 13733}#))))))))))))
         (#{gen-syntax-case 12151}#
           (lambda (#{x 12557}#
                    #{keys 12558}#
                    #{clauses 12559}#
                    #{r 12560}#
                    #{mod 12561}#)
             (if (null? #{clauses 12559}#)
               (let ((#{fun-exp 12566}#
                       (if (equal? (module-name (current-module)) '(guile))
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 7)
                           #f
                           'syntax-violation)
                         (make-struct/no-tail
                           (vector-ref %expanded-vtables 5)
                           #f
                           '(guile)
                           'syntax-violation
                           #f)))
                     (#{arg-exps 12567}#
                       (list (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               #f)
                             (make-struct/no-tail
                               (vector-ref %expanded-vtables 1)
                               #f
                               "source expression failed to match any pattern")
                             #{x 12557}#)))
                 (make-struct/no-tail
                   (vector-ref %expanded-vtables 11)
                   #f
                   #{fun-exp 12566}#
                   #{arg-exps 12567}#))
               (let ((#{tmp 12600}# (car #{clauses 12559}#)))
                 (let ((#{tmp 12601}#
                         ($sc-dispatch #{tmp 12600}# '(any any))))
                   (if #{tmp 12601}#
                     (@apply
                       (lambda (#{pat 12603}# #{exp 12604}#)
                         (if (if (if (symbol? #{pat 12603}#)
                                   #t
                                   (if (if (vector? #{pat 12603}#)
                                         (if (= (vector-length #{pat 12603}#)
                                                4)
                                           (eq? (vector-ref #{pat 12603}# 0)
                                                'syntax-object)
                                           #f)
                                         #f)
                                     (symbol? (vector-ref #{pat 12603}# 1))
                                     #f))
                               (and-map
                                 (lambda (#{x 12631}#)
                                   (not (if (eq? (if (if (vector?
                                                           #{pat 12603}#)
                                                       (if (= (vector-length
                                                                #{pat 12603}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{pat 12603}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref #{pat 12603}# 1)
                                                   #{pat 12603}#)
                                                 (if (if (vector? #{x 12631}#)
                                                       (if (= (vector-length
                                                                #{x 12631}#)
                                                              4)
                                                         (eq? (vector-ref
                                                                #{x 12631}#
                                                                0)
                                                              'syntax-object)
                                                         #f)
                                                       #f)
                                                   (vector-ref #{x 12631}# 1)
                                                   #{x 12631}#))
                                          (eq? (#{id-var-name 4332}#
                                                 #{pat 12603}#
                                                 '(()))
                                               (#{id-var-name 4332}#
                                                 #{x 12631}#
                                                 '(())))
                                          #f)))
                                 (cons '#(syntax-object
                                          ...
                                          ((top)
                                           #(ribcage
                                             #(pat exp)
                                             #((top) (top))
                                             #("i3911" "i3912"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x keys clauses r mod)
                                             #((top) (top) (top) (top) (top))
                                             #("i3900"
                                               "i3901"
                                               "i3902"
                                               "i3903"
                                               "i3904"))
                                           #(ribcage
                                             (gen-syntax-case
                                               gen-clause
                                               build-dispatch-call
                                               convert-pattern)
                                             ((top) (top) (top) (top))
                                             ("i3710" "i3708" "i3706" "i3704"))
                                           #(ribcage
                                             (lambda-var-list
                                               gen-var
                                               strip
                                               chi-lambda-case
                                               lambda*-formals
                                               chi-simple-lambda
                                               lambda-formals
                                               ellipsis?
                                               chi-void
                                               eval-local-transformer
                                               chi-local-syntax
                                               chi-body
                                               chi-macro
                                               chi-application
                                               chi-expr
                                               chi
                                               syntax-type
                                               chi-when-list
                                               chi-install-global
                                               chi-top-sequence
                                               chi-sequence
                                               source-wrap
                                               wrap
                                               bound-id-member?
                                               distinct-bound-ids?
                                               valid-bound-ids?
                                               bound-id=?
                                               free-id=?
                                               id-var-name
                                               same-marks?
                                               join-marks
                                               join-wraps
                                               smart-append
                                               make-binding-wrap
                                               extend-ribcage!
                                               make-empty-ribcage
                                               new-mark
                                               anti-mark
                                               the-anti-mark
                                               top-marked?
                                               top-wrap
                                               empty-wrap
                                               set-ribcage-labels!
                                               set-ribcage-marks!
                                               set-ribcage-symnames!
                                               ribcage-labels
                                               ribcage-marks
                                               ribcage-symnames
                                               ribcage?
                                               make-ribcage
                                               gen-labels
                                               gen-label
                                               make-rename
                                               rename-marks
                                               rename-new
                                               rename-old
                                               subst-rename?
                                               wrap-subst
                                               wrap-marks
                                               make-wrap
                                               id-sym-name&marks
                                               id-sym-name
                                               id?
                                               nonsymbol-id?
                                               global-extend
                                               lookup
                                               macros-only-env
                                               extend-var-env
                                               extend-env
                                               null-env
                                               binding-value
                                               binding-type
                                               make-binding
                                               arg-check
                                               source-annotation
                                               no-source
                                               set-syntax-object-module!
                                               set-syntax-object-wrap!
                                               set-syntax-object-expression!
                                               syntax-object-module
                                               syntax-object-wrap
                                               syntax-object-expression
                                               syntax-object?
                                               make-syntax-object
                                               build-lexical-var
                                               build-letrec
                                               build-named-let
                                               build-let
                                               build-sequence
                                               build-data
                                               build-primref
                                               build-lambda-case
                                               build-case-lambda
                                               build-simple-lambda
                                               build-global-definition
                                               build-global-assignment
                                               build-global-reference
                                               analyze-variable
                                               build-lexical-assignment
                                               build-lexical-reference
                                               build-dynlet
                                               build-conditional
                                               build-application
                                               build-void
                                               maybe-name-value!
                                               decorate-source
                                               get-global-definition-hook
                                               put-global-definition-hook
                                               gensym-hook
                                               local-eval-hook
                                               top-level-eval-hook
                                               fx<
                                               fx=
                                               fx-
                                               fx+
                                               set-lambda-meta!
                                               lambda-meta
                                               lambda?
                                               make-dynlet
                                               make-letrec
                                               make-let
                                               make-lambda-case
                                               make-lambda
                                               make-sequence
                                               make-application
                                               make-conditional
                                               make-toplevel-define
                                               make-toplevel-set
                                               make-toplevel-ref
                                               make-module-set
                                               make-module-ref
                                               make-lexical-set
                                               make-lexical-ref
                                               make-primitive-ref
                                               make-const
                                               make-void)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i467"
                                              "i465"
                                              "i463"
                                              "i461"
                                              "i459"
                                              "i457"
                                              "i455"
                                              "i453"
                                              "i451"
                                              "i449"
                                              "i447"
                                              "i445"
                                              "i443"
                                              "i441"
                                              "i439"
                                              "i437"
                                              "i435"
                                              "i433"
                                              "i431"
                                              "i429"
                                              "i427"
                                              "i425"
                                              "i423"
                                              "i421"
                                              "i419"
                                              "i417"
                                              "i415"
                                              "i413"
                                              "i411"
                                              "i409"
                                              "i407"
                                              "i405"
                                              "i403"
                                              "i401"
                                              "i399"
                                              "i398"
                                              "i396"
                                              "i393"
                                              "i392"
                                              "i391"
                                              "i389"
                                              "i388"
                                              "i386"
                                              "i384"
                                              "i382"
                                              "i380"
                                              "i378"
                                              "i376"
                                              "i374"
                                              "i372"
                                              "i369"
                                              "i367"
                                              "i366"
                                              "i364"
                                              "i362"
                                              "i360"
                                              "i358"
                                              "i357"
                                              "i356"
                                              "i355"
                                              "i353"
                                              "i352"
                                              "i349"
                                              "i347"
                                              "i345"
                                              "i343"
                                              "i341"
                                              "i339"
                                              "i337"
                                              "i336"
                                              "i335"
                                              "i333"
                                              "i331"
                                              "i330"
                                              "i327"
                                              "i326"
                                              "i324"
                                              "i322"
                                              "i320"
                                              "i318"
                                              "i316"
                                              "i314"
                                              "i312"
                                              "i310"
                                              "i308"
                                              "i305"
                                              "i303"
                                              "i301"
                                              "i299"
                                              "i297"
                                              "i295"
                                              "i293"
                                              "i291"
                                              "i289"
                                              "i287"
                                              "i285"
                                              "i283"
                                              "i281"
                                              "i279"
                                              "i277"
                                              "i275"
                                              "i273"
                                              "i271"
                                              "i269"
                                              "i267"
                                              "i265"
                                              "i263"
                                              "i261"
                                              "i260"
                                              "i257"
                                              "i255"
                                              "i254"
                                              "i253"
                                              "i252"
                                              "i251"
                                              "i249"
                                              "i247"
                                              "i245"
                                              "i242"
                                              "i240"
                                              "i238"
                                              "i236"
                                              "i234"
                                              "i232"
                                              "i230"
                                              "i228"
                                              "i226"
                                              "i224"
                                              "i222"
                                              "i220"
                                              "i218"
                                              "i216"
                                              "i214"
                                              "i212"
                                              "i210"
                                              "i208"))
                                           #(ribcage
                                             (define-structure
                                               define-expansion-accessors
                                               define-expansion-constructors)
                                             ((top) (top) (top))
                                             ("i46" "i45" "i44")))
                                          (hygiene guile))
                                       #{keys 12558}#))
                               #f)
                           (if (if (eq? (if (if (= (vector-length
                                                     '#(syntax-object
                                                        pad
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3911" "i3912"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"
                                                             "i3904"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3710"
                                                            "i3708"
                                                            "i3706"
                                                            "i3704"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i467"
                                                            "i465"
                                                            "i463"
                                                            "i461"
                                                            "i459"
                                                            "i457"
                                                            "i455"
                                                            "i453"
                                                            "i451"
                                                            "i449"
                                                            "i447"
                                                            "i445"
                                                            "i443"
                                                            "i441"
                                                            "i439"
                                                            "i437"
                                                            "i435"
                                                            "i433"
                                                            "i431"
                                                            "i429"
                                                            "i427"
                                                            "i425"
                                                            "i423"
                                                            "i421"
                                                            "i419"
                                                            "i417"
                                                            "i415"
                                                            "i413"
                                                            "i411"
                                                            "i409"
                                                            "i407"
                                                            "i405"
                                                            "i403"
                                                            "i401"
                                                            "i399"
                                                            "i398"
                                                            "i396"
                                                            "i393"
                                                            "i392"
                                                            "i391"
                                                            "i389"
                                                            "i388"
                                                            "i386"
                                                            "i384"
                                                            "i382"
                                                            "i380"
                                                            "i378"
                                                            "i376"
                                                            "i374"
                                                            "i372"
                                                            "i369"
                                                            "i367"
                                                            "i366"
                                                            "i364"
                                                            "i362"
                                                            "i360"
                                                            "i358"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i353"
                                                            "i352"
                                                            "i349"
                                                            "i347"
                                                            "i345"
                                                            "i343"
                                                            "i341"
                                                            "i339"
                                                            "i337"
                                                            "i336"
                                                            "i335"
                                                            "i333"
                                                            "i331"
                                                            "i330"
                                                            "i327"
                                                            "i326"
                                                            "i324"
                                                            "i322"
                                                            "i320"
                                                            "i318"
                                                            "i316"
                                                            "i314"
                                                            "i312"
                                                            "i310"
                                                            "i308"
                                                            "i305"
                                                            "i303"
                                                            "i301"
                                                            "i299"
                                                            "i297"
                                                            "i295"
                                                            "i293"
                                                            "i291"
                                                            "i289"
                                                            "i287"
                                                            "i285"
                                                            "i283"
                                                            "i281"
                                                            "i279"
                                                            "i277"
                                                            "i275"
                                                            "i273"
                                                            "i271"
                                                            "i269"
                                                            "i267"
                                                            "i265"
                                                            "i263"
                                                            "i261"
                                                            "i260"
                                                            "i257"
                                                            "i255"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i249"
                                                            "i247"
                                                            "i245"
                                                            "i242"
                                                            "i240"
                                                            "i238"
                                                            "i236"
                                                            "i234"
                                                            "i232"
                                                            "i230"
                                                            "i228"
                                                            "i226"
                                                            "i224"
                                                            "i222"
                                                            "i220"
                                                            "i218"
                                                            "i216"
                                                            "i214"
                                                            "i212"
                                                            "i210"
                                                            "i208"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i46"
                                                            "i45"
                                                            "i44")))
                                                        (hygiene guile)))
                                                   4)
                                              (eq? (vector-ref
                                                     '#(syntax-object
                                                        pad
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3911" "i3912"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"
                                                             "i3904"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3710"
                                                            "i3708"
                                                            "i3706"
                                                            "i3704"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i467"
                                                            "i465"
                                                            "i463"
                                                            "i461"
                                                            "i459"
                                                            "i457"
                                                            "i455"
                                                            "i453"
                                                            "i451"
                                                            "i449"
                                                            "i447"
                                                            "i445"
                                                            "i443"
                                                            "i441"
                                                            "i439"
                                                            "i437"
                                                            "i435"
                                                            "i433"
                                                            "i431"
                                                            "i429"
                                                            "i427"
                                                            "i425"
                                                            "i423"
                                                            "i421"
                                                            "i419"
                                                            "i417"
                                                            "i415"
                                                            "i413"
                                                            "i411"
                                                            "i409"
                                                            "i407"
                                                            "i405"
                                                            "i403"
                                                            "i401"
                                                            "i399"
                                                            "i398"
                                                            "i396"
                                                            "i393"
                                                            "i392"
                                                            "i391"
                                                            "i389"
                                                            "i388"
                                                            "i386"
                                                            "i384"
                                                            "i382"
                                                            "i380"
                                                            "i378"
                                                            "i376"
                                                            "i374"
                                                            "i372"
                                                            "i369"
                                                            "i367"
                                                            "i366"
                                                            "i364"
                                                            "i362"
                                                            "i360"
                                                            "i358"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i353"
                                                            "i352"
                                                            "i349"
                                                            "i347"
                                                            "i345"
                                                            "i343"
                                                            "i341"
                                                            "i339"
                                                            "i337"
                                                            "i336"
                                                            "i335"
                                                            "i333"
                                                            "i331"
                                                            "i330"
                                                            "i327"
                                                            "i326"
                                                            "i324"
                                                            "i322"
                                                            "i320"
                                                            "i318"
                                                            "i316"
                                                            "i314"
                                                            "i312"
                                                            "i310"
                                                            "i308"
                                                            "i305"
                                                            "i303"
                                                            "i301"
                                                            "i299"
                                                            "i297"
                                                            "i295"
                                                            "i293"
                                                            "i291"
                                                            "i289"
                                                            "i287"
                                                            "i285"
                                                            "i283"
                                                            "i281"
                                                            "i279"
                                                            "i277"
                                                            "i275"
                                                            "i273"
                                                            "i271"
                                                            "i269"
                                                            "i267"
                                                            "i265"
                                                            "i263"
                                                            "i261"
                                                            "i260"
                                                            "i257"
                                                            "i255"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i249"
                                                            "i247"
                                                            "i245"
                                                            "i242"
                                                            "i240"
                                                            "i238"
                                                            "i236"
                                                            "i234"
                                                            "i232"
                                                            "i230"
                                                            "i228"
                                                            "i226"
                                                            "i224"
                                                            "i222"
                                                            "i220"
                                                            "i218"
                                                            "i216"
                                                            "i214"
                                                            "i212"
                                                            "i210"
                                                            "i208"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i46"
                                                            "i45"
                                                            "i44")))
                                                        (hygiene guile))
                                                     0)
                                                   'syntax-object)
                                              #f)
                                          (vector-ref
                                            '#(syntax-object
                                               pad
                                               ((top)
                                                #(ribcage
                                                  #(pat exp)
                                                  #((top) (top))
                                                  #("i3911" "i3912"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(x keys clauses r mod)
                                                  #((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                  #("i3900"
                                                    "i3901"
                                                    "i3902"
                                                    "i3903"
                                                    "i3904"))
                                                #(ribcage
                                                  (gen-syntax-case
                                                    gen-clause
                                                    build-dispatch-call
                                                    convert-pattern)
                                                  ((top) (top) (top) (top))
                                                  ("i3710"
                                                   "i3708"
                                                   "i3706"
                                                   "i3704"))
                                                #(ribcage
                                                  (lambda-var-list
                                                    gen-var
                                                    strip
                                                    chi-lambda-case
                                                    lambda*-formals
                                                    chi-simple-lambda
                                                    lambda-formals
                                                    ellipsis?
                                                    chi-void
                                                    eval-local-transformer
                                                    chi-local-syntax
                                                    chi-body
                                                    chi-macro
                                                    chi-application
                                                    chi-expr
                                                    chi
                                                    syntax-type
                                                    chi-when-list
                                                    chi-install-global
                                                    chi-top-sequence
                                                    chi-sequence
                                                    source-wrap
                                                    wrap
                                                    bound-id-member?
                                                    distinct-bound-ids?
                                                    valid-bound-ids?
                                                    bound-id=?
                                                    free-id=?
                                                    id-var-name
                                                    same-marks?
                                                    join-marks
                                                    join-wraps
                                                    smart-append
                                                    make-binding-wrap
                                                    extend-ribcage!
                                                    make-empty-ribcage
                                                    new-mark
                                                    anti-mark
                                                    the-anti-mark
                                                    top-marked?
                                                    top-wrap
                                                    empty-wrap
                                                    set-ribcage-labels!
                                                    set-ribcage-marks!
                                                    set-ribcage-symnames!
                                                    ribcage-labels
                                                    ribcage-marks
                                                    ribcage-symnames
                                                    ribcage?
                                                    make-ribcage
                                                    gen-labels
                                                    gen-label
                                                    make-rename
                                                    rename-marks
                                                    rename-new
                                                    rename-old
                                                    subst-rename?
                                                    wrap-subst
                                                    wrap-marks
                                                    make-wrap
                                                    id-sym-name&marks
                                                    id-sym-name
                                                    id?
                                                    nonsymbol-id?
                                                    global-extend
                                                    lookup
                                                    macros-only-env
                                                    extend-var-env
                                                    extend-env
                                                    null-env
                                                    binding-value
                                                    binding-type
                                                    make-binding
                                                    arg-check
                                                    source-annotation
                                                    no-source
                                                    set-syntax-object-module!
                                                    set-syntax-object-wrap!
                                                    set-syntax-object-expression!
                                                    syntax-object-module
                                                    syntax-object-wrap
                                                    syntax-object-expression
                                                    syntax-object?
                                                    make-syntax-object
                                                    build-lexical-var
                                                    build-letrec
                                                    build-named-let
                                                    build-let
                                                    build-sequence
                                                    build-data
                                                    build-primref
                                                    build-lambda-case
                                                    build-case-lambda
                                                    build-simple-lambda
                                                    build-global-definition
                                                    build-global-assignment
                                                    build-global-reference
                                                    analyze-variable
                                                    build-lexical-assignment
                                                    build-lexical-reference
                                                    build-dynlet
                                                    build-conditional
                                                    build-application
                                                    build-void
                                                    maybe-name-value!
                                                    decorate-source
                                                    get-global-definition-hook
                                                    put-global-definition-hook
                                                    gensym-hook
                                                    local-eval-hook
                                                    top-level-eval-hook
                                                    fx<
                                                    fx=
                                                    fx-
                                                    fx+
                                                    set-lambda-meta!
                                                    lambda-meta
                                                    lambda?
                                                    make-dynlet
                                                    make-letrec
                                                    make-let
                                                    make-lambda-case
                                                    make-lambda
                                                    make-sequence
                                                    make-application
                                                    make-conditional
                                                    make-toplevel-define
                                                    make-toplevel-set
                                                    make-toplevel-ref
                                                    make-module-set
                                                    make-module-ref
                                                    make-lexical-set
                                                    make-lexical-ref
                                                    make-primitive-ref
                                                    make-const
                                                    make-void)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i467"
                                                   "i465"
                                                   "i463"
                                                   "i461"
                                                   "i459"
                                                   "i457"
                                                   "i455"
                                                   "i453"
                                                   "i451"
                                                   "i449"
                                                   "i447"
                                                   "i445"
                                                   "i443"
                                                   "i441"
                                                   "i439"
                                                   "i437"
                                                   "i435"
                                                   "i433"
                                                   "i431"
                                                   "i429"
                                                   "i427"
                                                   "i425"
                                                   "i423"
                                                   "i421"
                                                   "i419"
                                                   "i417"
                                                   "i415"
                                                   "i413"
                                                   "i411"
                                                   "i409"
                                                   "i407"
                                                   "i405"
                                                   "i403"
                                                   "i401"
                                                   "i399"
                                                   "i398"
                                                   "i396"
                                                   "i393"
                                                   "i392"
                                                   "i391"
                                                   "i389"
                                                   "i388"
                                                   "i386"
                                                   "i384"
                                                   "i382"
                                                   "i380"
                                                   "i378"
                                                   "i376"
                                                   "i374"
                                                   "i372"
                                                   "i369"
                                                   "i367"
                                                   "i366"
                                                   "i364"
                                                   "i362"
                                                   "i360"
                                                   "i358"
                                                   "i357"
                                                   "i356"
                                                   "i355"
                                                   "i353"
                                                   "i352"
                                                   "i349"
                                                   "i347"
                                                   "i345"
                                                   "i343"
                                                   "i341"
                                                   "i339"
                                                   "i337"
                                                   "i336"
                                                   "i335"
                                                   "i333"
                                                   "i331"
                                                   "i330"
                                                   "i327"
                                                   "i326"
                                                   "i324"
                                                   "i322"
                                                   "i320"
                                                   "i318"
                                                   "i316"
                                                   "i314"
                                                   "i312"
                                                   "i310"
                                                   "i308"
                                                   "i305"
                                                   "i303"
                                                   "i301"
                                                   "i299"
                                                   "i297"
                                                   "i295"
                                                   "i293"
                                                   "i291"
                                                   "i289"
                                                   "i287"
                                                   "i285"
                                                   "i283"
                                                   "i281"
                                                   "i279"
                                                   "i277"
                                                   "i275"
                                                   "i273"
                                                   "i271"
                                                   "i269"
                                                   "i267"
                                                   "i265"
                                                   "i263"
                                                   "i261"
                                                   "i260"
                                                   "i257"
                                                   "i255"
                                                   "i254"
                                                   "i253"
                                                   "i252"
                                                   "i251"
                                                   "i249"
                                                   "i247"
                                                   "i245"
                                                   "i242"
                                                   "i240"
                                                   "i238"
                                                   "i236"
                                                   "i234"
                                                   "i232"
                                                   "i230"
                                                   "i228"
                                                   "i226"
                                                   "i224"
                                                   "i222"
                                                   "i220"
                                                   "i218"
                                                   "i216"
                                                   "i214"
                                                   "i212"
                                                   "i210"
                                                   "i208"))
                                                #(ribcage
                                                  (define-structure
                                                    define-expansion-accessors
                                                    define-expansion-constructors)
                                                  ((top) (top) (top))
                                                  ("i46" "i45" "i44")))
                                               (hygiene guile))
                                            1)
                                          '#(syntax-object
                                             pad
                                             ((top)
                                              #(ribcage
                                                #(pat exp)
                                                #((top) (top))
                                                #("i3911" "i3912"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(x keys clauses r mod)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i3900"
                                                  "i3901"
                                                  "i3902"
                                                  "i3903"
                                                  "i3904"))
                                              #(ribcage
                                                (gen-syntax-case
                                                  gen-clause
                                                  build-dispatch-call
                                                  convert-pattern)
                                                ((top) (top) (top) (top))
                                                ("i3710"
                                                 "i3708"
                                                 "i3706"
                                                 "i3704"))
                                              #(ribcage
                                                (lambda-var-list
                                                  gen-var
                                                  strip
                                                  chi-lambda-case
                                                  lambda*-formals
                                                  chi-simple-lambda
                                                  lambda-formals
                                                  ellipsis?
                                                  chi-void
                                                  eval-local-transformer
                                                  chi-local-syntax
                                                  chi-body
                                                  chi-macro
                                                  chi-application
                                                  chi-expr
                                                  chi
                                                  syntax-type
                                                  chi-when-list
                                                  chi-install-global
                                                  chi-top-sequence
                                                  chi-sequence
                                                  source-wrap
                                                  wrap
                                                  bound-id-member?
                                                  distinct-bound-ids?
                                                  valid-bound-ids?
                                                  bound-id=?
                                                  free-id=?
                                                  id-var-name
                                                  same-marks?
                                                  join-marks
                                                  join-wraps
                                                  smart-append
                                                  make-binding-wrap
                                                  extend-ribcage!
                                                  make-empty-ribcage
                                                  new-mark
                                                  anti-mark
                                                  the-anti-mark
                                                  top-marked?
                                                  top-wrap
                                                  empty-wrap
                                                  set-ribcage-labels!
                                                  set-ribcage-marks!
                                                  set-ribcage-symnames!
                                                  ribcage-labels
                                                  ribcage-marks
                                                  ribcage-symnames
                                                  ribcage?
                                                  make-ribcage
                                                  gen-labels
                                                  gen-label
                                                  make-rename
                                                  rename-marks
                                                  rename-new
                                                  rename-old
                                                  subst-rename?
                                                  wrap-subst
                                                  wrap-marks
                                                  make-wrap
                                                  id-sym-name&marks
                                                  id-sym-name
                                                  id?
                                                  nonsymbol-id?
                                                  global-extend
                                                  lookup
                                                  macros-only-env
                                                  extend-var-env
                                                  extend-env
                                                  null-env
                                                  binding-value
                                                  binding-type
                                                  make-binding
                                                  arg-check
                                                  source-annotation
                                                  no-source
                                                  set-syntax-object-module!
                                                  set-syntax-object-wrap!
                                                  set-syntax-object-expression!
                                                  syntax-object-module
                                                  syntax-object-wrap
                                                  syntax-object-expression
                                                  syntax-object?
                                                  make-syntax-object
                                                  build-lexical-var
                                                  build-letrec
                                                  build-named-let
                                                  build-let
                                                  build-sequence
                                                  build-data
                                                  build-primref
                                                  build-lambda-case
                                                  build-case-lambda
                                                  build-simple-lambda
                                                  build-global-definition
                                                  build-global-assignment
                                                  build-global-reference
                                                  analyze-variable
                                                  build-lexical-assignment
                                                  build-lexical-reference
                                                  build-dynlet
                                                  build-conditional
                                                  build-application
                                                  build-void
                                                  maybe-name-value!
                                                  decorate-source
                                                  get-global-definition-hook
                                                  put-global-definition-hook
                                                  gensym-hook
                                                  local-eval-hook
                                                  top-level-eval-hook
                                                  fx<
                                                  fx=
                                                  fx-
                                                  fx+
                                                  set-lambda-meta!
                                                  lambda-meta
                                                  lambda?
                                                  make-dynlet
                                                  make-letrec
                                                  make-let
                                                  make-lambda-case
                                                  make-lambda
                                                  make-sequence
                                                  make-application
                                                  make-conditional
                                                  make-toplevel-define
                                                  make-toplevel-set
                                                  make-toplevel-ref
                                                  make-module-set
                                                  make-module-ref
                                                  make-lexical-set
                                                  make-lexical-ref
                                                  make-primitive-ref
                                                  make-const
                                                  make-void)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i467"
                                                 "i465"
                                                 "i463"
                                                 "i461"
                                                 "i459"
                                                 "i457"
                                                 "i455"
                                                 "i453"
                                                 "i451"
                                                 "i449"
                                                 "i447"
                                                 "i445"
                                                 "i443"
                                                 "i441"
                                                 "i439"
                                                 "i437"
                                                 "i435"
                                                 "i433"
                                                 "i431"
                                                 "i429"
                                                 "i427"
                                                 "i425"
                                                 "i423"
                                                 "i421"
                                                 "i419"
                                                 "i417"
                                                 "i415"
                                                 "i413"
                                                 "i411"
                                                 "i409"
                                                 "i407"
                                                 "i405"
                                                 "i403"
                                                 "i401"
                                                 "i399"
                                                 "i398"
                                                 "i396"
                                                 "i393"
                                                 "i392"
                                                 "i391"
                                                 "i389"
                                                 "i388"
                                                 "i386"
                                                 "i384"
                                                 "i382"
                                                 "i380"
                                                 "i378"
                                                 "i376"
                                                 "i374"
                                                 "i372"
                                                 "i369"
                                                 "i367"
                                                 "i366"
                                                 "i364"
                                                 "i362"
                                                 "i360"
                                                 "i358"
                                                 "i357"
                                                 "i356"
                                                 "i355"
                                                 "i353"
                                                 "i352"
                                                 "i349"
                                                 "i347"
                                                 "i345"
                                                 "i343"
                                                 "i341"
                                                 "i339"
                                                 "i337"
                                                 "i336"
                                                 "i335"
                                                 "i333"
                                                 "i331"
                                                 "i330"
                                                 "i327"
                                                 "i326"
                                                 "i324"
                                                 "i322"
                                                 "i320"
                                                 "i318"
                                                 "i316"
                                                 "i314"
                                                 "i312"
                                                 "i310"
                                                 "i308"
                                                 "i305"
                                                 "i303"
                                                 "i301"
                                                 "i299"
                                                 "i297"
                                                 "i295"
                                                 "i293"
                                                 "i291"
                                                 "i289"
                                                 "i287"
                                                 "i285"
                                                 "i283"
                                                 "i281"
                                                 "i279"
                                                 "i277"
                                                 "i275"
                                                 "i273"
                                                 "i271"
                                                 "i269"
                                                 "i267"
                                                 "i265"
                                                 "i263"
                                                 "i261"
                                                 "i260"
                                                 "i257"
                                                 "i255"
                                                 "i254"
                                                 "i253"
                                                 "i252"
                                                 "i251"
                                                 "i249"
                                                 "i247"
                                                 "i245"
                                                 "i242"
                                                 "i240"
                                                 "i238"
                                                 "i236"
                                                 "i234"
                                                 "i232"
                                                 "i230"
                                                 "i228"
                                                 "i226"
                                                 "i224"
                                                 "i222"
                                                 "i220"
                                                 "i218"
                                                 "i216"
                                                 "i214"
                                                 "i212"
                                                 "i210"
                                                 "i208"))
                                              #(ribcage
                                                (define-structure
                                                  define-expansion-accessors
                                                  define-expansion-constructors)
                                                ((top) (top) (top))
                                                ("i46" "i45" "i44")))
                                             (hygiene guile)))
                                        (if (if (= (vector-length
                                                     '#(syntax-object
                                                        _
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3911" "i3912"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"
                                                             "i3904"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3710"
                                                            "i3708"
                                                            "i3706"
                                                            "i3704"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i467"
                                                            "i465"
                                                            "i463"
                                                            "i461"
                                                            "i459"
                                                            "i457"
                                                            "i455"
                                                            "i453"
                                                            "i451"
                                                            "i449"
                                                            "i447"
                                                            "i445"
                                                            "i443"
                                                            "i441"
                                                            "i439"
                                                            "i437"
                                                            "i435"
                                                            "i433"
                                                            "i431"
                                                            "i429"
                                                            "i427"
                                                            "i425"
                                                            "i423"
                                                            "i421"
                                                            "i419"
                                                            "i417"
                                                            "i415"
                                                            "i413"
                                                            "i411"
                                                            "i409"
                                                            "i407"
                                                            "i405"
                                                            "i403"
                                                            "i401"
                                                            "i399"
                                                            "i398"
                                                            "i396"
                                                            "i393"
                                                            "i392"
                                                            "i391"
                                                            "i389"
                                                            "i388"
                                                            "i386"
                                                            "i384"
                                                            "i382"
                                                            "i380"
                                                            "i378"
                                                            "i376"
                                                            "i374"
                                                            "i372"
                                                            "i369"
                                                            "i367"
                                                            "i366"
                                                            "i364"
                                                            "i362"
                                                            "i360"
                                                            "i358"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i353"
                                                            "i352"
                                                            "i349"
                                                            "i347"
                                                            "i345"
                                                            "i343"
                                                            "i341"
                                                            "i339"
                                                            "i337"
                                                            "i336"
                                                            "i335"
                                                            "i333"
                                                            "i331"
                                                            "i330"
                                                            "i327"
                                                            "i326"
                                                            "i324"
                                                            "i322"
                                                            "i320"
                                                            "i318"
                                                            "i316"
                                                            "i314"
                                                            "i312"
                                                            "i310"
                                                            "i308"
                                                            "i305"
                                                            "i303"
                                                            "i301"
                                                            "i299"
                                                            "i297"
                                                            "i295"
                                                            "i293"
                                                            "i291"
                                                            "i289"
                                                            "i287"
                                                            "i285"
                                                            "i283"
                                                            "i281"
                                                            "i279"
                                                            "i277"
                                                            "i275"
                                                            "i273"
                                                            "i271"
                                                            "i269"
                                                            "i267"
                                                            "i265"
                                                            "i263"
                                                            "i261"
                                                            "i260"
                                                            "i257"
                                                            "i255"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i249"
                                                            "i247"
                                                            "i245"
                                                            "i242"
                                                            "i240"
                                                            "i238"
                                                            "i236"
                                                            "i234"
                                                            "i232"
                                                            "i230"
                                                            "i228"
                                                            "i226"
                                                            "i224"
                                                            "i222"
                                                            "i220"
                                                            "i218"
                                                            "i216"
                                                            "i214"
                                                            "i212"
                                                            "i210"
                                                            "i208"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i46"
                                                            "i45"
                                                            "i44")))
                                                        (hygiene guile)))
                                                   4)
                                              (eq? (vector-ref
                                                     '#(syntax-object
                                                        _
                                                        ((top)
                                                         #(ribcage
                                                           #(pat exp)
                                                           #((top) (top))
                                                           #("i3911" "i3912"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x
                                                             keys
                                                             clauses
                                                             r
                                                             mod)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i3900"
                                                             "i3901"
                                                             "i3902"
                                                             "i3903"
                                                             "i3904"))
                                                         #(ribcage
                                                           (gen-syntax-case
                                                             gen-clause
                                                             build-dispatch-call
                                                             convert-pattern)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i3710"
                                                            "i3708"
                                                            "i3706"
                                                            "i3704"))
                                                         #(ribcage
                                                           (lambda-var-list
                                                             gen-var
                                                             strip
                                                             chi-lambda-case
                                                             lambda*-formals
                                                             chi-simple-lambda
                                                             lambda-formals
                                                             ellipsis?
                                                             chi-void
                                                             eval-local-transformer
                                                             chi-local-syntax
                                                             chi-body
                                                             chi-macro
                                                             chi-application
                                                             chi-expr
                                                             chi
                                                             syntax-type
                                                             chi-when-list
                                                             chi-install-global
                                                             chi-top-sequence
                                                             chi-sequence
                                                             source-wrap
                                                             wrap
                                                             bound-id-member?
                                                             distinct-bound-ids?
                                                             valid-bound-ids?
                                                             bound-id=?
                                                             free-id=?
                                                             id-var-name
                                                             same-marks?
                                                             join-marks
                                                             join-wraps
                                                             smart-append
                                                             make-binding-wrap
                                                             extend-ribcage!
                                                             make-empty-ribcage
                                                             new-mark
                                                             anti-mark
                                                             the-anti-mark
                                                             top-marked?
                                                             top-wrap
                                                             empty-wrap
                                                             set-ribcage-labels!
                                                             set-ribcage-marks!
                                                             set-ribcage-symnames!
                                                             ribcage-labels
                                                             ribcage-marks
                                                             ribcage-symnames
                                                             ribcage?
                                                             make-ribcage
                                                             gen-labels
                                                             gen-label
                                                             make-rename
                                                             rename-marks
                                                             rename-new
                                                             rename-old
                                                             subst-rename?
                                                             wrap-subst
                                                             wrap-marks
                                                             make-wrap
                                                             id-sym-name&marks
                                                             id-sym-name
                                                             id?
                                                             nonsymbol-id?
                                                             global-extend
                                                             lookup
                                                             macros-only-env
                                                             extend-var-env
                                                             extend-env
                                                             null-env
                                                             binding-value
                                                             binding-type
                                                             make-binding
                                                             arg-check
                                                             source-annotation
                                                             no-source
                                                             set-syntax-object-module!
                                                             set-syntax-object-wrap!
                                                             set-syntax-object-expression!
                                                             syntax-object-module
                                                             syntax-object-wrap
                                                             syntax-object-expression
                                                             syntax-object?
                                                             make-syntax-object
                                                             build-lexical-var
                                                             build-letrec
                                                             build-named-let
                                                             build-let
                                                             build-sequence
                                                             build-data
                                                             build-primref
                                                             build-lambda-case
                                                             build-case-lambda
                                                             build-simple-lambda
                                                             build-global-definition
                                                             build-global-assignment
                                                             build-global-reference
                                                             analyze-variable
                                                             build-lexical-assignment
                                                             build-lexical-reference
                                                             build-dynlet
                                                             build-conditional
                                                             build-application
                                                             build-void
                                                             maybe-name-value!
                                                             decorate-source
                                                             get-global-definition-hook
                                                             put-global-definition-hook
                                                             gensym-hook
                                                             local-eval-hook
                                                             top-level-eval-hook
                                                             fx<
                                                             fx=
                                                             fx-
                                                             fx+
                                                             set-lambda-meta!
                                                             lambda-meta
                                                             lambda?
                                                             make-dynlet
                                                             make-letrec
                                                             make-let
                                                             make-lambda-case
                                                             make-lambda
                                                             make-sequence
                                                             make-application
                                                             make-conditional
                                                             make-toplevel-define
                                                             make-toplevel-set
                                                             make-toplevel-ref
                                                             make-module-set
                                                             make-module-ref
                                                             make-lexical-set
                                                             make-lexical-ref
                                                             make-primitive-ref
                                                             make-const
                                                             make-void)
                                                           ((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                           ("i467"
                                                            "i465"
                                                            "i463"
                                                            "i461"
                                                            "i459"
                                                            "i457"
                                                            "i455"
                                                            "i453"
                                                            "i451"
                                                            "i449"
                                                            "i447"
                                                            "i445"
                                                            "i443"
                                                            "i441"
                                                            "i439"
                                                            "i437"
                                                            "i435"
                                                            "i433"
                                                            "i431"
                                                            "i429"
                                                            "i427"
                                                            "i425"
                                                            "i423"
                                                            "i421"
                                                            "i419"
                                                            "i417"
                                                            "i415"
                                                            "i413"
                                                            "i411"
                                                            "i409"
                                                            "i407"
                                                            "i405"
                                                            "i403"
                                                            "i401"
                                                            "i399"
                                                            "i398"
                                                            "i396"
                                                            "i393"
                                                            "i392"
                                                            "i391"
                                                            "i389"
                                                            "i388"
                                                            "i386"
                                                            "i384"
                                                            "i382"
                                                            "i380"
                                                            "i378"
                                                            "i376"
                                                            "i374"
                                                            "i372"
                                                            "i369"
                                                            "i367"
                                                            "i366"
                                                            "i364"
                                                            "i362"
                                                            "i360"
                                                            "i358"
                                                            "i357"
                                                            "i356"
                                                            "i355"
                                                            "i353"
                                                            "i352"
                                                            "i349"
                                                            "i347"
                                                            "i345"
                                                            "i343"
                                                            "i341"
                                                            "i339"
                                                            "i337"
                                                            "i336"
                                                            "i335"
                                                            "i333"
                                                            "i331"
                                                            "i330"
                                                            "i327"
                                                            "i326"
                                                            "i324"
                                                            "i322"
                                                            "i320"
                                                            "i318"
                                                            "i316"
                                                            "i314"
                                                            "i312"
                                                            "i310"
                                                            "i308"
                                                            "i305"
                                                            "i303"
                                                            "i301"
                                                            "i299"
                                                            "i297"
                                                            "i295"
                                                            "i293"
                                                            "i291"
                                                            "i289"
                                                            "i287"
                                                            "i285"
                                                            "i283"
                                                            "i281"
                                                            "i279"
                                                            "i277"
                                                            "i275"
                                                            "i273"
                                                            "i271"
                                                            "i269"
                                                            "i267"
                                                            "i265"
                                                            "i263"
                                                            "i261"
                                                            "i260"
                                                            "i257"
                                                            "i255"
                                                            "i254"
                                                            "i253"
                                                            "i252"
                                                            "i251"
                                                            "i249"
                                                            "i247"
                                                            "i245"
                                                            "i242"
                                                            "i240"
                                                            "i238"
                                                            "i236"
                                                            "i234"
                                                            "i232"
                                                            "i230"
                                                            "i228"
                                                            "i226"
                                                            "i224"
                                                            "i222"
                                                            "i220"
                                                            "i218"
                                                            "i216"
                                                            "i214"
                                                            "i212"
                                                            "i210"
                                                            "i208"))
                                                         #(ribcage
                                                           (define-structure
                                                             define-expansion-accessors
                                                             define-expansion-constructors)
                                                           ((top) (top) (top))
                                                           ("i46"
                                                            "i45"
                                                            "i44")))
                                                        (hygiene guile))
                                                     0)
                                                   'syntax-object)
                                              #f)
                                          (vector-ref
                                            '#(syntax-object
                                               _
                                               ((top)
                                                #(ribcage
                                                  #(pat exp)
                                                  #((top) (top))
                                                  #("i3911" "i3912"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(x keys clauses r mod)
                                                  #((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                  #("i3900"
                                                    "i3901"
                                                    "i3902"
                                                    "i3903"
                                                    "i3904"))
                                                #(ribcage
                                                  (gen-syntax-case
                                                    gen-clause
                                                    build-dispatch-call
                                                    convert-pattern)
                                                  ((top) (top) (top) (top))
                                                  ("i3710"
                                                   "i3708"
                                                   "i3706"
                                                   "i3704"))
                                                #(ribcage
                                                  (lambda-var-list
                                                    gen-var
                                                    strip
                                                    chi-lambda-case
                                                    lambda*-formals
                                                    chi-simple-lambda
                                                    lambda-formals
                                                    ellipsis?
                                                    chi-void
                                                    eval-local-transformer
                                                    chi-local-syntax
                                                    chi-body
                                                    chi-macro
                                                    chi-application
                                                    chi-expr
                                                    chi
                                                    syntax-type
                                                    chi-when-list
                                                    chi-install-global
                                                    chi-top-sequence
                                                    chi-sequence
                                                    source-wrap
                                                    wrap
                                                    bound-id-member?
                                                    distinct-bound-ids?
                                                    valid-bound-ids?
                                                    bound-id=?
                                                    free-id=?
                                                    id-var-name
                                                    same-marks?
                                                    join-marks
                                                    join-wraps
                                                    smart-append
                                                    make-binding-wrap
                                                    extend-ribcage!
                                                    make-empty-ribcage
                                                    new-mark
                                                    anti-mark
                                                    the-anti-mark
                                                    top-marked?
                                                    top-wrap
                                                    empty-wrap
                                                    set-ribcage-labels!
                                                    set-ribcage-marks!
                                                    set-ribcage-symnames!
                                                    ribcage-labels
                                                    ribcage-marks
                                                    ribcage-symnames
                                                    ribcage?
                                                    make-ribcage
                                                    gen-labels
                                                    gen-label
                                                    make-rename
                                                    rename-marks
                                                    rename-new
                                                    rename-old
                                                    subst-rename?
                                                    wrap-subst
                                                    wrap-marks
                                                    make-wrap
                                                    id-sym-name&marks
                                                    id-sym-name
                                                    id?
                                                    nonsymbol-id?
                                                    global-extend
                                                    lookup
                                                    macros-only-env
                                                    extend-var-env
                                                    extend-env
                                                    null-env
                                                    binding-value
                                                    binding-type
                                                    make-binding
                                                    arg-check
                                                    source-annotation
                                                    no-source
                                                    set-syntax-object-module!
                                                    set-syntax-object-wrap!
                                                    set-syntax-object-expression!
                                                    syntax-object-module
                                                    syntax-object-wrap
                                                    syntax-object-expression
                                                    syntax-object?
                                                    make-syntax-object
                                                    build-lexical-var
                                                    build-letrec
                                                    build-named-let
                                                    build-let
                                                    build-sequence
                                                    build-data
                                                    build-primref
                                                    build-lambda-case
                                                    build-case-lambda
                                                    build-simple-lambda
                                                    build-global-definition
                                                    build-global-assignment
                                                    build-global-reference
                                                    analyze-variable
                                                    build-lexical-assignment
                                                    build-lexical-reference
                                                    build-dynlet
                                                    build-conditional
                                                    build-application
                                                    build-void
                                                    maybe-name-value!
                                                    decorate-source
                                                    get-global-definition-hook
                                                    put-global-definition-hook
                                                    gensym-hook
                                                    local-eval-hook
                                                    top-level-eval-hook
                                                    fx<
                                                    fx=
                                                    fx-
                                                    fx+
                                                    set-lambda-meta!
                                                    lambda-meta
                                                    lambda?
                                                    make-dynlet
                                                    make-letrec
                                                    make-let
                                                    make-lambda-case
                                                    make-lambda
                                                    make-sequence
                                                    make-application
                                                    make-conditional
                                                    make-toplevel-define
                                                    make-toplevel-set
                                                    make-toplevel-ref
                                                    make-module-set
                                                    make-module-ref
                                                    make-lexical-set
                                                    make-lexical-ref
                                                    make-primitive-ref
                                                    make-const
                                                    make-void)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i467"
                                                   "i465"
                                                   "i463"
                                                   "i461"
                                                   "i459"
                                                   "i457"
                                                   "i455"
                                                   "i453"
                                                   "i451"
                                                   "i449"
                                                   "i447"
                                                   "i445"
                                                   "i443"
                                                   "i441"
                                                   "i439"
                                                   "i437"
                                                   "i435"
                                                   "i433"
                                                   "i431"
                                                   "i429"
                                                   "i427"
                                                   "i425"
                                                   "i423"
                                                   "i421"
                                                   "i419"
                                                   "i417"
                                                   "i415"
                                                   "i413"
                                                   "i411"
                                                   "i409"
                                                   "i407"
                                                   "i405"
                                                   "i403"
                                                   "i401"
                                                   "i399"
                                                   "i398"
                                                   "i396"
                                                   "i393"
                                                   "i392"
                                                   "i391"
                                                   "i389"
                                                   "i388"
                                                   "i386"
                                                   "i384"
                                                   "i382"
                                                   "i380"
                                                   "i378"
                                                   "i376"
                                                   "i374"
                                                   "i372"
                                                   "i369"
                                                   "i367"
                                                   "i366"
                                                   "i364"
                                                   "i362"
                                                   "i360"
                                                   "i358"
                                                   "i357"
                                                   "i356"
                                                   "i355"
                                                   "i353"
                                                   "i352"
                                                   "i349"
                                                   "i347"
                                                   "i345"
                                                   "i343"
                                                   "i341"
                                                   "i339"
                                                   "i337"
                                                   "i336"
                                                   "i335"
                                                   "i333"
                                                   "i331"
                                                   "i330"
                                                   "i327"
                                                   "i326"
                                                   "i324"
                                                   "i322"
                                                   "i320"
                                                   "i318"
                                                   "i316"
                                                   "i314"
                                                   "i312"
                                                   "i310"
                                                   "i308"
                                                   "i305"
                                                   "i303"
                                                   "i301"
                                                   "i299"
                                                   "i297"
                                                   "i295"
                                                   "i293"
                                                   "i291"
                                                   "i289"
                                                   "i287"
                                                   "i285"
                                                   "i283"
                                                   "i281"
                                                   "i279"
                                                   "i277"
                                                   "i275"
                                                   "i273"
                                                   "i271"
                                                   "i269"
                                                   "i267"
                                                   "i265"
                                                   "i263"
                                                   "i261"
                                                   "i260"
                                                   "i257"
                                                   "i255"
                                                   "i254"
                                                   "i253"
                                                   "i252"
                                                   "i251"
                                                   "i249"
                                                   "i247"
                                                   "i245"
                                                   "i242"
                                                   "i240"
                                                   "i238"
                                                   "i236"
                                                   "i234"
                                                   "i232"
                                                   "i230"
                                                   "i228"
                                                   "i226"
                                                   "i224"
                                                   "i222"
                                                   "i220"
                                                   "i218"
                                                   "i216"
                                                   "i214"
                                                   "i212"
                                                   "i210"
                                                   "i208"))
                                                #(ribcage
                                                  (define-structure
                                                    define-expansion-accessors
                                                    define-expansion-constructors)
                                                  ((top) (top) (top))
                                                  ("i46" "i45" "i44")))
                                               (hygiene guile))
                                            1)
                                          '#(syntax-object
                                             _
                                             ((top)
                                              #(ribcage
                                                #(pat exp)
                                                #((top) (top))
                                                #("i3911" "i3912"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(x keys clauses r mod)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i3900"
                                                  "i3901"
                                                  "i3902"
                                                  "i3903"
                                                  "i3904"))
                                              #(ribcage
                                                (gen-syntax-case
                                                  gen-clause
                                                  build-dispatch-call
                                                  convert-pattern)
                                                ((top) (top) (top) (top))
                                                ("i3710"
                                                 "i3708"
                                                 "i3706"
                                                 "i3704"))
                                              #(ribcage
                                                (lambda-var-list
                                                  gen-var
                                                  strip
                                                  chi-lambda-case
                                                  lambda*-formals
                                                  chi-simple-lambda
                                                  lambda-formals
                                                  ellipsis?
                                                  chi-void
                                                  eval-local-transformer
                                                  chi-local-syntax
                                                  chi-body
                                                  chi-macro
                                                  chi-application
                                                  chi-expr
                                                  chi
                                                  syntax-type
                                                  chi-when-list
                                                  chi-install-global
                                                  chi-top-sequence
                                                  chi-sequence
                                                  source-wrap
                                                  wrap
                                                  bound-id-member?
                                                  distinct-bound-ids?
                                                  valid-bound-ids?
                                                  bound-id=?
                                                  free-id=?
                                                  id-var-name
                                                  same-marks?
                                                  join-marks
                                                  join-wraps
                                                  smart-append
                                                  make-binding-wrap
                                                  extend-ribcage!
                                                  make-empty-ribcage
                                                  new-mark
                                                  anti-mark
                                                  the-anti-mark
                                                  top-marked?
                                                  top-wrap
                                                  empty-wrap
                                                  set-ribcage-labels!
                                                  set-ribcage-marks!
                                                  set-ribcage-symnames!
                                                  ribcage-labels
                                                  ribcage-marks
                                                  ribcage-symnames
                                                  ribcage?
                                                  make-ribcage
                                                  gen-labels
                                                  gen-label
                                                  make-rename
                                                  rename-marks
                                                  rename-new
                                                  rename-old
                                                  subst-rename?
                                                  wrap-subst
                                                  wrap-marks
                                                  make-wrap
                                                  id-sym-name&marks
                                                  id-sym-name
                                                  id?
                                                  nonsymbol-id?
                                                  global-extend
                                                  lookup
                                                  macros-only-env
                                                  extend-var-env
                                                  extend-env
                                                  null-env
                                                  binding-value
                                                  binding-type
                                                  make-binding
                                                  arg-check
                                                  source-annotation
                                                  no-source
                                                  set-syntax-object-module!
                                                  set-syntax-object-wrap!
                                                  set-syntax-object-expression!
                                                  syntax-object-module
                                                  syntax-object-wrap
                                                  syntax-object-expression
                                                  syntax-object?
                                                  make-syntax-object
                                                  build-lexical-var
                                                  build-letrec
                                                  build-named-let
                                                  build-let
                                                  build-sequence
                                                  build-data
                                                  build-primref
                                                  build-lambda-case
                                                  build-case-lambda
                                                  build-simple-lambda
                                                  build-global-definition
                                                  build-global-assignment
                                                  build-global-reference
                                                  analyze-variable
                                                  build-lexical-assignment
                                                  build-lexical-reference
                                                  build-dynlet
                                                  build-conditional
                                                  build-application
                                                  build-void
                                                  maybe-name-value!
                                                  decorate-source
                                                  get-global-definition-hook
                                                  put-global-definition-hook
                                                  gensym-hook
                                                  local-eval-hook
                                                  top-level-eval-hook
                                                  fx<
                                                  fx=
                                                  fx-
                                                  fx+
                                                  set-lambda-meta!
                                                  lambda-meta
                                                  lambda?
                                                  make-dynlet
                                                  make-letrec
                                                  make-let
                                                  make-lambda-case
                                                  make-lambda
                                                  make-sequence
                                                  make-application
                                                  make-conditional
                                                  make-toplevel-define
                                                  make-toplevel-set
                                                  make-toplevel-ref
                                                  make-module-set
                                                  make-module-ref
                                                  make-lexical-set
                                                  make-lexical-ref
                                                  make-primitive-ref
                                                  make-const
                                                  make-void)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i467"
                                                 "i465"
                                                 "i463"
                                                 "i461"
                                                 "i459"
                                                 "i457"
                                                 "i455"
                                                 "i453"
                                                 "i451"
                                                 "i449"
                                                 "i447"
                                                 "i445"
                                                 "i443"
                                                 "i441"
                                                 "i439"
                                                 "i437"
                                                 "i435"
                                                 "i433"
                                                 "i431"
                                                 "i429"
                                                 "i427"
                                                 "i425"
                                                 "i423"
                                                 "i421"
                                                 "i419"
                                                 "i417"
                                                 "i415"
                                                 "i413"
                                                 "i411"
                                                 "i409"
                                                 "i407"
                                                 "i405"
                                                 "i403"
                                                 "i401"
                                                 "i399"
                                                 "i398"
                                                 "i396"
                                                 "i393"
                                                 "i392"
                                                 "i391"
                                                 "i389"
                                                 "i388"
                                                 "i386"
                                                 "i384"
                                                 "i382"
                                                 "i380"
                                                 "i378"
                                                 "i376"
                                                 "i374"
                                                 "i372"
                                                 "i369"
                                                 "i367"
                                                 "i366"
                                                 "i364"
                                                 "i362"
                                                 "i360"
                                                 "i358"
                                                 "i357"
                                                 "i356"
                                                 "i355"
                                                 "i353"
                                                 "i352"
                                                 "i349"
                                                 "i347"
                                                 "i345"
                                                 "i343"
                                                 "i341"
                                                 "i339"
                                                 "i337"
                                                 "i336"
                                                 "i335"
                                                 "i333"
                                                 "i331"
                                                 "i330"
                                                 "i327"
                                                 "i326"
                                                 "i324"
                                                 "i322"
                                                 "i320"
                                                 "i318"
                                                 "i316"
                                                 "i314"
                                                 "i312"
                                                 "i310"
                                                 "i308"
                                                 "i305"
                                                 "i303"
                                                 "i301"
                                                 "i299"
                                                 "i297"
                                                 "i295"
                                                 "i293"
                                                 "i291"
                                                 "i289"
                                                 "i287"
                                                 "i285"
                                                 "i283"
                                                 "i281"
                                                 "i279"
                                                 "i277"
                                                 "i275"
                                                 "i273"
                                                 "i271"
                                                 "i269"
                                                 "i267"
                                                 "i265"
                                                 "i263"
                                                 "i261"
                                                 "i260"
                                                 "i257"
                                                 "i255"
                                                 "i254"
                                                 "i253"
                                                 "i252"
                                                 "i251"
                                                 "i249"
                                                 "i247"
                                                 "i245"
                                                 "i242"
                                                 "i240"
                                                 "i238"
                                                 "i236"
                                                 "i234"
                                                 "i232"
                                                 "i230"
                                                 "i228"
                                                 "i226"
                                                 "i224"
                                                 "i222"
                                                 "i220"
                                                 "i218"
                                                 "i216"
                                                 "i214"
                                                 "i212"
                                                 "i210"
                                                 "i208"))
                                              #(ribcage
                                                (define-structure
                                                  define-expansion-accessors
                                                  define-expansion-constructors)
                                                ((top) (top) (top))
                                                ("i46" "i45" "i44")))
                                             (hygiene guile))))
                                 (eq? (#{id-var-name 4332}#
                                        '#(syntax-object
                                           pad
                                           ((top)
                                            #(ribcage
                                              #(pat exp)
                                              #((top) (top))
                                              #("i3911" "i3912"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x keys clauses r mod)
                                              #((top) (top) (top) (top) (top))
                                              #("i3900"
                                                "i3901"
                                                "i3902"
                                                "i3903"
                                                "i3904"))
                                            #(ribcage
                                              (gen-syntax-case
                                                gen-clause
                                                build-dispatch-call
                                                convert-pattern)
                                              ((top) (top) (top) (top))
                                              ("i3710"
                                               "i3708"
                                               "i3706"
                                               "i3704"))
                                            #(ribcage
                                              (lambda-var-list
                                                gen-var
                                                strip
                                                chi-lambda-case
                                                lambda*-formals
                                                chi-simple-lambda
                                                lambda-formals
                                                ellipsis?
                                                chi-void
                                                eval-local-transformer
                                                chi-local-syntax
                                                chi-body
                                                chi-macro
                                                chi-application
                                                chi-expr
                                                chi
                                                syntax-type
                                                chi-when-list
                                                chi-install-global
                                                chi-top-sequence
                                                chi-sequence
                                                source-wrap
                                                wrap
                                                bound-id-member?
                                                distinct-bound-ids?
                                                valid-bound-ids?
                                                bound-id=?
                                                free-id=?
                                                id-var-name
                                                same-marks?
                                                join-marks
                                                join-wraps
                                                smart-append
                                                make-binding-wrap
                                                extend-ribcage!
                                                make-empty-ribcage
                                                new-mark
                                                anti-mark
                                                the-anti-mark
                                                top-marked?
                                                top-wrap
                                                empty-wrap
                                                set-ribcage-labels!
                                                set-ribcage-marks!
                                                set-ribcage-symnames!
                                                ribcage-labels
                                                ribcage-marks
                                                ribcage-symnames
                                                ribcage?
                                                make-ribcage
                                                gen-labels
                                                gen-label
                                                make-rename
                                                rename-marks
                                                rename-new
                                                rename-old
                                                subst-rename?
                                                wrap-subst
                                                wrap-marks
                                                make-wrap
                                                id-sym-name&marks
                                                id-sym-name
                                                id?
                                                nonsymbol-id?
                                                global-extend
                                                lookup
                                                macros-only-env
                                                extend-var-env
                                                extend-env
                                                null-env
                                                binding-value
                                                binding-type
                                                make-binding
                                                arg-check
                                                source-annotation
                                                no-source
                                                set-syntax-object-module!
                                                set-syntax-object-wrap!
                                                set-syntax-object-expression!
                                                syntax-object-module
                                                syntax-object-wrap
                                                syntax-object-expression
                                                syntax-object?
                                                make-syntax-object
                                                build-lexical-var
                                                build-letrec
                                                build-named-let
                                                build-let
                                                build-sequence
                                                build-data
                                                build-primref
                                                build-lambda-case
                                                build-case-lambda
                                                build-simple-lambda
                                                build-global-definition
                                                build-global-assignment
                                                build-global-reference
                                                analyze-variable
                                                build-lexical-assignment
                                                build-lexical-reference
                                                build-dynlet
                                                build-conditional
                                                build-application
                                                build-void
                                                maybe-name-value!
                                                decorate-source
                                                get-global-definition-hook
                                                put-global-definition-hook
                                                gensym-hook
                                                local-eval-hook
                                                top-level-eval-hook
                                                fx<
                                                fx=
                                                fx-
                                                fx+
                                                set-lambda-meta!
                                                lambda-meta
                                                lambda?
                                                make-dynlet
                                                make-letrec
                                                make-let
                                                make-lambda-case
                                                make-lambda
                                                make-sequence
                                                make-application
                                                make-conditional
                                                make-toplevel-define
                                                make-toplevel-set
                                                make-toplevel-ref
                                                make-module-set
                                                make-module-ref
                                                make-lexical-set
                                                make-lexical-ref
                                                make-primitive-ref
                                                make-const
                                                make-void)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i467"
                                               "i465"
                                               "i463"
                                               "i461"
                                               "i459"
                                               "i457"
                                               "i455"
                                               "i453"
                                               "i451"
                                               "i449"
                                               "i447"
                                               "i445"
                                               "i443"
                                               "i441"
                                               "i439"
                                               "i437"
                                               "i435"
                                               "i433"
                                               "i431"
                                               "i429"
                                               "i427"
                                               "i425"
                                               "i423"
                                               "i421"
                                               "i419"
                                               "i417"
                                               "i415"
                                               "i413"
                                               "i411"
                                               "i409"
                                               "i407"
                                               "i405"
                                               "i403"
                                               "i401"
                                               "i399"
                                               "i398"
                                               "i396"
                                               "i393"
                                               "i392"
                                               "i391"
                                               "i389"
                                               "i388"
                                               "i386"
                                               "i384"
                                               "i382"
                                               "i380"
                                               "i378"
                                               "i376"
                                               "i374"
                                               "i372"
                                               "i369"
                                               "i367"
                                               "i366"
                                               "i364"
                                               "i362"
                                               "i360"
                                               "i358"
                                               "i357"
                                               "i356"
                                               "i355"
                                               "i353"
                                               "i352"
                                               "i349"
                                               "i347"
                                               "i345"
                                               "i343"
                                               "i341"
                                               "i339"
                                               "i337"
                                               "i336"
                                               "i335"
                                               "i333"
                                               "i331"
                                               "i330"
                                               "i327"
                                               "i326"
                                               "i324"
                                               "i322"
                                               "i320"
                                               "i318"
                                               "i316"
                                               "i314"
                                               "i312"
                                               "i310"
                                               "i308"
                                               "i305"
                                               "i303"
                                               "i301"
                                               "i299"
                                               "i297"
                                               "i295"
                                               "i293"
                                               "i291"
                                               "i289"
                                               "i287"
                                               "i285"
                                               "i283"
                                               "i281"
                                               "i279"
                                               "i277"
                                               "i275"
                                               "i273"
                                               "i271"
                                               "i269"
                                               "i267"
                                               "i265"
                                               "i263"
                                               "i261"
                                               "i260"
                                               "i257"
                                               "i255"
                                               "i254"
                                               "i253"
                                               "i252"
                                               "i251"
                                               "i249"
                                               "i247"
                                               "i245"
                                               "i242"
                                               "i240"
                                               "i238"
                                               "i236"
                                               "i234"
                                               "i232"
                                               "i230"
                                               "i228"
                                               "i226"
                                               "i224"
                                               "i222"
                                               "i220"
                                               "i218"
                                               "i216"
                                               "i214"
                                               "i212"
                                               "i210"
                                               "i208"))
                                            #(ribcage
                                              (define-structure
                                                define-expansion-accessors
                                                define-expansion-constructors)
                                              ((top) (top) (top))
                                              ("i46" "i45" "i44")))
                                           (hygiene guile))
                                        '(()))
                                      (#{id-var-name 4332}#
                                        '#(syntax-object
                                           _
                                           ((top)
                                            #(ribcage
                                              #(pat exp)
                                              #((top) (top))
                                              #("i3911" "i3912"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x keys clauses r mod)
                                              #((top) (top) (top) (top) (top))
                                              #("i3900"
                                                "i3901"
                                                "i3902"
                                                "i3903"
                                                "i3904"))
                                            #(ribcage
                                              (gen-syntax-case
                                                gen-clause
                                                build-dispatch-call
                                                convert-pattern)
                                              ((top) (top) (top) (top))
                                              ("i3710"
                                               "i3708"
                                               "i3706"
                                               "i3704"))
                                            #(ribcage
                                              (lambda-var-list
                                                gen-var
                                                strip
                                                chi-lambda-case
                                                lambda*-formals
                                                chi-simple-lambda
                                                lambda-formals
                                                ellipsis?
                                                chi-void
                                                eval-local-transformer
                                                chi-local-syntax
                                                chi-body
                                                chi-macro
                                                chi-application
                                                chi-expr
                                                chi
                                                syntax-type
                                                chi-when-list
                                                chi-install-global
                                                chi-top-sequence
                                                chi-sequence
                                                source-wrap
                                                wrap
                                                bound-id-member?
                                                distinct-bound-ids?
                                                valid-bound-ids?
                                                bound-id=?
                                                free-id=?
                                                id-var-name
                                                same-marks?
                                                join-marks
                                                join-wraps
                                                smart-append
                                                make-binding-wrap
                                                extend-ribcage!
                                                make-empty-ribcage
                                                new-mark
                                                anti-mark
                                                the-anti-mark
                                                top-marked?
                                                top-wrap
                                                empty-wrap
                                                set-ribcage-labels!
                                                set-ribcage-marks!
                                                set-ribcage-symnames!
                                                ribcage-labels
                                                ribcage-marks
                                                ribcage-symnames
                                                ribcage?
                                                make-ribcage
                                                gen-labels
                                                gen-label
                                                make-rename
                                                rename-marks
                                                rename-new
                                                rename-old
                                                subst-rename?
                                                wrap-subst
                                                wrap-marks
                                                make-wrap
                                                id-sym-name&marks
                                                id-sym-name
                                                id?
                                                nonsymbol-id?
                                                global-extend
                                                lookup
                                                macros-only-env
                                                extend-var-env
                                                extend-env
                                                null-env
                                                binding-value
                                                binding-type
                                                make-binding
                                                arg-check
                                                source-annotation
                                                no-source
                                                set-syntax-object-module!
                                                set-syntax-object-wrap!
                                                set-syntax-object-expression!
                                                syntax-object-module
                                                syntax-object-wrap
                                                syntax-object-expression
                                                syntax-object?
                                                make-syntax-object
                                                build-lexical-var
                                                build-letrec
                                                build-named-let
                                                build-let
                                                build-sequence
                                                build-data
                                                build-primref
                                                build-lambda-case
                                                build-case-lambda
                                                build-simple-lambda
                                                build-global-definition
                                                build-global-assignment
                                                build-global-reference
                                                analyze-variable
                                                build-lexical-assignment
                                                build-lexical-reference
                                                build-dynlet
                                                build-conditional
                                                build-application
                                                build-void
                                                maybe-name-value!
                                                decorate-source
                                                get-global-definition-hook
                                                put-global-definition-hook
                                                gensym-hook
                                                local-eval-hook
                                                top-level-eval-hook
                                                fx<
                                                fx=
                                                fx-
                                                fx+
                                                set-lambda-meta!
                                                lambda-meta
                                                lambda?
                                                make-dynlet
                                                make-letrec
                                                make-let
                                                make-lambda-case
                                                make-lambda
                                                make-sequence
                                                make-application
                                                make-conditional
                                                make-toplevel-define
                                                make-toplevel-set
                                                make-toplevel-ref
                                                make-module-set
                                                make-module-ref
                                                make-lexical-set
                                                make-lexical-ref
                                                make-primitive-ref
                                                make-const
                                                make-void)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i467"
                                               "i465"
                                               "i463"
                                               "i461"
                                               "i459"
                                               "i457"
                                               "i455"
                                               "i453"
                                               "i451"
                                               "i449"
                                               "i447"
                                               "i445"
                                               "i443"
                                               "i441"
                                               "i439"
                                               "i437"
                                               "i435"
                                               "i433"
                                               "i431"
                                               "i429"
                                               "i427"
                                               "i425"
                                               "i423"
                                               "i421"
                                               "i419"
                                               "i417"
                                               "i415"
                                               "i413"
                                               "i411"
                                               "i409"
                                               "i407"
                                               "i405"
                                               "i403"
                                               "i401"
                                               "i399"
                                               "i398"
                                               "i396"
                                               "i393"
                                               "i392"
                                               "i391"
                                               "i389"
                                               "i388"
                                               "i386"
                                               "i384"
                                               "i382"
                                               "i380"
                                               "i378"
                                               "i376"
                                               "i374"
                                               "i372"
                                               "i369"
                                               "i367"
                                               "i366"
                                               "i364"
                                               "i362"
                                               "i360"
                                               "i358"
                                               "i357"
                                               "i356"
                                               "i355"
                                               "i353"
                                               "i352"
                                               "i349"
                                               "i347"
                                               "i345"
                                               "i343"
                                               "i341"
                                               "i339"
                                               "i337"
                                               "i336"
                                               "i335"
                                               "i333"
                                               "i331"
                                               "i330"
                                               "i327"
                                               "i326"
                                               "i324"
                                               "i322"
                                               "i320"
                                               "i318"
                                               "i316"
                                               "i314"
                                               "i312"
                                               "i310"
                                               "i308"
                                               "i305"
                                               "i303"
                                               "i301"
                                               "i299"
                                               "i297"
                                               "i295"
                                               "i293"
                                               "i291"
                                               "i289"
                                               "i287"
                                               "i285"
                                               "i283"
                                               "i281"
                                               "i279"
                                               "i277"
                                               "i275"
                                               "i273"
                                               "i271"
                                               "i269"
                                               "i267"
                                               "i265"
                                               "i263"
                                               "i261"
                                               "i260"
                                               "i257"
                                               "i255"
                                               "i254"
                                               "i253"
                                               "i252"
                                               "i251"
                                               "i249"
                                               "i247"
                                               "i245"
                                               "i242"
                                               "i240"
                                               "i238"
                                               "i236"
                                               "i234"
                                               "i232"
                                               "i230"
                                               "i228"
                                               "i226"
                                               "i224"
                                               "i222"
                                               "i220"
                                               "i218"
                                               "i216"
                                               "i214"
                                               "i212"
                                               "i210"
                                               "i208"))
                                            #(ribcage
                                              (define-structure
                                                define-expansion-accessors
                                                define-expansion-constructors)
                                              ((top) (top) (top))
                                              ("i46" "i45" "i44")))
                                           (hygiene guile))
                                        '(())))
                                 #f)
                             (#{chi 4345}#
                               #{exp 12604}#
                               #{r 12560}#
                               '(())
                               #{mod 12561}#)
                             (let ((#{labels 12806}#
                                     (list (symbol->string (gensym "i"))))
                                   (#{var 12807}#
                                     (let ((#{id 12845}#
                                             (if (if (vector? #{pat 12603}#)
                                                   (if (= (vector-length
                                                            #{pat 12603}#)
                                                          4)
                                                     (eq? (vector-ref
                                                            #{pat 12603}#
                                                            0)
                                                          'syntax-object)
                                                     #f)
                                                   #f)
                                               (vector-ref #{pat 12603}# 1)
                                               #{pat 12603}#)))
                                       (gensym
                                         (string-append
                                           (symbol->string #{id 12845}#)
                                           " ")))))
                               (#{build-application 4280}#
                                 #f
                                 (#{build-simple-lambda 4289}#
                                   #f
                                   (list (syntax->datum #{pat 12603}#))
                                   #f
                                   (list #{var 12807}#)
                                   '()
                                   (#{chi 4345}#
                                     #{exp 12604}#
                                     (#{extend-env 4307}#
                                       #{labels 12806}#
                                       (list (cons 'syntax
                                                   (cons #{var 12807}# 0)))
                                       #{r 12560}#)
                                     (#{make-binding-wrap 4327}#
                                       (list #{pat 12603}#)
                                       #{labels 12806}#
                                       '(()))
                                     #{mod 12561}#))
                                 (list #{x 12557}#))))
                           (#{gen-clause 12150}#
                             #{x 12557}#
                             #{keys 12558}#
                             (cdr #{clauses 12559}#)
                             #{r 12560}#
                             #{pat 12603}#
                             #t
                             #{exp 12604}#
                             #{mod 12561}#)))
                       #{tmp 12601}#)
                     (let ((#{tmp 13115}#
                             ($sc-dispatch #{tmp 12600}# '(any any any))))
                       (if #{tmp 13115}#
                         (@apply
                           (lambda (#{pat 13117}#
                                    #{fender 13118}#
                                    #{exp 13119}#)
                             (#{gen-clause 12150}#
                               #{x 12557}#
                               #{keys 12558}#
                               (cdr #{clauses 12559}#)
                               #{r 12560}#
                               #{pat 13117}#
                               #{fender 13118}#
                               #{exp 13119}#
                               #{mod 12561}#))
                           #{tmp 13115}#)
                         (syntax-violation
                           'syntax-case
                           "invalid clause"
                           (car #{clauses 12559}#)))))))))))
        (lambda (#{e 12152}#
                 #{r 12153}#
                 #{w 12154}#
                 #{s 12155}#
                 #{mod 12156}#)
          (let ((#{e 12157}#
                  (#{wrap 4338}#
                    (begin
                      (if (if (pair? #{e 12152}#) #{s 12155}# #f)
                        (set-source-properties! #{e 12152}# #{s 12155}#))
                      #{e 12152}#)
                    #{w 12154}#
                    #{mod 12156}#)))
            (let ((#{tmp 12159}#
                    ($sc-dispatch
                      #{e 12157}#
                      '(_ any each-any . each-any))))
              (if #{tmp 12159}#
                (@apply
                  (lambda (#{val 12184}# #{key 12185}# #{m 12186}#)
                    (if (and-map
                          (lambda (#{x 12187}#)
                            (if (if (symbol? #{x 12187}#)
                                  #t
                                  (if (if (vector? #{x 12187}#)
                                        (if (= (vector-length #{x 12187}#) 4)
                                          (eq? (vector-ref #{x 12187}# 0)
                                               'syntax-object)
                                          #f)
                                        #f)
                                    (symbol? (vector-ref #{x 12187}# 1))
                                    #f))
                              (not (if (if (if (vector? #{x 12187}#)
                                             (if (= (vector-length #{x 12187}#)
                                                    4)
                                               (eq? (vector-ref #{x 12187}# 0)
                                                    'syntax-object)
                                               #f)
                                             #f)
                                         (symbol? (vector-ref #{x 12187}# 1))
                                         #f)
                                     (if (eq? (if (if (vector? #{x 12187}#)
                                                    (if (= (vector-length
                                                             #{x 12187}#)
                                                           4)
                                                      (eq? (vector-ref
                                                             #{x 12187}#
                                                             0)
                                                           'syntax-object)
                                                      #f)
                                                    #f)
                                                (vector-ref #{x 12187}# 1)
                                                #{x 12187}#)
                                              (if (if (= (vector-length
                                                           '#(syntax-object
                                                              ...
                                                              ((top)
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i2230"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i467"
                                                                  "i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i398"
                                                                  "i396"
                                                                  "i393"
                                                                  "i392"
                                                                  "i391"
                                                                  "i389"
                                                                  "i388"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i369"
                                                                  "i367"
                                                                  "i366"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i357"
                                                                  "i356"
                                                                  "i355"
                                                                  "i353"
                                                                  "i352"
                                                                  "i349"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i336"
                                                                  "i335"
                                                                  "i333"
                                                                  "i331"
                                                                  "i330"
                                                                  "i327"
                                                                  "i326"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i305"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i260"
                                                                  "i257"
                                                                  "i255"
                                                                  "i254"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i242"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i46"
                                                                  "i45"
                                                                  "i44")))
                                                              (hygiene guile)))
                                                         4)
                                                    (eq? (vector-ref
                                                           '#(syntax-object
                                                              ...
                                                              ((top)
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i2230"))
                                                               #(ribcage
                                                                 (lambda-var-list
                                                                   gen-var
                                                                   strip
                                                                   chi-lambda-case
                                                                   lambda*-formals
                                                                   chi-simple-lambda
                                                                   lambda-formals
                                                                   ellipsis?
                                                                   chi-void
                                                                   eval-local-transformer
                                                                   chi-local-syntax
                                                                   chi-body
                                                                   chi-macro
                                                                   chi-application
                                                                   chi-expr
                                                                   chi
                                                                   syntax-type
                                                                   chi-when-list
                                                                   chi-install-global
                                                                   chi-top-sequence
                                                                   chi-sequence
                                                                   source-wrap
                                                                   wrap
                                                                   bound-id-member?
                                                                   distinct-bound-ids?
                                                                   valid-bound-ids?
                                                                   bound-id=?
                                                                   free-id=?
                                                                   id-var-name
                                                                   same-marks?
                                                                   join-marks
                                                                   join-wraps
                                                                   smart-append
                                                                   make-binding-wrap
                                                                   extend-ribcage!
                                                                   make-empty-ribcage
                                                                   new-mark
                                                                   anti-mark
                                                                   the-anti-mark
                                                                   top-marked?
                                                                   top-wrap
                                                                   empty-wrap
                                                                   set-ribcage-labels!
                                                                   set-ribcage-marks!
                                                                   set-ribcage-symnames!
                                                                   ribcage-labels
                                                                   ribcage-marks
                                                                   ribcage-symnames
                                                                   ribcage?
                                                                   make-ribcage
                                                                   gen-labels
                                                                   gen-label
                                                                   make-rename
                                                                   rename-marks
                                                                   rename-new
                                                                   rename-old
                                                                   subst-rename?
                                                                   wrap-subst
                                                                   wrap-marks
                                                                   make-wrap
                                                                   id-sym-name&marks
                                                                   id-sym-name
                                                                   id?
                                                                   nonsymbol-id?
                                                                   global-extend
                                                                   lookup
                                                                   macros-only-env
                                                                   extend-var-env
                                                                   extend-env
                                                                   null-env
                                                                   binding-value
                                                                   binding-type
                                                                   make-binding
                                                                   arg-check
                                                                   source-annotation
                                                                   no-source
                                                                   set-syntax-object-module!
                                                                   set-syntax-object-wrap!
                                                                   set-syntax-object-expression!
                                                                   syntax-object-module
                                                                   syntax-object-wrap
                                                                   syntax-object-expression
                                                                   syntax-object?
                                                                   make-syntax-object
                                                                   build-lexical-var
                                                                   build-letrec
                                                                   build-named-let
                                                                   build-let
                                                                   build-sequence
                                                                   build-data
                                                                   build-primref
                                                                   build-lambda-case
                                                                   build-case-lambda
                                                                   build-simple-lambda
                                                                   build-global-definition
                                                                   build-global-assignment
                                                                   build-global-reference
                                                                   analyze-variable
                                                                   build-lexical-assignment
                                                                   build-lexical-reference
                                                                   build-dynlet
                                                                   build-conditional
                                                                   build-application
                                                                   build-void
                                                                   maybe-name-value!
                                                                   decorate-source
                                                                   get-global-definition-hook
                                                                   put-global-definition-hook
                                                                   gensym-hook
                                                                   local-eval-hook
                                                                   top-level-eval-hook
                                                                   fx<
                                                                   fx=
                                                                   fx-
                                                                   fx+
                                                                   set-lambda-meta!
                                                                   lambda-meta
                                                                   lambda?
                                                                   make-dynlet
                                                                   make-letrec
                                                                   make-let
                                                                   make-lambda-case
                                                                   make-lambda
                                                                   make-sequence
                                                                   make-application
                                                                   make-conditional
                                                                   make-toplevel-define
                                                                   make-toplevel-set
                                                                   make-toplevel-ref
                                                                   make-module-set
                                                                   make-module-ref
                                                                   make-lexical-set
                                                                   make-lexical-ref
                                                                   make-primitive-ref
                                                                   make-const
                                                                   make-void)
                                                                 ((top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top)
                                                                  (top))
                                                                 ("i467"
                                                                  "i465"
                                                                  "i463"
                                                                  "i461"
                                                                  "i459"
                                                                  "i457"
                                                                  "i455"
                                                                  "i453"
                                                                  "i451"
                                                                  "i449"
                                                                  "i447"
                                                                  "i445"
                                                                  "i443"
                                                                  "i441"
                                                                  "i439"
                                                                  "i437"
                                                                  "i435"
                                                                  "i433"
                                                                  "i431"
                                                                  "i429"
                                                                  "i427"
                                                                  "i425"
                                                                  "i423"
                                                                  "i421"
                                                                  "i419"
                                                                  "i417"
                                                                  "i415"
                                                                  "i413"
                                                                  "i411"
                                                                  "i409"
                                                                  "i407"
                                                                  "i405"
                                                                  "i403"
                                                                  "i401"
                                                                  "i399"
                                                                  "i398"
                                                                  "i396"
                                                                  "i393"
                                                                  "i392"
                                                                  "i391"
                                                                  "i389"
                                                                  "i388"
                                                                  "i386"
                                                                  "i384"
                                                                  "i382"
                                                                  "i380"
                                                                  "i378"
                                                                  "i376"
                                                                  "i374"
                                                                  "i372"
                                                                  "i369"
                                                                  "i367"
                                                                  "i366"
                                                                  "i364"
                                                                  "i362"
                                                                  "i360"
                                                                  "i358"
                                                                  "i357"
                                                                  "i356"
                                                                  "i355"
                                                                  "i353"
                                                                  "i352"
                                                                  "i349"
                                                                  "i347"
                                                                  "i345"
                                                                  "i343"
                                                                  "i341"
                                                                  "i339"
                                                                  "i337"
                                                                  "i336"
                                                                  "i335"
                                                                  "i333"
                                                                  "i331"
                                                                  "i330"
                                                                  "i327"
                                                                  "i326"
                                                                  "i324"
                                                                  "i322"
                                                                  "i320"
                                                                  "i318"
                                                                  "i316"
                                                                  "i314"
                                                                  "i312"
                                                                  "i310"
                                                                  "i308"
                                                                  "i305"
                                                                  "i303"
                                                                  "i301"
                                                                  "i299"
                                                                  "i297"
                                                                  "i295"
                                                                  "i293"
                                                                  "i291"
                                                                  "i289"
                                                                  "i287"
                                                                  "i285"
                                                                  "i283"
                                                                  "i281"
                                                                  "i279"
                                                                  "i277"
                                                                  "i275"
                                                                  "i273"
                                                                  "i271"
                                                                  "i269"
                                                                  "i267"
                                                                  "i265"
                                                                  "i263"
                                                                  "i261"
                                                                  "i260"
                                                                  "i257"
                                                                  "i255"
                                                                  "i254"
                                                                  "i253"
                                                                  "i252"
                                                                  "i251"
                                                                  "i249"
                                                                  "i247"
                                                                  "i245"
                                                                  "i242"
                                                                  "i240"
                                                                  "i238"
                                                                  "i236"
                                                                  "i234"
                                                                  "i232"
                                                                  "i230"
                                                                  "i228"
                                                                  "i226"
                                                                  "i224"
                                                                  "i222"
                                                                  "i220"
                                                                  "i218"
                                                                  "i216"
                                                                  "i214"
                                                                  "i212"
                                                                  "i210"
                                                                  "i208"))
                                                               #(ribcage
                                                                 (define-structure
                                                                   define-expansion-accessors
                                                                   define-expansion-constructors)
                                                                 ((top)
                                                                  (top)
                                                                  (top))
                                                                 ("i46"
                                                                  "i45"
                                                                  "i44")))
                                                              (hygiene guile))
                                                           0)
                                                         'syntax-object)
                                                    #f)
                                                (vector-ref
                                                  '#(syntax-object
                                                     ...
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i2230"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          maybe-name-value!
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          set-lambda-meta!
                                                          lambda-meta
                                                          lambda?
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i467"
                                                         "i465"
                                                         "i463"
                                                         "i461"
                                                         "i459"
                                                         "i457"
                                                         "i455"
                                                         "i453"
                                                         "i451"
                                                         "i449"
                                                         "i447"
                                                         "i445"
                                                         "i443"
                                                         "i441"
                                                         "i439"
                                                         "i437"
                                                         "i435"
                                                         "i433"
                                                         "i431"
                                                         "i429"
                                                         "i427"
                                                         "i425"
                                                         "i423"
                                                         "i421"
                                                         "i419"
                                                         "i417"
                                                         "i415"
                                                         "i413"
                                                         "i411"
                                                         "i409"
                                                         "i407"
                                                         "i405"
                                                         "i403"
                                                         "i401"
                                                         "i399"
                                                         "i398"
                                                         "i396"
                                                         "i393"
                                                         "i392"
                                                         "i391"
                                                         "i389"
                                                         "i388"
                                                         "i386"
                                                         "i384"
                                                         "i382"
                                                         "i380"
                                                         "i378"
                                                         "i376"
                                                         "i374"
                                                         "i372"
                                                         "i369"
                                                         "i367"
                                                         "i366"
                                                         "i364"
                                                         "i362"
                                                         "i360"
                                                         "i358"
                                                         "i357"
                                                         "i356"
                                                         "i355"
                                                         "i353"
                                                         "i352"
                                                         "i349"
                                                         "i347"
                                                         "i345"
                                                         "i343"
                                                         "i341"
                                                         "i339"
                                                         "i337"
                                                         "i336"
                                                         "i335"
                                                         "i333"
                                                         "i331"
                                                         "i330"
                                                         "i327"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i305"
                                                         "i303"
                                                         "i301"
                                                         "i299"
                                                         "i297"
                                                         "i295"
                                                         "i293"
                                                         "i291"
                                                         "i289"
                                                         "i287"
                                                         "i285"
                                                         "i283"
                                                         "i281"
                                                         "i279"
                                                         "i277"
                                                         "i275"
                                                         "i273"
                                                         "i271"
                                                         "i269"
                                                         "i267"
                                                         "i265"
                                                         "i263"
                                                         "i261"
                                                         "i260"
                                                         "i257"
                                                         "i255"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i249"
                                                         "i247"
                                                         "i245"
                                                         "i242"
                                                         "i240"
                                                         "i238"
                                                         "i236"
                                                         "i234"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i220"
                                                         "i218"
                                                         "i216"
                                                         "i214"
                                                         "i212"
                                                         "i210"
                                                         "i208"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-accessors
                                                          define-expansion-constructors)
                                                        ((top) (top) (top))
                                                        ("i46" "i45" "i44")))
                                                     (hygiene guile))
                                                  1)
                                                '#(syntax-object
                                                   ...
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i2230"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        maybe-name-value!
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        set-lambda-meta!
                                                        lambda-meta
                                                        lambda?
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i467"
                                                       "i465"
                                                       "i463"
                                                       "i461"
                                                       "i459"
                                                       "i457"
                                                       "i455"
                                                       "i453"
                                                       "i451"
                                                       "i449"
                                                       "i447"
                                                       "i445"
                                                       "i443"
                                                       "i441"
                                                       "i439"
                                                       "i437"
                                                       "i435"
                                                       "i433"
                                                       "i431"
                                                       "i429"
                                                       "i427"
                                                       "i425"
                                                       "i423"
                                                       "i421"
                                                       "i419"
                                                       "i417"
                                                       "i415"
                                                       "i413"
                                                       "i411"
                                                       "i409"
                                                       "i407"
                                                       "i405"
                                                       "i403"
                                                       "i401"
                                                       "i399"
                                                       "i398"
                                                       "i396"
                                                       "i393"
                                                       "i392"
                                                       "i391"
                                                       "i389"
                                                       "i388"
                                                       "i386"
                                                       "i384"
                                                       "i382"
                                                       "i380"
                                                       "i378"
                                                       "i376"
                                                       "i374"
                                                       "i372"
                                                       "i369"
                                                       "i367"
                                                       "i366"
                                                       "i364"
                                                       "i362"
                                                       "i360"
                                                       "i358"
                                                       "i357"
                                                       "i356"
                                                       "i355"
                                                       "i353"
                                                       "i352"
                                                       "i349"
                                                       "i347"
                                                       "i345"
                                                       "i343"
                                                       "i341"
                                                       "i339"
                                                       "i337"
                                                       "i336"
                                                       "i335"
                                                       "i333"
                                                       "i331"
                                                       "i330"
                                                       "i327"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i305"
                                                       "i303"
                                                       "i301"
                                                       "i299"
                                                       "i297"
                                                       "i295"
                                                       "i293"
                                                       "i291"
                                                       "i289"
                                                       "i287"
                                                       "i285"
                                                       "i283"
                                                       "i281"
                                                       "i279"
                                                       "i277"
                                                       "i275"
                                                       "i273"
                                                       "i271"
                                                       "i269"
                                                       "i267"
                                                       "i265"
                                                       "i263"
                                                       "i261"
                                                       "i260"
                                                       "i257"
                                                       "i255"
                                                       "i254"
                                                       "i253"
                                                       "i252"
                                                       "i251"
                                                       "i249"
                                                       "i247"
                                                       "i245"
                                                       "i242"
                                                       "i240"
                                                       "i238"
                                                       "i236"
                                                       "i234"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i220"
                                                       "i218"
                                                       "i216"
                                                       "i214"
                                                       "i212"
                                                       "i210"
                                                       "i208"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-accessors
                                                        define-expansion-constructors)
                                                      ((top) (top) (top))
                                                      ("i46" "i45" "i44")))
                                                   (hygiene guile))))
                                       (eq? (#{id-var-name 4332}#
                                              #{x 12187}#
                                              '(()))
                                            (#{id-var-name 4332}#
                                              '#(syntax-object
                                                 ...
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i2230"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      maybe-name-value!
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      set-lambda-meta!
                                                      lambda-meta
                                                      lambda?
                                                      make-dynlet
                                                      make-letrec
                                                      make-let
                                                      make-lambda-case
                                                      make-lambda
                                                      make-sequence
                                                      make-application
                                                      make-conditional
                                                      make-toplevel-define
                                                      make-toplevel-set
                                                      make-toplevel-ref
                                                      make-module-set
                                                      make-module-ref
                                                      make-lexical-set
                                                      make-lexical-ref
                                                      make-primitive-ref
                                                      make-const
                                                      make-void)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i467"
                                                     "i465"
                                                     "i463"
                                                     "i461"
                                                     "i459"
                                                     "i457"
                                                     "i455"
                                                     "i453"
                                                     "i451"
                                                     "i449"
                                                     "i447"
                                                     "i445"
                                                     "i443"
                                                     "i441"
                                                     "i439"
                                                     "i437"
                                                     "i435"
                                                     "i433"
                                                     "i431"
                                                     "i429"
                                                     "i427"
                                                     "i425"
                                                     "i423"
                                                     "i421"
                                                     "i419"
                                                     "i417"
                                                     "i415"
                                                     "i413"
                                                     "i411"
                                                     "i409"
                                                     "i407"
                                                     "i405"
                                                     "i403"
                                                     "i401"
                                                     "i399"
                                                     "i398"
                                                     "i396"
                                                     "i393"
                                                     "i392"
                                                     "i391"
                                                     "i389"
                                                     "i388"
                                                     "i386"
                                                     "i384"
                                                     "i382"
                                                     "i380"
                                                     "i378"
                                                     "i376"
                                                     "i374"
                                                     "i372"
                                                     "i369"
                                                     "i367"
                                                     "i366"
                                                     "i364"
                                                     "i362"
                                                     "i360"
                                                     "i358"
                                                     "i357"
                                                     "i356"
                                                     "i355"
                                                     "i353"
                                                     "i352"
                                                     "i349"
                                                     "i347"
                                                     "i345"
                                                     "i343"
                                                     "i341"
                                                     "i339"
                                                     "i337"
                                                     "i336"
                                                     "i335"
                                                     "i333"
                                                     "i331"
                                                     "i330"
                                                     "i327"
                                                     "i326"
                                                     "i324"
                                                     "i322"
                                                     "i320"
                                                     "i318"
                                                     "i316"
                                                     "i314"
                                                     "i312"
                                                     "i310"
                                                     "i308"
                                                     "i305"
                                                     "i303"
                                                     "i301"
                                                     "i299"
                                                     "i297"
                                                     "i295"
                                                     "i293"
                                                     "i291"
                                                     "i289"
                                                     "i287"
                                                     "i285"
                                                     "i283"
                                                     "i281"
                                                     "i279"
                                                     "i277"
                                                     "i275"
                                                     "i273"
                                                     "i271"
                                                     "i269"
                                                     "i267"
                                                     "i265"
                                                     "i263"
                                                     "i261"
                                                     "i260"
                                                     "i257"
                                                     "i255"
                                                     "i254"
                                                     "i253"
                                                     "i252"
                                                     "i251"
                                                     "i249"
                                                     "i247"
                                                     "i245"
                                                     "i242"
                                                     "i240"
                                                     "i238"
                                                     "i236"
                                                     "i234"
                                                     "i232"
                                                     "i230"
                                                     "i228"
                                                     "i226"
                                                     "i224"
                                                     "i222"
                                                     "i220"
                                                     "i218"
                                                     "i216"
                                                     "i214"
                                                     "i212"
                                                     "i210"
                                                     "i208"))
                                                  #(ribcage
                                                    (define-structure
                                                      define-expansion-accessors
                                                      define-expansion-constructors)
                                                    ((top) (top) (top))
                                                    ("i46" "i45" "i44")))
                                                 (hygiene guile))
                                              '(())))
                                       #f)
                                     #f))
                              #f))
                          #{key 12185}#)
                      (let ((#{x 12310}#
                              (gensym
                                (string-append (symbol->string 'tmp) " "))))
                        (#{build-application 4280}#
                          #{s 12155}#
                          (let ((#{req 12445}# (list 'tmp))
                                (#{vars 12447}# (list #{x 12310}#))
                                (#{exp 12449}#
                                  (#{gen-syntax-case 12151}#
                                    (make-struct/no-tail
                                      (vector-ref %expanded-vtables 3)
                                      #f
                                      'tmp
                                      #{x 12310}#)
                                    #{key 12185}#
                                    #{m 12186}#
                                    #{r 12153}#
                                    #{mod 12156}#)))
                            (let ((#{body 12454}#
                                    (make-struct/no-tail
                                      (vector-ref %expanded-vtables 14)
                                      #f
                                      #{req 12445}#
                                      #f
                                      #f
                                      #f
                                      '()
                                      #{vars 12447}#
                                      #{exp 12449}#
                                      #f)))
                              (make-struct/no-tail
                                (vector-ref %expanded-vtables 13)
                                #f
                                '()
                                #{body 12454}#)))
                          (list (#{chi 4345}#
                                  #{val 12184}#
                                  #{r 12153}#
                                  '(())
                                  #{mod 12156}#))))
                      (syntax-violation
                        'syntax-case
                        "invalid literals list"
                        #{e 12157}#)))
                  #{tmp 12159}#)
                (syntax-violation
                  #f
                  "source expression failed to match any pattern"
                  #{e 12157}#)))))))
    (set! macroexpand
      (lambda*
        (#{x 14894}#
          #:optional
          (#{m 14895}# 'e)
          (#{esew 14896}# '(eval)))
        (#{chi-top-sequence 4341}#
          (list #{x 14894}#)
          '()
          '((top))
          #f
          #{m 14895}#
          #{esew 14896}#
          (cons 'hygiene (module-name (current-module))))))
    (set! identifier?
      (lambda (#{x 14899}#)
        (if (if (vector? #{x 14899}#)
              (if (= (vector-length #{x 14899}#) 4)
                (eq? (vector-ref #{x 14899}# 0) 'syntax-object)
                #f)
              #f)
          (symbol? (vector-ref #{x 14899}# 1))
          #f)))
    (set! datum->syntax
      (lambda (#{id 14924}# #{datum 14925}#)
        (let ((#{wrap 14930}# (vector-ref #{id 14924}# 2))
              (#{module 14931}# (vector-ref #{id 14924}# 3)))
          (vector
            'syntax-object
            #{datum 14925}#
            #{wrap 14930}#
            #{module 14931}#))))
    (set! syntax->datum
      (lambda (#{x 14938}#)
        (#{strip 4358}# #{x 14938}# '(()))))
    (set! syntax-source
      (lambda (#{x 14941}#)
        (#{source-annotation 4306}# #{x 14941}#)))
    (set! generate-temporaries
      (lambda (#{ls 15113}#)
        (begin
          (if (not (list? #{ls 15113}#))
            (syntax-violation
              'generate-temporaries
              "invalid argument"
              #{ls 15113}#))
          (let ((#{mod 15121}#
                  (cons 'hygiene (module-name (current-module)))))
            (map (lambda (#{x 15122}#)
                   (#{wrap 4338}# (gensym) '((top)) #{mod 15121}#))
                 #{ls 15113}#)))))
    (set! free-identifier=?
      (lambda (#{x 15126}# #{y 15127}#)
        (begin
          (if (not (if (if (vector? #{x 15126}#)
                         (if (= (vector-length #{x 15126}#) 4)
                           (eq? (vector-ref #{x 15126}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{x 15126}# 1))
                     #f))
            (syntax-violation
              'free-identifier=?
              "invalid argument"
              #{x 15126}#))
          (if (not (if (if (vector? #{y 15127}#)
                         (if (= (vector-length #{y 15127}#) 4)
                           (eq? (vector-ref #{y 15127}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{y 15127}# 1))
                     #f))
            (syntax-violation
              'free-identifier=?
              "invalid argument"
              #{y 15127}#))
          (if (eq? (if (if (vector? #{x 15126}#)
                         (if (= (vector-length #{x 15126}#) 4)
                           (eq? (vector-ref #{x 15126}# 0) 'syntax-object)
                           #f)
                         #f)
                     (vector-ref #{x 15126}# 1)
                     #{x 15126}#)
                   (if (if (vector? #{y 15127}#)
                         (if (= (vector-length #{y 15127}#) 4)
                           (eq? (vector-ref #{y 15127}# 0) 'syntax-object)
                           #f)
                         #f)
                     (vector-ref #{y 15127}# 1)
                     #{y 15127}#))
            (eq? (#{id-var-name 4332}# #{x 15126}# '(()))
                 (#{id-var-name 4332}# #{y 15127}# '(())))
            #f))))
    (set! bound-identifier=?
      (lambda (#{x 15277}# #{y 15278}#)
        (begin
          (if (not (if (if (vector? #{x 15277}#)
                         (if (= (vector-length #{x 15277}#) 4)
                           (eq? (vector-ref #{x 15277}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{x 15277}# 1))
                     #f))
            (syntax-violation
              'bound-identifier=?
              "invalid argument"
              #{x 15277}#))
          (if (not (if (if (vector? #{y 15278}#)
                         (if (= (vector-length #{y 15278}#) 4)
                           (eq? (vector-ref #{y 15278}# 0) 'syntax-object)
                           #f)
                         #f)
                     (symbol? (vector-ref #{y 15278}# 1))
                     #f))
            (syntax-violation
              'bound-identifier=?
              "invalid argument"
              #{y 15278}#))
          (if (if (if (vector? #{x 15277}#)
                    (if (= (vector-length #{x 15277}#) 4)
                      (eq? (vector-ref #{x 15277}# 0) 'syntax-object)
                      #f)
                    #f)
                (if (vector? #{y 15278}#)
                  (if (= (vector-length #{y 15278}#) 4)
                    (eq? (vector-ref #{y 15278}# 0) 'syntax-object)
                    #f)
                  #f)
                #f)
            (if (eq? (vector-ref #{x 15277}# 1)
                     (vector-ref #{y 15278}# 1))
              (#{same-marks? 4331}#
                (car (vector-ref #{x 15277}# 2))
                (car (vector-ref #{y 15278}# 2)))
              #f)
            (eq? #{x 15277}# #{y 15278}#)))))
    (set! syntax-violation
      (lambda*
        (#{who 15411}#
          #{message 15412}#
          #{form 15413}#
          #:optional
          (#{subform 15414}# #f))
        (begin
          (if (not (if (not #{who 15411}#)
                     (not #{who 15411}#)
                     (let ((#{t 15432}# (string? #{who 15411}#)))
                       (if #{t 15432}#
                         #{t 15432}#
                         (symbol? #{who 15411}#)))))
            (syntax-violation
              'syntax-violation
              "invalid argument"
              #{who 15411}#))
          (if (not (string? #{message 15412}#))
            (syntax-violation
              'syntax-violation
              "invalid argument"
              #{message 15412}#))
          (throw 'syntax-error
                 #{who 15411}#
                 #{message 15412}#
                 (#{source-annotation 4306}#
                   (if #{form 15413}#
                     #{form 15413}#
                     #{subform 15414}#))
                 (#{strip 4358}# #{form 15413}# '(()))
                 (if #{subform 15414}#
                   (#{strip 4358}# #{subform 15414}# '(()))
                   #f)))))
    (letrec*
      ((#{match-each 15655}#
         (lambda (#{e 16278}#
                  #{p 16279}#
                  #{w 16280}#
                  #{mod 16281}#)
           (if (pair? #{e 16278}#)
             (let ((#{first 16282}#
                     (#{match 15661}#
                       (car #{e 16278}#)
                       #{p 16279}#
                       #{w 16280}#
                       '()
                       #{mod 16281}#)))
               (if #{first 16282}#
                 (let ((#{rest 16285}#
                         (#{match-each 15655}#
                           (cdr #{e 16278}#)
                           #{p 16279}#
                           #{w 16280}#
                           #{mod 16281}#)))
                   (if #{rest 16285}#
                     (cons #{first 16282}# #{rest 16285}#)
                     #f))
                 #f))
             (if (null? #{e 16278}#)
               '()
               (if (if (vector? #{e 16278}#)
                     (if (= (vector-length #{e 16278}#) 4)
                       (eq? (vector-ref #{e 16278}# 0) 'syntax-object)
                       #f)
                     #f)
                 (#{match-each 15655}#
                   (vector-ref #{e 16278}# 1)
                   #{p 16279}#
                   (#{join-wraps 4329}#
                     #{w 16280}#
                     (vector-ref #{e 16278}# 2))
                   (vector-ref #{e 16278}# 3))
                 #f)))))
       (#{match-each-any 15657}#
         (lambda (#{e 16313}# #{w 16314}# #{mod 16315}#)
           (if (pair? #{e 16313}#)
             (let ((#{l 16316}#
                     (#{match-each-any 15657}#
                       (cdr #{e 16313}#)
                       #{w 16314}#
                       #{mod 16315}#)))
               (if #{l 16316}#
                 (cons (#{wrap 4338}#
                         (car #{e 16313}#)
                         #{w 16314}#
                         #{mod 16315}#)
                       #{l 16316}#)
                 #f))
             (if (null? #{e 16313}#)
               '()
               (if (if (vector? #{e 16313}#)
                     (if (= (vector-length #{e 16313}#) 4)
                       (eq? (vector-ref #{e 16313}# 0) 'syntax-object)
                       #f)
                     #f)
                 (#{match-each-any 15657}#
                   (vector-ref #{e 16313}# 1)
                   (#{join-wraps 4329}#
                     #{w 16314}#
                     (vector-ref #{e 16313}# 2))
                   #{mod 16315}#)
                 #f)))))
       (#{match-empty 15658}#
         (lambda (#{p 16340}# #{r 16341}#)
           (if (null? #{p 16340}#)
             #{r 16341}#
             (if (eq? #{p 16340}# '_)
               #{r 16341}#
               (if (eq? #{p 16340}# 'any)
                 (cons '() #{r 16341}#)
                 (if (pair? #{p 16340}#)
                   (#{match-empty 15658}#
                     (car #{p 16340}#)
                     (#{match-empty 15658}#
                       (cdr #{p 16340}#)
                       #{r 16341}#))
                   (if (eq? #{p 16340}# 'each-any)
                     (cons '() #{r 16341}#)
                     (let ((#{atom-key 16342}# (vector-ref #{p 16340}# 0)))
                       (if (eqv? #{atom-key 16342}# 'each)
                         (#{match-empty 15658}#
                           (vector-ref #{p 16340}# 1)
                           #{r 16341}#)
                         (if (eqv? #{atom-key 16342}# 'each+)
                           (#{match-empty 15658}#
                             (vector-ref #{p 16340}# 1)
                             (#{match-empty 15658}#
                               (reverse (vector-ref #{p 16340}# 2))
                               (#{match-empty 15658}#
                                 (vector-ref #{p 16340}# 3)
                                 #{r 16341}#)))
                           (if (if (eqv? #{atom-key 16342}# 'free-id)
                                 #t
                                 (eqv? #{atom-key 16342}# 'atom))
                             #{r 16341}#
                             (if (eqv? #{atom-key 16342}# 'vector)
                               (#{match-empty 15658}#
                                 (vector-ref #{p 16340}# 1)
                                 #{r 16341}#)))))))))))))
       (#{combine 15659}#
         (lambda (#{r* 16361}# #{r 16362}#)
           (if (null? (car #{r* 16361}#))
             #{r 16362}#
             (cons (map car #{r* 16361}#)
                   (#{combine 15659}#
                     (map cdr #{r* 16361}#)
                     #{r 16362}#)))))
       (#{match* 15660}#
         (lambda (#{e 15690}#
                  #{p 15691}#
                  #{w 15692}#
                  #{r 15693}#
                  #{mod 15694}#)
           (if (null? #{p 15691}#)
             (if (null? #{e 15690}#) #{r 15693}# #f)
             (if (pair? #{p 15691}#)
               (if (pair? #{e 15690}#)
                 (#{match 15661}#
                   (car #{e 15690}#)
                   (car #{p 15691}#)
                   #{w 15692}#
                   (#{match 15661}#
                     (cdr #{e 15690}#)
                     (cdr #{p 15691}#)
                     #{w 15692}#
                     #{r 15693}#
                     #{mod 15694}#)
                   #{mod 15694}#)
                 #f)
               (if (eq? #{p 15691}# 'each-any)
                 (let ((#{l 15699}#
                         (#{match-each-any 15657}#
                           #{e 15690}#
                           #{w 15692}#
                           #{mod 15694}#)))
                   (if #{l 15699}#
                     (cons #{l 15699}# #{r 15693}#)
                     #f))
                 (let ((#{atom-key 15704}# (vector-ref #{p 15691}# 0)))
                   (if (eqv? #{atom-key 15704}# 'each)
                     (if (null? #{e 15690}#)
                       (#{match-empty 15658}#
                         (vector-ref #{p 15691}# 1)
                         #{r 15693}#)
                       (let ((#{l 15711}#
                               (#{match-each 15655}#
                                 #{e 15690}#
                                 (vector-ref #{p 15691}# 1)
                                 #{w 15692}#
                                 #{mod 15694}#)))
                         (if #{l 15711}#
                           (letrec*
                             ((#{collect 15714}#
                                (lambda (#{l 15767}#)
                                  (if (null? (car #{l 15767}#))
                                    #{r 15693}#
                                    (cons (map car #{l 15767}#)
                                          (#{collect 15714}#
                                            (map cdr #{l 15767}#)))))))
                             (#{collect 15714}# #{l 15711}#))
                           #f)))
                     (if (eqv? #{atom-key 15704}# 'each+)
                       (call-with-values
                         (lambda ()
                           (let ((#{x-pat 15776}# (vector-ref #{p 15691}# 1))
                                 (#{y-pat 15777}# (vector-ref #{p 15691}# 2))
                                 (#{z-pat 15778}# (vector-ref #{p 15691}# 3)))
                             (letrec*
                               ((#{f 15782}#
                                  (lambda (#{e 15784}# #{w 15785}#)
                                    (if (pair? #{e 15784}#)
                                      (call-with-values
                                        (lambda ()
                                          (#{f 15782}#
                                            (cdr #{e 15784}#)
                                            #{w 15785}#))
                                        (lambda (#{xr* 15786}#
                                                 #{y-pat 15787}#
                                                 #{r 15788}#)
                                          (if #{r 15788}#
                                            (if (null? #{y-pat 15787}#)
                                              (let ((#{xr 15789}#
                                                      (#{match 15661}#
                                                        (car #{e 15784}#)
                                                        #{x-pat 15776}#
                                                        #{w 15785}#
                                                        '()
                                                        #{mod 15694}#)))
                                                (if #{xr 15789}#
                                                  (values
                                                    (cons #{xr 15789}#
                                                          #{xr* 15786}#)
                                                    #{y-pat 15787}#
                                                    #{r 15788}#)
                                                  (values #f #f #f)))
                                              (values
                                                '()
                                                (cdr #{y-pat 15787}#)
                                                (#{match 15661}#
                                                  (car #{e 15784}#)
                                                  (car #{y-pat 15787}#)
                                                  #{w 15785}#
                                                  #{r 15788}#
                                                  #{mod 15694}#)))
                                            (values #f #f #f))))
                                      (if (if (vector? #{e 15784}#)
                                            (if (= (vector-length #{e 15784}#)
                                                   4)
                                              (eq? (vector-ref #{e 15784}# 0)
                                                   'syntax-object)
                                              #f)
                                            #f)
                                        (#{f 15782}#
                                          (vector-ref #{e 15784}# 1)
                                          (#{join-wraps 4329}#
                                            #{w 15785}#
                                            #{e 15784}#))
                                        (values
                                          '()
                                          #{y-pat 15777}#
                                          (#{match 15661}#
                                            #{e 15784}#
                                            #{z-pat 15778}#
                                            #{w 15785}#
                                            #{r 15693}#
                                            #{mod 15694}#)))))))
                               (#{f 15782}# #{e 15690}# #{w 15692}#))))
                         (lambda (#{xr* 15817}# #{y-pat 15818}# #{r 15819}#)
                           (if #{r 15819}#
                             (if (null? #{y-pat 15818}#)
                               (if (null? #{xr* 15817}#)
                                 (#{match-empty 15658}#
                                   (vector-ref #{p 15691}# 1)
                                   #{r 15819}#)
                                 (#{combine 15659}# #{xr* 15817}# #{r 15819}#))
                               #f)
                             #f)))
                       (if (eqv? #{atom-key 15704}# 'free-id)
                         (if (if (symbol? #{e 15690}#)
                               #t
                               (if (if (vector? #{e 15690}#)
                                     (if (= (vector-length #{e 15690}#) 4)
                                       (eq? (vector-ref #{e 15690}# 0)
                                            'syntax-object)
                                       #f)
                                     #f)
                                 (symbol? (vector-ref #{e 15690}# 1))
                                 #f))
                           (if (let ((#{i 16182}#
                                       (#{wrap 4338}#
                                         #{e 15690}#
                                         #{w 15692}#
                                         #{mod 15694}#))
                                     (#{j 16183}# (vector-ref #{p 15691}# 1)))
                                 (if (eq? (if (if (vector? #{i 16182}#)
                                                (if (= (vector-length
                                                         #{i 16182}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{i 16182}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (vector-ref #{i 16182}# 1)
                                            #{i 16182}#)
                                          (if (if (vector? #{j 16183}#)
                                                (if (= (vector-length
                                                         #{j 16183}#)
                                                       4)
                                                  (eq? (vector-ref
                                                         #{j 16183}#
                                                         0)
                                                       'syntax-object)
                                                  #f)
                                                #f)
                                            (vector-ref #{j 16183}# 1)
                                            #{j 16183}#))
                                   (eq? (#{id-var-name 4332}#
                                          #{i 16182}#
                                          '(()))
                                        (#{id-var-name 4332}#
                                          #{j 16183}#
                                          '(())))
                                   #f))
                             #{r 15693}#
                             #f)
                           #f)
                         (if (eqv? #{atom-key 15704}# 'atom)
                           (if (equal?
                                 (vector-ref #{p 15691}# 1)
                                 (#{strip 4358}# #{e 15690}# #{w 15692}#))
                             #{r 15693}#
                             #f)
                           (if (eqv? #{atom-key 15704}# 'vector)
                             (if (vector? #{e 15690}#)
                               (#{match 15661}#
                                 (vector->list #{e 15690}#)
                                 (vector-ref #{p 15691}# 1)
                                 #{w 15692}#
                                 #{r 15693}#
                                 #{mod 15694}#)
                               #f))))))))))))
       (#{match 15661}#
         (lambda (#{e 16243}#
                  #{p 16244}#
                  #{w 16245}#
                  #{r 16246}#
                  #{mod 16247}#)
           (if (not #{r 16246}#)
             #f
             (if (eq? #{p 16244}# '_)
               #{r 16246}#
               (if (eq? #{p 16244}# 'any)
                 (cons (#{wrap 4338}#
                         #{e 16243}#
                         #{w 16245}#
                         #{mod 16247}#)
                       #{r 16246}#)
                 (if (if (vector? #{e 16243}#)
                       (if (= (vector-length #{e 16243}#) 4)
                         (eq? (vector-ref #{e 16243}# 0) 'syntax-object)
                         #f)
                       #f)
                   (#{match* 15660}#
                     (vector-ref #{e 16243}# 1)
                     #{p 16244}#
                     (#{join-wraps 4329}#
                       #{w 16245}#
                       (vector-ref #{e 16243}# 2))
                     #{r 16246}#
                     (vector-ref #{e 16243}# 3))
                   (#{match* 15660}#
                     #{e 16243}#
                     #{p 16244}#
                     #{w 16245}#
                     #{r 16246}#
                     #{mod 16247}#))))))))
      (set! $sc-dispatch
        (lambda (#{e 15662}# #{p 15663}#)
          (if (eq? #{p 15663}# 'any)
            (list #{e 15662}#)
            (if (eq? #{p 15663}# '_)
              '()
              (if (if (vector? #{e 15662}#)
                    (if (= (vector-length #{e 15662}#) 4)
                      (eq? (vector-ref #{e 15662}# 0) 'syntax-object)
                      #f)
                    #f)
                (#{match* 15660}#
                  (vector-ref #{e 15662}# 1)
                  #{p 15663}#
                  (vector-ref #{e 15662}# 2)
                  '()
                  (vector-ref #{e 15662}# 3))
                (#{match* 15660}#
                  #{e 15662}#
                  #{p 15663}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (lambda (#{x 28547}#)
      (let ((#{tmp 28549}#
              ($sc-dispatch #{x 28547}# '(_ () any . each-any))))
        (if #{tmp 28549}#
          (@apply
            (lambda (#{e1 28553}# #{e2 28554}#)
              (cons '#(syntax-object
                       let
                       ((top)
                        #(ribcage
                          #(e1 e2)
                          #((top) (top))
                          #("i28520" "i28521"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i28517")))
                       (hygiene guile))
                    (cons '() (cons #{e1 28553}# #{e2 28554}#))))
            #{tmp 28549}#)
          (let ((#{tmp 28555}#
                  ($sc-dispatch
                    #{x 28547}#
                    '(_ ((any any)) any . each-any))))
            (if #{tmp 28555}#
              (@apply
                (lambda (#{out 28559}#
                         #{in 28560}#
                         #{e1 28561}#
                         #{e2 28562}#)
                  (list '#(syntax-object
                           syntax-case
                           ((top)
                            #(ribcage
                              #(out in e1 e2)
                              #((top) (top) (top) (top))
                              #("i28526" "i28527" "i28528" "i28529"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i28517")))
                           (hygiene guile))
                        #{in 28560}#
                        '()
                        (list #{out 28559}#
                              (cons '#(syntax-object
                                       let
                                       ((top)
                                        #(ribcage
                                          #(out in e1 e2)
                                          #((top) (top) (top) (top))
                                          #("i28526"
                                            "i28527"
                                            "i28528"
                                            "i28529"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i28517")))
                                       (hygiene guile))
                                    (cons '()
                                          (cons #{e1 28561}# #{e2 28562}#))))))
                #{tmp 28555}#)
              (let ((#{tmp 28563}#
                      ($sc-dispatch
                        #{x 28547}#
                        '(_ #(each (any any)) any . each-any))))
                (if #{tmp 28563}#
                  (@apply
                    (lambda (#{out 28567}#
                             #{in 28568}#
                             #{e1 28569}#
                             #{e2 28570}#)
                      (list '#(syntax-object
                               syntax-case
                               ((top)
                                #(ribcage
                                  #(out in e1 e2)
                                  #((top) (top) (top) (top))
                                  #("i28536" "i28537" "i28538" "i28539"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i28517")))
                               (hygiene guile))
                            (cons '#(syntax-object
                                     list
                                     ((top)
                                      #(ribcage
                                        #(out in e1 e2)
                                        #((top) (top) (top) (top))
                                        #("i28536" "i28537" "i28538" "i28539"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i28517")))
                                     (hygiene guile))
                                  #{in 28568}#)
                            '()
                            (list #{out 28567}#
                                  (cons '#(syntax-object
                                           let
                                           ((top)
                                            #(ribcage
                                              #(out in e1 e2)
                                              #((top) (top) (top) (top))
                                              #("i28536"
                                                "i28537"
                                                "i28538"
                                                "i28539"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i28517")))
                                           (hygiene guile))
                                        (cons '()
                                              (cons #{e1 28569}#
                                                    #{e2 28570}#))))))
                    #{tmp 28563}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{x 28547}#))))))))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (lambda (#{x 28624}#)
      (let ((#{tmp 28626}#
              ($sc-dispatch
                #{x 28624}#
                '(_ each-any . #(each ((any . any) any))))))
        (if #{tmp 28626}#
          (@apply
            (lambda (#{k 28630}#
                     #{keyword 28631}#
                     #{pattern 28632}#
                     #{template 28633}#)
              (list '#(syntax-object
                       lambda
                       ((top)
                        #(ribcage
                          #(k keyword pattern template)
                          #((top) (top) (top) (top))
                          #("i28587" "i28588" "i28589" "i28590"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i28584")))
                       (hygiene guile))
                    '(#(syntax-object
                        x
                        ((top)
                         #(ribcage
                           #(k keyword pattern template)
                           #((top) (top) (top) (top))
                           #("i28587" "i28588" "i28589" "i28590"))
                         #(ribcage () () ())
                         #(ribcage #(x) #((top)) #("i28584")))
                        (hygiene guile)))
                    (vector
                      '(#(syntax-object
                          macro-type
                          ((top)
                           #(ribcage
                             #(k keyword pattern template)
                             #((top) (top) (top) (top))
                             #("i28587" "i28588" "i28589" "i28590"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i28584")))
                          (hygiene guile))
                        .
                        #(syntax-object
                          syntax-rules
                          ((top)
                           #(ribcage
                             #(k keyword pattern template)
                             #((top) (top) (top) (top))
                             #("i28587" "i28588" "i28589" "i28590"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i28584")))
                          (hygiene guile)))
                      (cons '#(syntax-object
                               patterns
                               ((top)
                                #(ribcage
                                  #(k keyword pattern template)
                                  #((top) (top) (top) (top))
                                  #("i28587" "i28588" "i28589" "i28590"))
                                #(ribcage () () ())
                                #(ribcage #(x) #((top)) #("i28584")))
                               (hygiene guile))
                            #{pattern 28632}#))
                    (cons '#(syntax-object
                             syntax-case
                             ((top)
                              #(ribcage
                                #(k keyword pattern template)
                                #((top) (top) (top) (top))
                                #("i28587" "i28588" "i28589" "i28590"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i28584")))
                             (hygiene guile))
                          (cons '#(syntax-object
                                   x
                                   ((top)
                                    #(ribcage
                                      #(k keyword pattern template)
                                      #((top) (top) (top) (top))
                                      #("i28587" "i28588" "i28589" "i28590"))
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i28584")))
                                   (hygiene guile))
                                (cons #{k 28630}#
                                      (map (lambda (#{tmp 28598 28634}#
                                                    #{tmp 28597 28635}#)
                                             (list (cons '#(syntax-object
                                                            dummy
                                                            ((top)
                                                             #(ribcage
                                                               #(k
                                                                 keyword
                                                                 pattern
                                                                 template)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i28587"
                                                                 "i28588"
                                                                 "i28589"
                                                                 "i28590"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i28584")))
                                                            (hygiene guile))
                                                         #{tmp 28597 28635}#)
                                                   (list '#(syntax-object
                                                            syntax
                                                            ((top)
                                                             #(ribcage
                                                               #(k
                                                                 keyword
                                                                 pattern
                                                                 template)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i28587"
                                                                 "i28588"
                                                                 "i28589"
                                                                 "i28590"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i28584")))
                                                            (hygiene guile))
                                                         #{tmp 28598 28634}#)))
                                           #{template 28633}#
                                           #{pattern 28632}#))))))
            #{tmp 28626}#)
          (let ((#{tmp 28636}#
                  ($sc-dispatch
                    #{x 28624}#
                    '(_ each-any any . #(each ((any . any) any))))))
            (if (if #{tmp 28636}#
                  (@apply
                    (lambda (#{k 28640}#
                             #{docstring 28641}#
                             #{keyword 28642}#
                             #{pattern 28643}#
                             #{template 28644}#)
                      (string? (syntax->datum #{docstring 28641}#)))
                    #{tmp 28636}#)
                  #f)
              (@apply
                (lambda (#{k 28645}#
                         #{docstring 28646}#
                         #{keyword 28647}#
                         #{pattern 28648}#
                         #{template 28649}#)
                  (list '#(syntax-object
                           lambda
                           ((top)
                            #(ribcage
                              #(k docstring keyword pattern template)
                              #((top) (top) (top) (top) (top))
                              #("i28610" "i28611" "i28612" "i28613" "i28614"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i28584")))
                           (hygiene guile))
                        '(#(syntax-object
                            x
                            ((top)
                             #(ribcage
                               #(k docstring keyword pattern template)
                               #((top) (top) (top) (top) (top))
                               #("i28610" "i28611" "i28612" "i28613" "i28614"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i28584")))
                            (hygiene guile)))
                        #{docstring 28646}#
                        (vector
                          '(#(syntax-object
                              macro-type
                              ((top)
                               #(ribcage
                                 #(k docstring keyword pattern template)
                                 #((top) (top) (top) (top) (top))
                                 #("i28610"
                                   "i28611"
                                   "i28612"
                                   "i28613"
                                   "i28614"))
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i28584")))
                              (hygiene guile))
                            .
                            #(syntax-object
                              syntax-rules
                              ((top)
                               #(ribcage
                                 #(k docstring keyword pattern template)
                                 #((top) (top) (top) (top) (top))
                                 #("i28610"
                                   "i28611"
                                   "i28612"
                                   "i28613"
                                   "i28614"))
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i28584")))
                              (hygiene guile)))
                          (cons '#(syntax-object
                                   patterns
                                   ((top)
                                    #(ribcage
                                      #(k docstring keyword pattern template)
                                      #((top) (top) (top) (top) (top))
                                      #("i28610"
                                        "i28611"
                                        "i28612"
                                        "i28613"
                                        "i28614"))
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i28584")))
                                   (hygiene guile))
                                #{pattern 28648}#))
                        (cons '#(syntax-object
                                 syntax-case
                                 ((top)
                                  #(ribcage
                                    #(k docstring keyword pattern template)
                                    #((top) (top) (top) (top) (top))
                                    #("i28610"
                                      "i28611"
                                      "i28612"
                                      "i28613"
                                      "i28614"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i28584")))
                                 (hygiene guile))
                              (cons '#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(k
                                            docstring
                                            keyword
                                            pattern
                                            template)
                                          #((top) (top) (top) (top) (top))
                                          #("i28610"
                                            "i28611"
                                            "i28612"
                                            "i28613"
                                            "i28614"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i28584")))
                                       (hygiene guile))
                                    (cons #{k 28645}#
                                          (map (lambda (#{tmp 28623 28650}#
                                                        #{tmp 28622 28651}#)
                                                 (list (cons '#(syntax-object
                                                                dummy
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k
                                                                     docstring
                                                                     keyword
                                                                     pattern
                                                                     template)
                                                                   #((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                   #("i28610"
                                                                     "i28611"
                                                                     "i28612"
                                                                     "i28613"
                                                                     "i28614"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i28584")))
                                                                (hygiene
                                                                  guile))
                                                             #{tmp 28622 28651}#)
                                                       (list '#(syntax-object
                                                                syntax
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k
                                                                     docstring
                                                                     keyword
                                                                     pattern
                                                                     template)
                                                                   #((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                   #("i28610"
                                                                     "i28611"
                                                                     "i28612"
                                                                     "i28613"
                                                                     "i28614"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i28584")))
                                                                (hygiene
                                                                  guile))
                                                             #{tmp 28623 28650}#)))
                                               #{template 28649}#
                                               #{pattern 28648}#))))))
                #{tmp 28636}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 28624}#))))))))

(define define-syntax-rule
  (make-syntax-transformer
    'define-syntax-rule
    'macro
    (lambda (#{x 28688}#)
      (let ((#{tmp 28690}#
              ($sc-dispatch #{x 28688}# '(_ (any . any) any))))
        (if #{tmp 28690}#
          (@apply
            (lambda (#{name 28694}#
                     #{pattern 28695}#
                     #{template 28696}#)
              (list '#(syntax-object
                       define-syntax
                       ((top)
                        #(ribcage
                          #(name pattern template)
                          #((top) (top) (top))
                          #("i28665" "i28666" "i28667"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i28662")))
                       (hygiene guile))
                    #{name 28694}#
                    (list '#(syntax-object
                             syntax-rules
                             ((top)
                              #(ribcage
                                #(name pattern template)
                                #((top) (top) (top))
                                #("i28665" "i28666" "i28667"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i28662")))
                             (hygiene guile))
                          '()
                          (list (cons '#(syntax-object
                                         _
                                         ((top)
                                          #(ribcage
                                            #(name pattern template)
                                            #((top) (top) (top))
                                            #("i28665" "i28666" "i28667"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i28662")))
                                         (hygiene guile))
                                      #{pattern 28695}#)
                                #{template 28696}#))))
            #{tmp 28690}#)
          (let ((#{tmp 28697}#
                  ($sc-dispatch
                    #{x 28688}#
                    '(_ (any . any) any any))))
            (if (if #{tmp 28697}#
                  (@apply
                    (lambda (#{name 28701}#
                             #{pattern 28702}#
                             #{docstring 28703}#
                             #{template 28704}#)
                      (string? (syntax->datum #{docstring 28703}#)))
                    #{tmp 28697}#)
                  #f)
              (@apply
                (lambda (#{name 28705}#
                         #{pattern 28706}#
                         #{docstring 28707}#
                         #{template 28708}#)
                  (list '#(syntax-object
                           define-syntax
                           ((top)
                            #(ribcage
                              #(name pattern docstring template)
                              #((top) (top) (top) (top))
                              #("i28680" "i28681" "i28682" "i28683"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i28662")))
                           (hygiene guile))
                        #{name 28705}#
                        (list '#(syntax-object
                                 syntax-rules
                                 ((top)
                                  #(ribcage
                                    #(name pattern docstring template)
                                    #((top) (top) (top) (top))
                                    #("i28680" "i28681" "i28682" "i28683"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i28662")))
                                 (hygiene guile))
                              '()
                              #{docstring 28707}#
                              (list (cons '#(syntax-object
                                             _
                                             ((top)
                                              #(ribcage
                                                #(name
                                                  pattern
                                                  docstring
                                                  template)
                                                #((top) (top) (top) (top))
                                                #("i28680"
                                                  "i28681"
                                                  "i28682"
                                                  "i28683"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(x)
                                                #((top))
                                                #("i28662")))
                                             (hygiene guile))
                                          #{pattern 28706}#)
                                    #{template 28708}#))))
                #{tmp 28697}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 28688}#))))))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (lambda (#{x 28757}#)
      (let ((#{tmp 28759}#
              ($sc-dispatch
                #{x 28757}#
                '(any #(each (any any)) any . each-any))))
        (if (if #{tmp 28759}#
              (@apply
                (lambda (#{let* 28763}#
                         #{x 28764}#
                         #{v 28765}#
                         #{e1 28766}#
                         #{e2 28767}#)
                  (and-map identifier? #{x 28764}#))
                #{tmp 28759}#)
              #f)
          (@apply
            (lambda (#{let* 28768}#
                     #{x 28769}#
                     #{v 28770}#
                     #{e1 28771}#
                     #{e2 28772}#)
              (letrec*
                ((#{f 28773}#
                   (lambda (#{bindings 28776}#)
                     (if (null? #{bindings 28776}#)
                       (cons '#(syntax-object
                                let
                                ((top)
                                 #(ribcage () () ())
                                 #(ribcage
                                   #(f bindings)
                                   #((top) (top))
                                   #("i28743" "i28744"))
                                 #(ribcage
                                   #(let* x v e1 e2)
                                   #((top) (top) (top) (top) (top))
                                   #("i28733"
                                     "i28734"
                                     "i28735"
                                     "i28736"
                                     "i28737"))
                                 #(ribcage () () ())
                                 #(ribcage #(x) #((top)) #("i28719")))
                                (hygiene guile))
                             (cons '() (cons #{e1 28771}# #{e2 28772}#)))
                       (let ((#{tmp 28777}#
                               (list (#{f 28773}# (cdr #{bindings 28776}#))
                                     (car #{bindings 28776}#))))
                         (let ((#{tmp 28778}#
                                 ($sc-dispatch #{tmp 28777}# '(any any))))
                           (if #{tmp 28778}#
                             (@apply
                               (lambda (#{body 28780}# #{binding 28781}#)
                                 (list '#(syntax-object
                                          let
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(body binding)
                                             #((top) (top))
                                             #("i28753" "i28754"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(f bindings)
                                             #((top) (top))
                                             #("i28743" "i28744"))
                                           #(ribcage
                                             #(let* x v e1 e2)
                                             #((top) (top) (top) (top) (top))
                                             #("i28733"
                                               "i28734"
                                               "i28735"
                                               "i28736"
                                               "i28737"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x)
                                             #((top))
                                             #("i28719")))
                                          (hygiene guile))
                                       (list #{binding 28781}#)
                                       #{body 28780}#))
                               #{tmp 28778}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{tmp 28777}#))))))))
                (#{f 28773}# (map list #{x 28769}# #{v 28770}#))))
            #{tmp 28759}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 28757}#))))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (lambda (#{orig-x 28839}#)
      (let ((#{tmp 28841}#
              ($sc-dispatch
                #{orig-x 28839}#
                '(_ #(each (any any . any))
                    (any . each-any)
                    .
                    each-any))))
        (if #{tmp 28841}#
          (@apply
            (lambda (#{var 28845}#
                     #{init 28846}#
                     #{step 28847}#
                     #{e0 28848}#
                     #{e1 28849}#
                     #{c 28850}#)
              (let ((#{tmp 28851}#
                      (map (lambda (#{v 28854}# #{s 28855}#)
                             (let ((#{tmp 28857}#
                                     ($sc-dispatch #{s 28855}# '())))
                               (if #{tmp 28857}#
                                 (@apply (lambda () #{v 28854}#) #{tmp 28857}#)
                                 (let ((#{tmp 28860}#
                                         ($sc-dispatch #{s 28855}# '(any))))
                                   (if #{tmp 28860}#
                                     (@apply
                                       (lambda (#{e 28863}#) #{e 28863}#)
                                       #{tmp 28860}#)
                                     (syntax-violation
                                       'do
                                       "bad step expression"
                                       #{orig-x 28839}#
                                       #{s 28855}#))))))
                           #{var 28845}#
                           #{step 28847}#)))
                (let ((#{tmp 28852}#
                        ($sc-dispatch #{tmp 28851}# 'each-any)))
                  (if #{tmp 28852}#
                    (@apply
                      (lambda (#{step 28869}#)
                        (let ((#{tmp 28871}# ($sc-dispatch #{e1 28849}# '())))
                          (if #{tmp 28871}#
                            (@apply
                              (lambda ()
                                (list '#(syntax-object
                                         let
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(step)
                                            #((top))
                                            #("i28807"))
                                          #(ribcage
                                            #(var init step e0 e1 c)
                                            #((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                            #("i28792"
                                              "i28793"
                                              "i28794"
                                              "i28795"
                                              "i28796"
                                              "i28797"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(orig-x)
                                            #((top))
                                            #("i28789")))
                                         (hygiene guile))
                                      '#(syntax-object
                                         doloop
                                         ((top)
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(step)
                                            #((top))
                                            #("i28807"))
                                          #(ribcage
                                            #(var init step e0 e1 c)
                                            #((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                            #("i28792"
                                              "i28793"
                                              "i28794"
                                              "i28795"
                                              "i28796"
                                              "i28797"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(orig-x)
                                            #((top))
                                            #("i28789")))
                                         (hygiene guile))
                                      (map list #{var 28845}# #{init 28846}#)
                                      (list '#(syntax-object
                                               if
                                               ((top)
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(step)
                                                  #((top))
                                                  #("i28807"))
                                                #(ribcage
                                                  #(var init step e0 e1 c)
                                                  #((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                  #("i28792"
                                                    "i28793"
                                                    "i28794"
                                                    "i28795"
                                                    "i28796"
                                                    "i28797"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(orig-x)
                                                  #((top))
                                                  #("i28789")))
                                               (hygiene guile))
                                            (list '#(syntax-object
                                                     not
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(step)
                                                        #((top))
                                                        #("i28807"))
                                                      #(ribcage
                                                        #(var
                                                          init
                                                          step
                                                          e0
                                                          e1
                                                          c)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i28792"
                                                          "i28793"
                                                          "i28794"
                                                          "i28795"
                                                          "i28796"
                                                          "i28797"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(orig-x)
                                                        #((top))
                                                        #("i28789")))
                                                     (hygiene guile))
                                                  #{e0 28848}#)
                                            (cons '#(syntax-object
                                                     begin
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(step)
                                                        #((top))
                                                        #("i28807"))
                                                      #(ribcage
                                                        #(var
                                                          init
                                                          step
                                                          e0
                                                          e1
                                                          c)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i28792"
                                                          "i28793"
                                                          "i28794"
                                                          "i28795"
                                                          "i28796"
                                                          "i28797"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(orig-x)
                                                        #((top))
                                                        #("i28789")))
                                                     (hygiene guile))
                                                  (append
                                                    #{c 28850}#
                                                    (list (cons '#(syntax-object
                                                                   doloop
                                                                   ((top)
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(step)
                                                                      #((top))
                                                                      #("i28807"))
                                                                    #(ribcage
                                                                      #(var
                                                                        init
                                                                        step
                                                                        e0
                                                                        e1
                                                                        c)
                                                                      #((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                      #("i28792"
                                                                        "i28793"
                                                                        "i28794"
                                                                        "i28795"
                                                                        "i28796"
                                                                        "i28797"))
                                                                    #(ribcage
                                                                      ()
                                                                      ()
                                                                      ())
                                                                    #(ribcage
                                                                      #(orig-x)
                                                                      #((top))
                                                                      #("i28789")))
                                                                   (hygiene
                                                                     guile))
                                                                #{step 28869}#)))))))
                              #{tmp 28871}#)
                            (let ((#{tmp 28875}#
                                    ($sc-dispatch
                                      #{e1 28849}#
                                      '(any . each-any))))
                              (if #{tmp 28875}#
                                (@apply
                                  (lambda (#{e1 28879}# #{e2 28880}#)
                                    (list '#(syntax-object
                                             let
                                             ((top)
                                              #(ribcage
                                                #(e1 e2)
                                                #((top) (top))
                                                #("i28816" "i28817"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(step)
                                                #((top))
                                                #("i28807"))
                                              #(ribcage
                                                #(var init step e0 e1 c)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i28792"
                                                  "i28793"
                                                  "i28794"
                                                  "i28795"
                                                  "i28796"
                                                  "i28797"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(orig-x)
                                                #((top))
                                                #("i28789")))
                                             (hygiene guile))
                                          '#(syntax-object
                                             doloop
                                             ((top)
                                              #(ribcage
                                                #(e1 e2)
                                                #((top) (top))
                                                #("i28816" "i28817"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(step)
                                                #((top))
                                                #("i28807"))
                                              #(ribcage
                                                #(var init step e0 e1 c)
                                                #((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                #("i28792"
                                                  "i28793"
                                                  "i28794"
                                                  "i28795"
                                                  "i28796"
                                                  "i28797"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(orig-x)
                                                #((top))
                                                #("i28789")))
                                             (hygiene guile))
                                          (map list
                                               #{var 28845}#
                                               #{init 28846}#)
                                          (list '#(syntax-object
                                                   if
                                                   ((top)
                                                    #(ribcage
                                                      #(e1 e2)
                                                      #((top) (top))
                                                      #("i28816" "i28817"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(step)
                                                      #((top))
                                                      #("i28807"))
                                                    #(ribcage
                                                      #(var init step e0 e1 c)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i28792"
                                                        "i28793"
                                                        "i28794"
                                                        "i28795"
                                                        "i28796"
                                                        "i28797"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(orig-x)
                                                      #((top))
                                                      #("i28789")))
                                                   (hygiene guile))
                                                #{e0 28848}#
                                                (cons '#(syntax-object
                                                         begin
                                                         ((top)
                                                          #(ribcage
                                                            #(e1 e2)
                                                            #((top) (top))
                                                            #("i28816"
                                                              "i28817"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(step)
                                                            #((top))
                                                            #("i28807"))
                                                          #(ribcage
                                                            #(var
                                                              init
                                                              step
                                                              e0
                                                              e1
                                                              c)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i28792"
                                                              "i28793"
                                                              "i28794"
                                                              "i28795"
                                                              "i28796"
                                                              "i28797"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(orig-x)
                                                            #((top))
                                                            #("i28789")))
                                                         (hygiene guile))
                                                      (cons #{e1 28879}#
                                                            #{e2 28880}#))
                                                (cons '#(syntax-object
                                                         begin
                                                         ((top)
                                                          #(ribcage
                                                            #(e1 e2)
                                                            #((top) (top))
                                                            #("i28816"
                                                              "i28817"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(step)
                                                            #((top))
                                                            #("i28807"))
                                                          #(ribcage
                                                            #(var
                                                              init
                                                              step
                                                              e0
                                                              e1
                                                              c)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i28792"
                                                              "i28793"
                                                              "i28794"
                                                              "i28795"
                                                              "i28796"
                                                              "i28797"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(orig-x)
                                                            #((top))
                                                            #("i28789")))
                                                         (hygiene guile))
                                                      (append
                                                        #{c 28850}#
                                                        (list (cons '#(syntax-object
                                                                       doloop
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i28816"
                                                                            "i28817"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(step)
                                                                          #((top))
                                                                          #("i28807"))
                                                                        #(ribcage
                                                                          #(var
                                                                            init
                                                                            step
                                                                            e0
                                                                            e1
                                                                            c)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i28792"
                                                                            "i28793"
                                                                            "i28794"
                                                                            "i28795"
                                                                            "i28796"
                                                                            "i28797"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(orig-x)
                                                                          #((top))
                                                                          #("i28789")))
                                                                       (hygiene
                                                                         guile))
                                                                    #{step 28869}#)))))))
                                  #{tmp 28875}#)
                                (syntax-violation
                                  #f
                                  "source expression failed to match any pattern"
                                  #{e1 28849}#))))))
                      #{tmp 28852}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp 28851}#)))))
            #{tmp 28841}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{orig-x 28839}#))))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (letrec*
      ((#{quasi 29166}#
         (lambda (#{p 29190}# #{lev 29191}#)
           (let ((#{tmp 29193}#
                   ($sc-dispatch
                     #{p 29190}#
                     '(#(free-id
                         #(syntax-object
                           unquote
                           ((top)
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i28912" "i28913"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i28908"
                               "i28906"
                               "i28904"
                               "i28902"
                               "i28900"
                               "i28898"
                               "i28896")))
                           (hygiene guile)))
                       any))))
             (if #{tmp 29193}#
               (@apply
                 (lambda (#{p 29197}#)
                   (if (= #{lev 29191}# 0)
                     (list '#(syntax-object
                              "value"
                              ((top)
                               #(ribcage #(p) #((top)) #("i28916"))
                               #(ribcage () () ())
                               #(ribcage
                                 #(p lev)
                                 #((top) (top))
                                 #("i28912" "i28913"))
                               #(ribcage
                                 (emit quasivector
                                       quasilist*
                                       quasiappend
                                       quasicons
                                       vquasi
                                       quasi)
                                 ((top) (top) (top) (top) (top) (top) (top))
                                 ("i28908"
                                  "i28906"
                                  "i28904"
                                  "i28902"
                                  "i28900"
                                  "i28898"
                                  "i28896")))
                              (hygiene guile))
                           #{p 29197}#)
                     (#{quasicons 29168}#
                       '(#(syntax-object
                           "quote"
                           ((top)
                            #(ribcage #(p) #((top)) #("i28916"))
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i28912" "i28913"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i28908"
                               "i28906"
                               "i28904"
                               "i28902"
                               "i28900"
                               "i28898"
                               "i28896")))
                           (hygiene guile))
                         #(syntax-object
                           unquote
                           ((top)
                            #(ribcage #(p) #((top)) #("i28916"))
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i28912" "i28913"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i28908"
                               "i28906"
                               "i28904"
                               "i28902"
                               "i28900"
                               "i28898"
                               "i28896")))
                           (hygiene guile)))
                       (#{quasi 29166}#
                         (list #{p 29197}#)
                         (#{1-}# #{lev 29191}#)))))
                 #{tmp 29193}#)
               (let ((#{tmp 29200}#
                       ($sc-dispatch
                         #{p 29190}#
                         '(#(free-id
                             #(syntax-object
                               quasiquote
                               ((top)
                                #(ribcage () () ())
                                #(ribcage
                                  #(p lev)
                                  #((top) (top))
                                  #("i28912" "i28913"))
                                #(ribcage
                                  (emit quasivector
                                        quasilist*
                                        quasiappend
                                        quasicons
                                        vquasi
                                        quasi)
                                  ((top) (top) (top) (top) (top) (top) (top))
                                  ("i28908"
                                   "i28906"
                                   "i28904"
                                   "i28902"
                                   "i28900"
                                   "i28898"
                                   "i28896")))
                               (hygiene guile)))
                           any))))
                 (if #{tmp 29200}#
                   (@apply
                     (lambda (#{p 29204}#)
                       (#{quasicons 29168}#
                         '(#(syntax-object
                             "quote"
                             ((top)
                              #(ribcage #(p) #((top)) #("i28919"))
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i28912" "i28913"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i28908"
                                 "i28906"
                                 "i28904"
                                 "i28902"
                                 "i28900"
                                 "i28898"
                                 "i28896")))
                             (hygiene guile))
                           #(syntax-object
                             quasiquote
                             ((top)
                              #(ribcage #(p) #((top)) #("i28919"))
                              #(ribcage () () ())
                              #(ribcage
                                #(p lev)
                                #((top) (top))
                                #("i28912" "i28913"))
                              #(ribcage
                                (emit quasivector
                                      quasilist*
                                      quasiappend
                                      quasicons
                                      vquasi
                                      quasi)
                                ((top) (top) (top) (top) (top) (top) (top))
                                ("i28908"
                                 "i28906"
                                 "i28904"
                                 "i28902"
                                 "i28900"
                                 "i28898"
                                 "i28896")))
                             (hygiene guile)))
                         (#{quasi 29166}#
                           (list #{p 29204}#)
                           (#{1+}# #{lev 29191}#))))
                     #{tmp 29200}#)
                   (let ((#{tmp 29207}#
                           ($sc-dispatch #{p 29190}# '(any . any))))
                     (if #{tmp 29207}#
                       (@apply
                         (lambda (#{p 29211}# #{q 29212}#)
                           (let ((#{tmp 29214}#
                                   ($sc-dispatch
                                     #{p 29211}#
                                     '(#(free-id
                                         #(syntax-object
                                           unquote
                                           ((top)
                                            #(ribcage
                                              #(p q)
                                              #((top) (top))
                                              #("i28922" "i28923"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(p lev)
                                              #((top) (top))
                                              #("i28912" "i28913"))
                                            #(ribcage
                                              (emit quasivector
                                                    quasilist*
                                                    quasiappend
                                                    quasicons
                                                    vquasi
                                                    quasi)
                                              ((top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top)
                                               (top))
                                              ("i28908"
                                               "i28906"
                                               "i28904"
                                               "i28902"
                                               "i28900"
                                               "i28898"
                                               "i28896")))
                                           (hygiene guile)))
                                       .
                                       each-any))))
                             (if #{tmp 29214}#
                               (@apply
                                 (lambda (#{p 29218}#)
                                   (if (= #{lev 29191}# 0)
                                     (#{quasilist* 29170}#
                                       (map (lambda (#{tmp 28930 29254}#)
                                              (list '#(syntax-object
                                                       "value"
                                                       ((top)
                                                        #(ribcage
                                                          #(p)
                                                          #((top))
                                                          #("i28928"))
                                                        #(ribcage
                                                          #(p q)
                                                          #((top) (top))
                                                          #("i28922" "i28923"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i28912" "i28913"))
                                                        #(ribcage
                                                          (emit quasivector
                                                                quasilist*
                                                                quasiappend
                                                                quasicons
                                                                vquasi
                                                                quasi)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i28908"
                                                           "i28906"
                                                           "i28904"
                                                           "i28902"
                                                           "i28900"
                                                           "i28898"
                                                           "i28896")))
                                                       (hygiene guile))
                                                    #{tmp 28930 29254}#))
                                            #{p 29218}#)
                                       (#{quasi 29166}#
                                         #{q 29212}#
                                         #{lev 29191}#))
                                     (#{quasicons 29168}#
                                       (#{quasicons 29168}#
                                         '(#(syntax-object
                                             "quote"
                                             ((top)
                                              #(ribcage
                                                #(p)
                                                #((top))
                                                #("i28928"))
                                              #(ribcage
                                                #(p q)
                                                #((top) (top))
                                                #("i28922" "i28923"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(p lev)
                                                #((top) (top))
                                                #("i28912" "i28913"))
                                              #(ribcage
                                                (emit quasivector
                                                      quasilist*
                                                      quasiappend
                                                      quasicons
                                                      vquasi
                                                      quasi)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i28908"
                                                 "i28906"
                                                 "i28904"
                                                 "i28902"
                                                 "i28900"
                                                 "i28898"
                                                 "i28896")))
                                             (hygiene guile))
                                           #(syntax-object
                                             unquote
                                             ((top)
                                              #(ribcage
                                                #(p)
                                                #((top))
                                                #("i28928"))
                                              #(ribcage
                                                #(p q)
                                                #((top) (top))
                                                #("i28922" "i28923"))
                                              #(ribcage () () ())
                                              #(ribcage
                                                #(p lev)
                                                #((top) (top))
                                                #("i28912" "i28913"))
                                              #(ribcage
                                                (emit quasivector
                                                      quasilist*
                                                      quasiappend
                                                      quasicons
                                                      vquasi
                                                      quasi)
                                                ((top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top)
                                                 (top))
                                                ("i28908"
                                                 "i28906"
                                                 "i28904"
                                                 "i28902"
                                                 "i28900"
                                                 "i28898"
                                                 "i28896")))
                                             (hygiene guile)))
                                         (#{quasi 29166}#
                                           #{p 29218}#
                                           (#{1-}# #{lev 29191}#)))
                                       (#{quasi 29166}#
                                         #{q 29212}#
                                         #{lev 29191}#))))
                                 #{tmp 29214}#)
                               (let ((#{tmp 29259}#
                                       ($sc-dispatch
                                         #{p 29211}#
                                         '(#(free-id
                                             #(syntax-object
                                               unquote-splicing
                                               ((top)
                                                #(ribcage
                                                  #(p q)
                                                  #((top) (top))
                                                  #("i28922" "i28923"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(p lev)
                                                  #((top) (top))
                                                  #("i28912" "i28913"))
                                                #(ribcage
                                                  (emit quasivector
                                                        quasilist*
                                                        quasiappend
                                                        quasicons
                                                        vquasi
                                                        quasi)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i28908"
                                                   "i28906"
                                                   "i28904"
                                                   "i28902"
                                                   "i28900"
                                                   "i28898"
                                                   "i28896")))
                                               (hygiene guile)))
                                           .
                                           each-any))))
                                 (if #{tmp 29259}#
                                   (@apply
                                     (lambda (#{p 29263}#)
                                       (if (= #{lev 29191}# 0)
                                         (#{quasiappend 29169}#
                                           (map (lambda (#{tmp 28935 29266}#)
                                                  (list '#(syntax-object
                                                           "value"
                                                           ((top)
                                                            #(ribcage
                                                              #(p)
                                                              #((top))
                                                              #("i28933"))
                                                            #(ribcage
                                                              #(p q)
                                                              #((top) (top))
                                                              #("i28922"
                                                                "i28923"))
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(p lev)
                                                              #((top) (top))
                                                              #("i28912"
                                                                "i28913"))
                                                            #(ribcage
                                                              (emit quasivector
                                                                    quasilist*
                                                                    quasiappend
                                                                    quasicons
                                                                    vquasi
                                                                    quasi)
                                                              ((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                              ("i28908"
                                                               "i28906"
                                                               "i28904"
                                                               "i28902"
                                                               "i28900"
                                                               "i28898"
                                                               "i28896")))
                                                           (hygiene guile))
                                                        #{tmp 28935 29266}#))
                                                #{p 29263}#)
                                           (#{quasi 29166}#
                                             #{q 29212}#
                                             #{lev 29191}#))
                                         (#{quasicons 29168}#
                                           (#{quasicons 29168}#
                                             '(#(syntax-object
                                                 "quote"
                                                 ((top)
                                                  #(ribcage
                                                    #(p)
                                                    #((top))
                                                    #("i28933"))
                                                  #(ribcage
                                                    #(p q)
                                                    #((top) (top))
                                                    #("i28922" "i28923"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(p lev)
                                                    #((top) (top))
                                                    #("i28912" "i28913"))
                                                  #(ribcage
                                                    (emit quasivector
                                                          quasilist*
                                                          quasiappend
                                                          quasicons
                                                          vquasi
                                                          quasi)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i28908"
                                                     "i28906"
                                                     "i28904"
                                                     "i28902"
                                                     "i28900"
                                                     "i28898"
                                                     "i28896")))
                                                 (hygiene guile))
                                               #(syntax-object
                                                 unquote-splicing
                                                 ((top)
                                                  #(ribcage
                                                    #(p)
                                                    #((top))
                                                    #("i28933"))
                                                  #(ribcage
                                                    #(p q)
                                                    #((top) (top))
                                                    #("i28922" "i28923"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(p lev)
                                                    #((top) (top))
                                                    #("i28912" "i28913"))
                                                  #(ribcage
                                                    (emit quasivector
                                                          quasilist*
                                                          quasiappend
                                                          quasicons
                                                          vquasi
                                                          quasi)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i28908"
                                                     "i28906"
                                                     "i28904"
                                                     "i28902"
                                                     "i28900"
                                                     "i28898"
                                                     "i28896")))
                                                 (hygiene guile)))
                                             (#{quasi 29166}#
                                               #{p 29263}#
                                               (#{1-}# #{lev 29191}#)))
                                           (#{quasi 29166}#
                                             #{q 29212}#
                                             #{lev 29191}#))))
                                     #{tmp 29259}#)
                                   (#{quasicons 29168}#
                                     (#{quasi 29166}#
                                       #{p 29211}#
                                       #{lev 29191}#)
                                     (#{quasi 29166}#
                                       #{q 29212}#
                                       #{lev 29191}#)))))))
                         #{tmp 29207}#)
                       (let ((#{tmp 29280}#
                               ($sc-dispatch #{p 29190}# '#(vector each-any))))
                         (if #{tmp 29280}#
                           (@apply
                             (lambda (#{x 29284}#)
                               (let ((#{x 29287}#
                                       (#{vquasi 29167}#
                                         #{x 29284}#
                                         #{lev 29191}#)))
                                 (let ((#{tmp 29289}#
                                         ($sc-dispatch
                                           #{x 29287}#
                                           '(#(atom "quote") each-any))))
                                   (if #{tmp 29289}#
                                     (@apply
                                       (lambda (#{x 29293}#)
                                         (list '#(syntax-object
                                                  "quote"
                                                  ((top)
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29040"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29037"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i28908"
                                                      "i28906"
                                                      "i28904"
                                                      "i28902"
                                                      "i28900"
                                                      "i28898"
                                                      "i28896")))
                                                  (hygiene guile))
                                               (list->vector #{x 29293}#)))
                                       #{tmp 29289}#)
                                     (letrec*
                                       ((#{f 29295}#
                                          (lambda (#{y 29307}# #{k 29308}#)
                                            (let ((#{tmp 29310}#
                                                    ($sc-dispatch
                                                      #{y 29307}#
                                                      '(#(atom "quote")
                                                        each-any))))
                                              (if #{tmp 29310}#
                                                (@apply
                                                  (lambda (#{y 29313}#)
                                                    (#{k 29308}#
                                                      (map (lambda (#{tmp 29065 29314}#)
                                                             (list '#(syntax-object
                                                                      "quote"
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(y)
                                                                         #((top))
                                                                         #("i29063"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           y
                                                                           k)
                                                                         #((top)
                                                                           (top)
                                                                           (top))
                                                                         #("i29045"
                                                                           "i29046"
                                                                           "i29047"))
                                                                       #(ribcage
                                                                         #(_)
                                                                         #((top))
                                                                         #("i29043"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i29037"))
                                                                       #(ribcage
                                                                         (emit quasivector
                                                                               quasilist*
                                                                               quasiappend
                                                                               quasicons
                                                                               vquasi
                                                                               quasi)
                                                                         ((top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                         ("i28908"
                                                                          "i28906"
                                                                          "i28904"
                                                                          "i28902"
                                                                          "i28900"
                                                                          "i28898"
                                                                          "i28896")))
                                                                      (hygiene
                                                                        guile))
                                                                   #{tmp 29065 29314}#))
                                                           #{y 29313}#)))
                                                  #{tmp 29310}#)
                                                (let ((#{tmp 29315}#
                                                        ($sc-dispatch
                                                          #{y 29307}#
                                                          '(#(atom "list")
                                                            .
                                                            each-any))))
                                                  (if #{tmp 29315}#
                                                    (@apply
                                                      (lambda (#{y 29318}#)
                                                        (#{k 29308}#
                                                          #{y 29318}#))
                                                      #{tmp 29315}#)
                                                    (let ((#{tmp 29319}#
                                                            ($sc-dispatch
                                                              #{y 29307}#
                                                              '(#(atom "list*")
                                                                .
                                                                #(each+
                                                                  any
                                                                  (any)
                                                                  ())))))
                                                      (if #{tmp 29319}#
                                                        (@apply
                                                          (lambda (#{y 29322}#
                                                                   #{z 29323}#)
                                                            (#{f 29295}#
                                                              #{z 29323}#
                                                              (lambda (#{ls 29324}#)
                                                                (#{k 29308}#
                                                                  (append
                                                                    #{y 29322}#
                                                                    #{ls 29324}#)))))
                                                          #{tmp 29319}#)
                                                        (list '#(syntax-object
                                                                 "list->vector"
                                                                 ((top)
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(#{ g29080}#)
                                                                    #((m29081
                                                                        top))
                                                                    #("i29084"))
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i29078"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(f y k)
                                                                    #((top)
                                                                      (top)
                                                                      (top))
                                                                    #("i29045"
                                                                      "i29046"
                                                                      "i29047"))
                                                                  #(ribcage
                                                                    #(_)
                                                                    #((top))
                                                                    #("i29043"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x)
                                                                    #((top))
                                                                    #("i29037"))
                                                                  #(ribcage
                                                                    (emit quasivector
                                                                          quasilist*
                                                                          quasiappend
                                                                          quasicons
                                                                          vquasi
                                                                          quasi)
                                                                    ((top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top)
                                                                     (top))
                                                                    ("i28908"
                                                                     "i28906"
                                                                     "i28904"
                                                                     "i28902"
                                                                     "i28900"
                                                                     "i28898"
                                                                     "i28896")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x 29287}#))))))))))
                                       (#{f 29295}#
                                         #{x 29287}#
                                         (lambda (#{ls 29297}#)
                                           (let ((#{tmp 29299}#
                                                   ($sc-dispatch
                                                     #{ls 29297}#
                                                     'each-any)))
                                             (if #{tmp 29299}#
                                               (@apply
                                                 (lambda (#{ g29053 29302}#)
                                                   (cons '#(syntax-object
                                                            "vector"
                                                            ((top)
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(#{ g29053}#)
                                                               #((m29054 top))
                                                               #("i29058"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(ls)
                                                               #((top))
                                                               #("i29052"))
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i29043"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i29037"))
                                                             #(ribcage
                                                               (emit quasivector
                                                                     quasilist*
                                                                     quasiappend
                                                                     quasicons
                                                                     vquasi
                                                                     quasi)
                                                               ((top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top)
                                                                (top))
                                                               ("i28908"
                                                                "i28906"
                                                                "i28904"
                                                                "i28902"
                                                                "i28900"
                                                                "i28898"
                                                                "i28896")))
                                                            (hygiene guile))
                                                         #{ g29053 29302}#))
                                                 #{tmp 29299}#)
                                               (syntax-violation
                                                 #f
                                                 "source expression failed to match any pattern"
                                                 #{ls 29297}#))))))))))
                             #{tmp 29280}#)
                           (list '#(syntax-object
                                    "quote"
                                    ((top)
                                     #(ribcage #(p) #((top)) #("i28943"))
                                     #(ribcage () () ())
                                     #(ribcage
                                       #(p lev)
                                       #((top) (top))
                                       #("i28912" "i28913"))
                                     #(ribcage
                                       (emit quasivector
                                             quasilist*
                                             quasiappend
                                             quasicons
                                             vquasi
                                             quasi)
                                       ((top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top))
                                       ("i28908"
                                        "i28906"
                                        "i28904"
                                        "i28902"
                                        "i28900"
                                        "i28898"
                                        "i28896")))
                                    (hygiene guile))
                                 #{p 29190}#)))))))))))
       (#{vquasi 29167}#
         (lambda (#{p 29352}# #{lev 29353}#)
           (let ((#{tmp 29355}#
                   ($sc-dispatch #{p 29352}# '(any . any))))
             (if #{tmp 29355}#
               (@apply
                 (lambda (#{p 29359}# #{q 29360}#)
                   (let ((#{tmp 29362}#
                           ($sc-dispatch
                             #{p 29359}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage
                                      #(p q)
                                      #((top) (top))
                                      #("i28951" "i28952"))
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i28947" "i28948"))
                                    #(ribcage
                                      (emit quasivector
                                            quasilist*
                                            quasiappend
                                            quasicons
                                            vquasi
                                            quasi)
                                      ((top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top)
                                       (top))
                                      ("i28908"
                                       "i28906"
                                       "i28904"
                                       "i28902"
                                       "i28900"
                                       "i28898"
                                       "i28896")))
                                   (hygiene guile)))
                               .
                               each-any))))
                     (if #{tmp 29362}#
                       (@apply
                         (lambda (#{p 29366}#)
                           (if (= #{lev 29353}# 0)
                             (#{quasilist* 29170}#
                               (map (lambda (#{tmp 28959 29402}#)
                                      (list '#(syntax-object
                                               "value"
                                               ((top)
                                                #(ribcage
                                                  #(p)
                                                  #((top))
                                                  #("i28957"))
                                                #(ribcage
                                                  #(p q)
                                                  #((top) (top))
                                                  #("i28951" "i28952"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(p lev)
                                                  #((top) (top))
                                                  #("i28947" "i28948"))
                                                #(ribcage
                                                  (emit quasivector
                                                        quasilist*
                                                        quasiappend
                                                        quasicons
                                                        vquasi
                                                        quasi)
                                                  ((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                  ("i28908"
                                                   "i28906"
                                                   "i28904"
                                                   "i28902"
                                                   "i28900"
                                                   "i28898"
                                                   "i28896")))
                                               (hygiene guile))
                                            #{tmp 28959 29402}#))
                                    #{p 29366}#)
                               (#{vquasi 29167}# #{q 29360}# #{lev 29353}#))
                             (#{quasicons 29168}#
                               (#{quasicons 29168}#
                                 '(#(syntax-object
                                     "quote"
                                     ((top)
                                      #(ribcage #(p) #((top)) #("i28957"))
                                      #(ribcage
                                        #(p q)
                                        #((top) (top))
                                        #("i28951" "i28952"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(p lev)
                                        #((top) (top))
                                        #("i28947" "i28948"))
                                      #(ribcage
                                        (emit quasivector
                                              quasilist*
                                              quasiappend
                                              quasicons
                                              vquasi
                                              quasi)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i28908"
                                         "i28906"
                                         "i28904"
                                         "i28902"
                                         "i28900"
                                         "i28898"
                                         "i28896")))
                                     (hygiene guile))
                                   #(syntax-object
                                     unquote
                                     ((top)
                                      #(ribcage #(p) #((top)) #("i28957"))
                                      #(ribcage
                                        #(p q)
                                        #((top) (top))
                                        #("i28951" "i28952"))
                                      #(ribcage () () ())
                                      #(ribcage
                                        #(p lev)
                                        #((top) (top))
                                        #("i28947" "i28948"))
                                      #(ribcage
                                        (emit quasivector
                                              quasilist*
                                              quasiappend
                                              quasicons
                                              vquasi
                                              quasi)
                                        ((top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top)
                                         (top))
                                        ("i28908"
                                         "i28906"
                                         "i28904"
                                         "i28902"
                                         "i28900"
                                         "i28898"
                                         "i28896")))
                                     (hygiene guile)))
                                 (#{quasi 29166}#
                                   #{p 29366}#
                                   (#{1-}# #{lev 29353}#)))
                               (#{vquasi 29167}# #{q 29360}# #{lev 29353}#))))
                         #{tmp 29362}#)
                       (let ((#{tmp 29409}#
                               ($sc-dispatch
                                 #{p 29359}#
                                 '(#(free-id
                                     #(syntax-object
                                       unquote-splicing
                                       ((top)
                                        #(ribcage
                                          #(p q)
                                          #((top) (top))
                                          #("i28951" "i28952"))
                                        #(ribcage () () ())
                                        #(ribcage
                                          #(p lev)
                                          #((top) (top))
                                          #("i28947" "i28948"))
                                        #(ribcage
                                          (emit quasivector
                                                quasilist*
                                                quasiappend
                                                quasicons
                                                vquasi
                                                quasi)
                                          ((top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top)
                                           (top))
                                          ("i28908"
                                           "i28906"
                                           "i28904"
                                           "i28902"
                                           "i28900"
                                           "i28898"
                                           "i28896")))
                                       (hygiene guile)))
                                   .
                                   each-any))))
                         (if #{tmp 29409}#
                           (@apply
                             (lambda (#{p 29413}#)
                               (if (= #{lev 29353}# 0)
                                 (#{quasiappend 29169}#
                                   (map (lambda (#{tmp 28964 29416}#)
                                          (list '#(syntax-object
                                                   "value"
                                                   ((top)
                                                    #(ribcage
                                                      #(p)
                                                      #((top))
                                                      #("i28962"))
                                                    #(ribcage
                                                      #(p q)
                                                      #((top) (top))
                                                      #("i28951" "i28952"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i28947" "i28948"))
                                                    #(ribcage
                                                      (emit quasivector
                                                            quasilist*
                                                            quasiappend
                                                            quasicons
                                                            vquasi
                                                            quasi)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i28908"
                                                       "i28906"
                                                       "i28904"
                                                       "i28902"
                                                       "i28900"
                                                       "i28898"
                                                       "i28896")))
                                                   (hygiene guile))
                                                #{tmp 28964 29416}#))
                                        #{p 29413}#)
                                   (#{vquasi 29167}#
                                     #{q 29360}#
                                     #{lev 29353}#))
                                 (#{quasicons 29168}#
                                   (#{quasicons 29168}#
                                     '(#(syntax-object
                                         "quote"
                                         ((top)
                                          #(ribcage #(p) #((top)) #("i28962"))
                                          #(ribcage
                                            #(p q)
                                            #((top) (top))
                                            #("i28951" "i28952"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(p lev)
                                            #((top) (top))
                                            #("i28947" "i28948"))
                                          #(ribcage
                                            (emit quasivector
                                                  quasilist*
                                                  quasiappend
                                                  quasicons
                                                  vquasi
                                                  quasi)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i28908"
                                             "i28906"
                                             "i28904"
                                             "i28902"
                                             "i28900"
                                             "i28898"
                                             "i28896")))
                                         (hygiene guile))
                                       #(syntax-object
                                         unquote-splicing
                                         ((top)
                                          #(ribcage #(p) #((top)) #("i28962"))
                                          #(ribcage
                                            #(p q)
                                            #((top) (top))
                                            #("i28951" "i28952"))
                                          #(ribcage () () ())
                                          #(ribcage
                                            #(p lev)
                                            #((top) (top))
                                            #("i28947" "i28948"))
                                          #(ribcage
                                            (emit quasivector
                                                  quasilist*
                                                  quasiappend
                                                  quasicons
                                                  vquasi
                                                  quasi)
                                            ((top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top)
                                             (top))
                                            ("i28908"
                                             "i28906"
                                             "i28904"
                                             "i28902"
                                             "i28900"
                                             "i28898"
                                             "i28896")))
                                         (hygiene guile)))
                                     (#{quasi 29166}#
                                       #{p 29413}#
                                       (#{1-}# #{lev 29353}#)))
                                   (#{vquasi 29167}#
                                     #{q 29360}#
                                     #{lev 29353}#))))
                             #{tmp 29409}#)
                           (#{quasicons 29168}#
                             (#{quasi 29166}# #{p 29359}# #{lev 29353}#)
                             (#{vquasi 29167}# #{q 29360}# #{lev 29353}#)))))))
                 #{tmp 29355}#)
               (let ((#{tmp 29434}# ($sc-dispatch #{p 29352}# '())))
                 (if #{tmp 29434}#
                   (@apply
                     (lambda ()
                       '(#(syntax-object
                           "quote"
                           ((top)
                            #(ribcage () () ())
                            #(ribcage
                              #(p lev)
                              #((top) (top))
                              #("i28947" "i28948"))
                            #(ribcage
                              (emit quasivector
                                    quasilist*
                                    quasiappend
                                    quasicons
                                    vquasi
                                    quasi)
                              ((top) (top) (top) (top) (top) (top) (top))
                              ("i28908"
                               "i28906"
                               "i28904"
                               "i28902"
                               "i28900"
                               "i28898"
                               "i28896")))
                           (hygiene guile))
                         ()))
                     #{tmp 29434}#)
                   (syntax-violation
                     #f
                     "source expression failed to match any pattern"
                     #{p 29352}#)))))))
       (#{quasicons 29168}#
         (lambda (#{x 29447}# #{y 29448}#)
           (let ((#{tmp 29449}# (list #{x 29447}# #{y 29448}#)))
             (let ((#{tmp 29450}#
                     ($sc-dispatch #{tmp 29449}# '(any any))))
               (if #{tmp 29450}#
                 (@apply
                   (lambda (#{x 29452}# #{y 29453}#)
                     (let ((#{tmp 29455}#
                             ($sc-dispatch
                               #{y 29453}#
                               '(#(atom "quote") any))))
                       (if #{tmp 29455}#
                         (@apply
                           (lambda (#{dy 29459}#)
                             (let ((#{tmp 29461}#
                                     ($sc-dispatch
                                       #{x 29452}#
                                       '(#(atom "quote") any))))
                               (if #{tmp 29461}#
                                 (@apply
                                   (lambda (#{dx 29465}#)
                                     (list '#(syntax-object
                                              "quote"
                                              ((top)
                                               #(ribcage
                                                 #(dx)
                                                 #((top))
                                                 #("i28986"))
                                               #(ribcage
                                                 #(dy)
                                                 #((top))
                                                 #("i28982"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i28976" "i28977"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i28971" "i28972"))
                                               #(ribcage
                                                 (emit quasivector
                                                       quasilist*
                                                       quasiappend
                                                       quasicons
                                                       vquasi
                                                       quasi)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i28908"
                                                  "i28906"
                                                  "i28904"
                                                  "i28902"
                                                  "i28900"
                                                  "i28898"
                                                  "i28896")))
                                              (hygiene guile))
                                           (cons #{dx 29465}# #{dy 29459}#)))
                                   #{tmp 29461}#)
                                 (if (null? #{dy 29459}#)
                                   (list '#(syntax-object
                                            "list"
                                            ((top)
                                             #(ribcage
                                               #(_)
                                               #((top))
                                               #("i28988"))
                                             #(ribcage
                                               #(dy)
                                               #((top))
                                               #("i28982"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i28976" "i28977"))
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i28971" "i28972"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i28908"
                                                "i28906"
                                                "i28904"
                                                "i28902"
                                                "i28900"
                                                "i28898"
                                                "i28896")))
                                            (hygiene guile))
                                         #{x 29452}#)
                                   (list '#(syntax-object
                                            "list*"
                                            ((top)
                                             #(ribcage
                                               #(_)
                                               #((top))
                                               #("i28988"))
                                             #(ribcage
                                               #(dy)
                                               #((top))
                                               #("i28982"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i28976" "i28977"))
                                             #(ribcage () () ())
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x y)
                                               #((top) (top))
                                               #("i28971" "i28972"))
                                             #(ribcage
                                               (emit quasivector
                                                     quasilist*
                                                     quasiappend
                                                     quasicons
                                                     vquasi
                                                     quasi)
                                               ((top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top)
                                                (top))
                                               ("i28908"
                                                "i28906"
                                                "i28904"
                                                "i28902"
                                                "i28900"
                                                "i28898"
                                                "i28896")))
                                            (hygiene guile))
                                         #{x 29452}#
                                         #{y 29453}#)))))
                           #{tmp 29455}#)
                         (let ((#{tmp 29470}#
                                 ($sc-dispatch
                                   #{y 29453}#
                                   '(#(atom "list") . any))))
                           (if #{tmp 29470}#
                             (@apply
                               (lambda (#{stuff 29474}#)
                                 (cons '#(syntax-object
                                          "list"
                                          ((top)
                                           #(ribcage
                                             #(stuff)
                                             #((top))
                                             #("i28991"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i28976" "i28977"))
                                           #(ribcage () () ())
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i28971" "i28972"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i28908"
                                              "i28906"
                                              "i28904"
                                              "i28902"
                                              "i28900"
                                              "i28898"
                                              "i28896")))
                                          (hygiene guile))
                                       (cons #{x 29452}# #{stuff 29474}#)))
                               #{tmp 29470}#)
                             (let ((#{tmp 29475}#
                                     ($sc-dispatch
                                       #{y 29453}#
                                       '(#(atom "list*") . any))))
                               (if #{tmp 29475}#
                                 (@apply
                                   (lambda (#{stuff 29479}#)
                                     (cons '#(syntax-object
                                              "list*"
                                              ((top)
                                               #(ribcage
                                                 #(stuff)
                                                 #((top))
                                                 #("i28994"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i28976" "i28977"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x y)
                                                 #((top) (top))
                                                 #("i28971" "i28972"))
                                               #(ribcage
                                                 (emit quasivector
                                                       quasilist*
                                                       quasiappend
                                                       quasicons
                                                       vquasi
                                                       quasi)
                                                 ((top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top)
                                                  (top))
                                                 ("i28908"
                                                  "i28906"
                                                  "i28904"
                                                  "i28902"
                                                  "i28900"
                                                  "i28898"
                                                  "i28896")))
                                              (hygiene guile))
                                           (cons #{x 29452}# #{stuff 29479}#)))
                                   #{tmp 29475}#)
                                 (list '#(syntax-object
                                          "list*"
                                          ((top)
                                           #(ribcage #(_) #((top)) #("i28996"))
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i28976" "i28977"))
                                           #(ribcage () () ())
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(x y)
                                             #((top) (top))
                                             #("i28971" "i28972"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i28908"
                                              "i28906"
                                              "i28904"
                                              "i28902"
                                              "i28900"
                                              "i28898"
                                              "i28896")))
                                          (hygiene guile))
                                       #{x 29452}#
                                       #{y 29453}#))))))))
                   #{tmp 29450}#)
                 (syntax-violation
                   #f
                   "source expression failed to match any pattern"
                   #{tmp 29449}#))))))
       (#{quasiappend 29169}#
         (lambda (#{x 29490}# #{y 29491}#)
           (let ((#{tmp 29493}#
                   ($sc-dispatch #{y 29491}# '(#(atom "quote") ()))))
             (if #{tmp 29493}#
               (@apply
                 (lambda ()
                   (if (null? #{x 29490}#)
                     '(#(syntax-object
                         "quote"
                         ((top)
                          #(ribcage () () ())
                          #(ribcage
                            #(x y)
                            #((top) (top))
                            #("i29000" "i29001"))
                          #(ribcage
                            (emit quasivector
                                  quasilist*
                                  quasiappend
                                  quasicons
                                  vquasi
                                  quasi)
                            ((top) (top) (top) (top) (top) (top) (top))
                            ("i28908"
                             "i28906"
                             "i28904"
                             "i28902"
                             "i28900"
                             "i28898"
                             "i28896")))
                         (hygiene guile))
                       ())
                     (if (null? (cdr #{x 29490}#))
                       (car #{x 29490}#)
                       (let ((#{tmp 29498}#
                               ($sc-dispatch #{x 29490}# 'each-any)))
                         (if #{tmp 29498}#
                           (@apply
                             (lambda (#{p 29502}#)
                               (cons '#(syntax-object
                                        "append"
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage #(p) #((top)) #("i29012"))
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(x y)
                                           #((top) (top))
                                           #("i29000" "i29001"))
                                         #(ribcage
                                           (emit quasivector
                                                 quasilist*
                                                 quasiappend
                                                 quasicons
                                                 vquasi
                                                 quasi)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i28908"
                                            "i28906"
                                            "i28904"
                                            "i28902"
                                            "i28900"
                                            "i28898"
                                            "i28896")))
                                        (hygiene guile))
                                     #{p 29502}#))
                             #{tmp 29498}#)
                           (syntax-violation
                             #f
                             "source expression failed to match any pattern"
                             #{x 29490}#))))))
                 #{tmp 29493}#)
               (if (null? #{x 29490}#)
                 #{y 29491}#
                 (let ((#{tmp 29510}# (list #{x 29490}# #{y 29491}#)))
                   (let ((#{tmp 29511}#
                           ($sc-dispatch #{tmp 29510}# '(each-any any))))
                     (if #{tmp 29511}#
                       (@apply
                         (lambda (#{p 29513}# #{y 29514}#)
                           (cons '#(syntax-object
                                    "append"
                                    ((top)
                                     #(ribcage () () ())
                                     #(ribcage
                                       #(p y)
                                       #((top) (top))
                                       #("i29023" "i29024"))
                                     #(ribcage #(_) #((top)) #("i29015"))
                                     #(ribcage () () ())
                                     #(ribcage
                                       #(x y)
                                       #((top) (top))
                                       #("i29000" "i29001"))
                                     #(ribcage
                                       (emit quasivector
                                             quasilist*
                                             quasiappend
                                             quasicons
                                             vquasi
                                             quasi)
                                       ((top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top)
                                        (top))
                                       ("i28908"
                                        "i28906"
                                        "i28904"
                                        "i28902"
                                        "i28900"
                                        "i28898"
                                        "i28896")))
                                    (hygiene guile))
                                 (append #{p 29513}# (list #{y 29514}#))))
                         #{tmp 29511}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp 29510}#)))))))))
       (#{quasilist* 29170}#
         (lambda (#{x 29518}# #{y 29519}#)
           (letrec*
             ((#{f 29520}#
                (lambda (#{x 29609}#)
                  (if (null? #{x 29609}#)
                    #{y 29519}#
                    (#{quasicons 29168}#
                      (car #{x 29609}#)
                      (#{f 29520}# (cdr #{x 29609}#)))))))
             (#{f 29520}# #{x 29518}#))))
       (#{emit 29172}#
         (lambda (#{x 29612}#)
           (let ((#{tmp 29614}#
                   ($sc-dispatch #{x 29612}# '(#(atom "quote") any))))
             (if #{tmp 29614}#
               (@apply
                 (lambda (#{x 29618}#)
                   (list '#(syntax-object
                            quote
                            ((top)
                             #(ribcage #(x) #((top)) #("i29090"))
                             #(ribcage () () ())
                             #(ribcage #(x) #((top)) #("i29087"))
                             #(ribcage
                               (emit quasivector
                                     quasilist*
                                     quasiappend
                                     quasicons
                                     vquasi
                                     quasi)
                               ((top) (top) (top) (top) (top) (top) (top))
                               ("i28908"
                                "i28906"
                                "i28904"
                                "i28902"
                                "i28900"
                                "i28898"
                                "i28896")))
                            (hygiene guile))
                         #{x 29618}#))
                 #{tmp 29614}#)
               (let ((#{tmp 29619}#
                       ($sc-dispatch
                         #{x 29612}#
                         '(#(atom "list") . each-any))))
                 (if #{tmp 29619}#
                   (@apply
                     (lambda (#{x 29623}#)
                       (let ((#{tmp 29624}# (map #{emit 29172}# #{x 29623}#)))
                         (let ((#{tmp 29625}#
                                 ($sc-dispatch #{tmp 29624}# 'each-any)))
                           (if #{tmp 29625}#
                             (@apply
                               (lambda (#{ g29095 29627}#)
                                 (cons '#(syntax-object
                                          list
                                          ((top)
                                           #(ribcage () () ())
                                           #(ribcage
                                             #(#{ g29095}#)
                                             #((m29096 top))
                                             #("i29100"))
                                           #(ribcage #(x) #((top)) #("i29093"))
                                           #(ribcage () () ())
                                           #(ribcage #(x) #((top)) #("i29087"))
                                           #(ribcage
                                             (emit quasivector
                                                   quasilist*
                                                   quasiappend
                                                   quasicons
                                                   vquasi
                                                   quasi)
                                             ((top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top)
                                              (top))
                                             ("i28908"
                                              "i28906"
                                              "i28904"
                                              "i28902"
                                              "i28900"
                                              "i28898"
                                              "i28896")))
                                          (hygiene guile))
                                       #{ g29095 29627}#))
                               #{tmp 29625}#)
                             (syntax-violation
                               #f
                               "source expression failed to match any pattern"
                               #{tmp 29624}#)))))
                     #{tmp 29619}#)
                   (let ((#{tmp 29628}#
                           ($sc-dispatch
                             #{x 29612}#
                             '(#(atom "list*") . #(each+ any (any) ())))))
                     (if #{tmp 29628}#
                       (@apply
                         (lambda (#{x 29632}# #{y 29633}#)
                           (letrec*
                             ((#{f 29634}#
                                (lambda (#{x* 29637}#)
                                  (if (null? #{x* 29637}#)
                                    (#{emit 29172}# #{y 29633}#)
                                    (let ((#{tmp 29638}#
                                            (list (#{emit 29172}#
                                                    (car #{x* 29637}#))
                                                  (#{f 29634}#
                                                    (cdr #{x* 29637}#)))))
                                      (let ((#{tmp 29639}#
                                              ($sc-dispatch
                                                #{tmp 29638}#
                                                '(any any))))
                                        (if #{tmp 29639}#
                                          (@apply
                                            (lambda (#{ g29115 29641}#
                                                     #{ g29114 29642}#)
                                              (list '#(syntax-object
                                                       cons
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(#{ g29115}#
                                                            #{ g29114}#)
                                                          #((m29116 top)
                                                            (m29116 top))
                                                          #("i29120" "i29121"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f x*)
                                                          #((top) (top))
                                                          #("i29109" "i29110"))
                                                        #(ribcage
                                                          #(x y)
                                                          #((top) (top))
                                                          #("i29105" "i29106"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i29087"))
                                                        #(ribcage
                                                          (emit quasivector
                                                                quasilist*
                                                                quasiappend
                                                                quasicons
                                                                vquasi
                                                                quasi)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i28908"
                                                           "i28906"
                                                           "i28904"
                                                           "i28902"
                                                           "i28900"
                                                           "i28898"
                                                           "i28896")))
                                                       (hygiene guile))
                                                    #{ g29115 29641}#
                                                    #{ g29114 29642}#))
                                            #{tmp 29639}#)
                                          (syntax-violation
                                            #f
                                            "source expression failed to match any pattern"
                                            #{tmp 29638}#))))))))
                             (#{f 29634}# #{x 29632}#)))
                         #{tmp 29628}#)
                       (let ((#{tmp 29643}#
                               ($sc-dispatch
                                 #{x 29612}#
                                 '(#(atom "append") . each-any))))
                         (if #{tmp 29643}#
                           (@apply
                             (lambda (#{x 29647}#)
                               (let ((#{tmp 29648}#
                                       (map #{emit 29172}# #{x 29647}#)))
                                 (let ((#{tmp 29649}#
                                         ($sc-dispatch
                                           #{tmp 29648}#
                                           'each-any)))
                                   (if #{tmp 29649}#
                                     (@apply
                                       (lambda (#{ g29127 29651}#)
                                         (cons '#(syntax-object
                                                  append
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(#{ g29127}#)
                                                     #((m29128 top))
                                                     #("i29132"))
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29125"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29087"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i28908"
                                                      "i28906"
                                                      "i28904"
                                                      "i28902"
                                                      "i28900"
                                                      "i28898"
                                                      "i28896")))
                                                  (hygiene guile))
                                               #{ g29127 29651}#))
                                       #{tmp 29649}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp 29648}#)))))
                             #{tmp 29643}#)
                           (let ((#{tmp 29652}#
                                   ($sc-dispatch
                                     #{x 29612}#
                                     '(#(atom "vector") . each-any))))
                             (if #{tmp 29652}#
                               (@apply
                                 (lambda (#{x 29656}#)
                                   (let ((#{tmp 29657}#
                                           (map #{emit 29172}# #{x 29656}#)))
                                     (let ((#{tmp 29658}#
                                             ($sc-dispatch
                                               #{tmp 29657}#
                                               'each-any)))
                                       (if #{tmp 29658}#
                                         (@apply
                                           (lambda (#{ g29139 29660}#)
                                             (cons '#(syntax-object
                                                      vector
                                                      ((top)
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(#{ g29139}#)
                                                         #((m29140 top))
                                                         #("i29144"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i29137"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i29087"))
                                                       #(ribcage
                                                         (emit quasivector
                                                               quasilist*
                                                               quasiappend
                                                               quasicons
                                                               vquasi
                                                               quasi)
                                                         ((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                         ("i28908"
                                                          "i28906"
                                                          "i28904"
                                                          "i28902"
                                                          "i28900"
                                                          "i28898"
                                                          "i28896")))
                                                      (hygiene guile))
                                                   #{ g29139 29660}#))
                                           #{tmp 29658}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp 29657}#)))))
                                 #{tmp 29652}#)
                               (let ((#{tmp 29661}#
                                       ($sc-dispatch
                                         #{x 29612}#
                                         '(#(atom "list->vector") any))))
                                 (if #{tmp 29661}#
                                   (@apply
                                     (lambda (#{x 29665}#)
                                       (let ((#{tmp 29666}#
                                               (#{emit 29172}# #{x 29665}#)))
                                         (list '#(syntax-object
                                                  list->vector
                                                  ((top)
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(#{ g29151}#)
                                                     #((m29152 top))
                                                     #("i29155"))
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29149"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29087"))
                                                   #(ribcage
                                                     (emit quasivector
                                                           quasilist*
                                                           quasiappend
                                                           quasicons
                                                           vquasi
                                                           quasi)
                                                     ((top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top)
                                                      (top))
                                                     ("i28908"
                                                      "i28906"
                                                      "i28904"
                                                      "i28902"
                                                      "i28900"
                                                      "i28898"
                                                      "i28896")))
                                                  (hygiene guile))
                                               #{tmp 29666}#)))
                                     #{tmp 29661}#)
                                   (let ((#{tmp 29669}#
                                           ($sc-dispatch
                                             #{x 29612}#
                                             '(#(atom "value") any))))
                                     (if #{tmp 29669}#
                                       (@apply
                                         (lambda (#{x 29673}#) #{x 29673}#)
                                         #{tmp 29669}#)
                                       (syntax-violation
                                         #f
                                         "source expression failed to match any pattern"
                                         #{x 29612}#))))))))))))))))))
      (lambda (#{x 29173}#)
        (let ((#{tmp 29175}#
                ($sc-dispatch #{x 29173}# '(_ any))))
          (if #{tmp 29175}#
            (@apply
              (lambda (#{e 29179}#)
                (#{emit 29172}# (#{quasi 29166}# #{e 29179}# 0)))
              #{tmp 29175}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 29173}#)))))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (lambda (#{x 29728}#)
      (letrec*
        ((#{read-file 29729}#
           (lambda (#{fn 29840}# #{k 29841}#)
             (let ((#{p 29842}# (open-input-file #{fn 29840}#)))
               (letrec*
                 ((#{f 29843}#
                    (lambda (#{x 29897}# #{result 29898}#)
                      (if (eof-object? #{x 29897}#)
                        (begin
                          (close-input-port #{p 29842}#)
                          (reverse #{result 29898}#))
                        (#{f 29843}#
                          (read #{p 29842}#)
                          (cons (datum->syntax #{k 29841}# #{x 29897}#)
                                #{result 29898}#))))))
                 (#{f 29843}# (read #{p 29842}#) '()))))))
        (let ((#{tmp 29731}#
                ($sc-dispatch #{x 29728}# '(any any))))
          (if #{tmp 29731}#
            (@apply
              (lambda (#{k 29735}# #{filename 29736}#)
                (let ((#{fn 29737}# (syntax->datum #{filename 29736}#)))
                  (let ((#{tmp 29738}#
                          (#{read-file 29729}#
                            #{fn 29737}#
                            #{filename 29736}#)))
                    (let ((#{tmp 29739}#
                            ($sc-dispatch #{tmp 29738}# 'each-any)))
                      (if #{tmp 29739}#
                        (@apply
                          (lambda (#{exp 29757}#)
                            (cons '#(syntax-object
                                     begin
                                     ((top)
                                      #(ribcage () () ())
                                      #(ribcage #(exp) #((top)) #("i29725"))
                                      #(ribcage () () ())
                                      #(ribcage () () ())
                                      #(ribcage #(fn) #((top)) #("i29720"))
                                      #(ribcage
                                        #(k filename)
                                        #((top) (top))
                                        #("i29716" "i29717"))
                                      #(ribcage (read-file) ((top)) ("i29700"))
                                      #(ribcage #(x) #((top)) #("i29699")))
                                     (hygiene guile))
                                  #{exp 29757}#))
                          #{tmp 29739}#)
                        (syntax-violation
                          #f
                          "source expression failed to match any pattern"
                          #{tmp 29738}#))))))
              #{tmp 29731}#)
            (syntax-violation
              #f
              "source expression failed to match any pattern"
              #{x 29728}#)))))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (lambda (#{x 29917}#)
      (let ((#{tmp 29919}#
              ($sc-dispatch #{x 29917}# '(any any))))
        (if #{tmp 29919}#
          (@apply
            (lambda (#{k 29923}# #{filename 29924}#)
              (let ((#{fn 29925}# (syntax->datum #{filename 29924}#)))
                (let ((#{tmp 29926}#
                        (datum->syntax
                          #{filename 29924}#
                          (let ((#{t 29929}# (%search-load-path #{fn 29925}#)))
                            (if #{t 29929}#
                              #{t 29929}#
                              (syntax-violation
                                'include-from-path
                                "file not found in path"
                                #{x 29917}#
                                #{filename 29924}#))))))
                  (list '#(syntax-object
                           include
                           ((top)
                            #(ribcage () () ())
                            #(ribcage #(fn) #((top)) #("i29911"))
                            #(ribcage () () ())
                            #(ribcage () () ())
                            #(ribcage #(fn) #((top)) #("i29907"))
                            #(ribcage
                              #(k filename)
                              #((top) (top))
                              #("i29903" "i29904"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i29900")))
                           (hygiene guile))
                        #{tmp 29926}#))))
            #{tmp 29919}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 29917}#))))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (lambda (#{x 29938}#)
      (syntax-violation
        'unquote
        "expression not valid outside of quasiquote"
        #{x 29938}#))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (lambda (#{x 29941}#)
      (syntax-violation
        'unquote-splicing
        "expression not valid outside of quasiquote"
        #{x 29941}#))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (lambda (#{x 29997}#)
      (let ((#{tmp 29999}#
              ($sc-dispatch
                #{x 29997}#
                '(_ any any . each-any))))
        (if #{tmp 29999}#
          (@apply
            (lambda (#{e 30003}# #{m1 30004}# #{m2 30005}#)
              (let ((#{tmp 30006}#
                      (letrec*
                        ((#{f 30052}#
                           (lambda (#{clause 30055}# #{clauses 30056}#)
                             (if (null? #{clauses 30056}#)
                               (let ((#{tmp 30058}#
                                       ($sc-dispatch
                                         #{clause 30055}#
                                         '(#(free-id
                                             #(syntax-object
                                               else
                                               ((top)
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(f clause clauses)
                                                  #((top) (top) (top))
                                                  #("i29956"
                                                    "i29957"
                                                    "i29958"))
                                                #(ribcage
                                                  #(e m1 m2)
                                                  #((top) (top) (top))
                                                  #("i29946"
                                                    "i29947"
                                                    "i29948"))
                                                #(ribcage () () ())
                                                #(ribcage
                                                  #(x)
                                                  #((top))
                                                  #("i29943")))
                                               (hygiene guile)))
                                           any
                                           .
                                           each-any))))
                                 (if #{tmp 30058}#
                                   (@apply
                                     (lambda (#{e1 30062}# #{e2 30063}#)
                                       (cons '#(syntax-object
                                                begin
                                                ((top)
                                                 #(ribcage
                                                   #(e1 e2)
                                                   #((top) (top))
                                                   #("i29965" "i29966"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(f clause clauses)
                                                   #((top) (top) (top))
                                                   #("i29956"
                                                     "i29957"
                                                     "i29958"))
                                                 #(ribcage
                                                   #(e m1 m2)
                                                   #((top) (top) (top))
                                                   #("i29946"
                                                     "i29947"
                                                     "i29948"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i29943")))
                                                (hygiene guile))
                                             (cons #{e1 30062}# #{e2 30063}#)))
                                     #{tmp 30058}#)
                                   (let ((#{tmp 30064}#
                                           ($sc-dispatch
                                             #{clause 30055}#
                                             '(each-any any . each-any))))
                                     (if #{tmp 30064}#
                                       (@apply
                                         (lambda (#{k 30068}#
                                                  #{e1 30069}#
                                                  #{e2 30070}#)
                                           (list '#(syntax-object
                                                    if
                                                    ((top)
                                                     #(ribcage
                                                       #(k e1 e2)
                                                       #((top) (top) (top))
                                                       #("i29971"
                                                         "i29972"
                                                         "i29973"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(f clause clauses)
                                                       #((top) (top) (top))
                                                       #("i29956"
                                                         "i29957"
                                                         "i29958"))
                                                     #(ribcage
                                                       #(e m1 m2)
                                                       #((top) (top) (top))
                                                       #("i29946"
                                                         "i29947"
                                                         "i29948"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i29943")))
                                                    (hygiene guile))
                                                 (list '#(syntax-object
                                                          memv
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29971"
                                                               "i29972"
                                                               "i29973"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29956"
                                                               "i29957"
                                                               "i29958"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29946"
                                                               "i29947"
                                                               "i29948"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i29943")))
                                                          (hygiene guile))
                                                       '#(syntax-object
                                                          t
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29971"
                                                               "i29972"
                                                               "i29973"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29956"
                                                               "i29957"
                                                               "i29958"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29946"
                                                               "i29947"
                                                               "i29948"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i29943")))
                                                          (hygiene guile))
                                                       (list '#(syntax-object
                                                                quote
                                                                ((top)
                                                                 #(ribcage
                                                                   #(k e1 e2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i29971"
                                                                     "i29972"
                                                                     "i29973"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(f
                                                                     clause
                                                                     clauses)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i29956"
                                                                     "i29957"
                                                                     "i29958"))
                                                                 #(ribcage
                                                                   #(e m1 m2)
                                                                   #((top)
                                                                     (top)
                                                                     (top))
                                                                   #("i29946"
                                                                     "i29947"
                                                                     "i29948"))
                                                                 #(ribcage
                                                                   ()
                                                                   ()
                                                                   ())
                                                                 #(ribcage
                                                                   #(x)
                                                                   #((top))
                                                                   #("i29943")))
                                                                (hygiene
                                                                  guile))
                                                             #{k 30068}#))
                                                 (cons '#(syntax-object
                                                          begin
                                                          ((top)
                                                           #(ribcage
                                                             #(k e1 e2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29971"
                                                               "i29972"
                                                               "i29973"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(f
                                                               clause
                                                               clauses)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29956"
                                                               "i29957"
                                                               "i29958"))
                                                           #(ribcage
                                                             #(e m1 m2)
                                                             #((top)
                                                               (top)
                                                               (top))
                                                             #("i29946"
                                                               "i29947"
                                                               "i29948"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i29943")))
                                                          (hygiene guile))
                                                       (cons #{e1 30069}#
                                                             #{e2 30070}#))))
                                         #{tmp 30064}#)
                                       (syntax-violation
                                         'case
                                         "bad clause"
                                         #{x 29997}#
                                         #{clause 30055}#)))))
                               (let ((#{tmp 30078}#
                                       (#{f 30052}#
                                         (car #{clauses 30056}#)
                                         (cdr #{clauses 30056}#))))
                                 (let ((#{tmp 30081}#
                                         ($sc-dispatch
                                           #{clause 30055}#
                                           '(each-any any . each-any))))
                                   (if #{tmp 30081}#
                                     (@apply
                                       (lambda (#{k 30085}#
                                                #{e1 30086}#
                                                #{e2 30087}#)
                                         (list '#(syntax-object
                                                  if
                                                  ((top)
                                                   #(ribcage
                                                     #(k e1 e2)
                                                     #((top) (top) (top))
                                                     #("i29987"
                                                       "i29988"
                                                       "i29989"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(rest)
                                                     #((top))
                                                     #("i29983"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(f clause clauses)
                                                     #((top) (top) (top))
                                                     #("i29956"
                                                       "i29957"
                                                       "i29958"))
                                                   #(ribcage
                                                     #(e m1 m2)
                                                     #((top) (top) (top))
                                                     #("i29946"
                                                       "i29947"
                                                       "i29948"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i29943")))
                                                  (hygiene guile))
                                               (list '#(syntax-object
                                                        memv
                                                        ((top)
                                                         #(ribcage
                                                           #(k e1 e2)
                                                           #((top) (top) (top))
                                                           #("i29987"
                                                             "i29988"
                                                             "i29989"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(rest)
                                                           #((top))
                                                           #("i29983"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(f clause clauses)
                                                           #((top) (top) (top))
                                                           #("i29956"
                                                             "i29957"
                                                             "i29958"))
                                                         #(ribcage
                                                           #(e m1 m2)
                                                           #((top) (top) (top))
                                                           #("i29946"
                                                             "i29947"
                                                             "i29948"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i29943")))
                                                        (hygiene guile))
                                                     '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(k e1 e2)
                                                           #((top) (top) (top))
                                                           #("i29987"
                                                             "i29988"
                                                             "i29989"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(rest)
                                                           #((top))
                                                           #("i29983"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(f clause clauses)
                                                           #((top) (top) (top))
                                                           #("i29956"
                                                             "i29957"
                                                             "i29958"))
                                                         #(ribcage
                                                           #(e m1 m2)
                                                           #((top) (top) (top))
                                                           #("i29946"
                                                             "i29947"
                                                             "i29948"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i29943")))
                                                        (hygiene guile))
                                                     (list '#(syntax-object
                                                              quote
                                                              ((top)
                                                               #(ribcage
                                                                 #(k e1 e2)
                                                                 #((top)
                                                                   (top)
                                                                   (top))
                                                                 #("i29987"
                                                                   "i29988"
                                                                   "i29989"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(rest)
                                                                 #((top))
                                                                 #("i29983"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(f
                                                                   clause
                                                                   clauses)
                                                                 #((top)
                                                                   (top)
                                                                   (top))
                                                                 #("i29956"
                                                                   "i29957"
                                                                   "i29958"))
                                                               #(ribcage
                                                                 #(e m1 m2)
                                                                 #((top)
                                                                   (top)
                                                                   (top))
                                                                 #("i29946"
                                                                   "i29947"
                                                                   "i29948"))
                                                               #(ribcage
                                                                 ()
                                                                 ()
                                                                 ())
                                                               #(ribcage
                                                                 #(x)
                                                                 #((top))
                                                                 #("i29943")))
                                                              (hygiene guile))
                                                           #{k 30085}#))
                                               (cons '#(syntax-object
                                                        begin
                                                        ((top)
                                                         #(ribcage
                                                           #(k e1 e2)
                                                           #((top) (top) (top))
                                                           #("i29987"
                                                             "i29988"
                                                             "i29989"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(rest)
                                                           #((top))
                                                           #("i29983"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(f clause clauses)
                                                           #((top) (top) (top))
                                                           #("i29956"
                                                             "i29957"
                                                             "i29958"))
                                                         #(ribcage
                                                           #(e m1 m2)
                                                           #((top) (top) (top))
                                                           #("i29946"
                                                             "i29947"
                                                             "i29948"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i29943")))
                                                        (hygiene guile))
                                                     (cons #{e1 30086}#
                                                           #{e2 30087}#))
                                               #{tmp 30078}#))
                                       #{tmp 30081}#)
                                     (syntax-violation
                                       'case
                                       "bad clause"
                                       #{x 29997}#
                                       #{clause 30055}#))))))))
                        (#{f 30052}# #{m1 30004}# #{m2 30005}#))))
                (let ((#{body 30007}# #{tmp 30006}#))
                  (list '#(syntax-object
                           let
                           ((top)
                            #(ribcage () () ())
                            #(ribcage #(body) #((top)) #("i29954"))
                            #(ribcage
                              #(e m1 m2)
                              #((top) (top) (top))
                              #("i29946" "i29947" "i29948"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i29943")))
                           (hygiene guile))
                        (list (list '#(syntax-object
                                       t
                                       ((top)
                                        #(ribcage () () ())
                                        #(ribcage #(body) #((top)) #("i29954"))
                                        #(ribcage
                                          #(e m1 m2)
                                          #((top) (top) (top))
                                          #("i29946" "i29947" "i29948"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i29943")))
                                       (hygiene guile))
                                    #{e 30003}#))
                        #{body 30007}#))))
            #{tmp 29999}#)
          (syntax-violation
            #f
            "source expression failed to match any pattern"
            #{x 29997}#))))))

(define make-variable-transformer
  (lambda (#{proc 30105}#)
    (if (procedure? #{proc 30105}#)
      (letrec*
        ((#{trans 30106}#
           (lambda (#{x 30112}#)
             (#{proc 30105}# #{x 30112}#))))
        (begin
          (set-procedure-property!
            #{trans 30106}#
            'variable-transformer
            #t)
          #{trans 30106}#))
      (error "variable transformer not a procedure"
             #{proc 30105}#))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (lambda (#{x 30144}#)
      (let ((#{tmp 30146}#
              ($sc-dispatch #{x 30144}# '(_ any))))
        (if #{tmp 30146}#
          (@apply
            (lambda (#{e 30150}#)
              (list '#(syntax-object
                       lambda
                       ((top)
                        #(ribcage #(e) #((top)) #("i30119"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i30116")))
                       (hygiene guile))
                    '(#(syntax-object
                        x
                        ((top)
                         #(ribcage #(e) #((top)) #("i30119"))
                         #(ribcage () () ())
                         #(ribcage #(x) #((top)) #("i30116")))
                        (hygiene guile)))
                    '#((#(syntax-object
                          macro-type
                          ((top)
                           #(ribcage #(e) #((top)) #("i30119"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i30116")))
                          (hygiene guile))
                        .
                        #(syntax-object
                          identifier-syntax
                          ((top)
                           #(ribcage #(e) #((top)) #("i30119"))
                           #(ribcage () () ())
                           #(ribcage #(x) #((top)) #("i30116")))
                          (hygiene guile))))
                    (list '#(syntax-object
                             syntax-case
                             ((top)
                              #(ribcage #(e) #((top)) #("i30119"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i30116")))
                             (hygiene guile))
                          '#(syntax-object
                             x
                             ((top)
                              #(ribcage #(e) #((top)) #("i30119"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i30116")))
                             (hygiene guile))
                          '()
                          (list '#(syntax-object
                                   id
                                   ((top)
                                    #(ribcage #(e) #((top)) #("i30119"))
                                    #(ribcage () () ())
                                    #(ribcage #(x) #((top)) #("i30116")))
                                   (hygiene guile))
                                '(#(syntax-object
                                    identifier?
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i30119"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i30116")))
                                    (hygiene guile))
                                  (#(syntax-object
                                     syntax
                                     ((top)
                                      #(ribcage #(e) #((top)) #("i30119"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i30116")))
                                     (hygiene guile))
                                   #(syntax-object
                                     id
                                     ((top)
                                      #(ribcage #(e) #((top)) #("i30119"))
                                      #(ribcage () () ())
                                      #(ribcage #(x) #((top)) #("i30116")))
                                     (hygiene guile))))
                                (list '#(syntax-object
                                         syntax
                                         ((top)
                                          #(ribcage #(e) #((top)) #("i30119"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i30116")))
                                         (hygiene guile))
                                      #{e 30150}#))
                          (list '(#(syntax-object
                                    _
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i30119"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i30116")))
                                    (hygiene guile))
                                  #(syntax-object
                                    x
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i30119"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i30116")))
                                    (hygiene guile))
                                  #(syntax-object
                                    ...
                                    ((top)
                                     #(ribcage #(e) #((top)) #("i30119"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i30116")))
                                    (hygiene guile)))
                                (list '#(syntax-object
                                         syntax
                                         ((top)
                                          #(ribcage #(e) #((top)) #("i30119"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i30116")))
                                         (hygiene guile))
                                      (cons #{e 30150}#
                                            '(#(syntax-object
                                                x
                                                ((top)
                                                 #(ribcage
                                                   #(e)
                                                   #((top))
                                                   #("i30119"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i30116")))
                                                (hygiene guile))
                                              #(syntax-object
                                                ...
                                                ((top)
                                                 #(ribcage
                                                   #(e)
                                                   #((top))
                                                   #("i30119"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i30116")))
                                                (hygiene guile)))))))))
            #{tmp 30146}#)
          (let ((#{tmp 30151}#
                  ($sc-dispatch
                    #{x 30144}#
                    '(_ (any any)
                        ((#(free-id
                            #(syntax-object
                              set!
                              ((top)
                               #(ribcage () () ())
                               #(ribcage #(x) #((top)) #("i30116")))
                              (hygiene guile)))
                          any
                          any)
                         any)))))
            (if (if #{tmp 30151}#
                  (@apply
                    (lambda (#{id 30155}#
                             #{exp1 30156}#
                             #{var 30157}#
                             #{val 30158}#
                             #{exp2 30159}#)
                      (if (identifier? #{id 30155}#)
                        (identifier? #{var 30157}#)
                        #f))
                    #{tmp 30151}#)
                  #f)
              (@apply
                (lambda (#{id 30160}#
                         #{exp1 30161}#
                         #{var 30162}#
                         #{val 30163}#
                         #{exp2 30164}#)
                  (list '#(syntax-object
                           make-variable-transformer
                           ((top)
                            #(ribcage
                              #(id exp1 var val exp2)
                              #((top) (top) (top) (top) (top))
                              #("i30134" "i30135" "i30136" "i30137" "i30138"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i30116")))
                           (hygiene guile))
                        (list '#(syntax-object
                                 lambda
                                 ((top)
                                  #(ribcage
                                    #(id exp1 var val exp2)
                                    #((top) (top) (top) (top) (top))
                                    #("i30134"
                                      "i30135"
                                      "i30136"
                                      "i30137"
                                      "i30138"))
                                  #(ribcage () () ())
                                  #(ribcage #(x) #((top)) #("i30116")))
                                 (hygiene guile))
                              '(#(syntax-object
                                  x
                                  ((top)
                                   #(ribcage
                                     #(id exp1 var val exp2)
                                     #((top) (top) (top) (top) (top))
                                     #("i30134"
                                       "i30135"
                                       "i30136"
                                       "i30137"
                                       "i30138"))
                                   #(ribcage () () ())
                                   #(ribcage #(x) #((top)) #("i30116")))
                                  (hygiene guile)))
                              '#((#(syntax-object
                                    macro-type
                                    ((top)
                                     #(ribcage
                                       #(id exp1 var val exp2)
                                       #((top) (top) (top) (top) (top))
                                       #("i30134"
                                         "i30135"
                                         "i30136"
                                         "i30137"
                                         "i30138"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i30116")))
                                    (hygiene guile))
                                  .
                                  #(syntax-object
                                    variable-transformer
                                    ((top)
                                     #(ribcage
                                       #(id exp1 var val exp2)
                                       #((top) (top) (top) (top) (top))
                                       #("i30134"
                                         "i30135"
                                         "i30136"
                                         "i30137"
                                         "i30138"))
                                     #(ribcage () () ())
                                     #(ribcage #(x) #((top)) #("i30116")))
                                    (hygiene guile))))
                              (list '#(syntax-object
                                       syntax-case
                                       ((top)
                                        #(ribcage
                                          #(id exp1 var val exp2)
                                          #((top) (top) (top) (top) (top))
                                          #("i30134"
                                            "i30135"
                                            "i30136"
                                            "i30137"
                                            "i30138"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i30116")))
                                       (hygiene guile))
                                    '#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(id exp1 var val exp2)
                                          #((top) (top) (top) (top) (top))
                                          #("i30134"
                                            "i30135"
                                            "i30136"
                                            "i30137"
                                            "i30138"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i30116")))
                                       (hygiene guile))
                                    '(#(syntax-object
                                        set!
                                        ((top)
                                         #(ribcage
                                           #(id exp1 var val exp2)
                                           #((top) (top) (top) (top) (top))
                                           #("i30134"
                                             "i30135"
                                             "i30136"
                                             "i30137"
                                             "i30138"))
                                         #(ribcage () () ())
                                         #(ribcage #(x) #((top)) #("i30116")))
                                        (hygiene guile)))
                                    (list (list '#(syntax-object
                                                   set!
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i30134"
                                                        "i30135"
                                                        "i30136"
                                                        "i30137"
                                                        "i30138"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i30116")))
                                                   (hygiene guile))
                                                #{var 30162}#
                                                #{val 30163}#)
                                          (list '#(syntax-object
                                                   syntax
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i30134"
                                                        "i30135"
                                                        "i30136"
                                                        "i30137"
                                                        "i30138"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i30116")))
                                                   (hygiene guile))
                                                #{exp2 30164}#))
                                    (list (cons #{id 30160}#
                                                '(#(syntax-object
                                                    x
                                                    ((top)
                                                     #(ribcage
                                                       #(id exp1 var val exp2)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i30134"
                                                         "i30135"
                                                         "i30136"
                                                         "i30137"
                                                         "i30138"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i30116")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    ...
                                                    ((top)
                                                     #(ribcage
                                                       #(id exp1 var val exp2)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i30134"
                                                         "i30135"
                                                         "i30136"
                                                         "i30137"
                                                         "i30138"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i30116")))
                                                    (hygiene guile))))
                                          (list '#(syntax-object
                                                   syntax
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i30134"
                                                        "i30135"
                                                        "i30136"
                                                        "i30137"
                                                        "i30138"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i30116")))
                                                   (hygiene guile))
                                                (cons #{exp1 30161}#
                                                      '(#(syntax-object
                                                          x
                                                          ((top)
                                                           #(ribcage
                                                             #(id
                                                               exp1
                                                               var
                                                               val
                                                               exp2)
                                                             #((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                             #("i30134"
                                                               "i30135"
                                                               "i30136"
                                                               "i30137"
                                                               "i30138"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i30116")))
                                                          (hygiene guile))
                                                        #(syntax-object
                                                          ...
                                                          ((top)
                                                           #(ribcage
                                                             #(id
                                                               exp1
                                                               var
                                                               val
                                                               exp2)
                                                             #((top)
                                                               (top)
                                                               (top)
                                                               (top)
                                                               (top))
                                                             #("i30134"
                                                               "i30135"
                                                               "i30136"
                                                               "i30137"
                                                               "i30138"))
                                                           #(ribcage () () ())
                                                           #(ribcage
                                                             #(x)
                                                             #((top))
                                                             #("i30116")))
                                                          (hygiene guile))))))
                                    (list #{id 30160}#
                                          (list '#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i30134"
                                                        "i30135"
                                                        "i30136"
                                                        "i30137"
                                                        "i30138"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i30116")))
                                                   (hygiene guile))
                                                (list '#(syntax-object
                                                         syntax
                                                         ((top)
                                                          #(ribcage
                                                            #(id
                                                              exp1
                                                              var
                                                              val
                                                              exp2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i30134"
                                                              "i30135"
                                                              "i30136"
                                                              "i30137"
                                                              "i30138"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i30116")))
                                                         (hygiene guile))
                                                      #{id 30160}#))
                                          (list '#(syntax-object
                                                   syntax
                                                   ((top)
                                                    #(ribcage
                                                      #(id exp1 var val exp2)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i30134"
                                                        "i30135"
                                                        "i30136"
                                                        "i30137"
                                                        "i30138"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i30116")))
                                                   (hygiene guile))
                                                #{exp1 30161}#))))))
                #{tmp 30151}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 30144}#))))))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (lambda (#{x 30196}#)
      (let ((#{tmp 30198}#
              ($sc-dispatch
                #{x 30196}#
                '(_ (any . any) any . each-any))))
        (if #{tmp 30198}#
          (@apply
            (lambda (#{id 30202}#
                     #{args 30203}#
                     #{b0 30204}#
                     #{b1 30205}#)
              (list '#(syntax-object
                       define
                       ((top)
                        #(ribcage
                          #(id args b0 b1)
                          #((top) (top) (top) (top))
                          #("i30178" "i30179" "i30180" "i30181"))
                        #(ribcage () () ())
                        #(ribcage #(x) #((top)) #("i30175")))
                       (hygiene guile))
                    #{id 30202}#
                    (cons '#(syntax-object
                             lambda*
                             ((top)
                              #(ribcage
                                #(id args b0 b1)
                                #((top) (top) (top) (top))
                                #("i30178" "i30179" "i30180" "i30181"))
                              #(ribcage () () ())
                              #(ribcage #(x) #((top)) #("i30175")))
                             (hygiene guile))
                          (cons #{args 30203}#
                                (cons #{b0 30204}# #{b1 30205}#)))))
            #{tmp 30198}#)
          (let ((#{tmp 30206}#
                  ($sc-dispatch #{x 30196}# '(_ any any))))
            (if (if #{tmp 30206}#
                  (@apply
                    (lambda (#{id 30210}# #{val 30211}#)
                      (identifier?
                        '#(syntax-object
                           x
                           ((top)
                            #(ribcage
                              #(id val)
                              #((top) (top))
                              #("i30188" "i30189"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i30175")))
                           (hygiene guile))))
                    #{tmp 30206}#)
                  #f)
              (@apply
                (lambda (#{id 30212}# #{val 30213}#)
                  (list '#(syntax-object
                           define
                           ((top)
                            #(ribcage
                              #(id val)
                              #((top) (top))
                              #("i30192" "i30193"))
                            #(ribcage () () ())
                            #(ribcage #(x) #((top)) #("i30175")))
                           (hygiene guile))
                        #{id 30212}#
                        #{val 30213}#))
                #{tmp 30206}#)
              (syntax-violation
                #f
                "source expression failed to match any pattern"
                #{x 30196}#))))))))

