(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 12627}#
           (lambda (#{f\ 12741}# #{first\ 12742}# . #{rest\ 12743}#)
             (let ((#{t\ 12749}# (null? #{first\ 12742}#)))
               (if #{t\ 12749}#
                 #{t\ 12749}#
                 (if (null? #{rest\ 12743}#)
                   (letrec ((#{andmap\ 12753}#
                              (lambda (#{first\ 12754}#)
                                (let ((#{x\ 12757}# (car #{first\ 12754}#))
                                      (#{first\ 12758}#
                                        (cdr #{first\ 12754}#)))
                                  (if (null? #{first\ 12758}#)
                                    (#{f\ 12741}# #{x\ 12757}#)
                                    (if (#{f\ 12741}# #{x\ 12757}#)
                                      (#{andmap\ 12753}# #{first\ 12758}#)
                                      #f))))))
                     (#{andmap\ 12753}# #{first\ 12742}#))
                   (letrec ((#{andmap\ 12764}#
                              (lambda (#{first\ 12765}# #{rest\ 12766}#)
                                (let ((#{x\ 12771}# (car #{first\ 12765}#))
                                      (#{xr\ 12772}# (map car #{rest\ 12766}#))
                                      (#{first\ 12773}# (cdr #{first\ 12765}#))
                                      (#{rest\ 12774}#
                                        (map cdr #{rest\ 12766}#)))
                                  (if (null? #{first\ 12773}#)
                                    (apply #{f\ 12741}#
                                           (cons #{x\ 12771}# #{xr\ 12772}#))
                                    (if (apply #{f\ 12741}#
                                               (cons #{x\ 12771}#
                                                     #{xr\ 12772}#))
                                      (#{andmap\ 12764}#
                                        #{first\ 12773}#
                                        #{rest\ 12774}#)
                                      #f))))))
                     (#{andmap\ 12764}#
                       #{first\ 12742}#
                       #{rest\ 12743}#))))))))
  (letrec ((#{lambda-var-list\ 13031}#
             (lambda (#{vars\ 13246}#)
               (letrec ((#{lvl\ 13252}#
                          (lambda (#{vars\ 13253}# #{ls\ 13254}# #{w\ 13255}#)
                            (if (pair? #{vars\ 13253}#)
                              (#{lvl\ 13252}#
                                (cdr #{vars\ 13253}#)
                                (cons (#{wrap\ 12985}#
                                        (car #{vars\ 13253}#)
                                        #{w\ 13255}#
                                        #f)
                                      #{ls\ 13254}#)
                                #{w\ 13255}#)
                              (if (#{id?\ 12916}# #{vars\ 13253}#)
                                (cons (#{wrap\ 12985}#
                                        #{vars\ 13253}#
                                        #{w\ 13255}#
                                        #f)
                                      #{ls\ 13254}#)
                                (if (null? #{vars\ 13253}#)
                                  #{ls\ 13254}#
                                  (if (#{syntax-object?\ 12880}#
                                        #{vars\ 13253}#)
                                    (#{lvl\ 13252}#
                                      (#{syntax-object-expression\ 12882}#
                                        #{vars\ 13253}#)
                                      #{ls\ 13254}#
                                      (#{join-wraps\ 12967}#
                                        #{w\ 13255}#
                                        (#{syntax-object-wrap\ 12884}#
                                          #{vars\ 13253}#)))
                                    (cons #{vars\ 13253}# #{ls\ 13254}#))))))))
                 (#{lvl\ 13252}#
                   #{vars\ 13246}#
                   '()
                   '(())))))
           (#{gen-var\ 13029}#
             (lambda (#{id\ 13266}#)
               (let ((#{id\ 13269}#
                       (if (#{syntax-object?\ 12880}# #{id\ 13266}#)
                         (#{syntax-object-expression\ 12882}#
                           #{id\ 13266}#)
                         #{id\ 13266}#)))
                 (gensym
                   (string-append
                     (symbol->string #{id\ 13269}#)
                     " ")))))
           (#{strip\ 13027}#
             (lambda (#{x\ 13271}# #{w\ 13272}#)
               (if (memq 'top
                         (#{wrap-marks\ 12923}# #{w\ 13272}#))
                 #{x\ 13271}#
                 (letrec ((#{f\ 13278}#
                            (lambda (#{x\ 13279}#)
                              (if (#{syntax-object?\ 12880}# #{x\ 13279}#)
                                (#{strip\ 13027}#
                                  (#{syntax-object-expression\ 12882}#
                                    #{x\ 13279}#)
                                  (#{syntax-object-wrap\ 12884}# #{x\ 13279}#))
                                (if (pair? #{x\ 13279}#)
                                  (let ((#{a\ 13286}#
                                          (#{f\ 13278}# (car #{x\ 13279}#)))
                                        (#{d\ 13287}#
                                          (#{f\ 13278}# (cdr #{x\ 13279}#))))
                                    (if (if (eq? #{a\ 13286}#
                                                 (car #{x\ 13279}#))
                                          (eq? #{d\ 13287}# (cdr #{x\ 13279}#))
                                          #f)
                                      #{x\ 13279}#
                                      (cons #{a\ 13286}# #{d\ 13287}#)))
                                  (if (vector? #{x\ 13279}#)
                                    (let ((#{old\ 13293}#
                                            (vector->list #{x\ 13279}#)))
                                      (let ((#{new\ 13295}#
                                              (map #{f\ 13278}#
                                                   #{old\ 13293}#)))
                                        (if (#{and-map*\ 12627}#
                                              eq?
                                              #{old\ 13293}#
                                              #{new\ 13295}#)
                                          #{x\ 13279}#
                                          (list->vector #{new\ 13295}#))))
                                    #{x\ 13279}#))))))
                   (#{f\ 13278}# #{x\ 13271}#)))))
           (#{chi-lambda-case\ 13025}#
             (lambda (#{e\ 13297}#
                      #{r\ 13298}#
                      #{w\ 13299}#
                      #{s\ 13300}#
                      #{mod\ 13301}#
                      #{get-formals\ 13302}#
                      #{clauses\ 13303}#)
               (letrec ((#{expand-body\ 13318}#
                          (lambda (#{req\ 13319}#
                                   #{opt\ 13320}#
                                   #{rest\ 13321}#
                                   #{kw\ 13322}#
                                   #{body\ 13323}#
                                   #{vars\ 13324}#
                                   #{r*\ 13325}#
                                   #{w*\ 13326}#
                                   #{inits\ 13327}#
                                   #{meta\ 13328}#)
                            ((lambda (#{tmp\ 13339}#)
                               ((lambda (#{tmp\ 13340}#)
                                  (if (if #{tmp\ 13340}#
                                        (apply (lambda (#{docstring\ 13344}#
                                                        #{e1\ 13345}#
                                                        #{e2\ 13346}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 13344}#)))
                                               #{tmp\ 13340}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 13350}#
                                                    #{e1\ 13351}#
                                                    #{e2\ 13352}#)
                                             (#{expand-body\ 13318}#
                                               #{req\ 13319}#
                                               #{opt\ 13320}#
                                               #{rest\ 13321}#
                                               #{kw\ 13322}#
                                               (cons #{e1\ 13351}#
                                                     #{e2\ 13352}#)
                                               #{vars\ 13324}#
                                               #{r*\ 13325}#
                                               #{w*\ 13326}#
                                               #{inits\ 13327}#
                                               (append
                                                 #{meta\ 13328}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 13350}#))))))
                                           #{tmp\ 13340}#)
                                    ((lambda (#{tmp\ 13355}#)
                                       (if #{tmp\ 13355}#
                                         (apply (lambda (#{k\ 13360}#
                                                         #{v\ 13361}#
                                                         #{e1\ 13362}#
                                                         #{e2\ 13363}#)
                                                  (#{expand-body\ 13318}#
                                                    #{req\ 13319}#
                                                    #{opt\ 13320}#
                                                    #{rest\ 13321}#
                                                    #{kw\ 13322}#
                                                    (cons #{e1\ 13362}#
                                                          #{e2\ 13363}#)
                                                    #{vars\ 13324}#
                                                    #{r*\ 13325}#
                                                    #{w*\ 13326}#
                                                    #{inits\ 13327}#
                                                    (append
                                                      #{meta\ 13328}#
                                                      (syntax->datum
                                                        (map cons
                                                             #{k\ 13360}#
                                                             #{v\ 13361}#)))))
                                                #{tmp\ 13355}#)
                                         ((lambda (#{tmp\ 13367}#)
                                            (if #{tmp\ 13367}#
                                              (apply (lambda (#{e1\ 13370}#
                                                              #{e2\ 13371}#)
                                                       (values
                                                         #{meta\ 13328}#
                                                         #{req\ 13319}#
                                                         #{opt\ 13320}#
                                                         #{rest\ 13321}#
                                                         #{kw\ 13322}#
                                                         #{inits\ 13327}#
                                                         #{vars\ 13324}#
                                                         (#{chi-body\ 13009}#
                                                           (cons #{e1\ 13370}#
                                                                 #{e2\ 13371}#)
                                                           (#{source-wrap\ 12987}#
                                                             #{e\ 13297}#
                                                             #{w\ 13299}#
                                                             #{s\ 13300}#
                                                             #{mod\ 13301}#)
                                                           #{r*\ 13325}#
                                                           #{w*\ 13326}#
                                                           #{mod\ 13301}#)))
                                                     #{tmp\ 13367}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{tmp\ 13339}#)))
                                          ($sc-dispatch
                                            #{tmp\ 13339}#
                                            '(any . each-any)))))
                                     ($sc-dispatch
                                       #{tmp\ 13339}#
                                       '(#(vector #(each (any . any)))
                                         any
                                         .
                                         each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 13339}#
                                  '(any any . each-any))))
                             #{body\ 13323}#)))
                        (#{expand-kw\ 13316}#
                          (lambda (#{req\ 13373}#
                                   #{opt\ 13374}#
                                   #{rest\ 13375}#
                                   #{kw\ 13376}#
                                   #{body\ 13377}#
                                   #{vars\ 13378}#
                                   #{r*\ 13379}#
                                   #{w*\ 13380}#
                                   #{aok\ 13381}#
                                   #{out\ 13382}#
                                   #{inits\ 13383}#)
                            (if (pair? #{kw\ 13376}#)
                              ((lambda (#{tmp\ 13397}#)
                                 ((lambda (#{tmp\ 13398}#)
                                    (if #{tmp\ 13398}#
                                      (apply (lambda (#{k\ 13402}#
                                                      #{id\ 13403}#
                                                      #{i\ 13404}#)
                                               (let ((#{v\ 13407}#
                                                       (#{gen-var\ 13029}#
                                                         #{id\ 13403}#)))
                                                 (let ((#{l\ 13409}#
                                                         (#{gen-labels\ 12934}#
                                                           (list #{v\ 13407}#))))
                                                   (let ((#{r**\ 13411}#
                                                           (#{extend-var-env\ 12906}#
                                                             #{l\ 13409}#
                                                             (list #{v\ 13407}#)
                                                             #{r*\ 13379}#)))
                                                     (let ((#{w**\ 13413}#
                                                             (#{make-binding-wrap\ 12963}#
                                                               (list #{id\ 13403}#)
                                                               #{l\ 13409}#
                                                               #{w*\ 13380}#)))
                                                       (#{expand-kw\ 13316}#
                                                         #{req\ 13373}#
                                                         #{opt\ 13374}#
                                                         #{rest\ 13375}#
                                                         (cdr #{kw\ 13376}#)
                                                         #{body\ 13377}#
                                                         (cons #{v\ 13407}#
                                                               #{vars\ 13378}#)
                                                         #{r**\ 13411}#
                                                         #{w**\ 13413}#
                                                         #{aok\ 13381}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 13402}#)
                                                                     (syntax->datum
                                                                       #{id\ 13403}#)
                                                                     #{v\ 13407}#)
                                                               #{out\ 13382}#)
                                                         (cons (#{chi\ 13001}#
                                                                 #{i\ 13404}#
                                                                 #{r*\ 13379}#
                                                                 #{w*\ 13380}#
                                                                 #{mod\ 13301}#)
                                                               #{inits\ 13383}#)))))))
                                             #{tmp\ 13398}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 13397}#)))
                                  ($sc-dispatch
                                    #{tmp\ 13397}#
                                    '(any any any))))
                               (car #{kw\ 13376}#))
                              (#{expand-body\ 13318}#
                                #{req\ 13373}#
                                #{opt\ 13374}#
                                #{rest\ 13375}#
                                (if (let ((#{t\ 13417}# #{aok\ 13381}#))
                                      (if #{t\ 13417}#
                                        #{t\ 13417}#
                                        (pair? #{out\ 13382}#)))
                                  (cons #{aok\ 13381}#
                                        (reverse #{out\ 13382}#))
                                  #f)
                                #{body\ 13377}#
                                (reverse #{vars\ 13378}#)
                                #{r*\ 13379}#
                                #{w*\ 13380}#
                                (reverse #{inits\ 13383}#)
                                '()))))
                        (#{expand-opt\ 13314}#
                          (lambda (#{req\ 13419}#
                                   #{opt\ 13420}#
                                   #{rest\ 13421}#
                                   #{kw\ 13422}#
                                   #{body\ 13423}#
                                   #{vars\ 13424}#
                                   #{r*\ 13425}#
                                   #{w*\ 13426}#
                                   #{out\ 13427}#
                                   #{inits\ 13428}#)
                            (if (pair? #{opt\ 13420}#)
                              ((lambda (#{tmp\ 13441}#)
                                 ((lambda (#{tmp\ 13442}#)
                                    (if #{tmp\ 13442}#
                                      (apply (lambda (#{id\ 13445}#
                                                      #{i\ 13446}#)
                                               (let ((#{v\ 13449}#
                                                       (#{gen-var\ 13029}#
                                                         #{id\ 13445}#)))
                                                 (let ((#{l\ 13451}#
                                                         (#{gen-labels\ 12934}#
                                                           (list #{v\ 13449}#))))
                                                   (let ((#{r**\ 13453}#
                                                           (#{extend-var-env\ 12906}#
                                                             #{l\ 13451}#
                                                             (list #{v\ 13449}#)
                                                             #{r*\ 13425}#)))
                                                     (let ((#{w**\ 13455}#
                                                             (#{make-binding-wrap\ 12963}#
                                                               (list #{id\ 13445}#)
                                                               #{l\ 13451}#
                                                               #{w*\ 13426}#)))
                                                       (#{expand-opt\ 13314}#
                                                         #{req\ 13419}#
                                                         (cdr #{opt\ 13420}#)
                                                         #{rest\ 13421}#
                                                         #{kw\ 13422}#
                                                         #{body\ 13423}#
                                                         (cons #{v\ 13449}#
                                                               #{vars\ 13424}#)
                                                         #{r**\ 13453}#
                                                         #{w**\ 13455}#
                                                         (cons (syntax->datum
                                                                 #{id\ 13445}#)
                                                               #{out\ 13427}#)
                                                         (cons (#{chi\ 13001}#
                                                                 #{i\ 13446}#
                                                                 #{r*\ 13425}#
                                                                 #{w*\ 13426}#
                                                                 #{mod\ 13301}#)
                                                               #{inits\ 13428}#)))))))
                                             #{tmp\ 13442}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 13441}#)))
                                  ($sc-dispatch
                                    #{tmp\ 13441}#
                                    '(any any))))
                               (car #{opt\ 13420}#))
                              (if #{rest\ 13421}#
                                (let ((#{v\ 13460}#
                                        (#{gen-var\ 13029}# #{rest\ 13421}#)))
                                  (let ((#{l\ 13462}#
                                          (#{gen-labels\ 12934}#
                                            (list #{v\ 13460}#))))
                                    (let ((#{r*\ 13464}#
                                            (#{extend-var-env\ 12906}#
                                              #{l\ 13462}#
                                              (list #{v\ 13460}#)
                                              #{r*\ 13425}#)))
                                      (let ((#{w*\ 13466}#
                                              (#{make-binding-wrap\ 12963}#
                                                (list #{rest\ 13421}#)
                                                #{l\ 13462}#
                                                #{w*\ 13426}#)))
                                        (#{expand-kw\ 13316}#
                                          #{req\ 13419}#
                                          (if (pair? #{out\ 13427}#)
                                            (reverse #{out\ 13427}#)
                                            #f)
                                          (syntax->datum #{rest\ 13421}#)
                                          (if (pair? #{kw\ 13422}#)
                                            (cdr #{kw\ 13422}#)
                                            #{kw\ 13422}#)
                                          #{body\ 13423}#
                                          (cons #{v\ 13460}# #{vars\ 13424}#)
                                          #{r*\ 13464}#
                                          #{w*\ 13466}#
                                          (if (pair? #{kw\ 13422}#)
                                            (car #{kw\ 13422}#)
                                            #f)
                                          '()
                                          #{inits\ 13428}#)))))
                                (#{expand-kw\ 13316}#
                                  #{req\ 13419}#
                                  (if (pair? #{out\ 13427}#)
                                    (reverse #{out\ 13427}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 13422}#)
                                    (cdr #{kw\ 13422}#)
                                    #{kw\ 13422}#)
                                  #{body\ 13423}#
                                  #{vars\ 13424}#
                                  #{r*\ 13425}#
                                  #{w*\ 13426}#
                                  (if (pair? #{kw\ 13422}#)
                                    (car #{kw\ 13422}#)
                                    #f)
                                  '()
                                  #{inits\ 13428}#)))))
                        (#{expand-req\ 13312}#
                          (lambda (#{req\ 13468}#
                                   #{opt\ 13469}#
                                   #{rest\ 13470}#
                                   #{kw\ 13471}#
                                   #{body\ 13472}#)
                            (let ((#{vars\ 13480}#
                                    (map #{gen-var\ 13029}# #{req\ 13468}#))
                                  (#{labels\ 13481}#
                                    (#{gen-labels\ 12934}# #{req\ 13468}#)))
                              (let ((#{r*\ 13484}#
                                      (#{extend-var-env\ 12906}#
                                        #{labels\ 13481}#
                                        #{vars\ 13480}#
                                        #{r\ 13298}#))
                                    (#{w*\ 13485}#
                                      (#{make-binding-wrap\ 12963}#
                                        #{req\ 13468}#
                                        #{labels\ 13481}#
                                        #{w\ 13299}#)))
                                (#{expand-opt\ 13314}#
                                  (map syntax->datum #{req\ 13468}#)
                                  #{opt\ 13469}#
                                  #{rest\ 13470}#
                                  #{kw\ 13471}#
                                  #{body\ 13472}#
                                  (reverse #{vars\ 13480}#)
                                  #{r*\ 13484}#
                                  #{w*\ 13485}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 13486}#)
                    ((lambda (#{tmp\ 13487}#)
                       (if #{tmp\ 13487}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 13487}#)
                         ((lambda (#{tmp\ 13488}#)
                            (if #{tmp\ 13488}#
                              (apply (lambda (#{args\ 13495}#
                                              #{e1\ 13496}#
                                              #{e2\ 13497}#
                                              #{args*\ 13498}#
                                              #{e1*\ 13499}#
                                              #{e2*\ 13500}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 13302}#
                                             #{args\ 13495}#))
                                         (lambda (#{req\ 13501}#
                                                  #{opt\ 13502}#
                                                  #{rest\ 13503}#
                                                  #{kw\ 13504}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 13312}#
                                                 #{req\ 13501}#
                                                 #{opt\ 13502}#
                                                 #{rest\ 13503}#
                                                 #{kw\ 13504}#
                                                 (cons #{e1\ 13496}#
                                                       #{e2\ 13497}#)))
                                             (lambda (#{meta\ 13510}#
                                                      #{req\ 13511}#
                                                      #{opt\ 13512}#
                                                      #{rest\ 13513}#
                                                      #{kw\ 13514}#
                                                      #{inits\ 13515}#
                                                      #{vars\ 13516}#
                                                      #{body\ 13517}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 13025}#
                                                     #{e\ 13297}#
                                                     #{r\ 13298}#
                                                     #{w\ 13299}#
                                                     #{s\ 13300}#
                                                     #{mod\ 13301}#
                                                     #{get-formals\ 13302}#
                                                     (map (lambda (#{tmp\ 13528}#
                                                                   #{tmp\ 13527}#
                                                                   #{tmp\ 13526}#)
                                                            (cons #{tmp\ 13526}#
                                                                  (cons #{tmp\ 13527}#
                                                                        #{tmp\ 13528}#)))
                                                          #{e2*\ 13500}#
                                                          #{e1*\ 13499}#
                                                          #{args*\ 13498}#)))
                                                 (lambda (#{meta*\ 13530}#
                                                          #{else*\ 13531}#)
                                                   (values
                                                     (append
                                                       #{meta\ 13510}#
                                                       #{meta*\ 13530}#)
                                                     (#{build-lambda-case\ 12862}#
                                                       #{s\ 13300}#
                                                       #{req\ 13511}#
                                                       #{opt\ 13512}#
                                                       #{rest\ 13513}#
                                                       #{kw\ 13514}#
                                                       #{inits\ 13515}#
                                                       #{vars\ 13516}#
                                                       #{body\ 13517}#
                                                       #{else*\ 13531}#)))))))))
                                     #{tmp\ 13488}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 13486}#)))
                          ($sc-dispatch
                            #{tmp\ 13486}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 13486}# (quote ()))))
                  #{clauses\ 13303}#))))
           (#{lambda*-formals\ 13023}#
             (lambda (#{orig-args\ 13534}#)
               (letrec ((#{check\ 13545}#
                          (lambda (#{req\ 13546}#
                                   #{opt\ 13547}#
                                   #{rest\ 13548}#
                                   #{kw\ 13549}#)
                            (if (#{distinct-bound-ids?\ 12981}#
                                  (append
                                    #{req\ 13546}#
                                    (map car #{opt\ 13547}#)
                                    (if #{rest\ 13548}#
                                      (list #{rest\ 13548}#)
                                      '())
                                    (if (pair? #{kw\ 13549}#)
                                      (map cadr (cdr #{kw\ 13549}#))
                                      '())))
                              (values
                                #{req\ 13546}#
                                #{opt\ 13547}#
                                #{rest\ 13548}#
                                #{kw\ 13549}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 13534}#))))
                        (#{rest\ 13543}#
                          (lambda (#{args\ 13557}#
                                   #{req\ 13558}#
                                   #{opt\ 13559}#
                                   #{kw\ 13560}#)
                            ((lambda (#{tmp\ 13565}#)
                               ((lambda (#{tmp\ 13566}#)
                                  (if (if #{tmp\ 13566}#
                                        (apply (lambda (#{r\ 13568}#)
                                                 (#{id?\ 12916}# #{r\ 13568}#))
                                               #{tmp\ 13566}#)
                                        #f)
                                    (apply (lambda (#{r\ 13570}#)
                                             (#{check\ 13545}#
                                               #{req\ 13558}#
                                               #{opt\ 13559}#
                                               #{r\ 13570}#
                                               #{kw\ 13560}#))
                                           #{tmp\ 13566}#)
                                    ((lambda (#{else\ 13572}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 13534}#
                                         #{args\ 13557}#))
                                     #{tmp\ 13565}#)))
                                (list #{tmp\ 13565}#)))
                             #{args\ 13557}#)))
                        (#{key\ 13541}#
                          (lambda (#{args\ 13573}#
                                   #{req\ 13574}#
                                   #{opt\ 13575}#
                                   #{rkey\ 13576}#)
                            ((lambda (#{tmp\ 13581}#)
                               ((lambda (#{tmp\ 13582}#)
                                  (if #{tmp\ 13582}#
                                    (apply (lambda ()
                                             (#{check\ 13545}#
                                               #{req\ 13574}#
                                               #{opt\ 13575}#
                                               #f
                                               (cons #f
                                                     (reverse
                                                       #{rkey\ 13576}#))))
                                           #{tmp\ 13582}#)
                                    ((lambda (#{tmp\ 13583}#)
                                       (if (if #{tmp\ 13583}#
                                             (apply (lambda (#{a\ 13586}#
                                                             #{b\ 13587}#)
                                                      (#{id?\ 12916}#
                                                        #{a\ 13586}#))
                                                    #{tmp\ 13583}#)
                                             #f)
                                         (apply (lambda (#{a\ 13590}#
                                                         #{b\ 13591}#)
                                                  ((lambda (#{tmp\ 13593}#)
                                                     ((lambda (#{k\ 13595}#)
                                                        (#{key\ 13541}#
                                                          #{b\ 13591}#
                                                          #{req\ 13574}#
                                                          #{opt\ 13575}#
                                                          (cons (cons #{k\ 13595}#
                                                                      (cons #{a\ 13590}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i13594"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i13588"
                                                                                     "i13589"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i13577"
                                                                                     "i13578"
                                                                                     "i13579"
                                                                                     "i13580"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i13544"
                                                                                    "i13542"
                                                                                    "i13540"
                                                                                    "i13538"
                                                                                    "i13536"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i13535"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     make-dynlet
                                                                                     make-letrec
                                                                                     make-let
                                                                                     make-lambda-case
                                                                                     make-lambda
                                                                                     make-sequence
                                                                                     make-application
                                                                                     make-conditional
                                                                                     make-toplevel-define
                                                                                     make-toplevel-set
                                                                                     make-toplevel-ref
                                                                                     make-module-set
                                                                                     make-module-ref
                                                                                     make-lexical-set
                                                                                     make-lexical-ref
                                                                                     make-primitive-ref
                                                                                     make-const
                                                                                     make-void
                                                                                     *mode*)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i13030"
                                                                                    "i13028"
                                                                                    "i13026"
                                                                                    "i13024"
                                                                                    "i13022"
                                                                                    "i13020"
                                                                                    "i13018"
                                                                                    "i13016"
                                                                                    "i13014"
                                                                                    "i13012"
                                                                                    "i13010"
                                                                                    "i13008"
                                                                                    "i13006"
                                                                                    "i13004"
                                                                                    "i13002"
                                                                                    "i13000"
                                                                                    "i12998"
                                                                                    "i12996"
                                                                                    "i12994"
                                                                                    "i12992"
                                                                                    "i12990"
                                                                                    "i12988"
                                                                                    "i12986"
                                                                                    "i12984"
                                                                                    "i12982"
                                                                                    "i12980"
                                                                                    "i12978"
                                                                                    "i12976"
                                                                                    "i12974"
                                                                                    "i12972"
                                                                                    "i12970"
                                                                                    "i12968"
                                                                                    "i12966"
                                                                                    "i12964"
                                                                                    "i12962"
                                                                                    "i12960"
                                                                                    "i12959"
                                                                                    "i12958"
                                                                                    "i12956"
                                                                                    "i12955"
                                                                                    "i12954"
                                                                                    "i12953"
                                                                                    "i12952"
                                                                                    "i12950"
                                                                                    "i12948"
                                                                                    "i12946"
                                                                                    "i12944"
                                                                                    "i12942"
                                                                                    "i12940"
                                                                                    "i12938"
                                                                                    "i12936"
                                                                                    "i12933"
                                                                                    "i12931"
                                                                                    "i12930"
                                                                                    "i12929"
                                                                                    "i12928"
                                                                                    "i12927"
                                                                                    "i12926"
                                                                                    "i12924"
                                                                                    "i12922"
                                                                                    "i12920"
                                                                                    "i12918"
                                                                                    "i12917"
                                                                                    "i12915"
                                                                                    "i12913"
                                                                                    "i12911"
                                                                                    "i12909"
                                                                                    "i12907"
                                                                                    "i12905"
                                                                                    "i12903"
                                                                                    "i12902"
                                                                                    "i12900"
                                                                                    "i12898"
                                                                                    "i12897"
                                                                                    "i12896"
                                                                                    "i12894"
                                                                                    "i12893"
                                                                                    "i12891"
                                                                                    "i12889"
                                                                                    "i12887"
                                                                                    "i12885"
                                                                                    "i12883"
                                                                                    "i12881"
                                                                                    "i12879"
                                                                                    "i12877"
                                                                                    "i12875"
                                                                                    "i12873"
                                                                                    "i12871"
                                                                                    "i12869"
                                                                                    "i12867"
                                                                                    "i12865"
                                                                                    "i12863"
                                                                                    "i12861"
                                                                                    "i12859"
                                                                                    "i12857"
                                                                                    "i12855"
                                                                                    "i12853"
                                                                                    "i12851"
                                                                                    "i12849"
                                                                                    "i12847"
                                                                                    "i12845"
                                                                                    "i12843"
                                                                                    "i12841"
                                                                                    "i12839"
                                                                                    "i12837"
                                                                                    "i12835"
                                                                                    "i12833"
                                                                                    "i12831"
                                                                                    "i12829"
                                                                                    "i12828"
                                                                                    "i12826"
                                                                                    "i12824"
                                                                                    "i12822"
                                                                                    "i12820"
                                                                                    "i12818"
                                                                                    "i12816"
                                                                                    "i12814"
                                                                                    "i12812"
                                                                                    "i12810"
                                                                                    "i12808"
                                                                                    "i12806"
                                                                                    "i12804"
                                                                                    "i12802"
                                                                                    "i12800"
                                                                                    "i12798"
                                                                                    "i12796"
                                                                                    "i12794"
                                                                                    "i12792"
                                                                                    "i12790"
                                                                                    "i12788"
                                                                                    "i12786"
                                                                                    "i12784"
                                                                                    "i12782"
                                                                                    "i12780"
                                                                                    "i12777"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     define-expansion-constructors
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i12629"
                                                                                    "i12628"
                                                                                    "i12626")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 13576}#)))
                                                      #{tmp\ 13593}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 13590}#))))
                                                #{tmp\ 13583}#)
                                         ((lambda (#{tmp\ 13596}#)
                                            (if (if #{tmp\ 13596}#
                                                  (apply (lambda (#{a\ 13600}#
                                                                  #{init\ 13601}#
                                                                  #{b\ 13602}#)
                                                           (#{id?\ 12916}#
                                                             #{a\ 13600}#))
                                                         #{tmp\ 13596}#)
                                                  #f)
                                              (apply (lambda (#{a\ 13606}#
                                                              #{init\ 13607}#
                                                              #{b\ 13608}#)
                                                       ((lambda (#{tmp\ 13610}#)
                                                          ((lambda (#{k\ 13612}#)
                                                             (#{key\ 13541}#
                                                               #{b\ 13608}#
                                                               #{req\ 13574}#
                                                               #{opt\ 13575}#
                                                               (cons (list #{k\ 13612}#
                                                                           #{a\ 13606}#
                                                                           #{init\ 13607}#)
                                                                     #{rkey\ 13576}#)))
                                                           #{tmp\ 13610}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 13606}#))))
                                                     #{tmp\ 13596}#)
                                              ((lambda (#{tmp\ 13613}#)
                                                 (if (if #{tmp\ 13613}#
                                                       (apply (lambda (#{a\ 13618}#
                                                                       #{init\ 13619}#
                                                                       #{k\ 13620}#
                                                                       #{b\ 13621}#)
                                                                (if (#{id?\ 12916}#
                                                                      #{a\ 13618}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 13620}#))
                                                                  #f))
                                                              #{tmp\ 13613}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 13628}#
                                                                   #{init\ 13629}#
                                                                   #{k\ 13630}#
                                                                   #{b\ 13631}#)
                                                            (#{key\ 13541}#
                                                              #{b\ 13631}#
                                                              #{req\ 13574}#
                                                              #{opt\ 13575}#
                                                              (cons (list #{k\ 13630}#
                                                                          #{a\ 13628}#
                                                                          #{init\ 13629}#)
                                                                    #{rkey\ 13576}#)))
                                                          #{tmp\ 13613}#)
                                                   ((lambda (#{tmp\ 13632}#)
                                                      (if (if #{tmp\ 13632}#
                                                            (apply (lambda (#{aok\ 13634}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 13634}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 13632}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 13636}#)
                                                                 (#{check\ 13545}#
                                                                   #{req\ 13574}#
                                                                   #{opt\ 13575}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 13576}#))))
                                                               #{tmp\ 13632}#)
                                                        ((lambda (#{tmp\ 13637}#)
                                                           (if (if #{tmp\ 13637}#
                                                                 (apply (lambda (#{aok\ 13641}#
                                                                                 #{a\ 13642}#
                                                                                 #{b\ 13643}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 13641}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 13642}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 13637}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 13649}#
                                                                             #{a\ 13650}#
                                                                             #{b\ 13651}#)
                                                                      (#{rest\ 13543}#
                                                                        #{b\ 13651}#
                                                                        #{req\ 13574}#
                                                                        #{opt\ 13575}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 13576}#))))
                                                                    #{tmp\ 13637}#)
                                                             ((lambda (#{tmp\ 13652}#)
                                                                (if (if #{tmp\ 13652}#
                                                                      (apply (lambda (#{aok\ 13655}#
                                                                                      #{r\ 13656}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 13655}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 12916}#
                                                                                   #{r\ 13656}#)
                                                                                 #f))
                                                                             #{tmp\ 13652}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 13661}#
                                                                                  #{r\ 13662}#)
                                                                           (#{rest\ 13543}#
                                                                             #{r\ 13662}#
                                                                             #{req\ 13574}#
                                                                             #{opt\ 13575}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 13576}#))))
                                                                         #{tmp\ 13652}#)
                                                                  ((lambda (#{tmp\ 13663}#)
                                                                     (if (if #{tmp\ 13663}#
                                                                           (apply (lambda (#{a\ 13666}#
                                                                                           #{b\ 13667}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 13666}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 13663}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 13670}#
                                                                                       #{b\ 13671}#)
                                                                                (#{rest\ 13543}#
                                                                                  #{b\ 13671}#
                                                                                  #{req\ 13574}#
                                                                                  #{opt\ 13575}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 13576}#))))
                                                                              #{tmp\ 13663}#)
                                                                       ((lambda (#{tmp\ 13672}#)
                                                                          (if (if #{tmp\ 13672}#
                                                                                (apply (lambda (#{r\ 13674}#)
                                                                                         (#{id?\ 12916}#
                                                                                           #{r\ 13674}#))
                                                                                       #{tmp\ 13672}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 13676}#)
                                                                                     (#{rest\ 13543}#
                                                                                       #{r\ 13676}#
                                                                                       #{req\ 13574}#
                                                                                       #{opt\ 13575}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 13576}#))))
                                                                                   #{tmp\ 13672}#)
                                                                            ((lambda (#{else\ 13678}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 13534}#
                                                                                 #{args\ 13573}#))
                                                                             #{tmp\ 13581}#)))
                                                                        (list #{tmp\ 13581}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 13581}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 13581}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 13581}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 13581}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 13581}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 13581}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 13581}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 13581}# (quote ()))))
                             #{args\ 13573}#)))
                        (#{opt\ 13539}#
                          (lambda (#{args\ 13679}#
                                   #{req\ 13680}#
                                   #{ropt\ 13681}#)
                            ((lambda (#{tmp\ 13685}#)
                               ((lambda (#{tmp\ 13686}#)
                                  (if #{tmp\ 13686}#
                                    (apply (lambda ()
                                             (#{check\ 13545}#
                                               #{req\ 13680}#
                                               (reverse #{ropt\ 13681}#)
                                               #f
                                               '()))
                                           #{tmp\ 13686}#)
                                    ((lambda (#{tmp\ 13687}#)
                                       (if (if #{tmp\ 13687}#
                                             (apply (lambda (#{a\ 13690}#
                                                             #{b\ 13691}#)
                                                      (#{id?\ 12916}#
                                                        #{a\ 13690}#))
                                                    #{tmp\ 13687}#)
                                             #f)
                                         (apply (lambda (#{a\ 13694}#
                                                         #{b\ 13695}#)
                                                  (#{opt\ 13539}#
                                                    #{b\ 13695}#
                                                    #{req\ 13680}#
                                                    (cons (cons #{a\ 13694}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i13692"
                                                                         "i13693"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i13682"
                                                                         "i13683"
                                                                         "i13684"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i13544"
                                                                        "i13542"
                                                                        "i13540"
                                                                        "i13538"
                                                                        "i13536"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i13535"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         make-dynlet
                                                                         make-letrec
                                                                         make-let
                                                                         make-lambda-case
                                                                         make-lambda
                                                                         make-sequence
                                                                         make-application
                                                                         make-conditional
                                                                         make-toplevel-define
                                                                         make-toplevel-set
                                                                         make-toplevel-ref
                                                                         make-module-set
                                                                         make-module-ref
                                                                         make-lexical-set
                                                                         make-lexical-ref
                                                                         make-primitive-ref
                                                                         make-const
                                                                         make-void
                                                                         *mode*)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i13030"
                                                                        "i13028"
                                                                        "i13026"
                                                                        "i13024"
                                                                        "i13022"
                                                                        "i13020"
                                                                        "i13018"
                                                                        "i13016"
                                                                        "i13014"
                                                                        "i13012"
                                                                        "i13010"
                                                                        "i13008"
                                                                        "i13006"
                                                                        "i13004"
                                                                        "i13002"
                                                                        "i13000"
                                                                        "i12998"
                                                                        "i12996"
                                                                        "i12994"
                                                                        "i12992"
                                                                        "i12990"
                                                                        "i12988"
                                                                        "i12986"
                                                                        "i12984"
                                                                        "i12982"
                                                                        "i12980"
                                                                        "i12978"
                                                                        "i12976"
                                                                        "i12974"
                                                                        "i12972"
                                                                        "i12970"
                                                                        "i12968"
                                                                        "i12966"
                                                                        "i12964"
                                                                        "i12962"
                                                                        "i12960"
                                                                        "i12959"
                                                                        "i12958"
                                                                        "i12956"
                                                                        "i12955"
                                                                        "i12954"
                                                                        "i12953"
                                                                        "i12952"
                                                                        "i12950"
                                                                        "i12948"
                                                                        "i12946"
                                                                        "i12944"
                                                                        "i12942"
                                                                        "i12940"
                                                                        "i12938"
                                                                        "i12936"
                                                                        "i12933"
                                                                        "i12931"
                                                                        "i12930"
                                                                        "i12929"
                                                                        "i12928"
                                                                        "i12927"
                                                                        "i12926"
                                                                        "i12924"
                                                                        "i12922"
                                                                        "i12920"
                                                                        "i12918"
                                                                        "i12917"
                                                                        "i12915"
                                                                        "i12913"
                                                                        "i12911"
                                                                        "i12909"
                                                                        "i12907"
                                                                        "i12905"
                                                                        "i12903"
                                                                        "i12902"
                                                                        "i12900"
                                                                        "i12898"
                                                                        "i12897"
                                                                        "i12896"
                                                                        "i12894"
                                                                        "i12893"
                                                                        "i12891"
                                                                        "i12889"
                                                                        "i12887"
                                                                        "i12885"
                                                                        "i12883"
                                                                        "i12881"
                                                                        "i12879"
                                                                        "i12877"
                                                                        "i12875"
                                                                        "i12873"
                                                                        "i12871"
                                                                        "i12869"
                                                                        "i12867"
                                                                        "i12865"
                                                                        "i12863"
                                                                        "i12861"
                                                                        "i12859"
                                                                        "i12857"
                                                                        "i12855"
                                                                        "i12853"
                                                                        "i12851"
                                                                        "i12849"
                                                                        "i12847"
                                                                        "i12845"
                                                                        "i12843"
                                                                        "i12841"
                                                                        "i12839"
                                                                        "i12837"
                                                                        "i12835"
                                                                        "i12833"
                                                                        "i12831"
                                                                        "i12829"
                                                                        "i12828"
                                                                        "i12826"
                                                                        "i12824"
                                                                        "i12822"
                                                                        "i12820"
                                                                        "i12818"
                                                                        "i12816"
                                                                        "i12814"
                                                                        "i12812"
                                                                        "i12810"
                                                                        "i12808"
                                                                        "i12806"
                                                                        "i12804"
                                                                        "i12802"
                                                                        "i12800"
                                                                        "i12798"
                                                                        "i12796"
                                                                        "i12794"
                                                                        "i12792"
                                                                        "i12790"
                                                                        "i12788"
                                                                        "i12786"
                                                                        "i12784"
                                                                        "i12782"
                                                                        "i12780"
                                                                        "i12777"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         define-expansion-constructors
                                                                         and-map*)
                                                                       ((top)
                                                                        (top)
                                                                        (top))
                                                                       ("i12629"
                                                                        "i12628"
                                                                        "i12626")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 13681}#)))
                                                #{tmp\ 13687}#)
                                         ((lambda (#{tmp\ 13696}#)
                                            (if (if #{tmp\ 13696}#
                                                  (apply (lambda (#{a\ 13700}#
                                                                  #{init\ 13701}#
                                                                  #{b\ 13702}#)
                                                           (#{id?\ 12916}#
                                                             #{a\ 13700}#))
                                                         #{tmp\ 13696}#)
                                                  #f)
                                              (apply (lambda (#{a\ 13706}#
                                                              #{init\ 13707}#
                                                              #{b\ 13708}#)
                                                       (#{opt\ 13539}#
                                                         #{b\ 13708}#
                                                         #{req\ 13680}#
                                                         (cons (list #{a\ 13706}#
                                                                     #{init\ 13707}#)
                                                               #{ropt\ 13681}#)))
                                                     #{tmp\ 13696}#)
                                              ((lambda (#{tmp\ 13709}#)
                                                 (if (if #{tmp\ 13709}#
                                                       (apply (lambda (#{a\ 13712}#
                                                                       #{b\ 13713}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 13712}#)
                                                                     #:key))
                                                              #{tmp\ 13709}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 13716}#
                                                                   #{b\ 13717}#)
                                                            (#{key\ 13541}#
                                                              #{b\ 13717}#
                                                              #{req\ 13680}#
                                                              (reverse
                                                                #{ropt\ 13681}#)
                                                              '()))
                                                          #{tmp\ 13709}#)
                                                   ((lambda (#{tmp\ 13718}#)
                                                      (if (if #{tmp\ 13718}#
                                                            (apply (lambda (#{a\ 13721}#
                                                                            #{b\ 13722}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 13721}#)
                                                                          #:rest))
                                                                   #{tmp\ 13718}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 13725}#
                                                                        #{b\ 13726}#)
                                                                 (#{rest\ 13543}#
                                                                   #{b\ 13726}#
                                                                   #{req\ 13680}#
                                                                   (reverse
                                                                     #{ropt\ 13681}#)
                                                                   '()))
                                                               #{tmp\ 13718}#)
                                                        ((lambda (#{tmp\ 13727}#)
                                                           (if (if #{tmp\ 13727}#
                                                                 (apply (lambda (#{r\ 13729}#)
                                                                          (#{id?\ 12916}#
                                                                            #{r\ 13729}#))
                                                                        #{tmp\ 13727}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 13731}#)
                                                                      (#{rest\ 13543}#
                                                                        #{r\ 13731}#
                                                                        #{req\ 13680}#
                                                                        (reverse
                                                                          #{ropt\ 13681}#)
                                                                        '()))
                                                                    #{tmp\ 13727}#)
                                                             ((lambda (#{else\ 13733}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 13534}#
                                                                  #{args\ 13679}#))
                                                              #{tmp\ 13685}#)))
                                                         (list #{tmp\ 13685}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 13685}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 13685}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 13685}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 13685}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 13685}# (quote ()))))
                             #{args\ 13679}#)))
                        (#{req\ 13537}#
                          (lambda (#{args\ 13734}# #{rreq\ 13735}#)
                            ((lambda (#{tmp\ 13738}#)
                               ((lambda (#{tmp\ 13739}#)
                                  (if #{tmp\ 13739}#
                                    (apply (lambda ()
                                             (#{check\ 13545}#
                                               (reverse #{rreq\ 13735}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 13739}#)
                                    ((lambda (#{tmp\ 13740}#)
                                       (if (if #{tmp\ 13740}#
                                             (apply (lambda (#{a\ 13743}#
                                                             #{b\ 13744}#)
                                                      (#{id?\ 12916}#
                                                        #{a\ 13743}#))
                                                    #{tmp\ 13740}#)
                                             #f)
                                         (apply (lambda (#{a\ 13747}#
                                                         #{b\ 13748}#)
                                                  (#{req\ 13537}#
                                                    #{b\ 13748}#
                                                    (cons #{a\ 13747}#
                                                          #{rreq\ 13735}#)))
                                                #{tmp\ 13740}#)
                                         ((lambda (#{tmp\ 13749}#)
                                            (if (if #{tmp\ 13749}#
                                                  (apply (lambda (#{a\ 13752}#
                                                                  #{b\ 13753}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 13752}#)
                                                                #:optional))
                                                         #{tmp\ 13749}#)
                                                  #f)
                                              (apply (lambda (#{a\ 13756}#
                                                              #{b\ 13757}#)
                                                       (#{opt\ 13539}#
                                                         #{b\ 13757}#
                                                         (reverse
                                                           #{rreq\ 13735}#)
                                                         '()))
                                                     #{tmp\ 13749}#)
                                              ((lambda (#{tmp\ 13758}#)
                                                 (if (if #{tmp\ 13758}#
                                                       (apply (lambda (#{a\ 13761}#
                                                                       #{b\ 13762}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 13761}#)
                                                                     #:key))
                                                              #{tmp\ 13758}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 13765}#
                                                                   #{b\ 13766}#)
                                                            (#{key\ 13541}#
                                                              #{b\ 13766}#
                                                              (reverse
                                                                #{rreq\ 13735}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 13758}#)
                                                   ((lambda (#{tmp\ 13767}#)
                                                      (if (if #{tmp\ 13767}#
                                                            (apply (lambda (#{a\ 13770}#
                                                                            #{b\ 13771}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 13770}#)
                                                                          #:rest))
                                                                   #{tmp\ 13767}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 13774}#
                                                                        #{b\ 13775}#)
                                                                 (#{rest\ 13543}#
                                                                   #{b\ 13775}#
                                                                   (reverse
                                                                     #{rreq\ 13735}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 13767}#)
                                                        ((lambda (#{tmp\ 13776}#)
                                                           (if (if #{tmp\ 13776}#
                                                                 (apply (lambda (#{r\ 13778}#)
                                                                          (#{id?\ 12916}#
                                                                            #{r\ 13778}#))
                                                                        #{tmp\ 13776}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 13780}#)
                                                                      (#{rest\ 13543}#
                                                                        #{r\ 13780}#
                                                                        (reverse
                                                                          #{rreq\ 13735}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 13776}#)
                                                             ((lambda (#{else\ 13782}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 13534}#
                                                                  #{args\ 13734}#))
                                                              #{tmp\ 13738}#)))
                                                         (list #{tmp\ 13738}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 13738}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 13738}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 13738}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 13738}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 13738}# (quote ()))))
                             #{args\ 13734}#))))
                 (#{req\ 13537}# #{orig-args\ 13534}# (quote ())))))
           (#{chi-simple-lambda\ 13021}#
             (lambda (#{e\ 13783}#
                      #{r\ 13784}#
                      #{w\ 13785}#
                      #{s\ 13786}#
                      #{mod\ 13787}#
                      #{req\ 13788}#
                      #{rest\ 13789}#
                      #{meta\ 13790}#
                      #{body\ 13791}#)
               (let ((#{ids\ 13803}#
                       (if #{rest\ 13789}#
                         (append #{req\ 13788}# (list #{rest\ 13789}#))
                         #{req\ 13788}#)))
                 (let ((#{vars\ 13805}#
                         (map #{gen-var\ 13029}# #{ids\ 13803}#)))
                   (let ((#{labels\ 13807}#
                           (#{gen-labels\ 12934}# #{ids\ 13803}#)))
                     (#{build-simple-lambda\ 12858}#
                       #{s\ 13786}#
                       (map syntax->datum #{req\ 13788}#)
                       (if #{rest\ 13789}#
                         (syntax->datum #{rest\ 13789}#)
                         #f)
                       #{vars\ 13805}#
                       #{meta\ 13790}#
                       (#{chi-body\ 13009}#
                         #{body\ 13791}#
                         (#{source-wrap\ 12987}#
                           #{e\ 13783}#
                           #{w\ 13785}#
                           #{s\ 13786}#
                           #{mod\ 13787}#)
                         (#{extend-var-env\ 12906}#
                           #{labels\ 13807}#
                           #{vars\ 13805}#
                           #{r\ 13784}#)
                         (#{make-binding-wrap\ 12963}#
                           #{ids\ 13803}#
                           #{labels\ 13807}#
                           #{w\ 13785}#)
                         #{mod\ 13787}#)))))))
           (#{lambda-formals\ 13019}#
             (lambda (#{orig-args\ 13810}#)
               (letrec ((#{check\ 13815}#
                          (lambda (#{req\ 13816}# #{rest\ 13817}#)
                            (if (#{distinct-bound-ids?\ 12981}#
                                  (if #{rest\ 13817}#
                                    (cons #{rest\ 13817}# #{req\ 13816}#)
                                    #{req\ 13816}#))
                              (values #{req\ 13816}# #f #{rest\ 13817}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 13810}#))))
                        (#{req\ 13813}#
                          (lambda (#{args\ 13823}# #{rreq\ 13824}#)
                            ((lambda (#{tmp\ 13827}#)
                               ((lambda (#{tmp\ 13828}#)
                                  (if #{tmp\ 13828}#
                                    (apply (lambda ()
                                             (#{check\ 13815}#
                                               (reverse #{rreq\ 13824}#)
                                               #f))
                                           #{tmp\ 13828}#)
                                    ((lambda (#{tmp\ 13829}#)
                                       (if (if #{tmp\ 13829}#
                                             (apply (lambda (#{a\ 13832}#
                                                             #{b\ 13833}#)
                                                      (#{id?\ 12916}#
                                                        #{a\ 13832}#))
                                                    #{tmp\ 13829}#)
                                             #f)
                                         (apply (lambda (#{a\ 13836}#
                                                         #{b\ 13837}#)
                                                  (#{req\ 13813}#
                                                    #{b\ 13837}#
                                                    (cons #{a\ 13836}#
                                                          #{rreq\ 13824}#)))
                                                #{tmp\ 13829}#)
                                         ((lambda (#{tmp\ 13838}#)
                                            (if (if #{tmp\ 13838}#
                                                  (apply (lambda (#{r\ 13840}#)
                                                           (#{id?\ 12916}#
                                                             #{r\ 13840}#))
                                                         #{tmp\ 13838}#)
                                                  #f)
                                              (apply (lambda (#{r\ 13842}#)
                                                       (#{check\ 13815}#
                                                         (reverse
                                                           #{rreq\ 13824}#)
                                                         #{r\ 13842}#))
                                                     #{tmp\ 13838}#)
                                              ((lambda (#{else\ 13844}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 13810}#
                                                   #{args\ 13823}#))
                                               #{tmp\ 13827}#)))
                                          (list #{tmp\ 13827}#))))
                                     ($sc-dispatch
                                       #{tmp\ 13827}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 13827}# (quote ()))))
                             #{args\ 13823}#))))
                 (#{req\ 13813}# #{orig-args\ 13810}# (quote ())))))
           (#{ellipsis?\ 13017}#
             (lambda (#{x\ 13845}#)
               (if (#{nonsymbol-id?\ 12914}# #{x\ 13845}#)
                 (#{free-id=?\ 12975}#
                   #{x\ 13845}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i13846"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           make-dynlet
                           make-letrec
                           make-let
                           make-lambda-case
                           make-lambda
                           make-sequence
                           make-application
                           make-conditional
                           make-toplevel-define
                           make-toplevel-set
                           make-toplevel-ref
                           make-module-set
                           make-module-ref
                           make-lexical-set
                           make-lexical-ref
                           make-primitive-ref
                           make-const
                           make-void
                           *mode*)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i13030"
                          "i13028"
                          "i13026"
                          "i13024"
                          "i13022"
                          "i13020"
                          "i13018"
                          "i13016"
                          "i13014"
                          "i13012"
                          "i13010"
                          "i13008"
                          "i13006"
                          "i13004"
                          "i13002"
                          "i13000"
                          "i12998"
                          "i12996"
                          "i12994"
                          "i12992"
                          "i12990"
                          "i12988"
                          "i12986"
                          "i12984"
                          "i12982"
                          "i12980"
                          "i12978"
                          "i12976"
                          "i12974"
                          "i12972"
                          "i12970"
                          "i12968"
                          "i12966"
                          "i12964"
                          "i12962"
                          "i12960"
                          "i12959"
                          "i12958"
                          "i12956"
                          "i12955"
                          "i12954"
                          "i12953"
                          "i12952"
                          "i12950"
                          "i12948"
                          "i12946"
                          "i12944"
                          "i12942"
                          "i12940"
                          "i12938"
                          "i12936"
                          "i12933"
                          "i12931"
                          "i12930"
                          "i12929"
                          "i12928"
                          "i12927"
                          "i12926"
                          "i12924"
                          "i12922"
                          "i12920"
                          "i12918"
                          "i12917"
                          "i12915"
                          "i12913"
                          "i12911"
                          "i12909"
                          "i12907"
                          "i12905"
                          "i12903"
                          "i12902"
                          "i12900"
                          "i12898"
                          "i12897"
                          "i12896"
                          "i12894"
                          "i12893"
                          "i12891"
                          "i12889"
                          "i12887"
                          "i12885"
                          "i12883"
                          "i12881"
                          "i12879"
                          "i12877"
                          "i12875"
                          "i12873"
                          "i12871"
                          "i12869"
                          "i12867"
                          "i12865"
                          "i12863"
                          "i12861"
                          "i12859"
                          "i12857"
                          "i12855"
                          "i12853"
                          "i12851"
                          "i12849"
                          "i12847"
                          "i12845"
                          "i12843"
                          "i12841"
                          "i12839"
                          "i12837"
                          "i12835"
                          "i12833"
                          "i12831"
                          "i12829"
                          "i12828"
                          "i12826"
                          "i12824"
                          "i12822"
                          "i12820"
                          "i12818"
                          "i12816"
                          "i12814"
                          "i12812"
                          "i12810"
                          "i12808"
                          "i12806"
                          "i12804"
                          "i12802"
                          "i12800"
                          "i12798"
                          "i12796"
                          "i12794"
                          "i12792"
                          "i12790"
                          "i12788"
                          "i12786"
                          "i12784"
                          "i12782"
                          "i12780"
                          "i12777"))
                       #(ribcage
                         (define-structure
                           define-expansion-constructors
                           and-map*)
                         ((top) (top) (top))
                         ("i12629" "i12628" "i12626")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 13015}#
             (lambda () (#{build-void\ 12836}# #f)))
           (#{eval-local-transformer\ 13013}#
             (lambda (#{expanded\ 13850}# #{mod\ 13851}#)
               (let ((#{p\ 13855}#
                       (#{local-eval-hook\ 12827}#
                         #{expanded\ 13850}#
                         #{mod\ 13851}#)))
                 (if (procedure? #{p\ 13855}#)
                   (cons #{p\ 13855}#
                         (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 13855}#)))))
           (#{chi-local-syntax\ 13011}#
             (lambda (#{rec?\ 13856}#
                      #{e\ 13857}#
                      #{r\ 13858}#
                      #{w\ 13859}#
                      #{s\ 13860}#
                      #{mod\ 13861}#
                      #{k\ 13862}#)
               ((lambda (#{tmp\ 13870}#)
                  ((lambda (#{tmp\ 13871}#)
                     (if #{tmp\ 13871}#
                       (apply (lambda (#{_\ 13877}#
                                       #{id\ 13878}#
                                       #{val\ 13879}#
                                       #{e1\ 13880}#
                                       #{e2\ 13881}#)
                                (let ((#{ids\ 13883}# #{id\ 13878}#))
                                  (if (not (#{valid-bound-ids?\ 12979}#
                                             #{ids\ 13883}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 13857}#)
                                    (let ((#{labels\ 13886}#
                                            (#{gen-labels\ 12934}#
                                              #{ids\ 13883}#)))
                                      (let ((#{new-w\ 13888}#
                                              (#{make-binding-wrap\ 12963}#
                                                #{ids\ 13883}#
                                                #{labels\ 13886}#
                                                #{w\ 13859}#)))
                                        (#{k\ 13862}#
                                          (cons #{e1\ 13880}# #{e2\ 13881}#)
                                          (#{extend-env\ 12904}#
                                            #{labels\ 13886}#
                                            (let ((#{w\ 13892}#
                                                    (if #{rec?\ 13856}#
                                                      #{new-w\ 13888}#
                                                      #{w\ 13859}#))
                                                  (#{trans-r\ 13893}#
                                                    (#{macros-only-env\ 12908}#
                                                      #{r\ 13858}#)))
                                              (map (lambda (#{x\ 13894}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 13013}#
                                                             (#{chi\ 13001}#
                                                               #{x\ 13894}#
                                                               #{trans-r\ 13893}#
                                                               #{w\ 13892}#
                                                               #{mod\ 13861}#)
                                                             #{mod\ 13861}#)))
                                                   #{val\ 13879}#))
                                            #{r\ 13858}#)
                                          #{new-w\ 13888}#
                                          #{s\ 13860}#
                                          #{mod\ 13861}#))))))
                              #{tmp\ 13871}#)
                       ((lambda (#{_\ 13899}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 12987}#
                              #{e\ 13857}#
                              #{w\ 13859}#
                              #{s\ 13860}#
                              #{mod\ 13861}#)))
                        #{tmp\ 13870}#)))
                   ($sc-dispatch
                     #{tmp\ 13870}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 13857}#)))
           (#{chi-body\ 13009}#
             (lambda (#{body\ 13900}#
                      #{outer-form\ 13901}#
                      #{r\ 13902}#
                      #{w\ 13903}#
                      #{mod\ 13904}#)
               (let ((#{r\ 13912}#
                       (cons '("placeholder" placeholder)
                             #{r\ 13902}#)))
                 (let ((#{ribcage\ 13914}#
                         (#{make-ribcage\ 12937}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 13917}#
                           (#{make-wrap\ 12921}#
                             (#{wrap-marks\ 12923}# #{w\ 13903}#)
                             (cons #{ribcage\ 13914}#
                                   (#{wrap-subst\ 12925}# #{w\ 13903}#)))))
                     (letrec ((#{parse\ 13926}#
                                (lambda (#{body\ 13927}#
                                         #{ids\ 13928}#
                                         #{labels\ 13929}#
                                         #{var-ids\ 13930}#
                                         #{vars\ 13931}#
                                         #{vals\ 13932}#
                                         #{bindings\ 13933}#)
                                  (if (null? #{body\ 13927}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 13901}#)
                                    (let ((#{e\ 13938}# (cdar #{body\ 13927}#))
                                          (#{er\ 13939}#
                                            (caar #{body\ 13927}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 12997}#
                                            #{e\ 13938}#
                                            #{er\ 13939}#
                                            '(())
                                            (#{source-annotation\ 12895}#
                                              #{er\ 13939}#)
                                            #{ribcage\ 13914}#
                                            #{mod\ 13904}#
                                            #f))
                                        (lambda (#{type\ 13941}#
                                                 #{value\ 13942}#
                                                 #{e\ 13943}#
                                                 #{w\ 13944}#
                                                 #{s\ 13945}#
                                                 #{mod\ 13946}#)
                                          (if (memv #{type\ 13941}#
                                                    '(define-form))
                                            (let ((#{id\ 13956}#
                                                    (#{wrap\ 12985}#
                                                      #{value\ 13942}#
                                                      #{w\ 13944}#
                                                      #{mod\ 13946}#))
                                                  (#{label\ 13957}#
                                                    (#{gen-label\ 12932}#)))
                                              (let ((#{var\ 13959}#
                                                      (#{gen-var\ 13029}#
                                                        #{id\ 13956}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 12961}#
                                                    #{ribcage\ 13914}#
                                                    #{id\ 13956}#
                                                    #{label\ 13957}#)
                                                  (#{parse\ 13926}#
                                                    (cdr #{body\ 13927}#)
                                                    (cons #{id\ 13956}#
                                                          #{ids\ 13928}#)
                                                    (cons #{label\ 13957}#
                                                          #{labels\ 13929}#)
                                                    (cons #{id\ 13956}#
                                                          #{var-ids\ 13930}#)
                                                    (cons #{var\ 13959}#
                                                          #{vars\ 13931}#)
                                                    (cons (cons #{er\ 13939}#
                                                                (#{wrap\ 12985}#
                                                                  #{e\ 13943}#
                                                                  #{w\ 13944}#
                                                                  #{mod\ 13946}#))
                                                          #{vals\ 13932}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 13959}#)
                                                          #{bindings\ 13933}#)))))
                                            (if (memv #{type\ 13941}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 13964}#
                                                      (#{wrap\ 12985}#
                                                        #{value\ 13942}#
                                                        #{w\ 13944}#
                                                        #{mod\ 13946}#))
                                                    (#{label\ 13965}#
                                                      (#{gen-label\ 12932}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 12961}#
                                                    #{ribcage\ 13914}#
                                                    #{id\ 13964}#
                                                    #{label\ 13965}#)
                                                  (#{parse\ 13926}#
                                                    (cdr #{body\ 13927}#)
                                                    (cons #{id\ 13964}#
                                                          #{ids\ 13928}#)
                                                    (cons #{label\ 13965}#
                                                          #{labels\ 13929}#)
                                                    #{var-ids\ 13930}#
                                                    #{vars\ 13931}#
                                                    #{vals\ 13932}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 13939}#
                                                                      (#{wrap\ 12985}#
                                                                        #{e\ 13943}#
                                                                        #{w\ 13944}#
                                                                        #{mod\ 13946}#)))
                                                          #{bindings\ 13933}#))))
                                              (if (memv #{type\ 13941}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 13968}#)
                                                   ((lambda (#{tmp\ 13969}#)
                                                      (if #{tmp\ 13969}#
                                                        (apply (lambda (#{_\ 13972}#
                                                                        #{e1\ 13973}#)
                                                                 (#{parse\ 13926}#
                                                                   (letrec ((#{f\ 13976}#
                                                                              (lambda (#{forms\ 13977}#)
                                                                                (if (null? #{forms\ 13977}#)
                                                                                  (cdr #{body\ 13927}#)
                                                                                  (cons (cons #{er\ 13939}#
                                                                                              (#{wrap\ 12985}#
                                                                                                (car #{forms\ 13977}#)
                                                                                                #{w\ 13944}#
                                                                                                #{mod\ 13946}#))
                                                                                        (#{f\ 13976}#
                                                                                          (cdr #{forms\ 13977}#)))))))
                                                                     (#{f\ 13976}#
                                                                       #{e1\ 13973}#))
                                                                   #{ids\ 13928}#
                                                                   #{labels\ 13929}#
                                                                   #{var-ids\ 13930}#
                                                                   #{vars\ 13931}#
                                                                   #{vals\ 13932}#
                                                                   #{bindings\ 13933}#))
                                                               #{tmp\ 13969}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 13968}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 13968}#
                                                      '(any . each-any))))
                                                 #{e\ 13943}#)
                                                (if (memv #{type\ 13941}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 13011}#
                                                    #{value\ 13942}#
                                                    #{e\ 13943}#
                                                    #{er\ 13939}#
                                                    #{w\ 13944}#
                                                    #{s\ 13945}#
                                                    #{mod\ 13946}#
                                                    (lambda (#{forms\ 13980}#
                                                             #{er\ 13981}#
                                                             #{w\ 13982}#
                                                             #{s\ 13983}#
                                                             #{mod\ 13984}#)
                                                      (#{parse\ 13926}#
                                                        (letrec ((#{f\ 13992}#
                                                                   (lambda (#{forms\ 13993}#)
                                                                     (if (null? #{forms\ 13993}#)
                                                                       (cdr #{body\ 13927}#)
                                                                       (cons (cons #{er\ 13981}#
                                                                                   (#{wrap\ 12985}#
                                                                                     (car #{forms\ 13993}#)
                                                                                     #{w\ 13982}#
                                                                                     #{mod\ 13984}#))
                                                                             (#{f\ 13992}#
                                                                               (cdr #{forms\ 13993}#)))))))
                                                          (#{f\ 13992}#
                                                            #{forms\ 13980}#))
                                                        #{ids\ 13928}#
                                                        #{labels\ 13929}#
                                                        #{var-ids\ 13930}#
                                                        #{vars\ 13931}#
                                                        #{vals\ 13932}#
                                                        #{bindings\ 13933}#)))
                                                  (if (null? #{ids\ 13928}#)
                                                    (#{build-sequence\ 12868}#
                                                      #f
                                                      (map (lambda (#{x\ 13996}#)
                                                             (#{chi\ 13001}#
                                                               (cdr #{x\ 13996}#)
                                                               (car #{x\ 13996}#)
                                                               '(())
                                                               #{mod\ 13946}#))
                                                           (cons (cons #{er\ 13939}#
                                                                       (#{source-wrap\ 12987}#
                                                                         #{e\ 13943}#
                                                                         #{w\ 13944}#
                                                                         #{s\ 13945}#
                                                                         #{mod\ 13946}#))
                                                                 (cdr #{body\ 13927}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 12979}#
                                                                 #{ids\ 13928}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 13901}#))
                                                      (letrec ((#{loop\ 14003}#
                                                                 (lambda (#{bs\ 14004}#
                                                                          #{er-cache\ 14005}#
                                                                          #{r-cache\ 14006}#)
                                                                   (if (not (null? #{bs\ 14004}#))
                                                                     (let ((#{b\ 14009}#
                                                                             (car #{bs\ 14004}#)))
                                                                       (if (eq? (car #{b\ 14009}#)
                                                                                'macro)
                                                                         (let ((#{er\ 14012}#
                                                                                 (cadr #{b\ 14009}#)))
                                                                           (let ((#{r-cache\ 14014}#
                                                                                   (if (eq? #{er\ 14012}#
                                                                                            #{er-cache\ 14005}#)
                                                                                     #{r-cache\ 14006}#
                                                                                     (#{macros-only-env\ 12908}#
                                                                                       #{er\ 14012}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 14009}#
                                                                                 (#{eval-local-transformer\ 13013}#
                                                                                   (#{chi\ 13001}#
                                                                                     (cddr #{b\ 14009}#)
                                                                                     #{r-cache\ 14014}#
                                                                                     '(())
                                                                                     #{mod\ 13946}#)
                                                                                   #{mod\ 13946}#))
                                                                               (#{loop\ 14003}#
                                                                                 (cdr #{bs\ 14004}#)
                                                                                 #{er\ 14012}#
                                                                                 #{r-cache\ 14014}#))))
                                                                         (#{loop\ 14003}#
                                                                           (cdr #{bs\ 14004}#)
                                                                           #{er-cache\ 14005}#
                                                                           #{r-cache\ 14006}#)))))))
                                                        (#{loop\ 14003}#
                                                          #{bindings\ 13933}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 13912}#
                                                        (#{extend-env\ 12904}#
                                                          #{labels\ 13929}#
                                                          #{bindings\ 13933}#
                                                          (cdr #{r\ 13912}#)))
                                                      (#{build-letrec\ 12874}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 13930}#)
                                                        #{vars\ 13931}#
                                                        (map (lambda (#{x\ 14017}#)
                                                               (#{chi\ 13001}#
                                                                 (cdr #{x\ 14017}#)
                                                                 (car #{x\ 14017}#)
                                                                 '(())
                                                                 #{mod\ 13946}#))
                                                             #{vals\ 13932}#)
                                                        (#{build-sequence\ 12868}#
                                                          #f
                                                          (map (lambda (#{x\ 14021}#)
                                                                 (#{chi\ 13001}#
                                                                   (cdr #{x\ 14021}#)
                                                                   (car #{x\ 14021}#)
                                                                   '(())
                                                                   #{mod\ 13946}#))
                                                               (cons (cons #{er\ 13939}#
                                                                           (#{source-wrap\ 12987}#
                                                                             #{e\ 13943}#
                                                                             #{w\ 13944}#
                                                                             #{s\ 13945}#
                                                                             #{mod\ 13946}#))
                                                                     (cdr #{body\ 13927}#))))))))))))))))))
                       (#{parse\ 13926}#
                         (map (lambda (#{x\ 13934}#)
                                (cons #{r\ 13912}#
                                      (#{wrap\ 12985}#
                                        #{x\ 13934}#
                                        #{w\ 13917}#
                                        #{mod\ 13904}#)))
                              #{body\ 13900}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 13007}#
             (lambda (#{p\ 14024}#
                      #{e\ 14025}#
                      #{r\ 14026}#
                      #{w\ 14027}#
                      #{rib\ 14028}#
                      #{mod\ 14029}#)
               (letrec ((#{rebuild-macro-output\ 14037}#
                          (lambda (#{x\ 14038}# #{m\ 14039}#)
                            (if (pair? #{x\ 14038}#)
                              (cons (#{rebuild-macro-output\ 14037}#
                                      (car #{x\ 14038}#)
                                      #{m\ 14039}#)
                                    (#{rebuild-macro-output\ 14037}#
                                      (cdr #{x\ 14038}#)
                                      #{m\ 14039}#))
                              (if (#{syntax-object?\ 12880}# #{x\ 14038}#)
                                (let ((#{w\ 14047}#
                                        (#{syntax-object-wrap\ 12884}#
                                          #{x\ 14038}#)))
                                  (let ((#{ms\ 14050}#
                                          (#{wrap-marks\ 12923}# #{w\ 14047}#))
                                        (#{s\ 14051}#
                                          (#{wrap-subst\ 12925}#
                                            #{w\ 14047}#)))
                                    (if (if (pair? #{ms\ 14050}#)
                                          (eq? (car #{ms\ 14050}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 12878}#
                                        (#{syntax-object-expression\ 12882}#
                                          #{x\ 14038}#)
                                        (#{make-wrap\ 12921}#
                                          (cdr #{ms\ 14050}#)
                                          (if #{rib\ 14028}#
                                            (cons #{rib\ 14028}#
                                                  (cdr #{s\ 14051}#))
                                            (cdr #{s\ 14051}#)))
                                        (#{syntax-object-module\ 12886}#
                                          #{x\ 14038}#))
                                      (#{make-syntax-object\ 12878}#
                                        (#{syntax-object-expression\ 12882}#
                                          #{x\ 14038}#)
                                        (#{make-wrap\ 12921}#
                                          (cons #{m\ 14039}# #{ms\ 14050}#)
                                          (if #{rib\ 14028}#
                                            (cons #{rib\ 14028}#
                                                  (cons 'shift
                                                        #{s\ 14051}#))
                                            (cons (quote shift) #{s\ 14051}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 14024}#))))))
                                (if (vector? #{x\ 14038}#)
                                  (let ((#{n\ 14059}#
                                          (vector-length #{x\ 14038}#)))
                                    (let ((#{v\ 14061}#
                                            (make-vector #{n\ 14059}#)))
                                      (letrec ((#{loop\ 14064}#
                                                 (lambda (#{i\ 14065}#)
                                                   (if (#{fx=\ 12821}#
                                                         #{i\ 14065}#
                                                         #{n\ 14059}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 14061}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 14061}#
                                                         #{i\ 14065}#
                                                         (#{rebuild-macro-output\ 14037}#
                                                           (vector-ref
                                                             #{x\ 14038}#
                                                             #{i\ 14065}#)
                                                           #{m\ 14039}#))
                                                       (#{loop\ 14064}#
                                                         (#{fx+\ 12817}#
                                                           #{i\ 14065}#
                                                           1)))))))
                                        (#{loop\ 14064}# 0))))
                                  (if (symbol? #{x\ 14038}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 12987}#
                                        #{e\ 14025}#
                                        #{w\ 14027}#
                                        (#{wrap-subst\ 12925}# #{w\ 14027}#)
                                        #{mod\ 14029}#)
                                      #{x\ 14038}#)
                                    #{x\ 14038}#)))))))
                 (#{rebuild-macro-output\ 14037}#
                   ((car #{p\ 14024}#)
                    (#{wrap\ 12985}#
                      #{e\ 14025}#
                      (#{anti-mark\ 12957}# #{w\ 14027}#)
                      #{mod\ 14029}#))
                   (gensym "m")))))
           (#{chi-application\ 13005}#
             (lambda (#{x\ 14072}#
                      #{e\ 14073}#
                      #{r\ 14074}#
                      #{w\ 14075}#
                      #{s\ 14076}#
                      #{mod\ 14077}#)
               ((lambda (#{tmp\ 14084}#)
                  ((lambda (#{tmp\ 14085}#)
                     (if #{tmp\ 14085}#
                       (apply (lambda (#{e0\ 14088}# #{e1\ 14089}#)
                                (#{build-application\ 12838}#
                                  #{s\ 14076}#
                                  #{x\ 14072}#
                                  (map (lambda (#{e\ 14090}#)
                                         (#{chi\ 13001}#
                                           #{e\ 14090}#
                                           #{r\ 14074}#
                                           #{w\ 14075}#
                                           #{mod\ 14077}#))
                                       #{e1\ 14089}#)))
                              #{tmp\ 14085}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 14084}#)))
                   ($sc-dispatch
                     #{tmp\ 14084}#
                     '(any . each-any))))
                #{e\ 14073}#)))
           (#{chi-expr\ 13003}#
             (lambda (#{type\ 14093}#
                      #{value\ 14094}#
                      #{e\ 14095}#
                      #{r\ 14096}#
                      #{w\ 14097}#
                      #{s\ 14098}#
                      #{mod\ 14099}#)
               (if (memv #{type\ 14093}# (quote (lexical)))
                 (#{build-lexical-reference\ 12844}#
                   'value
                   #{s\ 14098}#
                   #{e\ 14095}#
                   #{value\ 14094}#)
                 (if (memv #{type\ 14093}# (quote (core core-form)))
                   (#{value\ 14094}#
                     #{e\ 14095}#
                     #{r\ 14096}#
                     #{w\ 14097}#
                     #{s\ 14098}#
                     #{mod\ 14099}#)
                   (if (memv #{type\ 14093}# (quote (module-ref)))
                     (call-with-values
                       (lambda ()
                         (#{value\ 14094}#
                           #{e\ 14095}#
                           #{r\ 14096}#
                           #{w\ 14097}#))
                       (lambda (#{e\ 14110}#
                                #{r\ 14111}#
                                #{w\ 14112}#
                                #{s\ 14113}#
                                #{mod\ 14114}#)
                         (#{chi\ 13001}#
                           #{e\ 14110}#
                           #{r\ 14111}#
                           #{w\ 14112}#
                           #{mod\ 14114}#)))
                     (if (memv #{type\ 14093}# (quote (lexical-call)))
                       (#{chi-application\ 13005}#
                         (#{build-lexical-reference\ 12844}#
                           'fun
                           (#{source-annotation\ 12895}# (car #{e\ 14095}#))
                           (car #{e\ 14095}#)
                           #{value\ 14094}#)
                         #{e\ 14095}#
                         #{r\ 14096}#
                         #{w\ 14097}#
                         #{s\ 14098}#
                         #{mod\ 14099}#)
                       (if (memv #{type\ 14093}# (quote (global-call)))
                         (#{chi-application\ 13005}#
                           (#{build-global-reference\ 12850}#
                             (#{source-annotation\ 12895}# (car #{e\ 14095}#))
                             (if (#{syntax-object?\ 12880}# #{value\ 14094}#)
                               (#{syntax-object-expression\ 12882}#
                                 #{value\ 14094}#)
                               #{value\ 14094}#)
                             (if (#{syntax-object?\ 12880}# #{value\ 14094}#)
                               (#{syntax-object-module\ 12886}#
                                 #{value\ 14094}#)
                               #{mod\ 14099}#))
                           #{e\ 14095}#
                           #{r\ 14096}#
                           #{w\ 14097}#
                           #{s\ 14098}#
                           #{mod\ 14099}#)
                         (if (memv #{type\ 14093}# (quote (constant)))
                           (#{build-data\ 12866}#
                             #{s\ 14098}#
                             (#{strip\ 13027}#
                               (#{source-wrap\ 12987}#
                                 #{e\ 14095}#
                                 #{w\ 14097}#
                                 #{s\ 14098}#
                                 #{mod\ 14099}#)
                               '(())))
                           (if (memv #{type\ 14093}# (quote (global)))
                             (#{build-global-reference\ 12850}#
                               #{s\ 14098}#
                               #{value\ 14094}#
                               #{mod\ 14099}#)
                             (if (memv #{type\ 14093}# (quote (call)))
                               (#{chi-application\ 13005}#
                                 (#{chi\ 13001}#
                                   (car #{e\ 14095}#)
                                   #{r\ 14096}#
                                   #{w\ 14097}#
                                   #{mod\ 14099}#)
                                 #{e\ 14095}#
                                 #{r\ 14096}#
                                 #{w\ 14097}#
                                 #{s\ 14098}#
                                 #{mod\ 14099}#)
                               (if (memv #{type\ 14093}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 14127}#)
                                    ((lambda (#{tmp\ 14128}#)
                                       (if #{tmp\ 14128}#
                                         (apply (lambda (#{_\ 14132}#
                                                         #{e1\ 14133}#
                                                         #{e2\ 14134}#)
                                                  (#{chi-sequence\ 12989}#
                                                    (cons #{e1\ 14133}#
                                                          #{e2\ 14134}#)
                                                    #{r\ 14096}#
                                                    #{w\ 14097}#
                                                    #{s\ 14098}#
                                                    #{mod\ 14099}#))
                                                #{tmp\ 14128}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 14127}#)))
                                     ($sc-dispatch
                                       #{tmp\ 14127}#
                                       '(any any . each-any))))
                                  #{e\ 14095}#)
                                 (if (memv #{type\ 14093}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 13011}#
                                     #{value\ 14094}#
                                     #{e\ 14095}#
                                     #{r\ 14096}#
                                     #{w\ 14097}#
                                     #{s\ 14098}#
                                     #{mod\ 14099}#
                                     #{chi-sequence\ 12989}#)
                                   (if (memv #{type\ 14093}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 14138}#)
                                        ((lambda (#{tmp\ 14139}#)
                                           (if #{tmp\ 14139}#
                                             (apply (lambda (#{_\ 14144}#
                                                             #{x\ 14145}#
                                                             #{e1\ 14146}#
                                                             #{e2\ 14147}#)
                                                      (let ((#{when-list\ 14149}#
                                                              (#{chi-when-list\ 12995}#
                                                                #{e\ 14095}#
                                                                #{x\ 14145}#
                                                                #{w\ 14097}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 14149}#)
                                                          (#{chi-sequence\ 12989}#
                                                            (cons #{e1\ 14146}#
                                                                  #{e2\ 14147}#)
                                                            #{r\ 14096}#
                                                            #{w\ 14097}#
                                                            #{s\ 14098}#
                                                            #{mod\ 14099}#)
                                                          (#{chi-void\ 13015}#))))
                                                    #{tmp\ 14139}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 14138}#)))
                                         ($sc-dispatch
                                           #{tmp\ 14138}#
                                           '(any each-any any . each-any))))
                                      #{e\ 14095}#)
                                     (if (memv #{type\ 14093}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 14095}#
                                         (#{wrap\ 12985}#
                                           #{value\ 14094}#
                                           #{w\ 14097}#
                                           #{mod\ 14099}#))
                                       (if (memv #{type\ 14093}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 12987}#
                                             #{e\ 14095}#
                                             #{w\ 14097}#
                                             #{s\ 14098}#
                                             #{mod\ 14099}#))
                                         (if (memv #{type\ 14093}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 12987}#
                                               #{e\ 14095}#
                                               #{w\ 14097}#
                                               #{s\ 14098}#
                                               #{mod\ 14099}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 12987}#
                                               #{e\ 14095}#
                                               #{w\ 14097}#
                                               #{s\ 14098}#
                                               #{mod\ 14099}#))))))))))))))))))
           (#{chi\ 13001}#
             (lambda (#{e\ 14156}#
                      #{r\ 14157}#
                      #{w\ 14158}#
                      #{mod\ 14159}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 12997}#
                     #{e\ 14156}#
                     #{r\ 14157}#
                     #{w\ 14158}#
                     (#{source-annotation\ 12895}# #{e\ 14156}#)
                     #f
                     #{mod\ 14159}#
                     #f))
                 (lambda (#{type\ 14164}#
                          #{value\ 14165}#
                          #{e\ 14166}#
                          #{w\ 14167}#
                          #{s\ 14168}#
                          #{mod\ 14169}#)
                   (#{chi-expr\ 13003}#
                     #{type\ 14164}#
                     #{value\ 14165}#
                     #{e\ 14166}#
                     #{r\ 14157}#
                     #{w\ 14167}#
                     #{s\ 14168}#
                     #{mod\ 14169}#)))))
           (#{chi-top\ 12999}#
             (lambda (#{e\ 14176}#
                      #{r\ 14177}#
                      #{w\ 14178}#
                      #{m\ 14179}#
                      #{esew\ 14180}#
                      #{mod\ 14181}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 12997}#
                     #{e\ 14176}#
                     #{r\ 14177}#
                     #{w\ 14178}#
                     (#{source-annotation\ 12895}# #{e\ 14176}#)
                     #f
                     #{mod\ 14181}#
                     #f))
                 (lambda (#{type\ 14202}#
                          #{value\ 14203}#
                          #{e\ 14204}#
                          #{w\ 14205}#
                          #{s\ 14206}#
                          #{mod\ 14207}#)
                   (if (memv #{type\ 14202}# (quote (begin-form)))
                     ((lambda (#{tmp\ 14215}#)
                        ((lambda (#{tmp\ 14216}#)
                           (if #{tmp\ 14216}#
                             (apply (lambda (#{_\ 14218}#)
                                      (#{chi-void\ 13015}#))
                                    #{tmp\ 14216}#)
                             ((lambda (#{tmp\ 14219}#)
                                (if #{tmp\ 14219}#
                                  (apply (lambda (#{_\ 14223}#
                                                  #{e1\ 14224}#
                                                  #{e2\ 14225}#)
                                           (#{chi-top-sequence\ 12991}#
                                             (cons #{e1\ 14224}# #{e2\ 14225}#)
                                             #{r\ 14177}#
                                             #{w\ 14205}#
                                             #{s\ 14206}#
                                             #{m\ 14179}#
                                             #{esew\ 14180}#
                                             #{mod\ 14207}#))
                                         #{tmp\ 14219}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 14215}#)))
                              ($sc-dispatch
                                #{tmp\ 14215}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 14215}# (quote (any)))))
                      #{e\ 14204}#)
                     (if (memv #{type\ 14202}#
                               '(local-syntax-form))
                       (#{chi-local-syntax\ 13011}#
                         #{value\ 14203}#
                         #{e\ 14204}#
                         #{r\ 14177}#
                         #{w\ 14205}#
                         #{s\ 14206}#
                         #{mod\ 14207}#
                         (lambda (#{body\ 14228}#
                                  #{r\ 14229}#
                                  #{w\ 14230}#
                                  #{s\ 14231}#
                                  #{mod\ 14232}#)
                           (#{chi-top-sequence\ 12991}#
                             #{body\ 14228}#
                             #{r\ 14229}#
                             #{w\ 14230}#
                             #{s\ 14231}#
                             #{m\ 14179}#
                             #{esew\ 14180}#
                             #{mod\ 14232}#)))
                       (if (memv #{type\ 14202}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 14239}#)
                            ((lambda (#{tmp\ 14240}#)
                               (if #{tmp\ 14240}#
                                 (apply (lambda (#{_\ 14245}#
                                                 #{x\ 14246}#
                                                 #{e1\ 14247}#
                                                 #{e2\ 14248}#)
                                          (let ((#{when-list\ 14251}#
                                                  (#{chi-when-list\ 12995}#
                                                    #{e\ 14204}#
                                                    #{x\ 14246}#
                                                    #{w\ 14205}#))
                                                (#{body\ 14252}#
                                                  (cons #{e1\ 14247}#
                                                        #{e2\ 14248}#)))
                                            (if (eq? #{m\ 14179}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 14251}#)
                                                (#{chi-top-sequence\ 12991}#
                                                  #{body\ 14252}#
                                                  #{r\ 14177}#
                                                  #{w\ 14205}#
                                                  #{s\ 14206}#
                                                  (if (memq 'expand
                                                            #{when-list\ 14251}#)
                                                    'c&e
                                                    'e)
                                                  '(eval)
                                                  #{mod\ 14207}#)
                                                (begin
                                                  (if (memq 'expand
                                                            #{when-list\ 14251}#)
                                                    (#{top-level-eval-hook\ 12825}#
                                                      (#{chi-top-sequence\ 12991}#
                                                        #{body\ 14252}#
                                                        #{r\ 14177}#
                                                        #{w\ 14205}#
                                                        #{s\ 14206}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 14207}#)
                                                      #{mod\ 14207}#))
                                                  (#{chi-void\ 13015}#)))
                                              (if (memq 'load
                                                        #{when-list\ 14251}#)
                                                (if (let ((#{t\ 14261}#
                                                            (memq 'compile
                                                                  #{when-list\ 14251}#)))
                                                      (if #{t\ 14261}#
                                                        #{t\ 14261}#
                                                        (let ((#{t\ 14264}#
                                                                (memq 'expand
                                                                      #{when-list\ 14251}#)))
                                                          (if #{t\ 14264}#
                                                            #{t\ 14264}#
                                                            (if (eq? #{m\ 14179}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 14251}#)
                                                              #f)))))
                                                  (#{chi-top-sequence\ 12991}#
                                                    #{body\ 14252}#
                                                    #{r\ 14177}#
                                                    #{w\ 14205}#
                                                    #{s\ 14206}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 14207}#)
                                                  (if (memq #{m\ 14179}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 12991}#
                                                      #{body\ 14252}#
                                                      #{r\ 14177}#
                                                      #{w\ 14205}#
                                                      #{s\ 14206}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 14207}#)
                                                    (#{chi-void\ 13015}#)))
                                                (if (let ((#{t\ 14272}#
                                                            (memq 'compile
                                                                  #{when-list\ 14251}#)))
                                                      (if #{t\ 14272}#
                                                        #{t\ 14272}#
                                                        (let ((#{t\ 14275}#
                                                                (memq 'expand
                                                                      #{when-list\ 14251}#)))
                                                          (if #{t\ 14275}#
                                                            #{t\ 14275}#
                                                            (if (eq? #{m\ 14179}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 14251}#)
                                                              #f)))))
                                                  (begin
                                                    (#{top-level-eval-hook\ 12825}#
                                                      (#{chi-top-sequence\ 12991}#
                                                        #{body\ 14252}#
                                                        #{r\ 14177}#
                                                        #{w\ 14205}#
                                                        #{s\ 14206}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 14207}#)
                                                      #{mod\ 14207}#)
                                                    (#{chi-void\ 13015}#))
                                                  (#{chi-void\ 13015}#))))))
                                        #{tmp\ 14240}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 14239}#)))
                             ($sc-dispatch
                               #{tmp\ 14239}#
                               '(any each-any any . each-any))))
                          #{e\ 14204}#)
                         (if (memv #{type\ 14202}#
                                   '(define-syntax-form))
                           (let ((#{n\ 14283}#
                                   (#{id-var-name\ 12973}#
                                     #{value\ 14203}#
                                     #{w\ 14205}#))
                                 (#{r\ 14284}#
                                   (#{macros-only-env\ 12908}# #{r\ 14177}#)))
                             (if (memv #{m\ 14179}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 14180}#)
                                 (let ((#{e\ 14287}#
                                         (#{chi-install-global\ 12993}#
                                           #{n\ 14283}#
                                           (#{chi\ 13001}#
                                             #{e\ 14204}#
                                             #{r\ 14284}#
                                             #{w\ 14205}#
                                             #{mod\ 14207}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 12825}#
                                       #{e\ 14287}#
                                       #{mod\ 14207}#)
                                     (if (memq (quote load) #{esew\ 14180}#)
                                       #{e\ 14287}#
                                       (#{chi-void\ 13015}#))))
                                 (if (memq (quote load) #{esew\ 14180}#)
                                   (#{chi-install-global\ 12993}#
                                     #{n\ 14283}#
                                     (#{chi\ 13001}#
                                       #{e\ 14204}#
                                       #{r\ 14284}#
                                       #{w\ 14205}#
                                       #{mod\ 14207}#))
                                   (#{chi-void\ 13015}#)))
                               (if (memv #{m\ 14179}# (quote (c&e)))
                                 (let ((#{e\ 14290}#
                                         (#{chi-install-global\ 12993}#
                                           #{n\ 14283}#
                                           (#{chi\ 13001}#
                                             #{e\ 14204}#
                                             #{r\ 14284}#
                                             #{w\ 14205}#
                                             #{mod\ 14207}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 12825}#
                                       #{e\ 14290}#
                                       #{mod\ 14207}#)
                                     #{e\ 14290}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 14180}#)
                                     (#{top-level-eval-hook\ 12825}#
                                       (#{chi-install-global\ 12993}#
                                         #{n\ 14283}#
                                         (#{chi\ 13001}#
                                           #{e\ 14204}#
                                           #{r\ 14284}#
                                           #{w\ 14205}#
                                           #{mod\ 14207}#))
                                       #{mod\ 14207}#))
                                   (#{chi-void\ 13015}#)))))
                           (if (memv #{type\ 14202}# (quote (define-form)))
                             (let ((#{n\ 14295}#
                                     (#{id-var-name\ 12973}#
                                       #{value\ 14203}#
                                       #{w\ 14205}#)))
                               (let ((#{type\ 14297}#
                                       (#{binding-type\ 12899}#
                                         (#{lookup\ 12910}#
                                           #{n\ 14295}#
                                           #{r\ 14177}#
                                           #{mod\ 14207}#))))
                                 (if (memv #{type\ 14297}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (memq #{m\ 14179}#
                                                   '(c c&e))
                                           (if (not (module-local-variable
                                                      (current-module)
                                                      #{n\ 14295}#))
                                             (current-module)
                                             #f)
                                           #f)
                                       (let ((#{old\ 14303}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 14295}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 14295}#
                                           (if (variable? #{old\ 14303}#)
                                             (variable-ref #{old\ 14303}#)
                                             #f))))
                                     (let ((#{x\ 14306}#
                                             (#{build-global-definition\ 12856}#
                                               #{s\ 14206}#
                                               #{n\ 14295}#
                                               (#{chi\ 13001}#
                                                 #{e\ 14204}#
                                                 #{r\ 14177}#
                                                 #{w\ 14205}#
                                                 #{mod\ 14207}#))))
                                       (begin
                                         (if (eq? #{m\ 14179}# (quote c&e))
                                           (#{top-level-eval-hook\ 12825}#
                                             #{x\ 14306}#
                                             #{mod\ 14207}#))
                                         #{x\ 14306}#)))
                                   (if (memv #{type\ 14297}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 14204}#
                                       (#{wrap\ 12985}#
                                         #{value\ 14203}#
                                         #{w\ 14205}#
                                         #{mod\ 14207}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 14204}#
                                       (#{wrap\ 12985}#
                                         #{value\ 14203}#
                                         #{w\ 14205}#
                                         #{mod\ 14207}#))))))
                             (let ((#{x\ 14312}#
                                     (#{chi-expr\ 13003}#
                                       #{type\ 14202}#
                                       #{value\ 14203}#
                                       #{e\ 14204}#
                                       #{r\ 14177}#
                                       #{w\ 14205}#
                                       #{s\ 14206}#
                                       #{mod\ 14207}#)))
                               (begin
                                 (if (eq? #{m\ 14179}# (quote c&e))
                                   (#{top-level-eval-hook\ 12825}#
                                     #{x\ 14312}#
                                     #{mod\ 14207}#))
                                 #{x\ 14312}#)))))))))))
           (#{syntax-type\ 12997}#
             (lambda (#{e\ 14313}#
                      #{r\ 14314}#
                      #{w\ 14315}#
                      #{s\ 14316}#
                      #{rib\ 14317}#
                      #{mod\ 14318}#
                      #{for-car?\ 14319}#)
               (if (symbol? #{e\ 14313}#)
                 (let ((#{n\ 14331}#
                         (#{id-var-name\ 12973}#
                           #{e\ 14313}#
                           #{w\ 14315}#)))
                   (let ((#{b\ 14333}#
                           (#{lookup\ 12910}#
                             #{n\ 14331}#
                             #{r\ 14314}#
                             #{mod\ 14318}#)))
                     (let ((#{type\ 14335}#
                             (#{binding-type\ 12899}# #{b\ 14333}#)))
                       (if (memv #{type\ 14335}# (quote (lexical)))
                         (values
                           #{type\ 14335}#
                           (#{binding-value\ 12901}# #{b\ 14333}#)
                           #{e\ 14313}#
                           #{w\ 14315}#
                           #{s\ 14316}#
                           #{mod\ 14318}#)
                         (if (memv #{type\ 14335}# (quote (global)))
                           (values
                             #{type\ 14335}#
                             #{n\ 14331}#
                             #{e\ 14313}#
                             #{w\ 14315}#
                             #{s\ 14316}#
                             #{mod\ 14318}#)
                           (if (memv #{type\ 14335}# (quote (macro)))
                             (if #{for-car?\ 14319}#
                               (values
                                 #{type\ 14335}#
                                 (#{binding-value\ 12901}# #{b\ 14333}#)
                                 #{e\ 14313}#
                                 #{w\ 14315}#
                                 #{s\ 14316}#
                                 #{mod\ 14318}#)
                               (#{syntax-type\ 12997}#
                                 (#{chi-macro\ 13007}#
                                   (#{binding-value\ 12901}# #{b\ 14333}#)
                                   #{e\ 14313}#
                                   #{r\ 14314}#
                                   #{w\ 14315}#
                                   #{rib\ 14317}#
                                   #{mod\ 14318}#)
                                 #{r\ 14314}#
                                 '(())
                                 #{s\ 14316}#
                                 #{rib\ 14317}#
                                 #{mod\ 14318}#
                                 #f))
                             (values
                               #{type\ 14335}#
                               (#{binding-value\ 12901}# #{b\ 14333}#)
                               #{e\ 14313}#
                               #{w\ 14315}#
                               #{s\ 14316}#
                               #{mod\ 14318}#)))))))
                 (if (pair? #{e\ 14313}#)
                   (let ((#{first\ 14344}# (car #{e\ 14313}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 12997}#
                           #{first\ 14344}#
                           #{r\ 14314}#
                           #{w\ 14315}#
                           #{s\ 14316}#
                           #{rib\ 14317}#
                           #{mod\ 14318}#
                           #t))
                       (lambda (#{ftype\ 14345}#
                                #{fval\ 14346}#
                                #{fe\ 14347}#
                                #{fw\ 14348}#
                                #{fs\ 14349}#
                                #{fmod\ 14350}#)
                         (if (memv #{ftype\ 14345}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 14346}#
                             #{e\ 14313}#
                             #{w\ 14315}#
                             #{s\ 14316}#
                             #{mod\ 14318}#)
                           (if (memv #{ftype\ 14345}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 12878}#
                                 #{fval\ 14346}#
                                 #{w\ 14315}#
                                 #{fmod\ 14350}#)
                               #{e\ 14313}#
                               #{w\ 14315}#
                               #{s\ 14316}#
                               #{mod\ 14318}#)
                             (if (memv #{ftype\ 14345}# (quote (macro)))
                               (#{syntax-type\ 12997}#
                                 (#{chi-macro\ 13007}#
                                   #{fval\ 14346}#
                                   #{e\ 14313}#
                                   #{r\ 14314}#
                                   #{w\ 14315}#
                                   #{rib\ 14317}#
                                   #{mod\ 14318}#)
                                 #{r\ 14314}#
                                 '(())
                                 #{s\ 14316}#
                                 #{rib\ 14317}#
                                 #{mod\ 14318}#
                                 #{for-car?\ 14319}#)
                               (if (memv #{ftype\ 14345}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda ()
                                     (#{fval\ 14346}#
                                       #{e\ 14313}#
                                       #{r\ 14314}#
                                       #{w\ 14315}#))
                                   (lambda (#{e\ 14362}#
                                            #{r\ 14363}#
                                            #{w\ 14364}#
                                            #{s\ 14365}#
                                            #{mod\ 14366}#)
                                     (#{syntax-type\ 12997}#
                                       #{e\ 14362}#
                                       #{r\ 14363}#
                                       #{w\ 14364}#
                                       #{s\ 14365}#
                                       #{rib\ 14317}#
                                       #{mod\ 14366}#
                                       #{for-car?\ 14319}#)))
                                 (if (memv #{ftype\ 14345}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 14346}#
                                     #{e\ 14313}#
                                     #{w\ 14315}#
                                     #{s\ 14316}#
                                     #{mod\ 14318}#)
                                   (if (memv #{ftype\ 14345}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 14346}#
                                       #{e\ 14313}#
                                       #{w\ 14315}#
                                       #{s\ 14316}#
                                       #{mod\ 14318}#)
                                     (if (memv #{ftype\ 14345}#
                                               '(begin))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 14313}#
                                         #{w\ 14315}#
                                         #{s\ 14316}#
                                         #{mod\ 14318}#)
                                       (if (memv #{ftype\ 14345}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 14313}#
                                           #{w\ 14315}#
                                           #{s\ 14316}#
                                           #{mod\ 14318}#)
                                         (if (memv #{ftype\ 14345}#
                                                   '(define))
                                           ((lambda (#{tmp\ 14377}#)
                                              ((lambda (#{tmp\ 14378}#)
                                                 (if (if #{tmp\ 14378}#
                                                       (apply (lambda (#{_\ 14382}#
                                                                       #{name\ 14383}#
                                                                       #{val\ 14384}#)
                                                                (#{id?\ 12916}#
                                                                  #{name\ 14383}#))
                                                              #{tmp\ 14378}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 14388}#
                                                                   #{name\ 14389}#
                                                                   #{val\ 14390}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 14389}#
                                                              #{val\ 14390}#
                                                              #{w\ 14315}#
                                                              #{s\ 14316}#
                                                              #{mod\ 14318}#))
                                                          #{tmp\ 14378}#)
                                                   ((lambda (#{tmp\ 14391}#)
                                                      (if (if #{tmp\ 14391}#
                                                            (apply (lambda (#{_\ 14397}#
                                                                            #{name\ 14398}#
                                                                            #{args\ 14399}#
                                                                            #{e1\ 14400}#
                                                                            #{e2\ 14401}#)
                                                                     (if (#{id?\ 12916}#
                                                                           #{name\ 14398}#)
                                                                       (#{valid-bound-ids?\ 12979}#
                                                                         (#{lambda-var-list\ 13031}#
                                                                           #{args\ 14399}#))
                                                                       #f))
                                                                   #{tmp\ 14391}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 14409}#
                                                                        #{name\ 14410}#
                                                                        #{args\ 14411}#
                                                                        #{e1\ 14412}#
                                                                        #{e2\ 14413}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 12985}#
                                                                     #{name\ 14410}#
                                                                     #{w\ 14315}#
                                                                     #{mod\ 14318}#)
                                                                   (#{decorate-source\ 12834}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i14404"
                                                                                   "i14405"
                                                                                   "i14406"
                                                                                   "i14407"
                                                                                   "i14408"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i14351"
                                                                                   "i14352"
                                                                                   "i14353"
                                                                                   "i14354"
                                                                                   "i14355"
                                                                                   "i14356"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i14343"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i14320"
                                                                                   "i14321"
                                                                                   "i14322"
                                                                                   "i14323"
                                                                                   "i14324"
                                                                                   "i14325"
                                                                                   "i14326"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   make-dynlet
                                                                                   make-letrec
                                                                                   make-let
                                                                                   make-lambda-case
                                                                                   make-lambda
                                                                                   make-sequence
                                                                                   make-application
                                                                                   make-conditional
                                                                                   make-toplevel-define
                                                                                   make-toplevel-set
                                                                                   make-toplevel-ref
                                                                                   make-module-set
                                                                                   make-module-ref
                                                                                   make-lexical-set
                                                                                   make-lexical-ref
                                                                                   make-primitive-ref
                                                                                   make-const
                                                                                   make-void
                                                                                   *mode*)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i13030"
                                                                                  "i13028"
                                                                                  "i13026"
                                                                                  "i13024"
                                                                                  "i13022"
                                                                                  "i13020"
                                                                                  "i13018"
                                                                                  "i13016"
                                                                                  "i13014"
                                                                                  "i13012"
                                                                                  "i13010"
                                                                                  "i13008"
                                                                                  "i13006"
                                                                                  "i13004"
                                                                                  "i13002"
                                                                                  "i13000"
                                                                                  "i12998"
                                                                                  "i12996"
                                                                                  "i12994"
                                                                                  "i12992"
                                                                                  "i12990"
                                                                                  "i12988"
                                                                                  "i12986"
                                                                                  "i12984"
                                                                                  "i12982"
                                                                                  "i12980"
                                                                                  "i12978"
                                                                                  "i12976"
                                                                                  "i12974"
                                                                                  "i12972"
                                                                                  "i12970"
                                                                                  "i12968"
                                                                                  "i12966"
                                                                                  "i12964"
                                                                                  "i12962"
                                                                                  "i12960"
                                                                                  "i12959"
                                                                                  "i12958"
                                                                                  "i12956"
                                                                                  "i12955"
                                                                                  "i12954"
                                                                                  "i12953"
                                                                                  "i12952"
                                                                                  "i12950"
                                                                                  "i12948"
                                                                                  "i12946"
                                                                                  "i12944"
                                                                                  "i12942"
                                                                                  "i12940"
                                                                                  "i12938"
                                                                                  "i12936"
                                                                                  "i12933"
                                                                                  "i12931"
                                                                                  "i12930"
                                                                                  "i12929"
                                                                                  "i12928"
                                                                                  "i12927"
                                                                                  "i12926"
                                                                                  "i12924"
                                                                                  "i12922"
                                                                                  "i12920"
                                                                                  "i12918"
                                                                                  "i12917"
                                                                                  "i12915"
                                                                                  "i12913"
                                                                                  "i12911"
                                                                                  "i12909"
                                                                                  "i12907"
                                                                                  "i12905"
                                                                                  "i12903"
                                                                                  "i12902"
                                                                                  "i12900"
                                                                                  "i12898"
                                                                                  "i12897"
                                                                                  "i12896"
                                                                                  "i12894"
                                                                                  "i12893"
                                                                                  "i12891"
                                                                                  "i12889"
                                                                                  "i12887"
                                                                                  "i12885"
                                                                                  "i12883"
                                                                                  "i12881"
                                                                                  "i12879"
                                                                                  "i12877"
                                                                                  "i12875"
                                                                                  "i12873"
                                                                                  "i12871"
                                                                                  "i12869"
                                                                                  "i12867"
                                                                                  "i12865"
                                                                                  "i12863"
                                                                                  "i12861"
                                                                                  "i12859"
                                                                                  "i12857"
                                                                                  "i12855"
                                                                                  "i12853"
                                                                                  "i12851"
                                                                                  "i12849"
                                                                                  "i12847"
                                                                                  "i12845"
                                                                                  "i12843"
                                                                                  "i12841"
                                                                                  "i12839"
                                                                                  "i12837"
                                                                                  "i12835"
                                                                                  "i12833"
                                                                                  "i12831"
                                                                                  "i12829"
                                                                                  "i12828"
                                                                                  "i12826"
                                                                                  "i12824"
                                                                                  "i12822"
                                                                                  "i12820"
                                                                                  "i12818"
                                                                                  "i12816"
                                                                                  "i12814"
                                                                                  "i12812"
                                                                                  "i12810"
                                                                                  "i12808"
                                                                                  "i12806"
                                                                                  "i12804"
                                                                                  "i12802"
                                                                                  "i12800"
                                                                                  "i12798"
                                                                                  "i12796"
                                                                                  "i12794"
                                                                                  "i12792"
                                                                                  "i12790"
                                                                                  "i12788"
                                                                                  "i12786"
                                                                                  "i12784"
                                                                                  "i12782"
                                                                                  "i12780"
                                                                                  "i12777"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   define-expansion-constructors
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i12629"
                                                                                  "i12628"
                                                                                  "i12626")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 12985}#
                                                                             (cons #{args\ 14411}#
                                                                                   (cons #{e1\ 14412}#
                                                                                         #{e2\ 14413}#))
                                                                             #{w\ 14315}#
                                                                             #{mod\ 14318}#))
                                                                     #{s\ 14316}#)
                                                                   '(())
                                                                   #{s\ 14316}#
                                                                   #{mod\ 14318}#))
                                                               #{tmp\ 14391}#)
                                                        ((lambda (#{tmp\ 14416}#)
                                                           (if (if #{tmp\ 14416}#
                                                                 (apply (lambda (#{_\ 14419}#
                                                                                 #{name\ 14420}#)
                                                                          (#{id?\ 12916}#
                                                                            #{name\ 14420}#))
                                                                        #{tmp\ 14416}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 14423}#
                                                                             #{name\ 14424}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 12985}#
                                                                          #{name\ 14424}#
                                                                          #{w\ 14315}#
                                                                          #{mod\ 14318}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i14421"
                                                                                 "i14422"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14351"
                                                                                 "i14352"
                                                                                 "i14353"
                                                                                 "i14354"
                                                                                 "i14355"
                                                                                 "i14356"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i14343"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14320"
                                                                                 "i14321"
                                                                                 "i14322"
                                                                                 "i14323"
                                                                                 "i14324"
                                                                                 "i14325"
                                                                                 "i14326"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 make-dynlet
                                                                                 make-letrec
                                                                                 make-let
                                                                                 make-lambda-case
                                                                                 make-lambda
                                                                                 make-sequence
                                                                                 make-application
                                                                                 make-conditional
                                                                                 make-toplevel-define
                                                                                 make-toplevel-set
                                                                                 make-toplevel-ref
                                                                                 make-module-set
                                                                                 make-module-ref
                                                                                 make-lexical-set
                                                                                 make-lexical-ref
                                                                                 make-primitive-ref
                                                                                 make-const
                                                                                 make-void
                                                                                 *mode*)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i13030"
                                                                                "i13028"
                                                                                "i13026"
                                                                                "i13024"
                                                                                "i13022"
                                                                                "i13020"
                                                                                "i13018"
                                                                                "i13016"
                                                                                "i13014"
                                                                                "i13012"
                                                                                "i13010"
                                                                                "i13008"
                                                                                "i13006"
                                                                                "i13004"
                                                                                "i13002"
                                                                                "i13000"
                                                                                "i12998"
                                                                                "i12996"
                                                                                "i12994"
                                                                                "i12992"
                                                                                "i12990"
                                                                                "i12988"
                                                                                "i12986"
                                                                                "i12984"
                                                                                "i12982"
                                                                                "i12980"
                                                                                "i12978"
                                                                                "i12976"
                                                                                "i12974"
                                                                                "i12972"
                                                                                "i12970"
                                                                                "i12968"
                                                                                "i12966"
                                                                                "i12964"
                                                                                "i12962"
                                                                                "i12960"
                                                                                "i12959"
                                                                                "i12958"
                                                                                "i12956"
                                                                                "i12955"
                                                                                "i12954"
                                                                                "i12953"
                                                                                "i12952"
                                                                                "i12950"
                                                                                "i12948"
                                                                                "i12946"
                                                                                "i12944"
                                                                                "i12942"
                                                                                "i12940"
                                                                                "i12938"
                                                                                "i12936"
                                                                                "i12933"
                                                                                "i12931"
                                                                                "i12930"
                                                                                "i12929"
                                                                                "i12928"
                                                                                "i12927"
                                                                                "i12926"
                                                                                "i12924"
                                                                                "i12922"
                                                                                "i12920"
                                                                                "i12918"
                                                                                "i12917"
                                                                                "i12915"
                                                                                "i12913"
                                                                                "i12911"
                                                                                "i12909"
                                                                                "i12907"
                                                                                "i12905"
                                                                                "i12903"
                                                                                "i12902"
                                                                                "i12900"
                                                                                "i12898"
                                                                                "i12897"
                                                                                "i12896"
                                                                                "i12894"
                                                                                "i12893"
                                                                                "i12891"
                                                                                "i12889"
                                                                                "i12887"
                                                                                "i12885"
                                                                                "i12883"
                                                                                "i12881"
                                                                                "i12879"
                                                                                "i12877"
                                                                                "i12875"
                                                                                "i12873"
                                                                                "i12871"
                                                                                "i12869"
                                                                                "i12867"
                                                                                "i12865"
                                                                                "i12863"
                                                                                "i12861"
                                                                                "i12859"
                                                                                "i12857"
                                                                                "i12855"
                                                                                "i12853"
                                                                                "i12851"
                                                                                "i12849"
                                                                                "i12847"
                                                                                "i12845"
                                                                                "i12843"
                                                                                "i12841"
                                                                                "i12839"
                                                                                "i12837"
                                                                                "i12835"
                                                                                "i12833"
                                                                                "i12831"
                                                                                "i12829"
                                                                                "i12828"
                                                                                "i12826"
                                                                                "i12824"
                                                                                "i12822"
                                                                                "i12820"
                                                                                "i12818"
                                                                                "i12816"
                                                                                "i12814"
                                                                                "i12812"
                                                                                "i12810"
                                                                                "i12808"
                                                                                "i12806"
                                                                                "i12804"
                                                                                "i12802"
                                                                                "i12800"
                                                                                "i12798"
                                                                                "i12796"
                                                                                "i12794"
                                                                                "i12792"
                                                                                "i12790"
                                                                                "i12788"
                                                                                "i12786"
                                                                                "i12784"
                                                                                "i12782"
                                                                                "i12780"
                                                                                "i12777"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 define-expansion-constructors
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top)
                                                                                (top))
                                                                               ("i12629"
                                                                                "i12628"
                                                                                "i12626")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i14421"
                                                                                 "i14422"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14351"
                                                                                 "i14352"
                                                                                 "i14353"
                                                                                 "i14354"
                                                                                 "i14355"
                                                                                 "i14356"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i14343"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14320"
                                                                                 "i14321"
                                                                                 "i14322"
                                                                                 "i14323"
                                                                                 "i14324"
                                                                                 "i14325"
                                                                                 "i14326"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 make-dynlet
                                                                                 make-letrec
                                                                                 make-let
                                                                                 make-lambda-case
                                                                                 make-lambda
                                                                                 make-sequence
                                                                                 make-application
                                                                                 make-conditional
                                                                                 make-toplevel-define
                                                                                 make-toplevel-set
                                                                                 make-toplevel-ref
                                                                                 make-module-set
                                                                                 make-module-ref
                                                                                 make-lexical-set
                                                                                 make-lexical-ref
                                                                                 make-primitive-ref
                                                                                 make-const
                                                                                 make-void
                                                                                 *mode*)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i13030"
                                                                                "i13028"
                                                                                "i13026"
                                                                                "i13024"
                                                                                "i13022"
                                                                                "i13020"
                                                                                "i13018"
                                                                                "i13016"
                                                                                "i13014"
                                                                                "i13012"
                                                                                "i13010"
                                                                                "i13008"
                                                                                "i13006"
                                                                                "i13004"
                                                                                "i13002"
                                                                                "i13000"
                                                                                "i12998"
                                                                                "i12996"
                                                                                "i12994"
                                                                                "i12992"
                                                                                "i12990"
                                                                                "i12988"
                                                                                "i12986"
                                                                                "i12984"
                                                                                "i12982"
                                                                                "i12980"
                                                                                "i12978"
                                                                                "i12976"
                                                                                "i12974"
                                                                                "i12972"
                                                                                "i12970"
                                                                                "i12968"
                                                                                "i12966"
                                                                                "i12964"
                                                                                "i12962"
                                                                                "i12960"
                                                                                "i12959"
                                                                                "i12958"
                                                                                "i12956"
                                                                                "i12955"
                                                                                "i12954"
                                                                                "i12953"
                                                                                "i12952"
                                                                                "i12950"
                                                                                "i12948"
                                                                                "i12946"
                                                                                "i12944"
                                                                                "i12942"
                                                                                "i12940"
                                                                                "i12938"
                                                                                "i12936"
                                                                                "i12933"
                                                                                "i12931"
                                                                                "i12930"
                                                                                "i12929"
                                                                                "i12928"
                                                                                "i12927"
                                                                                "i12926"
                                                                                "i12924"
                                                                                "i12922"
                                                                                "i12920"
                                                                                "i12918"
                                                                                "i12917"
                                                                                "i12915"
                                                                                "i12913"
                                                                                "i12911"
                                                                                "i12909"
                                                                                "i12907"
                                                                                "i12905"
                                                                                "i12903"
                                                                                "i12902"
                                                                                "i12900"
                                                                                "i12898"
                                                                                "i12897"
                                                                                "i12896"
                                                                                "i12894"
                                                                                "i12893"
                                                                                "i12891"
                                                                                "i12889"
                                                                                "i12887"
                                                                                "i12885"
                                                                                "i12883"
                                                                                "i12881"
                                                                                "i12879"
                                                                                "i12877"
                                                                                "i12875"
                                                                                "i12873"
                                                                                "i12871"
                                                                                "i12869"
                                                                                "i12867"
                                                                                "i12865"
                                                                                "i12863"
                                                                                "i12861"
                                                                                "i12859"
                                                                                "i12857"
                                                                                "i12855"
                                                                                "i12853"
                                                                                "i12851"
                                                                                "i12849"
                                                                                "i12847"
                                                                                "i12845"
                                                                                "i12843"
                                                                                "i12841"
                                                                                "i12839"
                                                                                "i12837"
                                                                                "i12835"
                                                                                "i12833"
                                                                                "i12831"
                                                                                "i12829"
                                                                                "i12828"
                                                                                "i12826"
                                                                                "i12824"
                                                                                "i12822"
                                                                                "i12820"
                                                                                "i12818"
                                                                                "i12816"
                                                                                "i12814"
                                                                                "i12812"
                                                                                "i12810"
                                                                                "i12808"
                                                                                "i12806"
                                                                                "i12804"
                                                                                "i12802"
                                                                                "i12800"
                                                                                "i12798"
                                                                                "i12796"
                                                                                "i12794"
                                                                                "i12792"
                                                                                "i12790"
                                                                                "i12788"
                                                                                "i12786"
                                                                                "i12784"
                                                                                "i12782"
                                                                                "i12780"
                                                                                "i12777"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 define-expansion-constructors
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top)
                                                                                (top))
                                                                               ("i12629"
                                                                                "i12628"
                                                                                "i12626")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i14421"
                                                                                 "i14422"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14351"
                                                                                 "i14352"
                                                                                 "i14353"
                                                                                 "i14354"
                                                                                 "i14355"
                                                                                 "i14356"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i14343"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i14320"
                                                                                 "i14321"
                                                                                 "i14322"
                                                                                 "i14323"
                                                                                 "i14324"
                                                                                 "i14325"
                                                                                 "i14326"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 make-dynlet
                                                                                 make-letrec
                                                                                 make-let
                                                                                 make-lambda-case
                                                                                 make-lambda
                                                                                 make-sequence
                                                                                 make-application
                                                                                 make-conditional
                                                                                 make-toplevel-define
                                                                                 make-toplevel-set
                                                                                 make-toplevel-ref
                                                                                 make-module-set
                                                                                 make-module-ref
                                                                                 make-lexical-set
                                                                                 make-lexical-ref
                                                                                 make-primitive-ref
                                                                                 make-const
                                                                                 make-void
                                                                                 *mode*)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i13030"
                                                                                "i13028"
                                                                                "i13026"
                                                                                "i13024"
                                                                                "i13022"
                                                                                "i13020"
                                                                                "i13018"
                                                                                "i13016"
                                                                                "i13014"
                                                                                "i13012"
                                                                                "i13010"
                                                                                "i13008"
                                                                                "i13006"
                                                                                "i13004"
                                                                                "i13002"
                                                                                "i13000"
                                                                                "i12998"
                                                                                "i12996"
                                                                                "i12994"
                                                                                "i12992"
                                                                                "i12990"
                                                                                "i12988"
                                                                                "i12986"
                                                                                "i12984"
                                                                                "i12982"
                                                                                "i12980"
                                                                                "i12978"
                                                                                "i12976"
                                                                                "i12974"
                                                                                "i12972"
                                                                                "i12970"
                                                                                "i12968"
                                                                                "i12966"
                                                                                "i12964"
                                                                                "i12962"
                                                                                "i12960"
                                                                                "i12959"
                                                                                "i12958"
                                                                                "i12956"
                                                                                "i12955"
                                                                                "i12954"
                                                                                "i12953"
                                                                                "i12952"
                                                                                "i12950"
                                                                                "i12948"
                                                                                "i12946"
                                                                                "i12944"
                                                                                "i12942"
                                                                                "i12940"
                                                                                "i12938"
                                                                                "i12936"
                                                                                "i12933"
                                                                                "i12931"
                                                                                "i12930"
                                                                                "i12929"
                                                                                "i12928"
                                                                                "i12927"
                                                                                "i12926"
                                                                                "i12924"
                                                                                "i12922"
                                                                                "i12920"
                                                                                "i12918"
                                                                                "i12917"
                                                                                "i12915"
                                                                                "i12913"
                                                                                "i12911"
                                                                                "i12909"
                                                                                "i12907"
                                                                                "i12905"
                                                                                "i12903"
                                                                                "i12902"
                                                                                "i12900"
                                                                                "i12898"
                                                                                "i12897"
                                                                                "i12896"
                                                                                "i12894"
                                                                                "i12893"
                                                                                "i12891"
                                                                                "i12889"
                                                                                "i12887"
                                                                                "i12885"
                                                                                "i12883"
                                                                                "i12881"
                                                                                "i12879"
                                                                                "i12877"
                                                                                "i12875"
                                                                                "i12873"
                                                                                "i12871"
                                                                                "i12869"
                                                                                "i12867"
                                                                                "i12865"
                                                                                "i12863"
                                                                                "i12861"
                                                                                "i12859"
                                                                                "i12857"
                                                                                "i12855"
                                                                                "i12853"
                                                                                "i12851"
                                                                                "i12849"
                                                                                "i12847"
                                                                                "i12845"
                                                                                "i12843"
                                                                                "i12841"
                                                                                "i12839"
                                                                                "i12837"
                                                                                "i12835"
                                                                                "i12833"
                                                                                "i12831"
                                                                                "i12829"
                                                                                "i12828"
                                                                                "i12826"
                                                                                "i12824"
                                                                                "i12822"
                                                                                "i12820"
                                                                                "i12818"
                                                                                "i12816"
                                                                                "i12814"
                                                                                "i12812"
                                                                                "i12810"
                                                                                "i12808"
                                                                                "i12806"
                                                                                "i12804"
                                                                                "i12802"
                                                                                "i12800"
                                                                                "i12798"
                                                                                "i12796"
                                                                                "i12794"
                                                                                "i12792"
                                                                                "i12790"
                                                                                "i12788"
                                                                                "i12786"
                                                                                "i12784"
                                                                                "i12782"
                                                                                "i12780"
                                                                                "i12777"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 define-expansion-constructors
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top)
                                                                                (top))
                                                                               ("i12629"
                                                                                "i12628"
                                                                                "i12626")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 14316}#
                                                                        #{mod\ 14318}#))
                                                                    #{tmp\ 14416}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 14377}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 14377}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 14377}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 14377}#
                                                 '(any any any))))
                                            #{e\ 14313}#)
                                           (if (memv #{ftype\ 14345}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 14427}#)
                                                ((lambda (#{tmp\ 14428}#)
                                                   (if (if #{tmp\ 14428}#
                                                         (apply (lambda (#{_\ 14432}#
                                                                         #{name\ 14433}#
                                                                         #{val\ 14434}#)
                                                                  (#{id?\ 12916}#
                                                                    #{name\ 14433}#))
                                                                #{tmp\ 14428}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 14438}#
                                                                     #{name\ 14439}#
                                                                     #{val\ 14440}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 14439}#
                                                                #{val\ 14440}#
                                                                #{w\ 14315}#
                                                                #{s\ 14316}#
                                                                #{mod\ 14318}#))
                                                            #{tmp\ 14428}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 14427}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 14427}#
                                                   '(any any any))))
                                              #{e\ 14313}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 14313}#
                                               #{w\ 14315}#
                                               #{s\ 14316}#
                                               #{mod\ 14318}#))))))))))))))
                   (if (#{syntax-object?\ 12880}# #{e\ 14313}#)
                     (#{syntax-type\ 12997}#
                       (#{syntax-object-expression\ 12882}#
                         #{e\ 14313}#)
                       #{r\ 14314}#
                       (#{join-wraps\ 12967}#
                         #{w\ 14315}#
                         (#{syntax-object-wrap\ 12884}# #{e\ 14313}#))
                       #{s\ 14316}#
                       #{rib\ 14317}#
                       (let ((#{t\ 14446}#
                               (#{syntax-object-module\ 12886}# #{e\ 14313}#)))
                         (if #{t\ 14446}# #{t\ 14446}# #{mod\ 14318}#))
                       #{for-car?\ 14319}#)
                     (if (self-evaluating? #{e\ 14313}#)
                       (values
                         'constant
                         #f
                         #{e\ 14313}#
                         #{w\ 14315}#
                         #{s\ 14316}#
                         #{mod\ 14318}#)
                       (values
                         'other
                         #f
                         #{e\ 14313}#
                         #{w\ 14315}#
                         #{s\ 14316}#
                         #{mod\ 14318}#)))))))
           (#{chi-when-list\ 12995}#
             (lambda (#{e\ 14451}# #{when-list\ 14452}# #{w\ 14453}#)
               (letrec ((#{f\ 14460}#
                          (lambda (#{when-list\ 14461}# #{situations\ 14462}#)
                            (if (null? #{when-list\ 14461}#)
                              #{situations\ 14462}#
                              (#{f\ 14460}#
                                (cdr #{when-list\ 14461}#)
                                (cons (let ((#{x\ 14464}#
                                              (car #{when-list\ 14461}#)))
                                        (if (#{free-id=?\ 12975}#
                                              #{x\ 14464}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i14463"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i14457"
                                                      "i14458"
                                                      "i14459"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i14454"
                                                      "i14455"
                                                      "i14456"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      make-dynlet
                                                      make-letrec
                                                      make-let
                                                      make-lambda-case
                                                      make-lambda
                                                      make-sequence
                                                      make-application
                                                      make-conditional
                                                      make-toplevel-define
                                                      make-toplevel-set
                                                      make-toplevel-ref
                                                      make-module-set
                                                      make-module-ref
                                                      make-lexical-set
                                                      make-lexical-ref
                                                      make-primitive-ref
                                                      make-const
                                                      make-void
                                                      *mode*)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i13030"
                                                     "i13028"
                                                     "i13026"
                                                     "i13024"
                                                     "i13022"
                                                     "i13020"
                                                     "i13018"
                                                     "i13016"
                                                     "i13014"
                                                     "i13012"
                                                     "i13010"
                                                     "i13008"
                                                     "i13006"
                                                     "i13004"
                                                     "i13002"
                                                     "i13000"
                                                     "i12998"
                                                     "i12996"
                                                     "i12994"
                                                     "i12992"
                                                     "i12990"
                                                     "i12988"
                                                     "i12986"
                                                     "i12984"
                                                     "i12982"
                                                     "i12980"
                                                     "i12978"
                                                     "i12976"
                                                     "i12974"
                                                     "i12972"
                                                     "i12970"
                                                     "i12968"
                                                     "i12966"
                                                     "i12964"
                                                     "i12962"
                                                     "i12960"
                                                     "i12959"
                                                     "i12958"
                                                     "i12956"
                                                     "i12955"
                                                     "i12954"
                                                     "i12953"
                                                     "i12952"
                                                     "i12950"
                                                     "i12948"
                                                     "i12946"
                                                     "i12944"
                                                     "i12942"
                                                     "i12940"
                                                     "i12938"
                                                     "i12936"
                                                     "i12933"
                                                     "i12931"
                                                     "i12930"
                                                     "i12929"
                                                     "i12928"
                                                     "i12927"
                                                     "i12926"
                                                     "i12924"
                                                     "i12922"
                                                     "i12920"
                                                     "i12918"
                                                     "i12917"
                                                     "i12915"
                                                     "i12913"
                                                     "i12911"
                                                     "i12909"
                                                     "i12907"
                                                     "i12905"
                                                     "i12903"
                                                     "i12902"
                                                     "i12900"
                                                     "i12898"
                                                     "i12897"
                                                     "i12896"
                                                     "i12894"
                                                     "i12893"
                                                     "i12891"
                                                     "i12889"
                                                     "i12887"
                                                     "i12885"
                                                     "i12883"
                                                     "i12881"
                                                     "i12879"
                                                     "i12877"
                                                     "i12875"
                                                     "i12873"
                                                     "i12871"
                                                     "i12869"
                                                     "i12867"
                                                     "i12865"
                                                     "i12863"
                                                     "i12861"
                                                     "i12859"
                                                     "i12857"
                                                     "i12855"
                                                     "i12853"
                                                     "i12851"
                                                     "i12849"
                                                     "i12847"
                                                     "i12845"
                                                     "i12843"
                                                     "i12841"
                                                     "i12839"
                                                     "i12837"
                                                     "i12835"
                                                     "i12833"
                                                     "i12831"
                                                     "i12829"
                                                     "i12828"
                                                     "i12826"
                                                     "i12824"
                                                     "i12822"
                                                     "i12820"
                                                     "i12818"
                                                     "i12816"
                                                     "i12814"
                                                     "i12812"
                                                     "i12810"
                                                     "i12808"
                                                     "i12806"
                                                     "i12804"
                                                     "i12802"
                                                     "i12800"
                                                     "i12798"
                                                     "i12796"
                                                     "i12794"
                                                     "i12792"
                                                     "i12790"
                                                     "i12788"
                                                     "i12786"
                                                     "i12784"
                                                     "i12782"
                                                     "i12780"
                                                     "i12777"))
                                                  #(ribcage
                                                    (define-structure
                                                      define-expansion-constructors
                                                      and-map*)
                                                    ((top) (top) (top))
                                                    ("i12629"
                                                     "i12628"
                                                     "i12626")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 12975}#
                                                #{x\ 14464}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i14463"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i14457"
                                                        "i14458"
                                                        "i14459"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i14454"
                                                        "i14455"
                                                        "i14456"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void
                                                        *mode*)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i13030"
                                                       "i13028"
                                                       "i13026"
                                                       "i13024"
                                                       "i13022"
                                                       "i13020"
                                                       "i13018"
                                                       "i13016"
                                                       "i13014"
                                                       "i13012"
                                                       "i13010"
                                                       "i13008"
                                                       "i13006"
                                                       "i13004"
                                                       "i13002"
                                                       "i13000"
                                                       "i12998"
                                                       "i12996"
                                                       "i12994"
                                                       "i12992"
                                                       "i12990"
                                                       "i12988"
                                                       "i12986"
                                                       "i12984"
                                                       "i12982"
                                                       "i12980"
                                                       "i12978"
                                                       "i12976"
                                                       "i12974"
                                                       "i12972"
                                                       "i12970"
                                                       "i12968"
                                                       "i12966"
                                                       "i12964"
                                                       "i12962"
                                                       "i12960"
                                                       "i12959"
                                                       "i12958"
                                                       "i12956"
                                                       "i12955"
                                                       "i12954"
                                                       "i12953"
                                                       "i12952"
                                                       "i12950"
                                                       "i12948"
                                                       "i12946"
                                                       "i12944"
                                                       "i12942"
                                                       "i12940"
                                                       "i12938"
                                                       "i12936"
                                                       "i12933"
                                                       "i12931"
                                                       "i12930"
                                                       "i12929"
                                                       "i12928"
                                                       "i12927"
                                                       "i12926"
                                                       "i12924"
                                                       "i12922"
                                                       "i12920"
                                                       "i12918"
                                                       "i12917"
                                                       "i12915"
                                                       "i12913"
                                                       "i12911"
                                                       "i12909"
                                                       "i12907"
                                                       "i12905"
                                                       "i12903"
                                                       "i12902"
                                                       "i12900"
                                                       "i12898"
                                                       "i12897"
                                                       "i12896"
                                                       "i12894"
                                                       "i12893"
                                                       "i12891"
                                                       "i12889"
                                                       "i12887"
                                                       "i12885"
                                                       "i12883"
                                                       "i12881"
                                                       "i12879"
                                                       "i12877"
                                                       "i12875"
                                                       "i12873"
                                                       "i12871"
                                                       "i12869"
                                                       "i12867"
                                                       "i12865"
                                                       "i12863"
                                                       "i12861"
                                                       "i12859"
                                                       "i12857"
                                                       "i12855"
                                                       "i12853"
                                                       "i12851"
                                                       "i12849"
                                                       "i12847"
                                                       "i12845"
                                                       "i12843"
                                                       "i12841"
                                                       "i12839"
                                                       "i12837"
                                                       "i12835"
                                                       "i12833"
                                                       "i12831"
                                                       "i12829"
                                                       "i12828"
                                                       "i12826"
                                                       "i12824"
                                                       "i12822"
                                                       "i12820"
                                                       "i12818"
                                                       "i12816"
                                                       "i12814"
                                                       "i12812"
                                                       "i12810"
                                                       "i12808"
                                                       "i12806"
                                                       "i12804"
                                                       "i12802"
                                                       "i12800"
                                                       "i12798"
                                                       "i12796"
                                                       "i12794"
                                                       "i12792"
                                                       "i12790"
                                                       "i12788"
                                                       "i12786"
                                                       "i12784"
                                                       "i12782"
                                                       "i12780"
                                                       "i12777"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-constructors
                                                        and-map*)
                                                      ((top) (top) (top))
                                                      ("i12629"
                                                       "i12628"
                                                       "i12626")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 12975}#
                                                  #{x\ 14464}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i14463"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i14457"
                                                          "i14458"
                                                          "i14459"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i14454"
                                                          "i14455"
                                                          "i14456"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          make-dynlet
                                                          make-letrec
                                                          make-let
                                                          make-lambda-case
                                                          make-lambda
                                                          make-sequence
                                                          make-application
                                                          make-conditional
                                                          make-toplevel-define
                                                          make-toplevel-set
                                                          make-toplevel-ref
                                                          make-module-set
                                                          make-module-ref
                                                          make-lexical-set
                                                          make-lexical-ref
                                                          make-primitive-ref
                                                          make-const
                                                          make-void
                                                          *mode*)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i13030"
                                                         "i13028"
                                                         "i13026"
                                                         "i13024"
                                                         "i13022"
                                                         "i13020"
                                                         "i13018"
                                                         "i13016"
                                                         "i13014"
                                                         "i13012"
                                                         "i13010"
                                                         "i13008"
                                                         "i13006"
                                                         "i13004"
                                                         "i13002"
                                                         "i13000"
                                                         "i12998"
                                                         "i12996"
                                                         "i12994"
                                                         "i12992"
                                                         "i12990"
                                                         "i12988"
                                                         "i12986"
                                                         "i12984"
                                                         "i12982"
                                                         "i12980"
                                                         "i12978"
                                                         "i12976"
                                                         "i12974"
                                                         "i12972"
                                                         "i12970"
                                                         "i12968"
                                                         "i12966"
                                                         "i12964"
                                                         "i12962"
                                                         "i12960"
                                                         "i12959"
                                                         "i12958"
                                                         "i12956"
                                                         "i12955"
                                                         "i12954"
                                                         "i12953"
                                                         "i12952"
                                                         "i12950"
                                                         "i12948"
                                                         "i12946"
                                                         "i12944"
                                                         "i12942"
                                                         "i12940"
                                                         "i12938"
                                                         "i12936"
                                                         "i12933"
                                                         "i12931"
                                                         "i12930"
                                                         "i12929"
                                                         "i12928"
                                                         "i12927"
                                                         "i12926"
                                                         "i12924"
                                                         "i12922"
                                                         "i12920"
                                                         "i12918"
                                                         "i12917"
                                                         "i12915"
                                                         "i12913"
                                                         "i12911"
                                                         "i12909"
                                                         "i12907"
                                                         "i12905"
                                                         "i12903"
                                                         "i12902"
                                                         "i12900"
                                                         "i12898"
                                                         "i12897"
                                                         "i12896"
                                                         "i12894"
                                                         "i12893"
                                                         "i12891"
                                                         "i12889"
                                                         "i12887"
                                                         "i12885"
                                                         "i12883"
                                                         "i12881"
                                                         "i12879"
                                                         "i12877"
                                                         "i12875"
                                                         "i12873"
                                                         "i12871"
                                                         "i12869"
                                                         "i12867"
                                                         "i12865"
                                                         "i12863"
                                                         "i12861"
                                                         "i12859"
                                                         "i12857"
                                                         "i12855"
                                                         "i12853"
                                                         "i12851"
                                                         "i12849"
                                                         "i12847"
                                                         "i12845"
                                                         "i12843"
                                                         "i12841"
                                                         "i12839"
                                                         "i12837"
                                                         "i12835"
                                                         "i12833"
                                                         "i12831"
                                                         "i12829"
                                                         "i12828"
                                                         "i12826"
                                                         "i12824"
                                                         "i12822"
                                                         "i12820"
                                                         "i12818"
                                                         "i12816"
                                                         "i12814"
                                                         "i12812"
                                                         "i12810"
                                                         "i12808"
                                                         "i12806"
                                                         "i12804"
                                                         "i12802"
                                                         "i12800"
                                                         "i12798"
                                                         "i12796"
                                                         "i12794"
                                                         "i12792"
                                                         "i12790"
                                                         "i12788"
                                                         "i12786"
                                                         "i12784"
                                                         "i12782"
                                                         "i12780"
                                                         "i12777"))
                                                      #(ribcage
                                                        (define-structure
                                                          define-expansion-constructors
                                                          and-map*)
                                                        ((top) (top) (top))
                                                        ("i12629"
                                                         "i12628"
                                                         "i12626")))
                                                     (hygiene guile)))
                                              'eval
                                              (if (#{free-id=?\ 12975}#
                                                    #{x\ 14464}#
                                                    '#(syntax-object
                                                       expand
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i14463"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i14457"
                                                            "i14458"
                                                            "i14459"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i14454"
                                                            "i14455"
                                                            "i14456"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            chi-top
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            maybe-name-value!
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            make-dynlet
                                                            make-letrec
                                                            make-let
                                                            make-lambda-case
                                                            make-lambda
                                                            make-sequence
                                                            make-application
                                                            make-conditional
                                                            make-toplevel-define
                                                            make-toplevel-set
                                                            make-toplevel-ref
                                                            make-module-set
                                                            make-module-ref
                                                            make-lexical-set
                                                            make-lexical-ref
                                                            make-primitive-ref
                                                            make-const
                                                            make-void
                                                            *mode*)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i13030"
                                                           "i13028"
                                                           "i13026"
                                                           "i13024"
                                                           "i13022"
                                                           "i13020"
                                                           "i13018"
                                                           "i13016"
                                                           "i13014"
                                                           "i13012"
                                                           "i13010"
                                                           "i13008"
                                                           "i13006"
                                                           "i13004"
                                                           "i13002"
                                                           "i13000"
                                                           "i12998"
                                                           "i12996"
                                                           "i12994"
                                                           "i12992"
                                                           "i12990"
                                                           "i12988"
                                                           "i12986"
                                                           "i12984"
                                                           "i12982"
                                                           "i12980"
                                                           "i12978"
                                                           "i12976"
                                                           "i12974"
                                                           "i12972"
                                                           "i12970"
                                                           "i12968"
                                                           "i12966"
                                                           "i12964"
                                                           "i12962"
                                                           "i12960"
                                                           "i12959"
                                                           "i12958"
                                                           "i12956"
                                                           "i12955"
                                                           "i12954"
                                                           "i12953"
                                                           "i12952"
                                                           "i12950"
                                                           "i12948"
                                                           "i12946"
                                                           "i12944"
                                                           "i12942"
                                                           "i12940"
                                                           "i12938"
                                                           "i12936"
                                                           "i12933"
                                                           "i12931"
                                                           "i12930"
                                                           "i12929"
                                                           "i12928"
                                                           "i12927"
                                                           "i12926"
                                                           "i12924"
                                                           "i12922"
                                                           "i12920"
                                                           "i12918"
                                                           "i12917"
                                                           "i12915"
                                                           "i12913"
                                                           "i12911"
                                                           "i12909"
                                                           "i12907"
                                                           "i12905"
                                                           "i12903"
                                                           "i12902"
                                                           "i12900"
                                                           "i12898"
                                                           "i12897"
                                                           "i12896"
                                                           "i12894"
                                                           "i12893"
                                                           "i12891"
                                                           "i12889"
                                                           "i12887"
                                                           "i12885"
                                                           "i12883"
                                                           "i12881"
                                                           "i12879"
                                                           "i12877"
                                                           "i12875"
                                                           "i12873"
                                                           "i12871"
                                                           "i12869"
                                                           "i12867"
                                                           "i12865"
                                                           "i12863"
                                                           "i12861"
                                                           "i12859"
                                                           "i12857"
                                                           "i12855"
                                                           "i12853"
                                                           "i12851"
                                                           "i12849"
                                                           "i12847"
                                                           "i12845"
                                                           "i12843"
                                                           "i12841"
                                                           "i12839"
                                                           "i12837"
                                                           "i12835"
                                                           "i12833"
                                                           "i12831"
                                                           "i12829"
                                                           "i12828"
                                                           "i12826"
                                                           "i12824"
                                                           "i12822"
                                                           "i12820"
                                                           "i12818"
                                                           "i12816"
                                                           "i12814"
                                                           "i12812"
                                                           "i12810"
                                                           "i12808"
                                                           "i12806"
                                                           "i12804"
                                                           "i12802"
                                                           "i12800"
                                                           "i12798"
                                                           "i12796"
                                                           "i12794"
                                                           "i12792"
                                                           "i12790"
                                                           "i12788"
                                                           "i12786"
                                                           "i12784"
                                                           "i12782"
                                                           "i12780"
                                                           "i12777"))
                                                        #(ribcage
                                                          (define-structure
                                                            define-expansion-constructors
                                                            and-map*)
                                                          ((top) (top) (top))
                                                          ("i12629"
                                                           "i12628"
                                                           "i12626")))
                                                       (hygiene guile)))
                                                'expand
                                                (syntax-violation
                                                  'eval-when
                                                  "invalid situation"
                                                  #{e\ 14451}#
                                                  (#{wrap\ 12985}#
                                                    #{x\ 14464}#
                                                    #{w\ 14453}#
                                                    #f)))))))
                                      #{situations\ 14462}#))))))
                 (#{f\ 14460}# #{when-list\ 14452}# (quote ())))))
           (#{chi-install-global\ 12993}#
             (lambda (#{name\ 14474}# #{e\ 14475}#)
               (#{build-global-definition\ 12856}#
                 #f
                 #{name\ 14474}#
                 (#{build-application\ 12838}#
                   #f
                   (#{build-primref\ 12864}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 12866}# #f #{name\ 14474}#)
                         (#{build-data\ 12866}# #f (quote macro))
                         (#{build-application\ 12838}#
                           #f
                           (#{build-primref\ 12864}# #f (quote cons))
                           (list #{e\ 14475}#
                                 (#{build-application\ 12838}#
                                   #f
                                   (#{build-primref\ 12864}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 12838}#
                                           #f
                                           (#{build-primref\ 12864}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 12991}#
             (lambda (#{body\ 14489}#
                      #{r\ 14490}#
                      #{w\ 14491}#
                      #{s\ 14492}#
                      #{m\ 14493}#
                      #{esew\ 14494}#
                      #{mod\ 14495}#)
               (#{build-sequence\ 12868}#
                 #{s\ 14492}#
                 (letrec ((#{dobody\ 14511}#
                            (lambda (#{body\ 14512}#
                                     #{r\ 14513}#
                                     #{w\ 14514}#
                                     #{m\ 14515}#
                                     #{esew\ 14516}#
                                     #{mod\ 14517}#
                                     #{out\ 14518}#)
                              (if (null? #{body\ 14512}#)
                                (reverse #{out\ 14518}#)
                                (#{dobody\ 14511}#
                                  (cdr #{body\ 14512}#)
                                  #{r\ 14513}#
                                  #{w\ 14514}#
                                  #{m\ 14515}#
                                  #{esew\ 14516}#
                                  #{mod\ 14517}#
                                  (cons (#{chi-top\ 12999}#
                                          (car #{body\ 14512}#)
                                          #{r\ 14513}#
                                          #{w\ 14514}#
                                          #{m\ 14515}#
                                          #{esew\ 14516}#
                                          #{mod\ 14517}#)
                                        #{out\ 14518}#))))))
                   (#{dobody\ 14511}#
                     #{body\ 14489}#
                     #{r\ 14490}#
                     #{w\ 14491}#
                     #{m\ 14493}#
                     #{esew\ 14494}#
                     #{mod\ 14495}#
                     '())))))
           (#{chi-sequence\ 12989}#
             (lambda (#{body\ 14519}#
                      #{r\ 14520}#
                      #{w\ 14521}#
                      #{s\ 14522}#
                      #{mod\ 14523}#)
               (#{build-sequence\ 12868}#
                 #{s\ 14522}#
                 (letrec ((#{dobody\ 14534}#
                            (lambda (#{body\ 14535}#
                                     #{r\ 14536}#
                                     #{w\ 14537}#
                                     #{mod\ 14538}#)
                              (if (null? #{body\ 14535}#)
                                '()
                                (let ((#{first\ 14540}#
                                        (#{chi\ 13001}#
                                          (car #{body\ 14535}#)
                                          #{r\ 14536}#
                                          #{w\ 14537}#
                                          #{mod\ 14538}#)))
                                  (cons #{first\ 14540}#
                                        (#{dobody\ 14534}#
                                          (cdr #{body\ 14535}#)
                                          #{r\ 14536}#
                                          #{w\ 14537}#
                                          #{mod\ 14538}#)))))))
                   (#{dobody\ 14534}#
                     #{body\ 14519}#
                     #{r\ 14520}#
                     #{w\ 14521}#
                     #{mod\ 14523}#)))))
           (#{source-wrap\ 12987}#
             (lambda (#{x\ 14541}#
                      #{w\ 14542}#
                      #{s\ 14543}#
                      #{defmod\ 14544}#)
               (#{wrap\ 12985}#
                 (#{decorate-source\ 12834}#
                   #{x\ 14541}#
                   #{s\ 14543}#)
                 #{w\ 14542}#
                 #{defmod\ 14544}#)))
           (#{wrap\ 12985}#
             (lambda (#{x\ 14549}# #{w\ 14550}# #{defmod\ 14551}#)
               (if (if (null? (#{wrap-marks\ 12923}# #{w\ 14550}#))
                     (null? (#{wrap-subst\ 12925}# #{w\ 14550}#))
                     #f)
                 #{x\ 14549}#
                 (if (#{syntax-object?\ 12880}# #{x\ 14549}#)
                   (#{make-syntax-object\ 12878}#
                     (#{syntax-object-expression\ 12882}#
                       #{x\ 14549}#)
                     (#{join-wraps\ 12967}#
                       #{w\ 14550}#
                       (#{syntax-object-wrap\ 12884}# #{x\ 14549}#))
                     (#{syntax-object-module\ 12886}# #{x\ 14549}#))
                   (if (null? #{x\ 14549}#)
                     #{x\ 14549}#
                     (#{make-syntax-object\ 12878}#
                       #{x\ 14549}#
                       #{w\ 14550}#
                       #{defmod\ 14551}#))))))
           (#{bound-id-member?\ 12983}#
             (lambda (#{x\ 14564}# #{list\ 14565}#)
               (if (not (null? #{list\ 14565}#))
                 (let ((#{t\ 14572}#
                         (#{bound-id=?\ 12977}#
                           #{x\ 14564}#
                           (car #{list\ 14565}#))))
                   (if #{t\ 14572}#
                     #{t\ 14572}#
                     (#{bound-id-member?\ 12983}#
                       #{x\ 14564}#
                       (cdr #{list\ 14565}#))))
                 #f)))
           (#{distinct-bound-ids?\ 12981}#
             (lambda (#{ids\ 14574}#)
               (letrec ((#{distinct?\ 14578}#
                          (lambda (#{ids\ 14579}#)
                            (let ((#{t\ 14582}# (null? #{ids\ 14579}#)))
                              (if #{t\ 14582}#
                                #{t\ 14582}#
                                (if (not (#{bound-id-member?\ 12983}#
                                           (car #{ids\ 14579}#)
                                           (cdr #{ids\ 14579}#)))
                                  (#{distinct?\ 14578}# (cdr #{ids\ 14579}#))
                                  #f))))))
                 (#{distinct?\ 14578}# #{ids\ 14574}#))))
           (#{valid-bound-ids?\ 12979}#
             (lambda (#{ids\ 14586}#)
               (if (letrec ((#{all-ids?\ 14591}#
                              (lambda (#{ids\ 14592}#)
                                (let ((#{t\ 14595}# (null? #{ids\ 14592}#)))
                                  (if #{t\ 14595}#
                                    #{t\ 14595}#
                                    (if (#{id?\ 12916}# (car #{ids\ 14592}#))
                                      (#{all-ids?\ 14591}#
                                        (cdr #{ids\ 14592}#))
                                      #f))))))
                     (#{all-ids?\ 14591}# #{ids\ 14586}#))
                 (#{distinct-bound-ids?\ 12981}# #{ids\ 14586}#)
                 #f)))
           (#{bound-id=?\ 12977}#
             (lambda (#{i\ 14600}# #{j\ 14601}#)
               (if (if (#{syntax-object?\ 12880}# #{i\ 14600}#)
                     (#{syntax-object?\ 12880}# #{j\ 14601}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 12882}#
                            #{i\ 14600}#)
                          (#{syntax-object-expression\ 12882}#
                            #{j\ 14601}#))
                   (#{same-marks?\ 12971}#
                     (#{wrap-marks\ 12923}#
                       (#{syntax-object-wrap\ 12884}# #{i\ 14600}#))
                     (#{wrap-marks\ 12923}#
                       (#{syntax-object-wrap\ 12884}# #{j\ 14601}#)))
                   #f)
                 (eq? #{i\ 14600}# #{j\ 14601}#))))
           (#{free-id=?\ 12975}#
             (lambda (#{i\ 14608}# #{j\ 14609}#)
               (if (eq? (let ((#{x\ 14615}# #{i\ 14608}#))
                          (if (#{syntax-object?\ 12880}# #{x\ 14615}#)
                            (#{syntax-object-expression\ 12882}#
                              #{x\ 14615}#)
                            #{x\ 14615}#))
                        (let ((#{x\ 14618}# #{j\ 14609}#))
                          (if (#{syntax-object?\ 12880}# #{x\ 14618}#)
                            (#{syntax-object-expression\ 12882}#
                              #{x\ 14618}#)
                            #{x\ 14618}#)))
                 (eq? (#{id-var-name\ 12973}#
                        #{i\ 14608}#
                        '(()))
                      (#{id-var-name\ 12973}#
                        #{j\ 14609}#
                        '(())))
                 #f)))
           (#{id-var-name\ 12973}#
             (lambda (#{id\ 14622}# #{w\ 14623}#)
               (letrec ((#{search-vector-rib\ 14632}#
                          (lambda (#{sym\ 14644}#
                                   #{subst\ 14645}#
                                   #{marks\ 14646}#
                                   #{symnames\ 14647}#
                                   #{ribcage\ 14648}#)
                            (let ((#{n\ 14655}#
                                    (vector-length #{symnames\ 14647}#)))
                              (letrec ((#{f\ 14658}#
                                         (lambda (#{i\ 14659}#)
                                           (if (#{fx=\ 12821}#
                                                 #{i\ 14659}#
                                                 #{n\ 14655}#)
                                             (#{search\ 14628}#
                                               #{sym\ 14644}#
                                               (cdr #{subst\ 14645}#)
                                               #{marks\ 14646}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 14647}#
                                                            #{i\ 14659}#)
                                                          #{sym\ 14644}#)
                                                   (#{same-marks?\ 12971}#
                                                     #{marks\ 14646}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 12943}#
                                                         #{ribcage\ 14648}#)
                                                       #{i\ 14659}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 12945}#
                                                     #{ribcage\ 14648}#)
                                                   #{i\ 14659}#)
                                                 #{marks\ 14646}#)
                                               (#{f\ 14658}#
                                                 (#{fx+\ 12817}#
                                                   #{i\ 14659}#
                                                   1)))))))
                                (#{f\ 14658}# 0)))))
                        (#{search-list-rib\ 14630}#
                          (lambda (#{sym\ 14667}#
                                   #{subst\ 14668}#
                                   #{marks\ 14669}#
                                   #{symnames\ 14670}#
                                   #{ribcage\ 14671}#)
                            (letrec ((#{f\ 14680}#
                                       (lambda (#{symnames\ 14681}#
                                                #{i\ 14682}#)
                                         (if (null? #{symnames\ 14681}#)
                                           (#{search\ 14628}#
                                             #{sym\ 14667}#
                                             (cdr #{subst\ 14668}#)
                                             #{marks\ 14669}#)
                                           (if (if (eq? (car #{symnames\ 14681}#)
                                                        #{sym\ 14667}#)
                                                 (#{same-marks?\ 12971}#
                                                   #{marks\ 14669}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 12943}#
                                                       #{ribcage\ 14671}#)
                                                     #{i\ 14682}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 12945}#
                                                   #{ribcage\ 14671}#)
                                                 #{i\ 14682}#)
                                               #{marks\ 14669}#)
                                             (#{f\ 14680}#
                                               (cdr #{symnames\ 14681}#)
                                               (#{fx+\ 12817}#
                                                 #{i\ 14682}#
                                                 1)))))))
                              (#{f\ 14680}# #{symnames\ 14670}# 0))))
                        (#{search\ 14628}#
                          (lambda (#{sym\ 14690}#
                                   #{subst\ 14691}#
                                   #{marks\ 14692}#)
                            (if (null? #{subst\ 14691}#)
                              (values #f #{marks\ 14692}#)
                              (let ((#{fst\ 14697}# (car #{subst\ 14691}#)))
                                (if (eq? #{fst\ 14697}# (quote shift))
                                  (#{search\ 14628}#
                                    #{sym\ 14690}#
                                    (cdr #{subst\ 14691}#)
                                    (cdr #{marks\ 14692}#))
                                  (let ((#{symnames\ 14699}#
                                          (#{ribcage-symnames\ 12941}#
                                            #{fst\ 14697}#)))
                                    (if (vector? #{symnames\ 14699}#)
                                      (#{search-vector-rib\ 14632}#
                                        #{sym\ 14690}#
                                        #{subst\ 14691}#
                                        #{marks\ 14692}#
                                        #{symnames\ 14699}#
                                        #{fst\ 14697}#)
                                      (#{search-list-rib\ 14630}#
                                        #{sym\ 14690}#
                                        #{subst\ 14691}#
                                        #{marks\ 14692}#
                                        #{symnames\ 14699}#
                                        #{fst\ 14697}#)))))))))
                 (if (symbol? #{id\ 14622}#)
                   (let ((#{t\ 14702}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 14628}#
                                 #{id\ 14622}#
                                 (#{wrap-subst\ 12925}# #{w\ 14623}#)
                                 (#{wrap-marks\ 12923}# #{w\ 14623}#)))
                             (lambda (#{x\ 14704}# . #{ignore\ 14705}#)
                               #{x\ 14704}#))))
                     (if #{t\ 14702}# #{t\ 14702}# #{id\ 14622}#))
                   (if (#{syntax-object?\ 12880}# #{id\ 14622}#)
                     (let ((#{id\ 14713}#
                             (#{syntax-object-expression\ 12882}#
                               #{id\ 14622}#))
                           (#{w1\ 14714}#
                             (#{syntax-object-wrap\ 12884}# #{id\ 14622}#)))
                       (let ((#{marks\ 14716}#
                               (#{join-marks\ 12969}#
                                 (#{wrap-marks\ 12923}# #{w\ 14623}#)
                                 (#{wrap-marks\ 12923}# #{w1\ 14714}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 14628}#
                               #{id\ 14713}#
                               (#{wrap-subst\ 12925}# #{w\ 14623}#)
                               #{marks\ 14716}#))
                           (lambda (#{new-id\ 14717}# #{marks\ 14718}#)
                             (let ((#{t\ 14723}# #{new-id\ 14717}#))
                               (if #{t\ 14723}#
                                 #{t\ 14723}#
                                 (let ((#{t\ 14726}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 14628}#
                                               #{id\ 14713}#
                                               (#{wrap-subst\ 12925}#
                                                 #{w1\ 14714}#)
                                               #{marks\ 14718}#))
                                           (lambda (#{x\ 14728}#
                                                    .
                                                    #{ignore\ 14729}#)
                                             #{x\ 14728}#))))
                                   (if #{t\ 14726}#
                                     #{t\ 14726}#
                                     #{id\ 14713}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 14622}#))))))
           (#{same-marks?\ 12971}#
             (lambda (#{x\ 14734}# #{y\ 14735}#)
               (let ((#{t\ 14740}# (eq? #{x\ 14734}# #{y\ 14735}#)))
                 (if #{t\ 14740}#
                   #{t\ 14740}#
                   (if (not (null? #{x\ 14734}#))
                     (if (not (null? #{y\ 14735}#))
                       (if (eq? (car #{x\ 14734}#) (car #{y\ 14735}#))
                         (#{same-marks?\ 12971}#
                           (cdr #{x\ 14734}#)
                           (cdr #{y\ 14735}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 12969}#
             (lambda (#{m1\ 14746}# #{m2\ 14747}#)
               (#{smart-append\ 12965}#
                 #{m1\ 14746}#
                 #{m2\ 14747}#)))
           (#{join-wraps\ 12967}#
             (lambda (#{w1\ 14750}# #{w2\ 14751}#)
               (let ((#{m1\ 14756}#
                       (#{wrap-marks\ 12923}# #{w1\ 14750}#))
                     (#{s1\ 14757}#
                       (#{wrap-subst\ 12925}# #{w1\ 14750}#)))
                 (if (null? #{m1\ 14756}#)
                   (if (null? #{s1\ 14757}#)
                     #{w2\ 14751}#
                     (#{make-wrap\ 12921}#
                       (#{wrap-marks\ 12923}# #{w2\ 14751}#)
                       (#{smart-append\ 12965}#
                         #{s1\ 14757}#
                         (#{wrap-subst\ 12925}# #{w2\ 14751}#))))
                   (#{make-wrap\ 12921}#
                     (#{smart-append\ 12965}#
                       #{m1\ 14756}#
                       (#{wrap-marks\ 12923}# #{w2\ 14751}#))
                     (#{smart-append\ 12965}#
                       #{s1\ 14757}#
                       (#{wrap-subst\ 12925}# #{w2\ 14751}#)))))))
           (#{smart-append\ 12965}#
             (lambda (#{m1\ 14758}# #{m2\ 14759}#)
               (if (null? #{m2\ 14759}#)
                 #{m1\ 14758}#
                 (append #{m1\ 14758}# #{m2\ 14759}#))))
           (#{make-binding-wrap\ 12963}#
             (lambda (#{ids\ 14762}# #{labels\ 14763}# #{w\ 14764}#)
               (if (null? #{ids\ 14762}#)
                 #{w\ 14764}#
                 (#{make-wrap\ 12921}#
                   (#{wrap-marks\ 12923}# #{w\ 14764}#)
                   (cons (let ((#{labelvec\ 14769}#
                                 (list->vector #{labels\ 14763}#)))
                           (let ((#{n\ 14771}#
                                   (vector-length #{labelvec\ 14769}#)))
                             (let ((#{symnamevec\ 14774}#
                                     (make-vector #{n\ 14771}#))
                                   (#{marksvec\ 14775}#
                                     (make-vector #{n\ 14771}#)))
                               (begin
                                 (letrec ((#{f\ 14779}#
                                            (lambda (#{ids\ 14780}#
                                                     #{i\ 14781}#)
                                              (if (not (null? #{ids\ 14780}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 12919}#
                                                      (car #{ids\ 14780}#)
                                                      #{w\ 14764}#))
                                                  (lambda (#{symname\ 14782}#
                                                           #{marks\ 14783}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 14774}#
                                                        #{i\ 14781}#
                                                        #{symname\ 14782}#)
                                                      (vector-set!
                                                        #{marksvec\ 14775}#
                                                        #{i\ 14781}#
                                                        #{marks\ 14783}#)
                                                      (#{f\ 14779}#
                                                        (cdr #{ids\ 14780}#)
                                                        (#{fx+\ 12817}#
                                                          #{i\ 14781}#
                                                          1)))))))))
                                   (#{f\ 14779}# #{ids\ 14762}# 0))
                                 (#{make-ribcage\ 12937}#
                                   #{symnamevec\ 14774}#
                                   #{marksvec\ 14775}#
                                   #{labelvec\ 14769}#)))))
                         (#{wrap-subst\ 12925}# #{w\ 14764}#))))))
           (#{extend-ribcage!\ 12961}#
             (lambda (#{ribcage\ 14786}#
                      #{id\ 14787}#
                      #{label\ 14788}#)
               (begin
                 (#{set-ribcage-symnames!\ 12947}#
                   #{ribcage\ 14786}#
                   (cons (#{syntax-object-expression\ 12882}#
                           #{id\ 14787}#)
                         (#{ribcage-symnames\ 12941}# #{ribcage\ 14786}#)))
                 (#{set-ribcage-marks!\ 12949}#
                   #{ribcage\ 14786}#
                   (cons (#{wrap-marks\ 12923}#
                           (#{syntax-object-wrap\ 12884}# #{id\ 14787}#))
                         (#{ribcage-marks\ 12943}# #{ribcage\ 14786}#)))
                 (#{set-ribcage-labels!\ 12951}#
                   #{ribcage\ 14786}#
                   (cons #{label\ 14788}#
                         (#{ribcage-labels\ 12945}# #{ribcage\ 14786}#))))))
           (#{anti-mark\ 12957}#
             (lambda (#{w\ 14792}#)
               (#{make-wrap\ 12921}#
                 (cons #f (#{wrap-marks\ 12923}# #{w\ 14792}#))
                 (cons 'shift
                       (#{wrap-subst\ 12925}# #{w\ 14792}#)))))
           (#{set-ribcage-labels!\ 12951}#
             (lambda (#{x\ 14795}# #{update\ 14796}#)
               (vector-set! #{x\ 14795}# 3 #{update\ 14796}#)))
           (#{set-ribcage-marks!\ 12949}#
             (lambda (#{x\ 14799}# #{update\ 14800}#)
               (vector-set! #{x\ 14799}# 2 #{update\ 14800}#)))
           (#{set-ribcage-symnames!\ 12947}#
             (lambda (#{x\ 14803}# #{update\ 14804}#)
               (vector-set! #{x\ 14803}# 1 #{update\ 14804}#)))
           (#{ribcage-labels\ 12945}#
             (lambda (#{x\ 14807}#)
               (vector-ref #{x\ 14807}# 3)))
           (#{ribcage-marks\ 12943}#
             (lambda (#{x\ 14809}#)
               (vector-ref #{x\ 14809}# 2)))
           (#{ribcage-symnames\ 12941}#
             (lambda (#{x\ 14811}#)
               (vector-ref #{x\ 14811}# 1)))
           (#{ribcage?\ 12939}#
             (lambda (#{x\ 14813}#)
               (if (vector? #{x\ 14813}#)
                 (if (= (vector-length #{x\ 14813}#) 4)
                   (eq? (vector-ref #{x\ 14813}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 12937}#
             (lambda (#{symnames\ 14818}#
                      #{marks\ 14819}#
                      #{labels\ 14820}#)
               (vector
                 'ribcage
                 #{symnames\ 14818}#
                 #{marks\ 14819}#
                 #{labels\ 14820}#)))
           (#{gen-labels\ 12934}#
             (lambda (#{ls\ 14824}#)
               (if (null? #{ls\ 14824}#)
                 '()
                 (cons (#{gen-label\ 12932}#)
                       (#{gen-labels\ 12934}# (cdr #{ls\ 14824}#))))))
           (#{gen-label\ 12932}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 12925}# cdr)
           (#{wrap-marks\ 12923}# car)
           (#{make-wrap\ 12921}# cons)
           (#{id-sym-name&marks\ 12919}#
             (lambda (#{x\ 14826}# #{w\ 14827}#)
               (if (#{syntax-object?\ 12880}# #{x\ 14826}#)
                 (values
                   (#{syntax-object-expression\ 12882}#
                     #{x\ 14826}#)
                   (#{join-marks\ 12969}#
                     (#{wrap-marks\ 12923}# #{w\ 14827}#)
                     (#{wrap-marks\ 12923}#
                       (#{syntax-object-wrap\ 12884}# #{x\ 14826}#))))
                 (values
                   #{x\ 14826}#
                   (#{wrap-marks\ 12923}# #{w\ 14827}#)))))
           (#{id?\ 12916}#
             (lambda (#{x\ 14830}#)
               (if (symbol? #{x\ 14830}#)
                 #t
                 (if (#{syntax-object?\ 12880}# #{x\ 14830}#)
                   (symbol?
                     (#{syntax-object-expression\ 12882}#
                       #{x\ 14830}#))
                   #f))))
           (#{nonsymbol-id?\ 12914}#
             (lambda (#{x\ 14837}#)
               (if (#{syntax-object?\ 12880}# #{x\ 14837}#)
                 (symbol?
                   (#{syntax-object-expression\ 12882}#
                     #{x\ 14837}#))
                 #f)))
           (#{global-extend\ 12912}#
             (lambda (#{type\ 14841}# #{sym\ 14842}# #{val\ 14843}#)
               (#{put-global-definition-hook\ 12830}#
                 #{sym\ 14842}#
                 #{type\ 14841}#
                 #{val\ 14843}#)))
           (#{lookup\ 12910}#
             (lambda (#{x\ 14847}# #{r\ 14848}# #{mod\ 14849}#)
               (let ((#{t\ 14855}# (assq #{x\ 14847}# #{r\ 14848}#)))
                 (if #{t\ 14855}#
                   (cdr #{t\ 14855}#)
                   (if (symbol? #{x\ 14847}#)
                     (let ((#{t\ 14861}#
                             (#{get-global-definition-hook\ 12832}#
                               #{x\ 14847}#
                               #{mod\ 14849}#)))
                       (if #{t\ 14861}# #{t\ 14861}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 12908}#
             (lambda (#{r\ 14866}#)
               (if (null? #{r\ 14866}#)
                 '()
                 (let ((#{a\ 14869}# (car #{r\ 14866}#)))
                   (if (eq? (cadr #{a\ 14869}#) (quote macro))
                     (cons #{a\ 14869}#
                           (#{macros-only-env\ 12908}# (cdr #{r\ 14866}#)))
                     (#{macros-only-env\ 12908}# (cdr #{r\ 14866}#)))))))
           (#{extend-var-env\ 12906}#
             (lambda (#{labels\ 14870}# #{vars\ 14871}# #{r\ 14872}#)
               (if (null? #{labels\ 14870}#)
                 #{r\ 14872}#
                 (#{extend-var-env\ 12906}#
                   (cdr #{labels\ 14870}#)
                   (cdr #{vars\ 14871}#)
                   (cons (cons (car #{labels\ 14870}#)
                               (cons (quote lexical) (car #{vars\ 14871}#)))
                         #{r\ 14872}#)))))
           (#{extend-env\ 12904}#
             (lambda (#{labels\ 14877}#
                      #{bindings\ 14878}#
                      #{r\ 14879}#)
               (if (null? #{labels\ 14877}#)
                 #{r\ 14879}#
                 (#{extend-env\ 12904}#
                   (cdr #{labels\ 14877}#)
                   (cdr #{bindings\ 14878}#)
                   (cons (cons (car #{labels\ 14877}#)
                               (car #{bindings\ 14878}#))
                         #{r\ 14879}#)))))
           (#{binding-value\ 12901}# cdr)
           (#{binding-type\ 12899}# car)
           (#{source-annotation\ 12895}#
             (lambda (#{x\ 14883}#)
               (if (#{syntax-object?\ 12880}# #{x\ 14883}#)
                 (#{source-annotation\ 12895}#
                   (#{syntax-object-expression\ 12882}#
                     #{x\ 14883}#))
                 (if (pair? #{x\ 14883}#)
                   (let ((#{props\ 14890}#
                           (source-properties #{x\ 14883}#)))
                     (if (pair? #{props\ 14890}#) #{props\ 14890}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 12892}#
             (lambda (#{x\ 14892}# #{update\ 14893}#)
               (vector-set! #{x\ 14892}# 3 #{update\ 14893}#)))
           (#{set-syntax-object-wrap!\ 12890}#
             (lambda (#{x\ 14896}# #{update\ 14897}#)
               (vector-set! #{x\ 14896}# 2 #{update\ 14897}#)))
           (#{set-syntax-object-expression!\ 12888}#
             (lambda (#{x\ 14900}# #{update\ 14901}#)
               (vector-set! #{x\ 14900}# 1 #{update\ 14901}#)))
           (#{syntax-object-module\ 12886}#
             (lambda (#{x\ 14904}#)
               (vector-ref #{x\ 14904}# 3)))
           (#{syntax-object-wrap\ 12884}#
             (lambda (#{x\ 14906}#)
               (vector-ref #{x\ 14906}# 2)))
           (#{syntax-object-expression\ 12882}#
             (lambda (#{x\ 14908}#)
               (vector-ref #{x\ 14908}# 1)))
           (#{syntax-object?\ 12880}#
             (lambda (#{x\ 14910}#)
               (if (vector? #{x\ 14910}#)
                 (if (= (vector-length #{x\ 14910}#) 4)
                   (eq? (vector-ref #{x\ 14910}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 12878}#
             (lambda (#{expression\ 14915}#
                      #{wrap\ 14916}#
                      #{module\ 14917}#)
               (vector
                 'syntax-object
                 #{expression\ 14915}#
                 #{wrap\ 14916}#
                 #{module\ 14917}#)))
           (#{build-letrec\ 12874}#
             (lambda (#{src\ 14921}#
                      #{ids\ 14922}#
                      #{vars\ 14923}#
                      #{val-exps\ 14924}#
                      #{body-exp\ 14925}#)
               (if (null? #{vars\ 14923}#)
                 #{body-exp\ 14925}#
                 (#{make-letrec\ 12813}#
                   #{src\ 14921}#
                   #{ids\ 14922}#
                   #{vars\ 14923}#
                   #{val-exps\ 14924}#
                   #{body-exp\ 14925}#))))
           (#{build-named-let\ 12872}#
             (lambda (#{src\ 14931}#
                      #{ids\ 14932}#
                      #{vars\ 14933}#
                      #{val-exps\ 14934}#
                      #{body-exp\ 14935}#)
               (let ((#{f\ 14945}# (car #{vars\ 14933}#))
                     (#{f-name\ 14946}# (car #{ids\ 14932}#))
                     (#{vars\ 14947}# (cdr #{vars\ 14933}#))
                     (#{ids\ 14948}# (cdr #{ids\ 14932}#)))
                 (let ((#{proc\ 14950}#
                         (#{build-simple-lambda\ 12858}#
                           #{src\ 14931}#
                           #{ids\ 14948}#
                           #f
                           #{vars\ 14947}#
                           '()
                           #{body-exp\ 14935}#)))
                   (#{make-letrec\ 12813}#
                     #{src\ 14931}#
                     (list #{f-name\ 14946}#)
                     (list #{f\ 14945}#)
                     (list #{proc\ 14950}#)
                     (#{build-application\ 12838}#
                       #{src\ 14931}#
                       (#{build-lexical-reference\ 12844}#
                         'fun
                         #{src\ 14931}#
                         #{f-name\ 14946}#
                         #{f\ 14945}#)
                       #{val-exps\ 14934}#))))))
           (#{build-let\ 12870}#
             (lambda (#{src\ 14951}#
                      #{ids\ 14952}#
                      #{vars\ 14953}#
                      #{val-exps\ 14954}#
                      #{body-exp\ 14955}#)
               (if (null? #{vars\ 14953}#)
                 #{body-exp\ 14955}#
                 (#{make-let\ 12811}#
                   #{src\ 14951}#
                   #{ids\ 14952}#
                   #{vars\ 14953}#
                   #{val-exps\ 14954}#
                   #{body-exp\ 14955}#))))
           (#{build-sequence\ 12868}#
             (lambda (#{src\ 14961}# #{exps\ 14962}#)
               (if (null? (cdr #{exps\ 14962}#))
                 (car #{exps\ 14962}#)
                 (#{make-sequence\ 12805}#
                   #{src\ 14961}#
                   #{exps\ 14962}#))))
           (#{build-data\ 12866}#
             (lambda (#{src\ 14965}# #{exp\ 14966}#)
               (#{make-const\ 12783}#
                 #{src\ 14965}#
                 #{exp\ 14966}#)))
           (#{build-primref\ 12864}#
             (lambda (#{src\ 14969}# #{name\ 14970}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (#{make-toplevel-ref\ 12795}#
                   #{src\ 14969}#
                   #{name\ 14970}#)
                 (#{make-module-ref\ 12791}#
                   #{src\ 14969}#
                   '(guile)
                   #{name\ 14970}#
                   #f))))
           (#{build-lambda-case\ 12862}#
             (lambda (#{src\ 14973}#
                      #{req\ 14974}#
                      #{opt\ 14975}#
                      #{rest\ 14976}#
                      #{kw\ 14977}#
                      #{inits\ 14978}#
                      #{vars\ 14979}#
                      #{body\ 14980}#
                      #{else-case\ 14981}#)
               (let ((#{atom-key\ 14993}#
                       (fluid-ref #{*mode*\ 12778}#)))
                 (if (memv #{atom-key\ 14993}# (quote (c)))
                   (#{make-lambda-case\ 12809}#
                     #{src\ 14973}#
                     #{req\ 14974}#
                     #{opt\ 14975}#
                     #{rest\ 14976}#
                     #{kw\ 14977}#
                     #{inits\ 14978}#
                     #{vars\ 14979}#
                     #{body\ 14980}#
                     #{else-case\ 14981}#)
                   (let ((#{nreq\ 14998}# (length #{req\ 14974}#)))
                     (let ((#{nopt\ 15000}#
                             (if #{opt\ 14975}# (length #{opt\ 14975}#) 0)))
                       (let ((#{rest-idx\ 15002}#
                               (if #{rest\ 14976}#
                                 (+ #{nreq\ 14998}# #{nopt\ 15000}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 15006}#
                                 (if #{kw\ 14977}# (car #{kw\ 14977}#) #f)))
                           (let ((#{kw-indices\ 15008}#
                                   (map (lambda (#{x\ 15009}#)
                                          (cons (car #{x\ 15009}#)
                                                (list-index
                                                  #{vars\ 14979}#
                                                  (caddr #{x\ 15009}#))))
                                        (if #{kw\ 14977}#
                                          (cdr #{kw\ 14977}#)
                                          '()))))
                             (let ((#{nargs\ 15012}#
                                     (apply max
                                            (+ #{nreq\ 14998}#
                                               #{nopt\ 15000}#
                                               (if #{rest\ 14976}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 15008}#)))))
                               (begin
                                 (let ((#{t\ 15015}#
                                         (= #{nargs\ 15012}#
                                            (length #{vars\ 14979}#)
                                            (+ #{nreq\ 14998}#
                                               (length #{inits\ 14978}#)
                                               (if #{rest\ 14976}# 1 0)))))
                                   (if #{t\ 15015}#
                                     #{t\ 15015}#
                                     (error "something went wrong"
                                            #{req\ 14974}#
                                            #{opt\ 14975}#
                                            #{rest\ 14976}#
                                            #{kw\ 14977}#
                                            #{inits\ 14978}#
                                            #{vars\ 14979}#
                                            #{nreq\ 14998}#
                                            #{nopt\ 15000}#
                                            #{kw-indices\ 15008}#
                                            #{nargs\ 15012}#)))
                                 (#{make-lambda-case\ 12809}#
                                   #{src\ 14973}#
                                   #{req\ 14974}#
                                   #{opt\ 14975}#
                                   #{rest\ 14976}#
                                   (if #{kw\ 14977}#
                                     (cons #{allow-other-keys?\ 15006}#
                                           #{kw-indices\ 15008}#)
                                     #f)
                                   #{inits\ 14978}#
                                   #{vars\ 14979}#
                                   #{body\ 14980}#
                                   #{else-case\ 14981}#))))))))))))
           (#{build-case-lambda\ 12860}#
             (lambda (#{src\ 15019}# #{meta\ 15020}# #{body\ 15021}#)
               (#{make-lambda\ 12807}#
                 #{src\ 15019}#
                 #{meta\ 15020}#
                 #{body\ 15021}#)))
           (#{build-simple-lambda\ 12858}#
             (lambda (#{src\ 15025}#
                      #{req\ 15026}#
                      #{rest\ 15027}#
                      #{vars\ 15028}#
                      #{meta\ 15029}#
                      #{exp\ 15030}#)
               (#{make-lambda\ 12807}#
                 #{src\ 15025}#
                 #{meta\ 15029}#
                 (#{make-lambda-case\ 12809}#
                   #{src\ 15025}#
                   #{req\ 15026}#
                   #f
                   #{rest\ 15027}#
                   #f
                   '()
                   #{vars\ 15028}#
                   #{exp\ 15030}#
                   #f))))
           (#{build-global-definition\ 12856}#
             (lambda (#{source\ 15037}# #{var\ 15038}# #{exp\ 15039}#)
               (#{make-toplevel-define\ 12799}#
                 #{source\ 15037}#
                 #{var\ 15038}#
                 #{exp\ 15039}#)))
           (#{maybe-name-value!\ 12854}#
             (lambda (#{name\ 15043}# #{val\ 15044}#)
               (if ((@ (language tree-il) lambda?) #{val\ 15044}#)
                 (let ((#{meta\ 15050}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 15044}#)))
                   (if (not (assq (quote name) #{meta\ 15050}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 15044}#
                      (acons 'name
                             #{name\ 15043}#
                             #{meta\ 15050}#)))))))
           (#{build-global-assignment\ 12852}#
             (lambda (#{source\ 15051}#
                      #{var\ 15052}#
                      #{exp\ 15053}#
                      #{mod\ 15054}#)
               (#{analyze-variable\ 12848}#
                 #{mod\ 15054}#
                 #{var\ 15052}#
                 (lambda (#{mod\ 15059}#
                          #{var\ 15060}#
                          #{public?\ 15061}#)
                   (#{make-module-set\ 12793}#
                     #{source\ 15051}#
                     #{mod\ 15059}#
                     #{var\ 15060}#
                     #{public?\ 15061}#
                     #{exp\ 15053}#))
                 (lambda (#{var\ 15065}#)
                   (#{make-toplevel-set\ 12797}#
                     #{source\ 15051}#
                     #{var\ 15065}#
                     #{exp\ 15053}#)))))
           (#{build-global-reference\ 12850}#
             (lambda (#{source\ 15067}# #{var\ 15068}# #{mod\ 15069}#)
               (#{analyze-variable\ 12848}#
                 #{mod\ 15069}#
                 #{var\ 15068}#
                 (lambda (#{mod\ 15073}#
                          #{var\ 15074}#
                          #{public?\ 15075}#)
                   (#{make-module-ref\ 12791}#
                     #{source\ 15067}#
                     #{mod\ 15073}#
                     #{var\ 15074}#
                     #{public?\ 15075}#))
                 (lambda (#{var\ 15079}#)
                   (#{make-toplevel-ref\ 12795}#
                     #{source\ 15067}#
                     #{var\ 15079}#)))))
           (#{analyze-variable\ 12848}#
             (lambda (#{mod\ 15081}#
                      #{var\ 15082}#
                      #{modref-cont\ 15083}#
                      #{bare-cont\ 15084}#)
               (if (not #{mod\ 15081}#)
                 (#{bare-cont\ 15084}# #{var\ 15082}#)
                 (let ((#{kind\ 15091}# (car #{mod\ 15081}#))
                       (#{mod\ 15092}# (cdr #{mod\ 15081}#)))
                   (if (memv #{kind\ 15091}# (quote (public)))
                     (#{modref-cont\ 15083}#
                       #{mod\ 15092}#
                       #{var\ 15082}#
                       #t)
                     (if (memv #{kind\ 15091}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 15092}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 15083}#
                           #{mod\ 15092}#
                           #{var\ 15082}#
                           #f)
                         (#{bare-cont\ 15084}# #{var\ 15082}#))
                       (if (memv #{kind\ 15091}# (quote (bare)))
                         (#{bare-cont\ 15084}# #{var\ 15082}#)
                         (if (memv #{kind\ 15091}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 15092}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 15092}#)
                                   #{var\ 15082}#)
                                 #f)
                             (#{modref-cont\ 15083}#
                               #{mod\ 15092}#
                               #{var\ 15082}#
                               #f)
                             (#{bare-cont\ 15084}# #{var\ 15082}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 15082}#
                             #{mod\ 15092}#)))))))))
           (#{build-lexical-assignment\ 12846}#
             (lambda (#{source\ 15100}#
                      #{name\ 15101}#
                      #{var\ 15102}#
                      #{exp\ 15103}#)
               (#{make-lexical-set\ 12789}#
                 #{source\ 15100}#
                 #{name\ 15101}#
                 #{var\ 15102}#
                 #{exp\ 15103}#)))
           (#{build-lexical-reference\ 12844}#
             (lambda (#{type\ 15108}#
                      #{source\ 15109}#
                      #{name\ 15110}#
                      #{var\ 15111}#)
               (#{make-lexical-ref\ 12787}#
                 #{source\ 15109}#
                 #{name\ 15110}#
                 #{var\ 15111}#)))
           (#{build-dynlet\ 12842}#
             (lambda (#{source\ 15116}#
                      #{fluids\ 15117}#
                      #{vals\ 15118}#
                      #{body\ 15119}#)
               (#{make-dynlet\ 12815}#
                 #{source\ 15116}#
                 #{fluids\ 15117}#
                 #{vals\ 15118}#
                 #{body\ 15119}#)))
           (#{build-conditional\ 12840}#
             (lambda (#{source\ 15124}#
                      #{test-exp\ 15125}#
                      #{then-exp\ 15126}#
                      #{else-exp\ 15127}#)
               (#{make-conditional\ 12801}#
                 #{source\ 15124}#
                 #{test-exp\ 15125}#
                 #{then-exp\ 15126}#
                 #{else-exp\ 15127}#)))
           (#{build-application\ 12838}#
             (lambda (#{source\ 15132}#
                      #{fun-exp\ 15133}#
                      #{arg-exps\ 15134}#)
               (#{make-application\ 12803}#
                 #{source\ 15132}#
                 #{fun-exp\ 15133}#
                 #{arg-exps\ 15134}#)))
           (#{build-void\ 12836}#
             (lambda (#{source\ 15138}#)
               (#{make-void\ 12781}# #{source\ 15138}#)))
           (#{decorate-source\ 12834}#
             (lambda (#{e\ 15140}# #{s\ 15141}#)
               (begin
                 (if (if (pair? #{e\ 15140}#) #{s\ 15141}# #f)
                   (set-source-properties!
                     #{e\ 15140}#
                     #{s\ 15141}#))
                 #{e\ 15140}#)))
           (#{get-global-definition-hook\ 12832}#
             (lambda (#{symbol\ 15146}# #{module\ 15147}#)
               (begin
                 (if (if (not #{module\ 15147}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 15146}#))
                 (let ((#{v\ 15153}#
                         (module-variable
                           (if #{module\ 15147}#
                             (resolve-module (cdr #{module\ 15147}#))
                             (current-module))
                           #{symbol\ 15146}#)))
                   (if #{v\ 15153}#
                     (if (variable-bound? #{v\ 15153}#)
                       (let ((#{val\ 15158}# (variable-ref #{v\ 15153}#)))
                         (if (macro? #{val\ 15158}#)
                           (if (macro-type #{val\ 15158}#)
                             (cons (macro-type #{val\ 15158}#)
                                   (macro-binding #{val\ 15158}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 12830}#
             (lambda (#{symbol\ 15162}#
                      #{type\ 15163}#
                      #{val\ 15164}#)
               (module-define!
                 (current-module)
                 #{symbol\ 15162}#
                 (make-syntax-transformer
                   #{symbol\ 15162}#
                   #{type\ 15163}#
                   #{val\ 15164}#))))
           (#{local-eval-hook\ 12827}#
             (lambda (#{x\ 15168}# #{mod\ 15169}#)
               (primitive-eval #{x\ 15168}#)))
           (#{top-level-eval-hook\ 12825}#
             (lambda (#{x\ 15172}# #{mod\ 15173}#)
               (primitive-eval #{x\ 15172}#)))
           (#{fx<\ 12823}# <)
           (#{fx=\ 12821}# =)
           (#{fx-\ 12819}# -)
           (#{fx+\ 12817}# +)
           (#{make-dynlet\ 12815}#
             (lambda (#{src\ 15176}#
                      #{fluids\ 15177}#
                      #{vals\ 15178}#
                      #{body\ 15179}#)
               (make-struct
                 (vector-ref %expanded-vtables 17)
                 0
                 #{src\ 15176}#
                 #{fluids\ 15177}#
                 #{vals\ 15178}#
                 #{body\ 15179}#)))
           (#{make-letrec\ 12813}#
             (lambda (#{src\ 15184}#
                      #{names\ 15185}#
                      #{gensyms\ 15186}#
                      #{vals\ 15187}#
                      #{body\ 15188}#)
               (make-struct
                 (vector-ref %expanded-vtables 16)
                 0
                 #{src\ 15184}#
                 #{names\ 15185}#
                 #{gensyms\ 15186}#
                 #{vals\ 15187}#
                 #{body\ 15188}#)))
           (#{make-let\ 12811}#
             (lambda (#{src\ 15194}#
                      #{names\ 15195}#
                      #{gensyms\ 15196}#
                      #{vals\ 15197}#
                      #{body\ 15198}#)
               (make-struct
                 (vector-ref %expanded-vtables 15)
                 0
                 #{src\ 15194}#
                 #{names\ 15195}#
                 #{gensyms\ 15196}#
                 #{vals\ 15197}#
                 #{body\ 15198}#)))
           (#{make-lambda-case\ 12809}#
             (lambda (#{src\ 15204}#
                      #{req\ 15205}#
                      #{opt\ 15206}#
                      #{rest\ 15207}#
                      #{kw\ 15208}#
                      #{inits\ 15209}#
                      #{gensyms\ 15210}#
                      #{body\ 15211}#
                      #{alternate\ 15212}#)
               (make-struct
                 (vector-ref %expanded-vtables 14)
                 0
                 #{src\ 15204}#
                 #{req\ 15205}#
                 #{opt\ 15206}#
                 #{rest\ 15207}#
                 #{kw\ 15208}#
                 #{inits\ 15209}#
                 #{gensyms\ 15210}#
                 #{body\ 15211}#
                 #{alternate\ 15212}#)))
           (#{make-lambda\ 12807}#
             (lambda (#{src\ 15222}# #{meta\ 15223}# #{body\ 15224}#)
               (make-struct
                 (vector-ref %expanded-vtables 13)
                 0
                 #{src\ 15222}#
                 #{meta\ 15223}#
                 #{body\ 15224}#)))
           (#{make-sequence\ 12805}#
             (lambda (#{src\ 15228}# #{exps\ 15229}#)
               (make-struct
                 (vector-ref %expanded-vtables 12)
                 0
                 #{src\ 15228}#
                 #{exps\ 15229}#)))
           (#{make-application\ 12803}#
             (lambda (#{src\ 15232}# #{proc\ 15233}# #{args\ 15234}#)
               (make-struct
                 (vector-ref %expanded-vtables 11)
                 0
                 #{src\ 15232}#
                 #{proc\ 15233}#
                 #{args\ 15234}#)))
           (#{make-conditional\ 12801}#
             (lambda (#{src\ 15238}#
                      #{test\ 15239}#
                      #{consequent\ 15240}#
                      #{alternate\ 15241}#)
               (make-struct
                 (vector-ref %expanded-vtables 10)
                 0
                 #{src\ 15238}#
                 #{test\ 15239}#
                 #{consequent\ 15240}#
                 #{alternate\ 15241}#)))
           (#{make-toplevel-define\ 12799}#
             (lambda (#{src\ 15246}# #{name\ 15247}# #{exp\ 15248}#)
               (make-struct
                 (vector-ref %expanded-vtables 9)
                 0
                 #{src\ 15246}#
                 #{name\ 15247}#
                 #{exp\ 15248}#)))
           (#{make-toplevel-set\ 12797}#
             (lambda (#{src\ 15252}# #{name\ 15253}# #{exp\ 15254}#)
               (make-struct
                 (vector-ref %expanded-vtables 8)
                 0
                 #{src\ 15252}#
                 #{name\ 15253}#
                 #{exp\ 15254}#)))
           (#{make-toplevel-ref\ 12795}#
             (lambda (#{src\ 15258}# #{name\ 15259}#)
               (make-struct
                 (vector-ref %expanded-vtables 7)
                 0
                 #{src\ 15258}#
                 #{name\ 15259}#)))
           (#{make-module-set\ 12793}#
             (lambda (#{src\ 15262}#
                      #{mod\ 15263}#
                      #{name\ 15264}#
                      #{public?\ 15265}#
                      #{exp\ 15266}#)
               (make-struct
                 (vector-ref %expanded-vtables 6)
                 0
                 #{src\ 15262}#
                 #{mod\ 15263}#
                 #{name\ 15264}#
                 #{public?\ 15265}#
                 #{exp\ 15266}#)))
           (#{make-module-ref\ 12791}#
             (lambda (#{src\ 15272}#
                      #{mod\ 15273}#
                      #{name\ 15274}#
                      #{public?\ 15275}#)
               (make-struct
                 (vector-ref %expanded-vtables 5)
                 0
                 #{src\ 15272}#
                 #{mod\ 15273}#
                 #{name\ 15274}#
                 #{public?\ 15275}#)))
           (#{make-lexical-set\ 12789}#
             (lambda (#{src\ 15280}#
                      #{name\ 15281}#
                      #{gensym\ 15282}#
                      #{exp\ 15283}#)
               (make-struct
                 (vector-ref %expanded-vtables 4)
                 0
                 #{src\ 15280}#
                 #{name\ 15281}#
                 #{gensym\ 15282}#
                 #{exp\ 15283}#)))
           (#{make-lexical-ref\ 12787}#
             (lambda (#{src\ 15288}#
                      #{name\ 15289}#
                      #{gensym\ 15290}#)
               (make-struct
                 (vector-ref %expanded-vtables 3)
                 0
                 #{src\ 15288}#
                 #{name\ 15289}#
                 #{gensym\ 15290}#)))
           (#{make-primitive-ref\ 12785}#
             (lambda (#{src\ 15294}# #{name\ 15295}#)
               (make-struct
                 (vector-ref %expanded-vtables 2)
                 0
                 #{src\ 15294}#
                 #{name\ 15295}#)))
           (#{make-const\ 12783}#
             (lambda (#{src\ 15298}# #{exp\ 15299}#)
               (make-struct
                 (vector-ref %expanded-vtables 1)
                 0
                 #{src\ 15298}#
                 #{exp\ 15299}#)))
           (#{make-void\ 12781}#
             (lambda (#{src\ 15302}#)
               (make-struct
                 (vector-ref %expanded-vtables 0)
                 0
                 #{src\ 15302}#)))
           (#{*mode*\ 12778}# (make-fluid)))
    (begin
      (#{global-extend\ 12912}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 12912}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 12912}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 15304}#
                 #{r\ 15305}#
                 #{w\ 15306}#
                 #{s\ 15307}#
                 #{mod\ 15308}#)
          ((lambda (#{tmp\ 15314}#)
             ((lambda (#{tmp\ 15315}#)
                (if (if #{tmp\ 15315}#
                      (apply (lambda (#{_\ 15321}#
                                      #{var\ 15322}#
                                      #{val\ 15323}#
                                      #{e1\ 15324}#
                                      #{e2\ 15325}#)
                               (#{valid-bound-ids?\ 12979}# #{var\ 15322}#))
                             #{tmp\ 15315}#)
                      #f)
                  (apply (lambda (#{_\ 15332}#
                                  #{var\ 15333}#
                                  #{val\ 15334}#
                                  #{e1\ 15335}#
                                  #{e2\ 15336}#)
                           (let ((#{names\ 15338}#
                                   (map (lambda (#{x\ 15339}#)
                                          (#{id-var-name\ 12973}#
                                            #{x\ 15339}#
                                            #{w\ 15306}#))
                                        #{var\ 15333}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 15342}# #{n\ 15343}#)
                                   (let ((#{atom-key\ 15348}#
                                           (#{binding-type\ 12899}#
                                             (#{lookup\ 12910}#
                                               #{n\ 15343}#
                                               #{r\ 15305}#
                                               #{mod\ 15308}#))))
                                     (if (memv #{atom-key\ 15348}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 15304}#
                                         (#{source-wrap\ 12987}#
                                           #{id\ 15342}#
                                           #{w\ 15306}#
                                           #{s\ 15307}#
                                           #{mod\ 15308}#)))))
                                 #{var\ 15333}#
                                 #{names\ 15338}#)
                               (#{chi-body\ 13009}#
                                 (cons #{e1\ 15335}# #{e2\ 15336}#)
                                 (#{source-wrap\ 12987}#
                                   #{e\ 15304}#
                                   #{w\ 15306}#
                                   #{s\ 15307}#
                                   #{mod\ 15308}#)
                                 (#{extend-env\ 12904}#
                                   #{names\ 15338}#
                                   (let ((#{trans-r\ 15353}#
                                           (#{macros-only-env\ 12908}#
                                             #{r\ 15305}#)))
                                     (map (lambda (#{x\ 15354}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 13013}#
                                                    (#{chi\ 13001}#
                                                      #{x\ 15354}#
                                                      #{trans-r\ 15353}#
                                                      #{w\ 15306}#
                                                      #{mod\ 15308}#)
                                                    #{mod\ 15308}#)))
                                          #{val\ 15334}#))
                                   #{r\ 15305}#)
                                 #{w\ 15306}#
                                 #{mod\ 15308}#))))
                         #{tmp\ 15315}#)
                  ((lambda (#{_\ 15359}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 12987}#
                         #{e\ 15304}#
                         #{w\ 15306}#
                         #{s\ 15307}#
                         #{mod\ 15308}#)))
                   #{tmp\ 15314}#)))
              ($sc-dispatch
                #{tmp\ 15314}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 15304}#)))
      (#{global-extend\ 12912}#
        'core
        'quote
        (lambda (#{e\ 15360}#
                 #{r\ 15361}#
                 #{w\ 15362}#
                 #{s\ 15363}#
                 #{mod\ 15364}#)
          ((lambda (#{tmp\ 15370}#)
             ((lambda (#{tmp\ 15371}#)
                (if #{tmp\ 15371}#
                  (apply (lambda (#{_\ 15374}# #{e\ 15375}#)
                           (#{build-data\ 12866}#
                             #{s\ 15363}#
                             (#{strip\ 13027}# #{e\ 15375}# #{w\ 15362}#)))
                         #{tmp\ 15371}#)
                  ((lambda (#{_\ 15377}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 12987}#
                         #{e\ 15360}#
                         #{w\ 15362}#
                         #{s\ 15363}#
                         #{mod\ 15364}#)))
                   #{tmp\ 15370}#)))
              ($sc-dispatch #{tmp\ 15370}# (quote (any any)))))
           #{e\ 15360}#)))
      (#{global-extend\ 12912}#
        'core
        'syntax
        (letrec ((#{regen\ 15393}#
                   (lambda (#{x\ 15394}#)
                     (let ((#{atom-key\ 15398}# (car #{x\ 15394}#)))
                       (if (memv #{atom-key\ 15398}# (quote (ref)))
                         (#{build-lexical-reference\ 12844}#
                           'value
                           #f
                           (cadr #{x\ 15394}#)
                           (cadr #{x\ 15394}#))
                         (if (memv #{atom-key\ 15398}# (quote (primitive)))
                           (#{build-primref\ 12864}# #f (cadr #{x\ 15394}#))
                           (if (memv #{atom-key\ 15398}# (quote (quote)))
                             (#{build-data\ 12866}# #f (cadr #{x\ 15394}#))
                             (if (memv #{atom-key\ 15398}# (quote (lambda)))
                               (if (list? (cadr #{x\ 15394}#))
                                 (#{build-simple-lambda\ 12858}#
                                   #f
                                   (cadr #{x\ 15394}#)
                                   #f
                                   (cadr #{x\ 15394}#)
                                   '()
                                   (#{regen\ 15393}# (caddr #{x\ 15394}#)))
                                 (error "how did we get here" #{x\ 15394}#))
                               (#{build-application\ 12838}#
                                 #f
                                 (#{build-primref\ 12864}#
                                   #f
                                   (car #{x\ 15394}#))
                                 (map #{regen\ 15393}#
                                      (cdr #{x\ 15394}#))))))))))
                 (#{gen-vector\ 15391}#
                   (lambda (#{x\ 15410}#)
                     (if (eq? (car #{x\ 15410}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 15410}#))
                       (if (eq? (car #{x\ 15410}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 15410}#)))
                         (list (quote list->vector) #{x\ 15410}#)))))
                 (#{gen-append\ 15389}#
                   (lambda (#{x\ 15420}# #{y\ 15421}#)
                     (if (equal? #{y\ 15421}# (quote (quote ())))
                       #{x\ 15420}#
                       (list (quote append) #{x\ 15420}# #{y\ 15421}#))))
                 (#{gen-cons\ 15387}#
                   (lambda (#{x\ 15425}# #{y\ 15426}#)
                     (let ((#{atom-key\ 15431}# (car #{y\ 15426}#)))
                       (if (memv #{atom-key\ 15431}# (quote (quote)))
                         (if (eq? (car #{x\ 15425}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 15425}#)
                                       (cadr #{y\ 15426}#)))
                           (if (eq? (cadr #{y\ 15426}#) (quote ()))
                             (list (quote list) #{x\ 15425}#)
                             (list (quote cons) #{x\ 15425}# #{y\ 15426}#)))
                         (if (memv #{atom-key\ 15431}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 15425}# (cdr #{y\ 15426}#)))
                           (list (quote cons) #{x\ 15425}# #{y\ 15426}#))))))
                 (#{gen-map\ 15385}#
                   (lambda (#{e\ 15440}# #{map-env\ 15441}#)
                     (let ((#{formals\ 15446}# (map cdr #{map-env\ 15441}#))
                           (#{actuals\ 15447}#
                             (map (lambda (#{x\ 15448}#)
                                    (list (quote ref) (car #{x\ 15448}#)))
                                  #{map-env\ 15441}#)))
                       (if (eq? (car #{e\ 15440}#) (quote ref))
                         (car #{actuals\ 15447}#)
                         (if (and-map
                               (lambda (#{x\ 15455}#)
                                 (if (eq? (car #{x\ 15455}#) (quote ref))
                                   (memq (cadr #{x\ 15455}#)
                                         #{formals\ 15446}#)
                                   #f))
                               (cdr #{e\ 15440}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 15440}#))
                                       (map (let ((#{r\ 15461}#
                                                    (map cons
                                                         #{formals\ 15446}#
                                                         #{actuals\ 15447}#)))
                                              (lambda (#{x\ 15462}#)
                                                (cdr (assq (cadr #{x\ 15462}#)
                                                           #{r\ 15461}#))))
                                            (cdr #{e\ 15440}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 15446}#
                                             #{e\ 15440}#)
                                       #{actuals\ 15447}#)))))))
                 (#{gen-mappend\ 15383}#
                   (lambda (#{e\ 15466}# #{map-env\ 15467}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 15385}#
                             #{e\ 15466}#
                             #{map-env\ 15467}#))))
                 (#{gen-ref\ 15381}#
                   (lambda (#{src\ 15471}#
                            #{var\ 15472}#
                            #{level\ 15473}#
                            #{maps\ 15474}#)
                     (if (#{fx=\ 12821}# #{level\ 15473}# 0)
                       (values #{var\ 15472}# #{maps\ 15474}#)
                       (if (null? #{maps\ 15474}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 15471}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 15381}#
                               #{src\ 15471}#
                               #{var\ 15472}#
                               (#{fx-\ 12819}# #{level\ 15473}# 1)
                               (cdr #{maps\ 15474}#)))
                           (lambda (#{outer-var\ 15479}# #{outer-maps\ 15480}#)
                             (let ((#{b\ 15484}#
                                     (assq #{outer-var\ 15479}#
                                           (car #{maps\ 15474}#))))
                               (if #{b\ 15484}#
                                 (values (cdr #{b\ 15484}#) #{maps\ 15474}#)
                                 (let ((#{inner-var\ 15486}#
                                         (#{gen-var\ 13029}# (quote tmp))))
                                   (values
                                     #{inner-var\ 15486}#
                                     (cons (cons (cons #{outer-var\ 15479}#
                                                       #{inner-var\ 15486}#)
                                                 (car #{maps\ 15474}#))
                                           #{outer-maps\ 15480}#)))))))))))
                 (#{gen-syntax\ 15379}#
                   (lambda (#{src\ 15487}#
                            #{e\ 15488}#
                            #{r\ 15489}#
                            #{maps\ 15490}#
                            #{ellipsis?\ 15491}#
                            #{mod\ 15492}#)
                     (if (#{id?\ 12916}# #{e\ 15488}#)
                       (let ((#{label\ 15500}#
                               (#{id-var-name\ 12973}#
                                 #{e\ 15488}#
                                 '(()))))
                         (let ((#{b\ 15503}#
                                 (#{lookup\ 12910}#
                                   #{label\ 15500}#
                                   #{r\ 15489}#
                                   #{mod\ 15492}#)))
                           (if (eq? (#{binding-type\ 12899}# #{b\ 15503}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 15505}#
                                         (#{binding-value\ 12901}#
                                           #{b\ 15503}#)))
                                   (#{gen-ref\ 15381}#
                                     #{src\ 15487}#
                                     (car #{var.lev\ 15505}#)
                                     (cdr #{var.lev\ 15505}#)
                                     #{maps\ 15490}#)))
                               (lambda (#{var\ 15506}# #{maps\ 15507}#)
                                 (values
                                   (list (quote ref) #{var\ 15506}#)
                                   #{maps\ 15507}#)))
                             (if (#{ellipsis?\ 15491}# #{e\ 15488}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 15487}#)
                               (values
                                 (list (quote quote) #{e\ 15488}#)
                                 #{maps\ 15490}#)))))
                       ((lambda (#{tmp\ 15512}#)
                          ((lambda (#{tmp\ 15513}#)
                             (if (if #{tmp\ 15513}#
                                   (apply (lambda (#{dots\ 15516}#
                                                   #{e\ 15517}#)
                                            (#{ellipsis?\ 15491}#
                                              #{dots\ 15516}#))
                                          #{tmp\ 15513}#)
                                   #f)
                               (apply (lambda (#{dots\ 15520}# #{e\ 15521}#)
                                        (#{gen-syntax\ 15379}#
                                          #{src\ 15487}#
                                          #{e\ 15521}#
                                          #{r\ 15489}#
                                          #{maps\ 15490}#
                                          (lambda (#{x\ 15522}#) #f)
                                          #{mod\ 15492}#))
                                      #{tmp\ 15513}#)
                               ((lambda (#{tmp\ 15524}#)
                                  (if (if #{tmp\ 15524}#
                                        (apply (lambda (#{x\ 15528}#
                                                        #{dots\ 15529}#
                                                        #{y\ 15530}#)
                                                 (#{ellipsis?\ 15491}#
                                                   #{dots\ 15529}#))
                                               #{tmp\ 15524}#)
                                        #f)
                                    (apply (lambda (#{x\ 15534}#
                                                    #{dots\ 15535}#
                                                    #{y\ 15536}#)
                                             (letrec ((#{f\ 15540}#
                                                        (lambda (#{y\ 15541}#
                                                                 #{k\ 15542}#)
                                                          ((lambda (#{tmp\ 15549}#)
                                                             ((lambda (#{tmp\ 15550}#)
                                                                (if (if #{tmp\ 15550}#
                                                                      (apply (lambda (#{dots\ 15553}#
                                                                                      #{y\ 15554}#)
                                                                               (#{ellipsis?\ 15491}#
                                                                                 #{dots\ 15553}#))
                                                                             #{tmp\ 15550}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 15557}#
                                                                                  #{y\ 15558}#)
                                                                           (#{f\ 15540}#
                                                                             #{y\ 15558}#
                                                                             (lambda (#{maps\ 15559}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 15542}#
                                                                                     (cons '()
                                                                                           #{maps\ 15559}#)))
                                                                                 (lambda (#{x\ 15561}#
                                                                                          #{maps\ 15562}#)
                                                                                   (if (null? (car #{maps\ 15562}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 15487}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 15383}#
                                                                                         #{x\ 15561}#
                                                                                         (car #{maps\ 15562}#))
                                                                                       (cdr #{maps\ 15562}#))))))))
                                                                         #{tmp\ 15550}#)
                                                                  ((lambda (#{_\ 15566}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 15379}#
                                                                           #{src\ 15487}#
                                                                           #{y\ 15541}#
                                                                           #{r\ 15489}#
                                                                           #{maps\ 15490}#
                                                                           #{ellipsis?\ 15491}#
                                                                           #{mod\ 15492}#))
                                                                       (lambda (#{y\ 15567}#
                                                                                #{maps\ 15568}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 15542}#
                                                                               #{maps\ 15568}#))
                                                                           (lambda (#{x\ 15571}#
                                                                                    #{maps\ 15572}#)
                                                                             (values
                                                                               (#{gen-append\ 15389}#
                                                                                 #{x\ 15571}#
                                                                                 #{y\ 15567}#)
                                                                               #{maps\ 15572}#))))))
                                                                   #{tmp\ 15549}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 15549}#
                                                                '(any . any))))
                                                           #{y\ 15541}#))))
                                               (#{f\ 15540}#
                                                 #{y\ 15536}#
                                                 (lambda (#{maps\ 15543}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 15379}#
                                                         #{src\ 15487}#
                                                         #{x\ 15534}#
                                                         #{r\ 15489}#
                                                         (cons '()
                                                               #{maps\ 15543}#)
                                                         #{ellipsis?\ 15491}#
                                                         #{mod\ 15492}#))
                                                     (lambda (#{x\ 15545}#
                                                              #{maps\ 15546}#)
                                                       (if (null? (car #{maps\ 15546}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 15487}#)
                                                         (values
                                                           (#{gen-map\ 15385}#
                                                             #{x\ 15545}#
                                                             (car #{maps\ 15546}#))
                                                           (cdr #{maps\ 15546}#)))))))))
                                           #{tmp\ 15524}#)
                                    ((lambda (#{tmp\ 15575}#)
                                       (if #{tmp\ 15575}#
                                         (apply (lambda (#{x\ 15578}#
                                                         #{y\ 15579}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 15379}#
                                                        #{src\ 15487}#
                                                        #{x\ 15578}#
                                                        #{r\ 15489}#
                                                        #{maps\ 15490}#
                                                        #{ellipsis?\ 15491}#
                                                        #{mod\ 15492}#))
                                                    (lambda (#{x\ 15580}#
                                                             #{maps\ 15581}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 15379}#
                                                            #{src\ 15487}#
                                                            #{y\ 15579}#
                                                            #{r\ 15489}#
                                                            #{maps\ 15581}#
                                                            #{ellipsis?\ 15491}#
                                                            #{mod\ 15492}#))
                                                        (lambda (#{y\ 15584}#
                                                                 #{maps\ 15585}#)
                                                          (values
                                                            (#{gen-cons\ 15387}#
                                                              #{x\ 15580}#
                                                              #{y\ 15584}#)
                                                            #{maps\ 15585}#))))))
                                                #{tmp\ 15575}#)
                                         ((lambda (#{tmp\ 15588}#)
                                            (if #{tmp\ 15588}#
                                              (apply (lambda (#{e1\ 15591}#
                                                              #{e2\ 15592}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 15379}#
                                                             #{src\ 15487}#
                                                             (cons #{e1\ 15591}#
                                                                   #{e2\ 15592}#)
                                                             #{r\ 15489}#
                                                             #{maps\ 15490}#
                                                             #{ellipsis?\ 15491}#
                                                             #{mod\ 15492}#))
                                                         (lambda (#{e\ 15594}#
                                                                  #{maps\ 15595}#)
                                                           (values
                                                             (#{gen-vector\ 15391}#
                                                               #{e\ 15594}#)
                                                             #{maps\ 15595}#))))
                                                     #{tmp\ 15588}#)
                                              ((lambda (#{_\ 15599}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 15488}#)
                                                   #{maps\ 15490}#))
                                               #{tmp\ 15512}#)))
                                          ($sc-dispatch
                                            #{tmp\ 15512}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 15512}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 15512}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 15512}# (quote (any any)))))
                        #{e\ 15488}#)))))
          (lambda (#{e\ 15601}#
                   #{r\ 15602}#
                   #{w\ 15603}#
                   #{s\ 15604}#
                   #{mod\ 15605}#)
            (let ((#{e\ 15612}#
                    (#{source-wrap\ 12987}#
                      #{e\ 15601}#
                      #{w\ 15603}#
                      #{s\ 15604}#
                      #{mod\ 15605}#)))
              ((lambda (#{tmp\ 15613}#)
                 ((lambda (#{tmp\ 15614}#)
                    (if #{tmp\ 15614}#
                      (apply (lambda (#{_\ 15617}# #{x\ 15618}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 15379}#
                                     #{e\ 15612}#
                                     #{x\ 15618}#
                                     #{r\ 15602}#
                                     '()
                                     #{ellipsis?\ 13017}#
                                     #{mod\ 15605}#))
                                 (lambda (#{e\ 15619}# #{maps\ 15620}#)
                                   (#{regen\ 15393}# #{e\ 15619}#))))
                             #{tmp\ 15614}#)
                      ((lambda (#{_\ 15624}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 15612}#))
                       #{tmp\ 15613}#)))
                  ($sc-dispatch #{tmp\ 15613}# (quote (any any)))))
               #{e\ 15612}#)))))
      (#{global-extend\ 12912}#
        'core
        'lambda
        (lambda (#{e\ 15625}#
                 #{r\ 15626}#
                 #{w\ 15627}#
                 #{s\ 15628}#
                 #{mod\ 15629}#)
          ((lambda (#{tmp\ 15635}#)
             ((lambda (#{tmp\ 15636}#)
                (if #{tmp\ 15636}#
                  (apply (lambda (#{_\ 15641}#
                                  #{args\ 15642}#
                                  #{e1\ 15643}#
                                  #{e2\ 15644}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 13019}# #{args\ 15642}#))
                             (lambda (#{req\ 15645}#
                                      #{opt\ 15646}#
                                      #{rest\ 15647}#
                                      #{kw\ 15648}#)
                               (letrec ((#{lp\ 15656}#
                                          (lambda (#{body\ 15657}#
                                                   #{meta\ 15658}#)
                                            ((lambda (#{tmp\ 15660}#)
                                               ((lambda (#{tmp\ 15661}#)
                                                  (if (if #{tmp\ 15661}#
                                                        (apply (lambda (#{docstring\ 15665}#
                                                                        #{e1\ 15666}#
                                                                        #{e2\ 15667}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 15665}#)))
                                                               #{tmp\ 15661}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 15671}#
                                                                    #{e1\ 15672}#
                                                                    #{e2\ 15673}#)
                                                             (#{lp\ 15656}#
                                                               (cons #{e1\ 15672}#
                                                                     #{e2\ 15673}#)
                                                               (append
                                                                 #{meta\ 15658}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 15671}#))))))
                                                           #{tmp\ 15661}#)
                                                    ((lambda (#{tmp\ 15676}#)
                                                       (if #{tmp\ 15676}#
                                                         (apply (lambda (#{k\ 15681}#
                                                                         #{v\ 15682}#
                                                                         #{e1\ 15683}#
                                                                         #{e2\ 15684}#)
                                                                  (#{lp\ 15656}#
                                                                    (cons #{e1\ 15683}#
                                                                          #{e2\ 15684}#)
                                                                    (append
                                                                      #{meta\ 15658}#
                                                                      (syntax->datum
                                                                        (map cons
                                                                             #{k\ 15681}#
                                                                             #{v\ 15682}#)))))
                                                                #{tmp\ 15676}#)
                                                         ((lambda (#{_\ 15689}#)
                                                            (#{chi-simple-lambda\ 13021}#
                                                              #{e\ 15625}#
                                                              #{r\ 15626}#
                                                              #{w\ 15627}#
                                                              #{s\ 15628}#
                                                              #{mod\ 15629}#
                                                              #{req\ 15645}#
                                                              #{rest\ 15647}#
                                                              #{meta\ 15658}#
                                                              #{body\ 15657}#))
                                                          #{tmp\ 15660}#)))
                                                     ($sc-dispatch
                                                       #{tmp\ 15660}#
                                                       '(#(vector
                                                           #(each (any . any)))
                                                         any
                                                         .
                                                         each-any)))))
                                                ($sc-dispatch
                                                  #{tmp\ 15660}#
                                                  '(any any . each-any))))
                                             #{body\ 15657}#))))
                                 (#{lp\ 15656}#
                                   (cons #{e1\ 15643}# #{e2\ 15644}#)
                                   '())))))
                         #{tmp\ 15636}#)
                  ((lambda (#{_\ 15691}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 15625}#))
                   #{tmp\ 15635}#)))
              ($sc-dispatch
                #{tmp\ 15635}#
                '(any any any . each-any))))
           #{e\ 15625}#)))
      (#{global-extend\ 12912}#
        'core
        'lambda*
        (lambda (#{e\ 15692}#
                 #{r\ 15693}#
                 #{w\ 15694}#
                 #{s\ 15695}#
                 #{mod\ 15696}#)
          ((lambda (#{tmp\ 15702}#)
             ((lambda (#{tmp\ 15703}#)
                (if #{tmp\ 15703}#
                  (apply (lambda (#{_\ 15708}#
                                  #{args\ 15709}#
                                  #{e1\ 15710}#
                                  #{e2\ 15711}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 13025}#
                                 #{e\ 15692}#
                                 #{r\ 15693}#
                                 #{w\ 15694}#
                                 #{s\ 15695}#
                                 #{mod\ 15696}#
                                 #{lambda*-formals\ 13023}#
                                 (list (cons #{args\ 15709}#
                                             (cons #{e1\ 15710}#
                                                   #{e2\ 15711}#)))))
                             (lambda (#{meta\ 15713}# #{lcase\ 15714}#)
                               (#{build-case-lambda\ 12860}#
                                 #{s\ 15695}#
                                 #{meta\ 15713}#
                                 #{lcase\ 15714}#))))
                         #{tmp\ 15703}#)
                  ((lambda (#{_\ 15718}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 15692}#))
                   #{tmp\ 15702}#)))
              ($sc-dispatch
                #{tmp\ 15702}#
                '(any any any . each-any))))
           #{e\ 15692}#)))
      (#{global-extend\ 12912}#
        'core
        'case-lambda
        (lambda (#{e\ 15719}#
                 #{r\ 15720}#
                 #{w\ 15721}#
                 #{s\ 15722}#
                 #{mod\ 15723}#)
          ((lambda (#{tmp\ 15729}#)
             ((lambda (#{tmp\ 15730}#)
                (if #{tmp\ 15730}#
                  (apply (lambda (#{_\ 15738}#
                                  #{args\ 15739}#
                                  #{e1\ 15740}#
                                  #{e2\ 15741}#
                                  #{args*\ 15742}#
                                  #{e1*\ 15743}#
                                  #{e2*\ 15744}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 13025}#
                                 #{e\ 15719}#
                                 #{r\ 15720}#
                                 #{w\ 15721}#
                                 #{s\ 15722}#
                                 #{mod\ 15723}#
                                 #{lambda-formals\ 13019}#
                                 (cons (cons #{args\ 15739}#
                                             (cons #{e1\ 15740}#
                                                   #{e2\ 15741}#))
                                       (map (lambda (#{tmp\ 15748}#
                                                     #{tmp\ 15747}#
                                                     #{tmp\ 15746}#)
                                              (cons #{tmp\ 15746}#
                                                    (cons #{tmp\ 15747}#
                                                          #{tmp\ 15748}#)))
                                            #{e2*\ 15744}#
                                            #{e1*\ 15743}#
                                            #{args*\ 15742}#))))
                             (lambda (#{meta\ 15750}# #{lcase\ 15751}#)
                               (#{build-case-lambda\ 12860}#
                                 #{s\ 15722}#
                                 #{meta\ 15750}#
                                 #{lcase\ 15751}#))))
                         #{tmp\ 15730}#)
                  ((lambda (#{_\ 15755}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 15719}#))
                   #{tmp\ 15729}#)))
              ($sc-dispatch
                #{tmp\ 15729}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 15719}#)))
      (#{global-extend\ 12912}#
        'core
        'case-lambda*
        (lambda (#{e\ 15756}#
                 #{r\ 15757}#
                 #{w\ 15758}#
                 #{s\ 15759}#
                 #{mod\ 15760}#)
          ((lambda (#{tmp\ 15766}#)
             ((lambda (#{tmp\ 15767}#)
                (if #{tmp\ 15767}#
                  (apply (lambda (#{_\ 15775}#
                                  #{args\ 15776}#
                                  #{e1\ 15777}#
                                  #{e2\ 15778}#
                                  #{args*\ 15779}#
                                  #{e1*\ 15780}#
                                  #{e2*\ 15781}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 13025}#
                                 #{e\ 15756}#
                                 #{r\ 15757}#
                                 #{w\ 15758}#
                                 #{s\ 15759}#
                                 #{mod\ 15760}#
                                 #{lambda*-formals\ 13023}#
                                 (cons (cons #{args\ 15776}#
                                             (cons #{e1\ 15777}#
                                                   #{e2\ 15778}#))
                                       (map (lambda (#{tmp\ 15785}#
                                                     #{tmp\ 15784}#
                                                     #{tmp\ 15783}#)
                                              (cons #{tmp\ 15783}#
                                                    (cons #{tmp\ 15784}#
                                                          #{tmp\ 15785}#)))
                                            #{e2*\ 15781}#
                                            #{e1*\ 15780}#
                                            #{args*\ 15779}#))))
                             (lambda (#{meta\ 15787}# #{lcase\ 15788}#)
                               (#{build-case-lambda\ 12860}#
                                 #{s\ 15759}#
                                 #{meta\ 15787}#
                                 #{lcase\ 15788}#))))
                         #{tmp\ 15767}#)
                  ((lambda (#{_\ 15792}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 15756}#))
                   #{tmp\ 15766}#)))
              ($sc-dispatch
                #{tmp\ 15766}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 15756}#)))
      (#{global-extend\ 12912}#
        'core
        'let
        (letrec ((#{chi-let\ 15794}#
                   (lambda (#{e\ 15795}#
                            #{r\ 15796}#
                            #{w\ 15797}#
                            #{s\ 15798}#
                            #{mod\ 15799}#
                            #{constructor\ 15800}#
                            #{ids\ 15801}#
                            #{vals\ 15802}#
                            #{exps\ 15803}#)
                     (if (not (#{valid-bound-ids?\ 12979}# #{ids\ 15801}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 15795}#)
                       (let ((#{labels\ 15815}#
                               (#{gen-labels\ 12934}# #{ids\ 15801}#))
                             (#{new-vars\ 15816}#
                               (map #{gen-var\ 13029}# #{ids\ 15801}#)))
                         (let ((#{nw\ 15819}#
                                 (#{make-binding-wrap\ 12963}#
                                   #{ids\ 15801}#
                                   #{labels\ 15815}#
                                   #{w\ 15797}#))
                               (#{nr\ 15820}#
                                 (#{extend-var-env\ 12906}#
                                   #{labels\ 15815}#
                                   #{new-vars\ 15816}#
                                   #{r\ 15796}#)))
                           (#{constructor\ 15800}#
                             #{s\ 15798}#
                             (map syntax->datum #{ids\ 15801}#)
                             #{new-vars\ 15816}#
                             (map (lambda (#{x\ 15821}#)
                                    (#{chi\ 13001}#
                                      #{x\ 15821}#
                                      #{r\ 15796}#
                                      #{w\ 15797}#
                                      #{mod\ 15799}#))
                                  #{vals\ 15802}#)
                             (#{chi-body\ 13009}#
                               #{exps\ 15803}#
                               (#{source-wrap\ 12987}#
                                 #{e\ 15795}#
                                 #{nw\ 15819}#
                                 #{s\ 15798}#
                                 #{mod\ 15799}#)
                               #{nr\ 15820}#
                               #{nw\ 15819}#
                               #{mod\ 15799}#))))))))
          (lambda (#{e\ 15823}#
                   #{r\ 15824}#
                   #{w\ 15825}#
                   #{s\ 15826}#
                   #{mod\ 15827}#)
            ((lambda (#{tmp\ 15833}#)
               ((lambda (#{tmp\ 15834}#)
                  (if (if #{tmp\ 15834}#
                        (apply (lambda (#{_\ 15840}#
                                        #{id\ 15841}#
                                        #{val\ 15842}#
                                        #{e1\ 15843}#
                                        #{e2\ 15844}#)
                                 (and-map #{id?\ 12916}# #{id\ 15841}#))
                               #{tmp\ 15834}#)
                        #f)
                    (apply (lambda (#{_\ 15851}#
                                    #{id\ 15852}#
                                    #{val\ 15853}#
                                    #{e1\ 15854}#
                                    #{e2\ 15855}#)
                             (#{chi-let\ 15794}#
                               #{e\ 15823}#
                               #{r\ 15824}#
                               #{w\ 15825}#
                               #{s\ 15826}#
                               #{mod\ 15827}#
                               #{build-let\ 12870}#
                               #{id\ 15852}#
                               #{val\ 15853}#
                               (cons #{e1\ 15854}# #{e2\ 15855}#)))
                           #{tmp\ 15834}#)
                    ((lambda (#{tmp\ 15859}#)
                       (if (if #{tmp\ 15859}#
                             (apply (lambda (#{_\ 15866}#
                                             #{f\ 15867}#
                                             #{id\ 15868}#
                                             #{val\ 15869}#
                                             #{e1\ 15870}#
                                             #{e2\ 15871}#)
                                      (if (#{id?\ 12916}# #{f\ 15867}#)
                                        (and-map #{id?\ 12916}# #{id\ 15868}#)
                                        #f))
                                    #{tmp\ 15859}#)
                             #f)
                         (apply (lambda (#{_\ 15881}#
                                         #{f\ 15882}#
                                         #{id\ 15883}#
                                         #{val\ 15884}#
                                         #{e1\ 15885}#
                                         #{e2\ 15886}#)
                                  (#{chi-let\ 15794}#
                                    #{e\ 15823}#
                                    #{r\ 15824}#
                                    #{w\ 15825}#
                                    #{s\ 15826}#
                                    #{mod\ 15827}#
                                    #{build-named-let\ 12872}#
                                    (cons #{f\ 15882}# #{id\ 15883}#)
                                    #{val\ 15884}#
                                    (cons #{e1\ 15885}# #{e2\ 15886}#)))
                                #{tmp\ 15859}#)
                         ((lambda (#{_\ 15891}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 12987}#
                                #{e\ 15823}#
                                #{w\ 15825}#
                                #{s\ 15826}#
                                #{mod\ 15827}#)))
                          #{tmp\ 15833}#)))
                     ($sc-dispatch
                       #{tmp\ 15833}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 15833}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 15823}#))))
      (#{global-extend\ 12912}#
        'core
        'letrec
        (lambda (#{e\ 15892}#
                 #{r\ 15893}#
                 #{w\ 15894}#
                 #{s\ 15895}#
                 #{mod\ 15896}#)
          ((lambda (#{tmp\ 15902}#)
             ((lambda (#{tmp\ 15903}#)
                (if (if #{tmp\ 15903}#
                      (apply (lambda (#{_\ 15909}#
                                      #{id\ 15910}#
                                      #{val\ 15911}#
                                      #{e1\ 15912}#
                                      #{e2\ 15913}#)
                               (and-map #{id?\ 12916}# #{id\ 15910}#))
                             #{tmp\ 15903}#)
                      #f)
                  (apply (lambda (#{_\ 15920}#
                                  #{id\ 15921}#
                                  #{val\ 15922}#
                                  #{e1\ 15923}#
                                  #{e2\ 15924}#)
                           (let ((#{ids\ 15926}# #{id\ 15921}#))
                             (if (not (#{valid-bound-ids?\ 12979}#
                                        #{ids\ 15926}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 15892}#)
                               (let ((#{labels\ 15930}#
                                       (#{gen-labels\ 12934}# #{ids\ 15926}#))
                                     (#{new-vars\ 15931}#
                                       (map #{gen-var\ 13029}#
                                            #{ids\ 15926}#)))
                                 (let ((#{w\ 15934}#
                                         (#{make-binding-wrap\ 12963}#
                                           #{ids\ 15926}#
                                           #{labels\ 15930}#
                                           #{w\ 15894}#))
                                       (#{r\ 15935}#
                                         (#{extend-var-env\ 12906}#
                                           #{labels\ 15930}#
                                           #{new-vars\ 15931}#
                                           #{r\ 15893}#)))
                                   (#{build-letrec\ 12874}#
                                     #{s\ 15895}#
                                     (map syntax->datum #{ids\ 15926}#)
                                     #{new-vars\ 15931}#
                                     (map (lambda (#{x\ 15936}#)
                                            (#{chi\ 13001}#
                                              #{x\ 15936}#
                                              #{r\ 15935}#
                                              #{w\ 15934}#
                                              #{mod\ 15896}#))
                                          #{val\ 15922}#)
                                     (#{chi-body\ 13009}#
                                       (cons #{e1\ 15923}# #{e2\ 15924}#)
                                       (#{source-wrap\ 12987}#
                                         #{e\ 15892}#
                                         #{w\ 15934}#
                                         #{s\ 15895}#
                                         #{mod\ 15896}#)
                                       #{r\ 15935}#
                                       #{w\ 15934}#
                                       #{mod\ 15896}#)))))))
                         #{tmp\ 15903}#)
                  ((lambda (#{_\ 15941}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 12987}#
                         #{e\ 15892}#
                         #{w\ 15894}#
                         #{s\ 15895}#
                         #{mod\ 15896}#)))
                   #{tmp\ 15902}#)))
              ($sc-dispatch
                #{tmp\ 15902}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 15892}#)))
      (#{global-extend\ 12912}#
        'core
        'set!
        (lambda (#{e\ 15942}#
                 #{r\ 15943}#
                 #{w\ 15944}#
                 #{s\ 15945}#
                 #{mod\ 15946}#)
          ((lambda (#{tmp\ 15952}#)
             ((lambda (#{tmp\ 15953}#)
                (if (if #{tmp\ 15953}#
                      (apply (lambda (#{_\ 15957}#
                                      #{id\ 15958}#
                                      #{val\ 15959}#)
                               (#{id?\ 12916}# #{id\ 15958}#))
                             #{tmp\ 15953}#)
                      #f)
                  (apply (lambda (#{_\ 15963}# #{id\ 15964}# #{val\ 15965}#)
                           (let ((#{val\ 15968}#
                                   (#{chi\ 13001}#
                                     #{val\ 15965}#
                                     #{r\ 15943}#
                                     #{w\ 15944}#
                                     #{mod\ 15946}#))
                                 (#{n\ 15969}#
                                   (#{id-var-name\ 12973}#
                                     #{id\ 15964}#
                                     #{w\ 15944}#)))
                             (let ((#{b\ 15971}#
                                     (#{lookup\ 12910}#
                                       #{n\ 15969}#
                                       #{r\ 15943}#
                                       #{mod\ 15946}#)))
                               (let ((#{atom-key\ 15974}#
                                       (#{binding-type\ 12899}# #{b\ 15971}#)))
                                 (if (memv #{atom-key\ 15974}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 12846}#
                                     #{s\ 15945}#
                                     (syntax->datum #{id\ 15964}#)
                                     (#{binding-value\ 12901}# #{b\ 15971}#)
                                     #{val\ 15968}#)
                                   (if (memv #{atom-key\ 15974}#
                                             '(global))
                                     (#{build-global-assignment\ 12852}#
                                       #{s\ 15945}#
                                       #{n\ 15969}#
                                       #{val\ 15968}#
                                       #{mod\ 15946}#)
                                     (if (memv #{atom-key\ 15974}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 12985}#
                                           #{id\ 15964}#
                                           #{w\ 15944}#
                                           #{mod\ 15946}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 12987}#
                                           #{e\ 15942}#
                                           #{w\ 15944}#
                                           #{s\ 15945}#
                                           #{mod\ 15946}#)))))))))
                         #{tmp\ 15953}#)
                  ((lambda (#{tmp\ 15979}#)
                     (if #{tmp\ 15979}#
                       (apply (lambda (#{_\ 15984}#
                                       #{head\ 15985}#
                                       #{tail\ 15986}#
                                       #{val\ 15987}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 12997}#
                                      #{head\ 15985}#
                                      #{r\ 15943}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 15946}#
                                      #t))
                                  (lambda (#{type\ 15990}#
                                           #{value\ 15991}#
                                           #{ee\ 15992}#
                                           #{ww\ 15993}#
                                           #{ss\ 15994}#
                                           #{modmod\ 15995}#)
                                    (if (memv #{type\ 15990}#
                                              '(module-ref))
                                      (let ((#{val\ 16004}#
                                              (#{chi\ 13001}#
                                                #{val\ 15987}#
                                                #{r\ 15943}#
                                                #{w\ 15944}#
                                                #{mod\ 15946}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 15991}#
                                              (cons #{head\ 15985}#
                                                    #{tail\ 15986}#)
                                              #{r\ 15943}#
                                              #{w\ 15944}#))
                                          (lambda (#{e\ 16006}#
                                                   #{r\ 16007}#
                                                   #{w\ 16008}#
                                                   #{s*\ 16009}#
                                                   #{mod\ 16010}#)
                                            ((lambda (#{tmp\ 16016}#)
                                               ((lambda (#{tmp\ 16017}#)
                                                  (if (if #{tmp\ 16017}#
                                                        (apply (lambda (#{e\ 16019}#)
                                                                 (#{id?\ 12916}#
                                                                   #{e\ 16019}#))
                                                               #{tmp\ 16017}#)
                                                        #f)
                                                    (apply (lambda (#{e\ 16021}#)
                                                             (#{build-global-assignment\ 12852}#
                                                               #{s\ 15945}#
                                                               (syntax->datum
                                                                 #{e\ 16021}#)
                                                               #{val\ 16004}#
                                                               #{mod\ 16010}#))
                                                           #{tmp\ 16017}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 16016}#)))
                                                (list #{tmp\ 16016}#)))
                                             #{e\ 16006}#))))
                                      (#{build-application\ 12838}#
                                        #{s\ 15945}#
                                        (#{chi\ 13001}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i15996"
                                                        "i15997"
                                                        "i15998"
                                                        "i15999"
                                                        "i16000"
                                                        "i16001"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i15980"
                                                        "i15981"
                                                        "i15982"
                                                        "i15983"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i15947"
                                                        "i15948"
                                                        "i15949"
                                                        "i15950"
                                                        "i15951"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        make-dynlet
                                                        make-letrec
                                                        make-let
                                                        make-lambda-case
                                                        make-lambda
                                                        make-sequence
                                                        make-application
                                                        make-conditional
                                                        make-toplevel-define
                                                        make-toplevel-set
                                                        make-toplevel-ref
                                                        make-module-set
                                                        make-module-ref
                                                        make-lexical-set
                                                        make-lexical-ref
                                                        make-primitive-ref
                                                        make-const
                                                        make-void
                                                        *mode*)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i13030"
                                                       "i13028"
                                                       "i13026"
                                                       "i13024"
                                                       "i13022"
                                                       "i13020"
                                                       "i13018"
                                                       "i13016"
                                                       "i13014"
                                                       "i13012"
                                                       "i13010"
                                                       "i13008"
                                                       "i13006"
                                                       "i13004"
                                                       "i13002"
                                                       "i13000"
                                                       "i12998"
                                                       "i12996"
                                                       "i12994"
                                                       "i12992"
                                                       "i12990"
                                                       "i12988"
                                                       "i12986"
                                                       "i12984"
                                                       "i12982"
                                                       "i12980"
                                                       "i12978"
                                                       "i12976"
                                                       "i12974"
                                                       "i12972"
                                                       "i12970"
                                                       "i12968"
                                                       "i12966"
                                                       "i12964"
                                                       "i12962"
                                                       "i12960"
                                                       "i12959"
                                                       "i12958"
                                                       "i12956"
                                                       "i12955"
                                                       "i12954"
                                                       "i12953"
                                                       "i12952"
                                                       "i12950"
                                                       "i12948"
                                                       "i12946"
                                                       "i12944"
                                                       "i12942"
                                                       "i12940"
                                                       "i12938"
                                                       "i12936"
                                                       "i12933"
                                                       "i12931"
                                                       "i12930"
                                                       "i12929"
                                                       "i12928"
                                                       "i12927"
                                                       "i12926"
                                                       "i12924"
                                                       "i12922"
                                                       "i12920"
                                                       "i12918"
                                                       "i12917"
                                                       "i12915"
                                                       "i12913"
                                                       "i12911"
                                                       "i12909"
                                                       "i12907"
                                                       "i12905"
                                                       "i12903"
                                                       "i12902"
                                                       "i12900"
                                                       "i12898"
                                                       "i12897"
                                                       "i12896"
                                                       "i12894"
                                                       "i12893"
                                                       "i12891"
                                                       "i12889"
                                                       "i12887"
                                                       "i12885"
                                                       "i12883"
                                                       "i12881"
                                                       "i12879"
                                                       "i12877"
                                                       "i12875"
                                                       "i12873"
                                                       "i12871"
                                                       "i12869"
                                                       "i12867"
                                                       "i12865"
                                                       "i12863"
                                                       "i12861"
                                                       "i12859"
                                                       "i12857"
                                                       "i12855"
                                                       "i12853"
                                                       "i12851"
                                                       "i12849"
                                                       "i12847"
                                                       "i12845"
                                                       "i12843"
                                                       "i12841"
                                                       "i12839"
                                                       "i12837"
                                                       "i12835"
                                                       "i12833"
                                                       "i12831"
                                                       "i12829"
                                                       "i12828"
                                                       "i12826"
                                                       "i12824"
                                                       "i12822"
                                                       "i12820"
                                                       "i12818"
                                                       "i12816"
                                                       "i12814"
                                                       "i12812"
                                                       "i12810"
                                                       "i12808"
                                                       "i12806"
                                                       "i12804"
                                                       "i12802"
                                                       "i12800"
                                                       "i12798"
                                                       "i12796"
                                                       "i12794"
                                                       "i12792"
                                                       "i12790"
                                                       "i12788"
                                                       "i12786"
                                                       "i12784"
                                                       "i12782"
                                                       "i12780"
                                                       "i12777"))
                                                    #(ribcage
                                                      (define-structure
                                                        define-expansion-constructors
                                                        and-map*)
                                                      ((top) (top) (top))
                                                      ("i12629"
                                                       "i12628"
                                                       "i12626")))
                                                   (hygiene guile))
                                                #{head\ 15985}#)
                                          #{r\ 15943}#
                                          #{w\ 15944}#
                                          #{mod\ 15946}#)
                                        (map (lambda (#{e\ 16023}#)
                                               (#{chi\ 13001}#
                                                 #{e\ 16023}#
                                                 #{r\ 15943}#
                                                 #{w\ 15944}#
                                                 #{mod\ 15946}#))
                                             (append
                                               #{tail\ 15986}#
                                               (list #{val\ 15987}#))))))))
                              #{tmp\ 15979}#)
                       ((lambda (#{_\ 16027}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 12987}#
                              #{e\ 15942}#
                              #{w\ 15944}#
                              #{s\ 15945}#
                              #{mod\ 15946}#)))
                        #{tmp\ 15952}#)))
                   ($sc-dispatch
                     #{tmp\ 15952}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 15952}#
                '(any any any))))
           #{e\ 15942}#)))
      (#{global-extend\ 12912}#
        'module-ref
        '@
        (lambda (#{e\ 16028}# #{r\ 16029}# #{w\ 16030}#)
          ((lambda (#{tmp\ 16034}#)
             ((lambda (#{tmp\ 16035}#)
                (if (if #{tmp\ 16035}#
                      (apply (lambda (#{_\ 16039}#
                                      #{mod\ 16040}#
                                      #{id\ 16041}#)
                               (if (and-map #{id?\ 12916}# #{mod\ 16040}#)
                                 (#{id?\ 12916}# #{id\ 16041}#)
                                 #f))
                             #{tmp\ 16035}#)
                      #f)
                  (apply (lambda (#{_\ 16048}# #{mod\ 16049}# #{id\ 16050}#)
                           (values
                             (syntax->datum #{id\ 16050}#)
                             #{r\ 16029}#
                             #{w\ 16030}#
                             #f
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i16045" "i16046" "i16047"))
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(e r w)
                                           #((top) (top) (top))
                                           #("i16031" "i16032" "i16033"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             make-dynlet
                                             make-letrec
                                             make-let
                                             make-lambda-case
                                             make-lambda
                                             make-sequence
                                             make-application
                                             make-conditional
                                             make-toplevel-define
                                             make-toplevel-set
                                             make-toplevel-ref
                                             make-module-set
                                             make-module-ref
                                             make-lexical-set
                                             make-lexical-ref
                                             make-primitive-ref
                                             make-const
                                             make-void
                                             *mode*)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i13030"
                                            "i13028"
                                            "i13026"
                                            "i13024"
                                            "i13022"
                                            "i13020"
                                            "i13018"
                                            "i13016"
                                            "i13014"
                                            "i13012"
                                            "i13010"
                                            "i13008"
                                            "i13006"
                                            "i13004"
                                            "i13002"
                                            "i13000"
                                            "i12998"
                                            "i12996"
                                            "i12994"
                                            "i12992"
                                            "i12990"
                                            "i12988"
                                            "i12986"
                                            "i12984"
                                            "i12982"
                                            "i12980"
                                            "i12978"
                                            "i12976"
                                            "i12974"
                                            "i12972"
                                            "i12970"
                                            "i12968"
                                            "i12966"
                                            "i12964"
                                            "i12962"
                                            "i12960"
                                            "i12959"
                                            "i12958"
                                            "i12956"
                                            "i12955"
                                            "i12954"
                                            "i12953"
                                            "i12952"
                                            "i12950"
                                            "i12948"
                                            "i12946"
                                            "i12944"
                                            "i12942"
                                            "i12940"
                                            "i12938"
                                            "i12936"
                                            "i12933"
                                            "i12931"
                                            "i12930"
                                            "i12929"
                                            "i12928"
                                            "i12927"
                                            "i12926"
                                            "i12924"
                                            "i12922"
                                            "i12920"
                                            "i12918"
                                            "i12917"
                                            "i12915"
                                            "i12913"
                                            "i12911"
                                            "i12909"
                                            "i12907"
                                            "i12905"
                                            "i12903"
                                            "i12902"
                                            "i12900"
                                            "i12898"
                                            "i12897"
                                            "i12896"
                                            "i12894"
                                            "i12893"
                                            "i12891"
                                            "i12889"
                                            "i12887"
                                            "i12885"
                                            "i12883"
                                            "i12881"
                                            "i12879"
                                            "i12877"
                                            "i12875"
                                            "i12873"
                                            "i12871"
                                            "i12869"
                                            "i12867"
                                            "i12865"
                                            "i12863"
                                            "i12861"
                                            "i12859"
                                            "i12857"
                                            "i12855"
                                            "i12853"
                                            "i12851"
                                            "i12849"
                                            "i12847"
                                            "i12845"
                                            "i12843"
                                            "i12841"
                                            "i12839"
                                            "i12837"
                                            "i12835"
                                            "i12833"
                                            "i12831"
                                            "i12829"
                                            "i12828"
                                            "i12826"
                                            "i12824"
                                            "i12822"
                                            "i12820"
                                            "i12818"
                                            "i12816"
                                            "i12814"
                                            "i12812"
                                            "i12810"
                                            "i12808"
                                            "i12806"
                                            "i12804"
                                            "i12802"
                                            "i12800"
                                            "i12798"
                                            "i12796"
                                            "i12794"
                                            "i12792"
                                            "i12790"
                                            "i12788"
                                            "i12786"
                                            "i12784"
                                            "i12782"
                                            "i12780"
                                            "i12777"))
                                         #(ribcage
                                           (define-structure
                                             define-expansion-constructors
                                             and-map*)
                                           ((top) (top) (top))
                                           ("i12629" "i12628" "i12626")))
                                        (hygiene guile))
                                     #{mod\ 16049}#))))
                         #{tmp\ 16035}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 16034}#)))
              ($sc-dispatch
                #{tmp\ 16034}#
                '(any each-any any))))
           #{e\ 16028}#)))
      (#{global-extend\ 12912}#
        'module-ref
        '@@
        (lambda (#{e\ 16052}# #{r\ 16053}# #{w\ 16054}#)
          (letrec ((#{remodulate\ 16059}#
                     (lambda (#{x\ 16060}# #{mod\ 16061}#)
                       (if (pair? #{x\ 16060}#)
                         (cons (#{remodulate\ 16059}#
                                 (car #{x\ 16060}#)
                                 #{mod\ 16061}#)
                               (#{remodulate\ 16059}#
                                 (cdr #{x\ 16060}#)
                                 #{mod\ 16061}#))
                         (if (#{syntax-object?\ 12880}# #{x\ 16060}#)
                           (#{make-syntax-object\ 12878}#
                             (#{remodulate\ 16059}#
                               (#{syntax-object-expression\ 12882}#
                                 #{x\ 16060}#)
                               #{mod\ 16061}#)
                             (#{syntax-object-wrap\ 12884}# #{x\ 16060}#)
                             #{mod\ 16061}#)
                           (if (vector? #{x\ 16060}#)
                             (let ((#{n\ 16072}# (vector-length #{x\ 16060}#)))
                               (let ((#{v\ 16074}# (make-vector #{n\ 16072}#)))
                                 (letrec ((#{loop\ 16077}#
                                            (lambda (#{i\ 16078}#)
                                              (if (#{fx=\ 12821}#
                                                    #{i\ 16078}#
                                                    #{n\ 16072}#)
                                                (begin (if #f #f) #{v\ 16074}#)
                                                (begin
                                                  (vector-set!
                                                    #{v\ 16074}#
                                                    #{i\ 16078}#
                                                    (#{remodulate\ 16059}#
                                                      (vector-ref
                                                        #{x\ 16060}#
                                                        #{i\ 16078}#)
                                                      #{mod\ 16061}#))
                                                  (#{loop\ 16077}#
                                                    (#{fx+\ 12817}#
                                                      #{i\ 16078}#
                                                      1)))))))
                                   (#{loop\ 16077}# 0))))
                             #{x\ 16060}#))))))
            ((lambda (#{tmp\ 16082}#)
               ((lambda (#{tmp\ 16083}#)
                  (if (if #{tmp\ 16083}#
                        (apply (lambda (#{_\ 16087}#
                                        #{mod\ 16088}#
                                        #{exp\ 16089}#)
                                 (and-map #{id?\ 12916}# #{mod\ 16088}#))
                               #{tmp\ 16083}#)
                        #f)
                    (apply (lambda (#{_\ 16094}# #{mod\ 16095}# #{exp\ 16096}#)
                             (let ((#{mod\ 16098}#
                                     (syntax->datum
                                       (cons '#(syntax-object
                                                private
                                                ((top)
                                                 #(ribcage
                                                   #(_ mod exp)
                                                   #((top) (top) (top))
                                                   #("i16091"
                                                     "i16092"
                                                     "i16093"))
                                                 #(ribcage
                                                   (remodulate)
                                                   ((top))
                                                   ("i16058"))
                                                 #(ribcage
                                                   #(e r w)
                                                   #((top) (top) (top))
                                                   #("i16055"
                                                     "i16056"
                                                     "i16057"))
                                                 #(ribcage
                                                   (lambda-var-list
                                                     gen-var
                                                     strip
                                                     chi-lambda-case
                                                     lambda*-formals
                                                     chi-simple-lambda
                                                     lambda-formals
                                                     ellipsis?
                                                     chi-void
                                                     eval-local-transformer
                                                     chi-local-syntax
                                                     chi-body
                                                     chi-macro
                                                     chi-application
                                                     chi-expr
                                                     chi
                                                     chi-top
                                                     syntax-type
                                                     chi-when-list
                                                     chi-install-global
                                                     chi-top-sequence
                                                     chi-sequence
                                                     source-wrap
                                                     wrap
                                                     bound-id-member?
                                                     distinct-bound-ids?
                                                     valid-bound-ids?
                                                     bound-id=?
                                                     free-id=?
                                                     id-var-name
                                                     same-marks?
                                                     join-marks
                                                     join-wraps
                                                     smart-append
                                                     make-binding-wrap
                                                     extend-ribcage!
                                                     make-empty-ribcage
                                                     new-mark
                                                     anti-mark
                                                     the-anti-mark
                                                     top-marked?
                                                     top-wrap
                                                     empty-wrap
                                                     set-ribcage-labels!
                                                     set-ribcage-marks!
                                                     set-ribcage-symnames!
                                                     ribcage-labels
                                                     ribcage-marks
                                                     ribcage-symnames
                                                     ribcage?
                                                     make-ribcage
                                                     gen-labels
                                                     gen-label
                                                     make-rename
                                                     rename-marks
                                                     rename-new
                                                     rename-old
                                                     subst-rename?
                                                     wrap-subst
                                                     wrap-marks
                                                     make-wrap
                                                     id-sym-name&marks
                                                     id-sym-name
                                                     id?
                                                     nonsymbol-id?
                                                     global-extend
                                                     lookup
                                                     macros-only-env
                                                     extend-var-env
                                                     extend-env
                                                     null-env
                                                     binding-value
                                                     binding-type
                                                     make-binding
                                                     arg-check
                                                     source-annotation
                                                     no-source
                                                     set-syntax-object-module!
                                                     set-syntax-object-wrap!
                                                     set-syntax-object-expression!
                                                     syntax-object-module
                                                     syntax-object-wrap
                                                     syntax-object-expression
                                                     syntax-object?
                                                     make-syntax-object
                                                     build-lexical-var
                                                     build-letrec
                                                     build-named-let
                                                     build-let
                                                     build-sequence
                                                     build-data
                                                     build-primref
                                                     build-lambda-case
                                                     build-case-lambda
                                                     build-simple-lambda
                                                     build-global-definition
                                                     maybe-name-value!
                                                     build-global-assignment
                                                     build-global-reference
                                                     analyze-variable
                                                     build-lexical-assignment
                                                     build-lexical-reference
                                                     build-dynlet
                                                     build-conditional
                                                     build-application
                                                     build-void
                                                     decorate-source
                                                     get-global-definition-hook
                                                     put-global-definition-hook
                                                     gensym-hook
                                                     local-eval-hook
                                                     top-level-eval-hook
                                                     fx<
                                                     fx=
                                                     fx-
                                                     fx+
                                                     make-dynlet
                                                     make-letrec
                                                     make-let
                                                     make-lambda-case
                                                     make-lambda
                                                     make-sequence
                                                     make-application
                                                     make-conditional
                                                     make-toplevel-define
                                                     make-toplevel-set
                                                     make-toplevel-ref
                                                     make-module-set
                                                     make-module-ref
                                                     make-lexical-set
                                                     make-lexical-ref
                                                     make-primitive-ref
                                                     make-const
                                                     make-void
                                                     *mode*)
                                                   ((top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top)
                                                    (top))
                                                   ("i13030"
                                                    "i13028"
                                                    "i13026"
                                                    "i13024"
                                                    "i13022"
                                                    "i13020"
                                                    "i13018"
                                                    "i13016"
                                                    "i13014"
                                                    "i13012"
                                                    "i13010"
                                                    "i13008"
                                                    "i13006"
                                                    "i13004"
                                                    "i13002"
                                                    "i13000"
                                                    "i12998"
                                                    "i12996"
                                                    "i12994"
                                                    "i12992"
                                                    "i12990"
                                                    "i12988"
                                                    "i12986"
                                                    "i12984"
                                                    "i12982"
                                                    "i12980"
                                                    "i12978"
                                                    "i12976"
                                                    "i12974"
                                                    "i12972"
                                                    "i12970"
                                                    "i12968"
                                                    "i12966"
                                                    "i12964"
                                                    "i12962"
                                                    "i12960"
                                                    "i12959"
                                                    "i12958"
                                                    "i12956"
                                                    "i12955"
                                                    "i12954"
                                                    "i12953"
                                                    "i12952"
                                                    "i12950"
                                                    "i12948"
                                                    "i12946"
                                                    "i12944"
                                                    "i12942"
                                                    "i12940"
                                                    "i12938"
                                                    "i12936"
                                                    "i12933"
                                                    "i12931"
                                                    "i12930"
                                                    "i12929"
                                                    "i12928"
                                                    "i12927"
                                                    "i12926"
                                                    "i12924"
                                                    "i12922"
                                                    "i12920"
                                                    "i12918"
                                                    "i12917"
                                                    "i12915"
                                                    "i12913"
                                                    "i12911"
                                                    "i12909"
                                                    "i12907"
                                                    "i12905"
                                                    "i12903"
                                                    "i12902"
                                                    "i12900"
                                                    "i12898"
                                                    "i12897"
                                                    "i12896"
                                                    "i12894"
                                                    "i12893"
                                                    "i12891"
                                                    "i12889"
                                                    "i12887"
                                                    "i12885"
                                                    "i12883"
                                                    "i12881"
                                                    "i12879"
                                                    "i12877"
                                                    "i12875"
                                                    "i12873"
                                                    "i12871"
                                                    "i12869"
                                                    "i12867"
                                                    "i12865"
                                                    "i12863"
                                                    "i12861"
                                                    "i12859"
                                                    "i12857"
                                                    "i12855"
                                                    "i12853"
                                                    "i12851"
                                                    "i12849"
                                                    "i12847"
                                                    "i12845"
                                                    "i12843"
                                                    "i12841"
                                                    "i12839"
                                                    "i12837"
                                                    "i12835"
                                                    "i12833"
                                                    "i12831"
                                                    "i12829"
                                                    "i12828"
                                                    "i12826"
                                                    "i12824"
                                                    "i12822"
                                                    "i12820"
                                                    "i12818"
                                                    "i12816"
                                                    "i12814"
                                                    "i12812"
                                                    "i12810"
                                                    "i12808"
                                                    "i12806"
                                                    "i12804"
                                                    "i12802"
                                                    "i12800"
                                                    "i12798"
                                                    "i12796"
                                                    "i12794"
                                                    "i12792"
                                                    "i12790"
                                                    "i12788"
                                                    "i12786"
                                                    "i12784"
                                                    "i12782"
                                                    "i12780"
                                                    "i12777"))
                                                 #(ribcage
                                                   (define-structure
                                                     define-expansion-constructors
                                                     and-map*)
                                                   ((top) (top) (top))
                                                   ("i12629"
                                                    "i12628"
                                                    "i12626")))
                                                (hygiene guile))
                                             #{mod\ 16095}#))))
                               (values
                                 (#{remodulate\ 16059}#
                                   #{exp\ 16096}#
                                   #{mod\ 16098}#)
                                 #{r\ 16053}#
                                 #{w\ 16054}#
                                 (#{source-annotation\ 12895}# #{exp\ 16096}#)
                                 #{mod\ 16098}#)))
                           #{tmp\ 16083}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 16082}#)))
                ($sc-dispatch
                  #{tmp\ 16082}#
                  '(any each-any any))))
             #{e\ 16052}#))))
      (#{global-extend\ 12912}#
        'core
        'if
        (lambda (#{e\ 16100}#
                 #{r\ 16101}#
                 #{w\ 16102}#
                 #{s\ 16103}#
                 #{mod\ 16104}#)
          ((lambda (#{tmp\ 16110}#)
             ((lambda (#{tmp\ 16111}#)
                (if #{tmp\ 16111}#
                  (apply (lambda (#{_\ 16115}# #{test\ 16116}# #{then\ 16117}#)
                           (#{build-conditional\ 12840}#
                             #{s\ 16103}#
                             (#{chi\ 13001}#
                               #{test\ 16116}#
                               #{r\ 16101}#
                               #{w\ 16102}#
                               #{mod\ 16104}#)
                             (#{chi\ 13001}#
                               #{then\ 16117}#
                               #{r\ 16101}#
                               #{w\ 16102}#
                               #{mod\ 16104}#)
                             (#{build-void\ 12836}# #f)))
                         #{tmp\ 16111}#)
                  ((lambda (#{tmp\ 16119}#)
                     (if #{tmp\ 16119}#
                       (apply (lambda (#{_\ 16124}#
                                       #{test\ 16125}#
                                       #{then\ 16126}#
                                       #{else\ 16127}#)
                                (#{build-conditional\ 12840}#
                                  #{s\ 16103}#
                                  (#{chi\ 13001}#
                                    #{test\ 16125}#
                                    #{r\ 16101}#
                                    #{w\ 16102}#
                                    #{mod\ 16104}#)
                                  (#{chi\ 13001}#
                                    #{then\ 16126}#
                                    #{r\ 16101}#
                                    #{w\ 16102}#
                                    #{mod\ 16104}#)
                                  (#{chi\ 13001}#
                                    #{else\ 16127}#
                                    #{r\ 16101}#
                                    #{w\ 16102}#
                                    #{mod\ 16104}#)))
                              #{tmp\ 16119}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 16110}#)))
                   ($sc-dispatch
                     #{tmp\ 16110}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 16110}#
                '(any any any))))
           #{e\ 16100}#)))
      (#{global-extend\ 12912}#
        'core
        'with-fluids
        (lambda (#{e\ 16128}#
                 #{r\ 16129}#
                 #{w\ 16130}#
                 #{s\ 16131}#
                 #{mod\ 16132}#)
          ((lambda (#{tmp\ 16138}#)
             ((lambda (#{tmp\ 16139}#)
                (if #{tmp\ 16139}#
                  (apply (lambda (#{_\ 16145}#
                                  #{fluid\ 16146}#
                                  #{val\ 16147}#
                                  #{b\ 16148}#
                                  #{b*\ 16149}#)
                           (#{build-dynlet\ 12842}#
                             #{s\ 16131}#
                             (map (lambda (#{x\ 16150}#)
                                    (#{chi\ 13001}#
                                      #{x\ 16150}#
                                      #{r\ 16129}#
                                      #{w\ 16130}#
                                      #{mod\ 16132}#))
                                  #{fluid\ 16146}#)
                             (map (lambda (#{x\ 16153}#)
                                    (#{chi\ 13001}#
                                      #{x\ 16153}#
                                      #{r\ 16129}#
                                      #{w\ 16130}#
                                      #{mod\ 16132}#))
                                  #{val\ 16147}#)
                             (#{chi-body\ 13009}#
                               (cons #{b\ 16148}# #{b*\ 16149}#)
                               (#{source-wrap\ 12987}#
                                 #{e\ 16128}#
                                 #{w\ 16130}#
                                 #{s\ 16131}#
                                 #{mod\ 16132}#)
                               #{r\ 16129}#
                               #{w\ 16130}#
                               #{mod\ 16132}#)))
                         #{tmp\ 16139}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 16138}#)))
              ($sc-dispatch
                #{tmp\ 16138}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 16128}#)))
      (#{global-extend\ 12912}#
        'begin
        'begin
        '())
      (#{global-extend\ 12912}#
        'define
        'define
        '())
      (#{global-extend\ 12912}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 12912}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 12912}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 16164}#
                   (lambda (#{x\ 16165}#
                            #{keys\ 16166}#
                            #{clauses\ 16167}#
                            #{r\ 16168}#
                            #{mod\ 16169}#)
                     (if (null? #{clauses\ 16167}#)
                       (#{build-application\ 12838}#
                         #f
                         (#{build-primref\ 12864}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 12866}# #f #f)
                               (#{build-data\ 12866}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 16165}#))
                       ((lambda (#{tmp\ 16179}#)
                          ((lambda (#{tmp\ 16180}#)
                             (if #{tmp\ 16180}#
                               (apply (lambda (#{pat\ 16183}# #{exp\ 16184}#)
                                        (if (if (#{id?\ 12916}# #{pat\ 16183}#)
                                              (and-map
                                                (lambda (#{x\ 16187}#)
                                                  (not (#{free-id=?\ 12975}#
                                                         #{pat\ 16183}#
                                                         #{x\ 16187}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i16181"
                                                              "i16182"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i16170"
                                                              "i16171"
                                                              "i16172"
                                                              "i16173"
                                                              "i16174"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i16163"
                                                             "i16161"
                                                             "i16159"
                                                             "i16157"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              make-dynlet
                                                              make-letrec
                                                              make-let
                                                              make-lambda-case
                                                              make-lambda
                                                              make-sequence
                                                              make-application
                                                              make-conditional
                                                              make-toplevel-define
                                                              make-toplevel-set
                                                              make-toplevel-ref
                                                              make-module-set
                                                              make-module-ref
                                                              make-lexical-set
                                                              make-lexical-ref
                                                              make-primitive-ref
                                                              make-const
                                                              make-void
                                                              *mode*)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i13030"
                                                             "i13028"
                                                             "i13026"
                                                             "i13024"
                                                             "i13022"
                                                             "i13020"
                                                             "i13018"
                                                             "i13016"
                                                             "i13014"
                                                             "i13012"
                                                             "i13010"
                                                             "i13008"
                                                             "i13006"
                                                             "i13004"
                                                             "i13002"
                                                             "i13000"
                                                             "i12998"
                                                             "i12996"
                                                             "i12994"
                                                             "i12992"
                                                             "i12990"
                                                             "i12988"
                                                             "i12986"
                                                             "i12984"
                                                             "i12982"
                                                             "i12980"
                                                             "i12978"
                                                             "i12976"
                                                             "i12974"
                                                             "i12972"
                                                             "i12970"
                                                             "i12968"
                                                             "i12966"
                                                             "i12964"
                                                             "i12962"
                                                             "i12960"
                                                             "i12959"
                                                             "i12958"
                                                             "i12956"
                                                             "i12955"
                                                             "i12954"
                                                             "i12953"
                                                             "i12952"
                                                             "i12950"
                                                             "i12948"
                                                             "i12946"
                                                             "i12944"
                                                             "i12942"
                                                             "i12940"
                                                             "i12938"
                                                             "i12936"
                                                             "i12933"
                                                             "i12931"
                                                             "i12930"
                                                             "i12929"
                                                             "i12928"
                                                             "i12927"
                                                             "i12926"
                                                             "i12924"
                                                             "i12922"
                                                             "i12920"
                                                             "i12918"
                                                             "i12917"
                                                             "i12915"
                                                             "i12913"
                                                             "i12911"
                                                             "i12909"
                                                             "i12907"
                                                             "i12905"
                                                             "i12903"
                                                             "i12902"
                                                             "i12900"
                                                             "i12898"
                                                             "i12897"
                                                             "i12896"
                                                             "i12894"
                                                             "i12893"
                                                             "i12891"
                                                             "i12889"
                                                             "i12887"
                                                             "i12885"
                                                             "i12883"
                                                             "i12881"
                                                             "i12879"
                                                             "i12877"
                                                             "i12875"
                                                             "i12873"
                                                             "i12871"
                                                             "i12869"
                                                             "i12867"
                                                             "i12865"
                                                             "i12863"
                                                             "i12861"
                                                             "i12859"
                                                             "i12857"
                                                             "i12855"
                                                             "i12853"
                                                             "i12851"
                                                             "i12849"
                                                             "i12847"
                                                             "i12845"
                                                             "i12843"
                                                             "i12841"
                                                             "i12839"
                                                             "i12837"
                                                             "i12835"
                                                             "i12833"
                                                             "i12831"
                                                             "i12829"
                                                             "i12828"
                                                             "i12826"
                                                             "i12824"
                                                             "i12822"
                                                             "i12820"
                                                             "i12818"
                                                             "i12816"
                                                             "i12814"
                                                             "i12812"
                                                             "i12810"
                                                             "i12808"
                                                             "i12806"
                                                             "i12804"
                                                             "i12802"
                                                             "i12800"
                                                             "i12798"
                                                             "i12796"
                                                             "i12794"
                                                             "i12792"
                                                             "i12790"
                                                             "i12788"
                                                             "i12786"
                                                             "i12784"
                                                             "i12782"
                                                             "i12780"
                                                             "i12777"))
                                                          #(ribcage
                                                            (define-structure
                                                              define-expansion-constructors
                                                              and-map*)
                                                            ((top) (top) (top))
                                                            ("i12629"
                                                             "i12628"
                                                             "i12626")))
                                                         (hygiene guile))
                                                      #{keys\ 16166}#))
                                              #f)
                                          (let ((#{labels\ 16191}#
                                                  (list (#{gen-label\ 12932}#)))
                                                (#{var\ 16192}#
                                                  (#{gen-var\ 13029}#
                                                    #{pat\ 16183}#)))
                                            (#{build-application\ 12838}#
                                              #f
                                              (#{build-simple-lambda\ 12858}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 16183}#))
                                                #f
                                                (list #{var\ 16192}#)
                                                '()
                                                (#{chi\ 13001}#
                                                  #{exp\ 16184}#
                                                  (#{extend-env\ 12904}#
                                                    #{labels\ 16191}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 16192}#
                                                                      0)))
                                                    #{r\ 16168}#)
                                                  (#{make-binding-wrap\ 12963}#
                                                    (list #{pat\ 16183}#)
                                                    #{labels\ 16191}#
                                                    '(()))
                                                  #{mod\ 16169}#))
                                              (list #{x\ 16165}#)))
                                          (#{gen-clause\ 16162}#
                                            #{x\ 16165}#
                                            #{keys\ 16166}#
                                            (cdr #{clauses\ 16167}#)
                                            #{r\ 16168}#
                                            #{pat\ 16183}#
                                            #t
                                            #{exp\ 16184}#
                                            #{mod\ 16169}#)))
                                      #{tmp\ 16180}#)
                               ((lambda (#{tmp\ 16198}#)
                                  (if #{tmp\ 16198}#
                                    (apply (lambda (#{pat\ 16202}#
                                                    #{fender\ 16203}#
                                                    #{exp\ 16204}#)
                                             (#{gen-clause\ 16162}#
                                               #{x\ 16165}#
                                               #{keys\ 16166}#
                                               (cdr #{clauses\ 16167}#)
                                               #{r\ 16168}#
                                               #{pat\ 16202}#
                                               #{fender\ 16203}#
                                               #{exp\ 16204}#
                                               #{mod\ 16169}#))
                                           #{tmp\ 16198}#)
                                    ((lambda (#{_\ 16206}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 16167}#)))
                                     #{tmp\ 16179}#)))
                                ($sc-dispatch
                                  #{tmp\ 16179}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 16179}# (quote (any any)))))
                        (car #{clauses\ 16167}#)))))
                 (#{gen-clause\ 16162}#
                   (lambda (#{x\ 16207}#
                            #{keys\ 16208}#
                            #{clauses\ 16209}#
                            #{r\ 16210}#
                            #{pat\ 16211}#
                            #{fender\ 16212}#
                            #{exp\ 16213}#
                            #{mod\ 16214}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 16158}#
                           #{pat\ 16211}#
                           #{keys\ 16208}#))
                       (lambda (#{p\ 16223}# #{pvars\ 16224}#)
                         (if (not (#{distinct-bound-ids?\ 12981}#
                                    (map car #{pvars\ 16224}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 16211}#)
                           (if (not (and-map
                                      (lambda (#{x\ 16231}#)
                                        (not (#{ellipsis?\ 13017}#
                                               (car #{x\ 16231}#))))
                                      #{pvars\ 16224}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 16211}#)
                             (let ((#{y\ 16235}#
                                     (#{gen-var\ 13029}# (quote tmp))))
                               (#{build-application\ 12838}#
                                 #f
                                 (#{build-simple-lambda\ 12858}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 16235}#)
                                   '()
                                   (let ((#{y\ 16239}#
                                           (#{build-lexical-reference\ 12844}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 16235}#)))
                                     (#{build-conditional\ 12840}#
                                       #f
                                       ((lambda (#{tmp\ 16242}#)
                                          ((lambda (#{tmp\ 16243}#)
                                             (if #{tmp\ 16243}#
                                               (apply (lambda () #{y\ 16239}#)
                                                      #{tmp\ 16243}#)
                                               ((lambda (#{_\ 16245}#)
                                                  (#{build-conditional\ 12840}#
                                                    #f
                                                    #{y\ 16239}#
                                                    (#{build-dispatch-call\ 16160}#
                                                      #{pvars\ 16224}#
                                                      #{fender\ 16212}#
                                                      #{y\ 16239}#
                                                      #{r\ 16210}#
                                                      #{mod\ 16214}#)
                                                    (#{build-data\ 12866}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 16242}#)))
                                           ($sc-dispatch
                                             #{tmp\ 16242}#
                                             '#(atom #t))))
                                        #{fender\ 16212}#)
                                       (#{build-dispatch-call\ 16160}#
                                         #{pvars\ 16224}#
                                         #{exp\ 16213}#
                                         #{y\ 16239}#
                                         #{r\ 16210}#
                                         #{mod\ 16214}#)
                                       (#{gen-syntax-case\ 16164}#
                                         #{x\ 16207}#
                                         #{keys\ 16208}#
                                         #{clauses\ 16209}#
                                         #{r\ 16210}#
                                         #{mod\ 16214}#))))
                                 (list (if (eq? #{p\ 16223}# (quote any))
                                         (#{build-application\ 12838}#
                                           #f
                                           (#{build-primref\ 12864}#
                                             #f
                                             'list)
                                           (list #{x\ 16207}#))
                                         (#{build-application\ 12838}#
                                           #f
                                           (#{build-primref\ 12864}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 16207}#
                                                 (#{build-data\ 12866}#
                                                   #f
                                                   #{p\ 16223}#)))))))))))))
                 (#{build-dispatch-call\ 16160}#
                   (lambda (#{pvars\ 16253}#
                            #{exp\ 16254}#
                            #{y\ 16255}#
                            #{r\ 16256}#
                            #{mod\ 16257}#)
                     (let ((#{ids\ 16265}# (map car #{pvars\ 16253}#))
                           (#{levels\ 16266}# (map cdr #{pvars\ 16253}#)))
                       (let ((#{labels\ 16269}#
                               (#{gen-labels\ 12934}# #{ids\ 16265}#))
                             (#{new-vars\ 16270}#
                               (map #{gen-var\ 13029}# #{ids\ 16265}#)))
                         (#{build-application\ 12838}#
                           #f
                           (#{build-primref\ 12864}# #f (quote apply))
                           (list (#{build-simple-lambda\ 12858}#
                                   #f
                                   (map syntax->datum #{ids\ 16265}#)
                                   #f
                                   #{new-vars\ 16270}#
                                   '()
                                   (#{chi\ 13001}#
                                     #{exp\ 16254}#
                                     (#{extend-env\ 12904}#
                                       #{labels\ 16269}#
                                       (map (lambda (#{var\ 16274}#
                                                     #{level\ 16275}#)
                                              (cons 'syntax
                                                    (cons #{var\ 16274}#
                                                          #{level\ 16275}#)))
                                            #{new-vars\ 16270}#
                                            (map cdr #{pvars\ 16253}#))
                                       #{r\ 16256}#)
                                     (#{make-binding-wrap\ 12963}#
                                       #{ids\ 16265}#
                                       #{labels\ 16269}#
                                       '(()))
                                     #{mod\ 16257}#))
                                 #{y\ 16255}#))))))
                 (#{convert-pattern\ 16158}#
                   (lambda (#{pattern\ 16281}# #{keys\ 16282}#)
                     (letrec ((#{cvt\ 16288}#
                                (lambda (#{p\ 16289}#
                                         #{n\ 16290}#
                                         #{ids\ 16291}#)
                                  (if (#{id?\ 12916}# #{p\ 16289}#)
                                    (if (#{bound-id-member?\ 12983}#
                                          #{p\ 16289}#
                                          #{keys\ 16282}#)
                                      (values
                                        (vector (quote free-id) #{p\ 16289}#)
                                        #{ids\ 16291}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 16289}# #{n\ 16290}#)
                                              #{ids\ 16291}#)))
                                    ((lambda (#{tmp\ 16295}#)
                                       ((lambda (#{tmp\ 16296}#)
                                          (if (if #{tmp\ 16296}#
                                                (apply (lambda (#{x\ 16299}#
                                                                #{dots\ 16300}#)
                                                         (#{ellipsis?\ 13017}#
                                                           #{dots\ 16300}#))
                                                       #{tmp\ 16296}#)
                                                #f)
                                            (apply (lambda (#{x\ 16303}#
                                                            #{dots\ 16304}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 16288}#
                                                           #{x\ 16303}#
                                                           (#{fx+\ 12817}#
                                                             #{n\ 16290}#
                                                             1)
                                                           #{ids\ 16291}#))
                                                       (lambda (#{p\ 16305}#
                                                                #{ids\ 16306}#)
                                                         (values
                                                           (if (eq? #{p\ 16305}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 16305}#))
                                                           #{ids\ 16306}#))))
                                                   #{tmp\ 16296}#)
                                            ((lambda (#{tmp\ 16309}#)
                                               (if (if #{tmp\ 16309}#
                                                     (apply (lambda (#{x\ 16313}#
                                                                     #{dots\ 16314}#
                                                                     #{ys\ 16315}#)
                                                              (#{ellipsis?\ 13017}#
                                                                #{dots\ 16314}#))
                                                            #{tmp\ 16309}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 16319}#
                                                                 #{dots\ 16320}#
                                                                 #{ys\ 16321}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 16286}#
                                                                #{ys\ 16321}#
                                                                #{n\ 16290}#
                                                                #{ids\ 16291}#))
                                                            (lambda (#{ys\ 16323}#
                                                                     #{ids\ 16324}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 16288}#
                                                                    #{x\ 16319}#
                                                                    (+ #{n\ 16290}#
                                                                       1)
                                                                    #{ids\ 16324}#))
                                                                (lambda (#{x\ 16327}#
                                                                         #{ids\ 16328}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 16327}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 16323}#)
                                                                                        '(())))))
                                                                    #{ids\ 16328}#))))))
                                                        #{tmp\ 16309}#)
                                                 ((lambda (#{tmp\ 16332}#)
                                                    (if #{tmp\ 16332}#
                                                      (apply (lambda (#{x\ 16335}#
                                                                      #{y\ 16336}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 16288}#
                                                                     #{y\ 16336}#
                                                                     #{n\ 16290}#
                                                                     #{ids\ 16291}#))
                                                                 (lambda (#{y\ 16337}#
                                                                          #{ids\ 16338}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 16288}#
                                                                         #{x\ 16335}#
                                                                         #{n\ 16290}#
                                                                         #{ids\ 16338}#))
                                                                     (lambda (#{x\ 16341}#
                                                                              #{ids\ 16342}#)
                                                                       (values
                                                                         (cons #{x\ 16341}#
                                                                               #{y\ 16337}#)
                                                                         #{ids\ 16342}#))))))
                                                             #{tmp\ 16332}#)
                                                      ((lambda (#{tmp\ 16345}#)
                                                         (if #{tmp\ 16345}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 16291}#))
                                                                  #{tmp\ 16345}#)
                                                           ((lambda (#{tmp\ 16346}#)
                                                              (if #{tmp\ 16346}#
                                                                (apply (lambda (#{x\ 16348}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 16288}#
                                                                               #{x\ 16348}#
                                                                               #{n\ 16290}#
                                                                               #{ids\ 16291}#))
                                                                           (lambda (#{p\ 16350}#
                                                                                    #{ids\ 16351}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 16350}#)
                                                                               #{ids\ 16351}#))))
                                                                       #{tmp\ 16346}#)
                                                                ((lambda (#{x\ 16355}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 13027}#
                                                                         #{p\ 16289}#
                                                                         '(())))
                                                                     #{ids\ 16291}#))
                                                                 #{tmp\ 16295}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 16295}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 16295}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 16295}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 16295}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 16295}#
                                          '(any any))))
                                     #{p\ 16289}#))))
                              (#{cvt*\ 16286}#
                                (lambda (#{p*\ 16357}#
                                         #{n\ 16358}#
                                         #{ids\ 16359}#)
                                  (if (null? #{p*\ 16357}#)
                                    (values (quote ()) #{ids\ 16359}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 16286}#
                                          (cdr #{p*\ 16357}#)
                                          #{n\ 16358}#
                                          #{ids\ 16359}#))
                                      (lambda (#{y\ 16363}# #{ids\ 16364}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 16288}#
                                              (car #{p*\ 16357}#)
                                              #{n\ 16358}#
                                              #{ids\ 16364}#))
                                          (lambda (#{x\ 16367}# #{ids\ 16368}#)
                                            (values
                                              (cons #{x\ 16367}# #{y\ 16363}#)
                                              #{ids\ 16368}#)))))))))
                       (#{cvt\ 16288}# #{pattern\ 16281}# 0 (quote ()))))))
          (lambda (#{e\ 16371}#
                   #{r\ 16372}#
                   #{w\ 16373}#
                   #{s\ 16374}#
                   #{mod\ 16375}#)
            (let ((#{e\ 16382}#
                    (#{source-wrap\ 12987}#
                      #{e\ 16371}#
                      #{w\ 16373}#
                      #{s\ 16374}#
                      #{mod\ 16375}#)))
              ((lambda (#{tmp\ 16383}#)
                 ((lambda (#{tmp\ 16384}#)
                    (if #{tmp\ 16384}#
                      (apply (lambda (#{_\ 16389}#
                                      #{val\ 16390}#
                                      #{key\ 16391}#
                                      #{m\ 16392}#)
                               (if (and-map
                                     (lambda (#{x\ 16393}#)
                                       (if (#{id?\ 12916}# #{x\ 16393}#)
                                         (not (#{ellipsis?\ 13017}#
                                                #{x\ 16393}#))
                                         #f))
                                     #{key\ 16391}#)
                                 (let ((#{x\ 16399}#
                                         (#{gen-var\ 13029}# (quote tmp))))
                                   (#{build-application\ 12838}#
                                     #{s\ 16374}#
                                     (#{build-simple-lambda\ 12858}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 16399}#)
                                       '()
                                       (#{gen-syntax-case\ 16164}#
                                         (#{build-lexical-reference\ 12844}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 16399}#)
                                         #{key\ 16391}#
                                         #{m\ 16392}#
                                         #{r\ 16372}#
                                         #{mod\ 16375}#))
                                     (list (#{chi\ 13001}#
                                             #{val\ 16390}#
                                             #{r\ 16372}#
                                             '(())
                                             #{mod\ 16375}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 16382}#)))
                             #{tmp\ 16384}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 16383}#)))
                  ($sc-dispatch
                    #{tmp\ 16383}#
                    '(any any each-any . each-any))))
               #{e\ 16382}#)))))
      (set! macroexpand
        (lambda (#{x\ 16405}# . #{rest\ 16406}#)
          (let ((#{m\ 16412}#
                  (if (null? #{rest\ 16406}#)
                    'e
                    (car #{rest\ 16406}#)))
                (#{esew\ 16413}#
                  (if (let ((#{t\ 16417}# (null? #{rest\ 16406}#)))
                        (if #{t\ 16417}#
                          #{t\ 16417}#
                          (null? (cdr #{rest\ 16406}#))))
                    '(eval)
                    (cadr #{rest\ 16406}#)))
                (#{mod\ 16414}#
                  (cons 'hygiene
                        (module-name (current-module)))))
            (with-fluids
              ((#{*mode*\ 12778}# #{m\ 16412}#))
              (#{chi-top\ 12999}#
                #{x\ 16405}#
                '()
                '((top))
                #{m\ 16412}#
                #{esew\ 16413}#
                #{mod\ 16414}#)))))
      (set! identifier?
        (lambda (#{x\ 16421}#)
          (#{nonsymbol-id?\ 12914}# #{x\ 16421}#)))
      (set! datum->syntax
        (lambda (#{id\ 16423}# #{datum\ 16424}#)
          (#{make-syntax-object\ 12878}#
            #{datum\ 16424}#
            (#{syntax-object-wrap\ 12884}# #{id\ 16423}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 16427}#)
          (#{strip\ 13027}# #{x\ 16427}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 16430}#)
          (begin
            (let ((#{x\ 16434}# #{ls\ 16430}#))
              (if (not (list? #{x\ 16434}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 16434}#)))
            (map (lambda (#{x\ 16435}#)
                   (#{wrap\ 12985}# (gensym) (quote ((top))) #f))
                 #{ls\ 16430}#))))
      (set! free-identifier=?
        (lambda (#{x\ 16439}# #{y\ 16440}#)
          (begin
            (let ((#{x\ 16445}# #{x\ 16439}#))
              (if (not (#{nonsymbol-id?\ 12914}# #{x\ 16445}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 16445}#)))
            (let ((#{x\ 16448}# #{y\ 16440}#))
              (if (not (#{nonsymbol-id?\ 12914}# #{x\ 16448}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 16448}#)))
            (#{free-id=?\ 12975}# #{x\ 16439}# #{y\ 16440}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 16449}# #{y\ 16450}#)
          (begin
            (let ((#{x\ 16455}# #{x\ 16449}#))
              (if (not (#{nonsymbol-id?\ 12914}# #{x\ 16455}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 16455}#)))
            (let ((#{x\ 16458}# #{y\ 16450}#))
              (if (not (#{nonsymbol-id?\ 12914}# #{x\ 16458}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 16458}#)))
            (#{bound-id=?\ 12977}# #{x\ 16449}# #{y\ 16450}#))))
      (set! syntax-violation
        (lambda (#{who\ 16459}#
                 #{message\ 16460}#
                 #{form\ 16461}#
                 .
                 #{subform\ 16462}#)
          (begin
            (let ((#{x\ 16469}# #{who\ 16459}#))
              (if (not ((lambda (#{x\ 16470}#)
                          (let ((#{t\ 16474}# (not #{x\ 16470}#)))
                            (if #{t\ 16474}#
                              #{t\ 16474}#
                              (let ((#{t\ 16477}# (string? #{x\ 16470}#)))
                                (if #{t\ 16477}#
                                  #{t\ 16477}#
                                  (symbol? #{x\ 16470}#))))))
                        #{x\ 16469}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 16469}#)))
            (let ((#{x\ 16481}# #{message\ 16460}#))
              (if (not (string? #{x\ 16481}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 16481}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 16459}# "~a: " "")
                "~a "
                (if (null? #{subform\ 16462}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 16483}#
                      (cons #{message\ 16460}#
                            (map (lambda (#{x\ 16484}#)
                                   (#{strip\ 13027}#
                                     #{x\ 16484}#
                                     '(())))
                                 (append
                                   #{subform\ 16462}#
                                   (list #{form\ 16461}#))))))
                (if #{who\ 16459}#
                  (cons #{who\ 16459}# #{tail\ 16483}#)
                  #{tail\ 16483}#))
              #f))))
      (letrec ((#{match\ 16500}#
                 (lambda (#{e\ 16501}#
                          #{p\ 16502}#
                          #{w\ 16503}#
                          #{r\ 16504}#
                          #{mod\ 16505}#)
                   (if (not #{r\ 16504}#)
                     #f
                     (if (eq? #{p\ 16502}# (quote any))
                       (cons (#{wrap\ 12985}#
                               #{e\ 16501}#
                               #{w\ 16503}#
                               #{mod\ 16505}#)
                             #{r\ 16504}#)
                       (if (#{syntax-object?\ 12880}# #{e\ 16501}#)
                         (#{match*\ 16498}#
                           (#{syntax-object-expression\ 12882}#
                             #{e\ 16501}#)
                           #{p\ 16502}#
                           (#{join-wraps\ 12967}#
                             #{w\ 16503}#
                             (#{syntax-object-wrap\ 12884}# #{e\ 16501}#))
                           #{r\ 16504}#
                           (#{syntax-object-module\ 12886}# #{e\ 16501}#))
                         (#{match*\ 16498}#
                           #{e\ 16501}#
                           #{p\ 16502}#
                           #{w\ 16503}#
                           #{r\ 16504}#
                           #{mod\ 16505}#))))))
               (#{match*\ 16498}#
                 (lambda (#{e\ 16518}#
                          #{p\ 16519}#
                          #{w\ 16520}#
                          #{r\ 16521}#
                          #{mod\ 16522}#)
                   (if (null? #{p\ 16519}#)
                     (if (null? #{e\ 16518}#) #{r\ 16521}# #f)
                     (if (pair? #{p\ 16519}#)
                       (if (pair? #{e\ 16518}#)
                         (#{match\ 16500}#
                           (car #{e\ 16518}#)
                           (car #{p\ 16519}#)
                           #{w\ 16520}#
                           (#{match\ 16500}#
                             (cdr #{e\ 16518}#)
                             (cdr #{p\ 16519}#)
                             #{w\ 16520}#
                             #{r\ 16521}#
                             #{mod\ 16522}#)
                           #{mod\ 16522}#)
                         #f)
                       (if (eq? #{p\ 16519}# (quote each-any))
                         (let ((#{l\ 16539}#
                                 (#{match-each-any\ 16492}#
                                   #{e\ 16518}#
                                   #{w\ 16520}#
                                   #{mod\ 16522}#)))
                           (if #{l\ 16539}#
                             (cons #{l\ 16539}# #{r\ 16521}#)
                             #f))
                         (let ((#{atom-key\ 16545}#
                                 (vector-ref #{p\ 16519}# 0)))
                           (if (memv #{atom-key\ 16545}# (quote (each)))
                             (if (null? #{e\ 16518}#)
                               (#{match-empty\ 16494}#
                                 (vector-ref #{p\ 16519}# 1)
                                 #{r\ 16521}#)
                               (let ((#{l\ 16548}#
                                       (#{match-each\ 16488}#
                                         #{e\ 16518}#
                                         (vector-ref #{p\ 16519}# 1)
                                         #{w\ 16520}#
                                         #{mod\ 16522}#)))
                                 (if #{l\ 16548}#
                                   (letrec ((#{collect\ 16553}#
                                              (lambda (#{l\ 16554}#)
                                                (if (null? (car #{l\ 16554}#))
                                                  #{r\ 16521}#
                                                  (cons (map car #{l\ 16554}#)
                                                        (#{collect\ 16553}#
                                                          (map cdr
                                                               #{l\ 16554}#)))))))
                                     (#{collect\ 16553}# #{l\ 16548}#))
                                   #f)))
                             (if (memv #{atom-key\ 16545}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 16490}#
                                     #{e\ 16518}#
                                     (vector-ref #{p\ 16519}# 1)
                                     (vector-ref #{p\ 16519}# 2)
                                     (vector-ref #{p\ 16519}# 3)
                                     #{w\ 16520}#
                                     #{r\ 16521}#
                                     #{mod\ 16522}#))
                                 (lambda (#{xr*\ 16556}#
                                          #{y-pat\ 16557}#
                                          #{r\ 16558}#)
                                   (if #{r\ 16558}#
                                     (if (null? #{y-pat\ 16557}#)
                                       (if (null? #{xr*\ 16556}#)
                                         (#{match-empty\ 16494}#
                                           (vector-ref #{p\ 16519}# 1)
                                           #{r\ 16558}#)
                                         (#{combine\ 16496}#
                                           #{xr*\ 16556}#
                                           #{r\ 16558}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 16545}# (quote (free-id)))
                                 (if (#{id?\ 12916}# #{e\ 16518}#)
                                   (if (#{free-id=?\ 12975}#
                                         (#{wrap\ 12985}#
                                           #{e\ 16518}#
                                           #{w\ 16520}#
                                           #{mod\ 16522}#)
                                         (vector-ref #{p\ 16519}# 1))
                                     #{r\ 16521}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 16545}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 16519}# 1)
                                         (#{strip\ 13027}#
                                           #{e\ 16518}#
                                           #{w\ 16520}#))
                                     #{r\ 16521}#
                                     #f)
                                   (if (memv #{atom-key\ 16545}#
                                             '(vector))
                                     (if (vector? #{e\ 16518}#)
                                       (#{match\ 16500}#
                                         (vector->list #{e\ 16518}#)
                                         (vector-ref #{p\ 16519}# 1)
                                         #{w\ 16520}#
                                         #{r\ 16521}#
                                         #{mod\ 16522}#)
                                       #f))))))))))))
               (#{combine\ 16496}#
                 (lambda (#{r*\ 16575}# #{r\ 16576}#)
                   (if (null? (car #{r*\ 16575}#))
                     #{r\ 16576}#
                     (cons (map car #{r*\ 16575}#)
                           (#{combine\ 16496}#
                             (map cdr #{r*\ 16575}#)
                             #{r\ 16576}#)))))
               (#{match-empty\ 16494}#
                 (lambda (#{p\ 16579}# #{r\ 16580}#)
                   (if (null? #{p\ 16579}#)
                     #{r\ 16580}#
                     (if (eq? #{p\ 16579}# (quote any))
                       (cons (quote ()) #{r\ 16580}#)
                       (if (pair? #{p\ 16579}#)
                         (#{match-empty\ 16494}#
                           (car #{p\ 16579}#)
                           (#{match-empty\ 16494}#
                             (cdr #{p\ 16579}#)
                             #{r\ 16580}#))
                         (if (eq? #{p\ 16579}# (quote each-any))
                           (cons (quote ()) #{r\ 16580}#)
                           (let ((#{atom-key\ 16594}#
                                   (vector-ref #{p\ 16579}# 0)))
                             (if (memv #{atom-key\ 16594}# (quote (each)))
                               (#{match-empty\ 16494}#
                                 (vector-ref #{p\ 16579}# 1)
                                 #{r\ 16580}#)
                               (if (memv #{atom-key\ 16594}# (quote (each+)))
                                 (#{match-empty\ 16494}#
                                   (vector-ref #{p\ 16579}# 1)
                                   (#{match-empty\ 16494}#
                                     (reverse (vector-ref #{p\ 16579}# 2))
                                     (#{match-empty\ 16494}#
                                       (vector-ref #{p\ 16579}# 3)
                                       #{r\ 16580}#)))
                                 (if (memv #{atom-key\ 16594}#
                                           '(free-id atom))
                                   #{r\ 16580}#
                                   (if (memv #{atom-key\ 16594}#
                                             '(vector))
                                     (#{match-empty\ 16494}#
                                       (vector-ref #{p\ 16579}# 1)
                                       #{r\ 16580}#))))))))))))
               (#{match-each-any\ 16492}#
                 (lambda (#{e\ 16599}# #{w\ 16600}# #{mod\ 16601}#)
                   (if (pair? #{e\ 16599}#)
                     (let ((#{l\ 16608}#
                             (#{match-each-any\ 16492}#
                               (cdr #{e\ 16599}#)
                               #{w\ 16600}#
                               #{mod\ 16601}#)))
                       (if #{l\ 16608}#
                         (cons (#{wrap\ 12985}#
                                 (car #{e\ 16599}#)
                                 #{w\ 16600}#
                                 #{mod\ 16601}#)
                               #{l\ 16608}#)
                         #f))
                     (if (null? #{e\ 16599}#)
                       '()
                       (if (#{syntax-object?\ 12880}# #{e\ 16599}#)
                         (#{match-each-any\ 16492}#
                           (#{syntax-object-expression\ 12882}#
                             #{e\ 16599}#)
                           (#{join-wraps\ 12967}#
                             #{w\ 16600}#
                             (#{syntax-object-wrap\ 12884}# #{e\ 16599}#))
                           #{mod\ 16601}#)
                         #f)))))
               (#{match-each+\ 16490}#
                 (lambda (#{e\ 16616}#
                          #{x-pat\ 16617}#
                          #{y-pat\ 16618}#
                          #{z-pat\ 16619}#
                          #{w\ 16620}#
                          #{r\ 16621}#
                          #{mod\ 16622}#)
                   (letrec ((#{f\ 16633}#
                              (lambda (#{e\ 16634}# #{w\ 16635}#)
                                (if (pair? #{e\ 16634}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 16633}#
                                        (cdr #{e\ 16634}#)
                                        #{w\ 16635}#))
                                    (lambda (#{xr*\ 16638}#
                                             #{y-pat\ 16639}#
                                             #{r\ 16640}#)
                                      (if #{r\ 16640}#
                                        (if (null? #{y-pat\ 16639}#)
                                          (let ((#{xr\ 16645}#
                                                  (#{match\ 16500}#
                                                    (car #{e\ 16634}#)
                                                    #{x-pat\ 16617}#
                                                    #{w\ 16635}#
                                                    '()
                                                    #{mod\ 16622}#)))
                                            (if #{xr\ 16645}#
                                              (values
                                                (cons #{xr\ 16645}#
                                                      #{xr*\ 16638}#)
                                                #{y-pat\ 16639}#
                                                #{r\ 16640}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 16639}#)
                                            (#{match\ 16500}#
                                              (car #{e\ 16634}#)
                                              (car #{y-pat\ 16639}#)
                                              #{w\ 16635}#
                                              #{r\ 16640}#
                                              #{mod\ 16622}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 12880}# #{e\ 16634}#)
                                    (#{f\ 16633}#
                                      (#{syntax-object-expression\ 12882}#
                                        #{e\ 16634}#)
                                      (#{join-wraps\ 12967}#
                                        #{w\ 16635}#
                                        #{e\ 16634}#))
                                    (values
                                      '()
                                      #{y-pat\ 16618}#
                                      (#{match\ 16500}#
                                        #{e\ 16634}#
                                        #{z-pat\ 16619}#
                                        #{w\ 16635}#
                                        #{r\ 16621}#
                                        #{mod\ 16622}#)))))))
                     (#{f\ 16633}# #{e\ 16616}# #{w\ 16620}#))))
               (#{match-each\ 16488}#
                 (lambda (#{e\ 16649}#
                          #{p\ 16650}#
                          #{w\ 16651}#
                          #{mod\ 16652}#)
                   (if (pair? #{e\ 16649}#)
                     (let ((#{first\ 16660}#
                             (#{match\ 16500}#
                               (car #{e\ 16649}#)
                               #{p\ 16650}#
                               #{w\ 16651}#
                               '()
                               #{mod\ 16652}#)))
                       (if #{first\ 16660}#
                         (let ((#{rest\ 16664}#
                                 (#{match-each\ 16488}#
                                   (cdr #{e\ 16649}#)
                                   #{p\ 16650}#
                                   #{w\ 16651}#
                                   #{mod\ 16652}#)))
                           (if #{rest\ 16664}#
                             (cons #{first\ 16660}# #{rest\ 16664}#)
                             #f))
                         #f))
                     (if (null? #{e\ 16649}#)
                       '()
                       (if (#{syntax-object?\ 12880}# #{e\ 16649}#)
                         (#{match-each\ 16488}#
                           (#{syntax-object-expression\ 12882}#
                             #{e\ 16649}#)
                           #{p\ 16650}#
                           (#{join-wraps\ 12967}#
                             #{w\ 16651}#
                             (#{syntax-object-wrap\ 12884}# #{e\ 16649}#))
                           (#{syntax-object-module\ 12886}# #{e\ 16649}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 16672}# #{p\ 16673}#)
            (if (eq? #{p\ 16673}# (quote any))
              (list #{e\ 16672}#)
              (if (#{syntax-object?\ 12880}# #{e\ 16672}#)
                (#{match*\ 16498}#
                  (#{syntax-object-expression\ 12882}#
                    #{e\ 16672}#)
                  #{p\ 16673}#
                  (#{syntax-object-wrap\ 12884}# #{e\ 16672}#)
                  '()
                  (#{syntax-object-module\ 12886}# #{e\ 16672}#))
                (#{match*\ 16498}#
                  #{e\ 16672}#
                  #{p\ 16673}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 16682}#)
            ((lambda (#{tmp\ 16684}#)
               ((lambda (#{tmp\ 16685}#)
                  (if #{tmp\ 16685}#
                    (apply (lambda (#{_\ 16689}# #{e1\ 16690}# #{e2\ 16691}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i16686" "i16687" "i16688"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i16683")))
                                      (hygiene guile))
                                   (cons #{e1\ 16690}# #{e2\ 16691}#)))
                           #{tmp\ 16685}#)
                    ((lambda (#{tmp\ 16693}#)
                       (if #{tmp\ 16693}#
                         (apply (lambda (#{_\ 16699}#
                                         #{out\ 16700}#
                                         #{in\ 16701}#
                                         #{e1\ 16702}#
                                         #{e2\ 16703}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i16694"
                                                "i16695"
                                                "i16696"
                                                "i16697"
                                                "i16698"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i16683")))
                                           (hygiene guile))
                                        #{in\ 16701}#
                                        '()
                                        (list #{out\ 16700}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i16694"
                                                            "i16695"
                                                            "i16696"
                                                            "i16697"
                                                            "i16698"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i16683")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 16702}#
                                                          #{e2\ 16703}#)))))
                                #{tmp\ 16693}#)
                         ((lambda (#{tmp\ 16705}#)
                            (if #{tmp\ 16705}#
                              (apply (lambda (#{_\ 16711}#
                                              #{out\ 16712}#
                                              #{in\ 16713}#
                                              #{e1\ 16714}#
                                              #{e2\ 16715}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i16706"
                                                     "i16707"
                                                     "i16708"
                                                     "i16709"
                                                     "i16710"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i16683")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i16706"
                                                           "i16707"
                                                           "i16708"
                                                           "i16709"
                                                           "i16710"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i16683")))
                                                      (hygiene guile))
                                                   #{in\ 16713}#)
                                             '()
                                             (list #{out\ 16712}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i16706"
                                                                 "i16707"
                                                                 "i16708"
                                                                 "i16709"
                                                                 "i16710"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i16683")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 16714}#
                                                               #{e2\ 16715}#)))))
                                     #{tmp\ 16705}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 16684}#)))
                          ($sc-dispatch
                            #{tmp\ 16684}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 16684}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 16684}#
                  '(any () any . each-any))))
             #{x\ 16682}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 16719}#)
            ((lambda (#{tmp\ 16721}#)
               ((lambda (#{tmp\ 16722}#)
                  (if #{tmp\ 16722}#
                    (apply (lambda (#{_\ 16728}#
                                    #{k\ 16729}#
                                    #{keyword\ 16730}#
                                    #{pattern\ 16731}#
                                    #{template\ 16732}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i16723"
                                           "i16724"
                                           "i16725"
                                           "i16726"
                                           "i16727"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i16720")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i16723"
                                            "i16724"
                                            "i16725"
                                            "i16726"
                                            "i16727"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i16720")))
                                       (hygiene guile)))
                                   (vector
                                     '(#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i16723"
                                              "i16724"
                                              "i16725"
                                              "i16726"
                                              "i16727"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i16720")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         syntax-rules
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i16723"
                                              "i16724"
                                              "i16725"
                                              "i16726"
                                              "i16727"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i16720")))
                                         (hygiene guile)))
                                     (cons '#(syntax-object
                                              patterns
                                              ((top)
                                               #(ribcage
                                                 #(_
                                                   k
                                                   keyword
                                                   pattern
                                                   template)
                                                 #((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                 #("i16723"
                                                   "i16724"
                                                   "i16725"
                                                   "i16726"
                                                   "i16727"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i16720")))
                                              (hygiene guile))
                                           #{pattern\ 16731}#))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i16723"
                                                 "i16724"
                                                 "i16725"
                                                 "i16726"
                                                 "i16727"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i16720")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i16723"
                                                       "i16724"
                                                       "i16725"
                                                       "i16726"
                                                       "i16727"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i16720")))
                                                  (hygiene guile))
                                               (cons #{k\ 16729}#
                                                     (map (lambda (#{tmp\ 16736}#
                                                                   #{tmp\ 16735}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i16723"
                                                                                "i16724"
                                                                                "i16725"
                                                                                "i16726"
                                                                                "i16727"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i16720")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 16735}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i16723"
                                                                                "i16724"
                                                                                "i16725"
                                                                                "i16726"
                                                                                "i16727"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i16720")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 16736}#)))
                                                          #{template\ 16732}#
                                                          #{pattern\ 16731}#))))))
                           #{tmp\ 16722}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 16721}#)))
                ($sc-dispatch
                  #{tmp\ 16721}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 16719}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 16737}#)
            ((lambda (#{tmp\ 16739}#)
               ((lambda (#{tmp\ 16740}#)
                  (if (if #{tmp\ 16740}#
                        (apply (lambda (#{let*\ 16746}#
                                        #{x\ 16747}#
                                        #{v\ 16748}#
                                        #{e1\ 16749}#
                                        #{e2\ 16750}#)
                                 (and-map identifier? #{x\ 16747}#))
                               #{tmp\ 16740}#)
                        #f)
                    (apply (lambda (#{let*\ 16757}#
                                    #{x\ 16758}#
                                    #{v\ 16759}#
                                    #{e1\ 16760}#
                                    #{e2\ 16761}#)
                             (letrec ((#{f\ 16764}#
                                        (lambda (#{bindings\ 16765}#)
                                          (if (null? #{bindings\ 16765}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i16762" "i16763"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i16752"
                                                          "i16753"
                                                          "i16754"
                                                          "i16755"
                                                          "i16756"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i16738")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 16760}#
                                                              #{e2\ 16761}#)))
                                            ((lambda (#{tmp\ 16770}#)
                                               ((lambda (#{tmp\ 16771}#)
                                                  (if #{tmp\ 16771}#
                                                    (apply (lambda (#{body\ 16774}#
                                                                    #{binding\ 16775}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i16772"
                                                                           "i16773"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i16762"
                                                                           "i16763"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i16752"
                                                                           "i16753"
                                                                           "i16754"
                                                                           "i16755"
                                                                           "i16756"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i16738")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 16775}#)
                                                                   #{body\ 16774}#))
                                                           #{tmp\ 16771}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 16770}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 16770}#
                                                  '(any any))))
                                             (list (#{f\ 16764}#
                                                     (cdr #{bindings\ 16765}#))
                                                   (car #{bindings\ 16765}#)))))))
                               (#{f\ 16764}#
                                 (map list #{x\ 16758}# #{v\ 16759}#))))
                           #{tmp\ 16740}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 16739}#)))
                ($sc-dispatch
                  #{tmp\ 16739}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 16737}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 16776}#)
            ((lambda (#{tmp\ 16778}#)
               ((lambda (#{tmp\ 16779}#)
                  (if #{tmp\ 16779}#
                    (apply (lambda (#{_\ 16787}#
                                    #{var\ 16788}#
                                    #{init\ 16789}#
                                    #{step\ 16790}#
                                    #{e0\ 16791}#
                                    #{e1\ 16792}#
                                    #{c\ 16793}#)
                             ((lambda (#{tmp\ 16795}#)
                                ((lambda (#{tmp\ 16796}#)
                                   (if #{tmp\ 16796}#
                                     (apply (lambda (#{step\ 16798}#)
                                              ((lambda (#{tmp\ 16799}#)
                                                 ((lambda (#{tmp\ 16800}#)
                                                    (if #{tmp\ 16800}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i16797"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i16780"
                                                                             "i16781"
                                                                             "i16782"
                                                                             "i16783"
                                                                             "i16784"
                                                                             "i16785"
                                                                             "i16786"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i16777")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i16797"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i16780"
                                                                             "i16781"
                                                                             "i16782"
                                                                             "i16783"
                                                                             "i16784"
                                                                             "i16785"
                                                                             "i16786"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i16777")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 16788}#
                                                                          #{init\ 16789}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i16797"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i16780"
                                                                                   "i16781"
                                                                                   "i16782"
                                                                                   "i16783"
                                                                                   "i16784"
                                                                                   "i16785"
                                                                                   "i16786"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i16777")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i16797"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i16780"
                                                                                         "i16781"
                                                                                         "i16782"
                                                                                         "i16783"
                                                                                         "i16784"
                                                                                         "i16785"
                                                                                         "i16786"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i16777")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 16791}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i16797"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i16780"
                                                                                         "i16781"
                                                                                         "i16782"
                                                                                         "i16783"
                                                                                         "i16784"
                                                                                         "i16785"
                                                                                         "i16786"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i16777")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 16793}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i16797"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i16780"
                                                                                                       "i16781"
                                                                                                       "i16782"
                                                                                                       "i16783"
                                                                                                       "i16784"
                                                                                                       "i16785"
                                                                                                       "i16786"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i16777")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 16798}#)))))))
                                                             #{tmp\ 16800}#)
                                                      ((lambda (#{tmp\ 16805}#)
                                                         (if #{tmp\ 16805}#
                                                           (apply (lambda (#{e1\ 16808}#
                                                                           #{e2\ 16809}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i16806"
                                                                                  "i16807"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i16797"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i16780"
                                                                                  "i16781"
                                                                                  "i16782"
                                                                                  "i16783"
                                                                                  "i16784"
                                                                                  "i16785"
                                                                                  "i16786"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i16777")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i16806"
                                                                                  "i16807"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i16797"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i16780"
                                                                                  "i16781"
                                                                                  "i16782"
                                                                                  "i16783"
                                                                                  "i16784"
                                                                                  "i16785"
                                                                                  "i16786"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i16777")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 16788}#
                                                                               #{init\ 16789}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i16806"
                                                                                        "i16807"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i16797"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i16780"
                                                                                        "i16781"
                                                                                        "i16782"
                                                                                        "i16783"
                                                                                        "i16784"
                                                                                        "i16785"
                                                                                        "i16786"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i16777")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 16791}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i16806"
                                                                                              "i16807"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i16797"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i16780"
                                                                                              "i16781"
                                                                                              "i16782"
                                                                                              "i16783"
                                                                                              "i16784"
                                                                                              "i16785"
                                                                                              "i16786"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i16777")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 16808}#
                                                                                            #{e2\ 16809}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i16806"
                                                                                              "i16807"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i16797"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i16780"
                                                                                              "i16781"
                                                                                              "i16782"
                                                                                              "i16783"
                                                                                              "i16784"
                                                                                              "i16785"
                                                                                              "i16786"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i16777")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 16793}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i16806"
                                                                                                            "i16807"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i16797"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i16780"
                                                                                                            "i16781"
                                                                                                            "i16782"
                                                                                                            "i16783"
                                                                                                            "i16784"
                                                                                                            "i16785"
                                                                                                            "i16786"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i16777")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 16798}#)))))))
                                                                  #{tmp\ 16805}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 16799}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 16799}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 16799}#
                                                    '())))
                                               #{e1\ 16792}#))
                                            #{tmp\ 16796}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 16795}#)))
                                 ($sc-dispatch
                                   #{tmp\ 16795}#
                                   'each-any)))
                              (map (lambda (#{v\ 16816}# #{s\ 16817}#)
                                     ((lambda (#{tmp\ 16820}#)
                                        ((lambda (#{tmp\ 16821}#)
                                           (if #{tmp\ 16821}#
                                             (apply (lambda () #{v\ 16816}#)
                                                    #{tmp\ 16821}#)
                                             ((lambda (#{tmp\ 16822}#)
                                                (if #{tmp\ 16822}#
                                                  (apply (lambda (#{e\ 16824}#)
                                                           #{e\ 16824}#)
                                                         #{tmp\ 16822}#)
                                                  ((lambda (#{_\ 16826}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 16776}#
                                                       #{s\ 16817}#))
                                                   #{tmp\ 16820}#)))
                                              ($sc-dispatch
                                                #{tmp\ 16820}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 16820}#
                                           '())))
                                      #{s\ 16817}#))
                                   #{var\ 16788}#
                                   #{step\ 16790}#)))
                           #{tmp\ 16779}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 16778}#)))
                ($sc-dispatch
                  #{tmp\ 16778}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 16776}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 16833}#
                     (lambda (#{x\ 16837}# #{y\ 16838}#)
                       ((lambda (#{tmp\ 16842}#)
                          ((lambda (#{tmp\ 16843}#)
                             (if #{tmp\ 16843}#
                               (apply (lambda (#{x\ 16846}# #{y\ 16847}#)
                                        ((lambda (#{tmp\ 16848}#)
                                           ((lambda (#{tmp\ 16849}#)
                                              (if #{tmp\ 16849}#
                                                (apply (lambda (#{dy\ 16851}#)
                                                         ((lambda (#{tmp\ 16852}#)
                                                            ((lambda (#{tmp\ 16853}#)
                                                               (if #{tmp\ 16853}#
                                                                 (apply (lambda (#{dx\ 16855}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i16854"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i16850"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i16844"
                                                                                        "i16845"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i16839"
                                                                                        "i16840"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i16829"
                                                                                        "i16830"
                                                                                        "i16831"
                                                                                        "i16832")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 16855}#
                                                                                      #{dy\ 16851}#)))
                                                                        #{tmp\ 16853}#)
                                                                 ((lambda (#{_\ 16857}#)
                                                                    (if (null? #{dy\ 16851}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i16856"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i16850"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i16844"
                                                                                    "i16845"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i16839"
                                                                                    "i16840"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i16829"
                                                                                    "i16830"
                                                                                    "i16831"
                                                                                    "i16832")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 16846}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i16856"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i16850"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i16844"
                                                                                    "i16845"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i16839"
                                                                                    "i16840"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i16829"
                                                                                    "i16830"
                                                                                    "i16831"
                                                                                    "i16832")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 16846}#
                                                                            #{y\ 16847}#)))
                                                                  #{tmp\ 16852}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 16852}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i16850"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i16844"
                                                                          "i16845"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i16839"
                                                                          "i16840"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i16829"
                                                                          "i16830"
                                                                          "i16831"
                                                                          "i16832")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 16846}#))
                                                       #{tmp\ 16849}#)
                                                ((lambda (#{tmp\ 16858}#)
                                                   (if #{tmp\ 16858}#
                                                     (apply (lambda (#{stuff\ 16860}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i16859"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i16844"
                                                                            "i16845"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i16839"
                                                                            "i16840"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i16829"
                                                                            "i16830"
                                                                            "i16831"
                                                                            "i16832")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 16846}#
                                                                          #{stuff\ 16860}#)))
                                                            #{tmp\ 16858}#)
                                                     ((lambda (#{else\ 16862}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i16861"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i16844"
                                                                      "i16845"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i16839"
                                                                      "i16840"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i16829"
                                                                      "i16830"
                                                                      "i16831"
                                                                      "i16832")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 16846}#
                                                              #{y\ 16847}#))
                                                      #{tmp\ 16848}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 16848}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i16844"
                                                              "i16845"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i16839"
                                                              "i16840"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i16829"
                                                              "i16830"
                                                              "i16831"
                                                              "i16832")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 16848}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i16844" "i16845"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i16839" "i16840"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i16829"
                                                         "i16830"
                                                         "i16831"
                                                         "i16832")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 16847}#))
                                      #{tmp\ 16843}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 16842}#)))
                           ($sc-dispatch #{tmp\ 16842}# (quote (any any)))))
                        (list #{x\ 16837}# #{y\ 16838}#))))
                   (#{quasiappend\ 16834}#
                     (lambda (#{x\ 16863}# #{y\ 16864}#)
                       ((lambda (#{tmp\ 16868}#)
                          ((lambda (#{tmp\ 16869}#)
                             (if #{tmp\ 16869}#
                               (apply (lambda (#{x\ 16872}# #{y\ 16873}#)
                                        ((lambda (#{tmp\ 16874}#)
                                           ((lambda (#{tmp\ 16875}#)
                                              (if #{tmp\ 16875}#
                                                (apply (lambda () #{x\ 16872}#)
                                                       #{tmp\ 16875}#)
                                                ((lambda (#{_\ 16877}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i16876"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i16870"
                                                                 "i16871"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i16865"
                                                                 "i16866"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i16829"
                                                                 "i16830"
                                                                 "i16831"
                                                                 "i16832")))
                                                            (hygiene guile))
                                                         #{x\ 16872}#
                                                         #{y\ 16873}#))
                                                 #{tmp\ 16874}#)))
                                            ($sc-dispatch
                                              #{tmp\ 16874}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i16870" "i16871"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i16865" "i16866"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i16829"
                                                         "i16830"
                                                         "i16831"
                                                         "i16832")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 16873}#))
                                      #{tmp\ 16869}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 16868}#)))
                           ($sc-dispatch #{tmp\ 16868}# (quote (any any)))))
                        (list #{x\ 16863}# #{y\ 16864}#))))
                   (#{quasivector\ 16835}#
                     (lambda (#{x\ 16878}#)
                       ((lambda (#{tmp\ 16881}#)
                          ((lambda (#{x\ 16883}#)
                             ((lambda (#{tmp\ 16884}#)
                                ((lambda (#{tmp\ 16885}#)
                                   (if #{tmp\ 16885}#
                                     (apply (lambda (#{x\ 16887}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i16886"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i16882"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i16879"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i16829"
                                                            "i16830"
                                                            "i16831"
                                                            "i16832")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 16887}#)))
                                            #{tmp\ 16885}#)
                                     ((lambda (#{tmp\ 16889}#)
                                        (if #{tmp\ 16889}#
                                          (apply (lambda (#{x\ 16891}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i16890"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i16882"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i16879"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i16829"
                                                                 "i16830"
                                                                 "i16831"
                                                                 "i16832")))
                                                            (hygiene guile))
                                                         #{x\ 16891}#))
                                                 #{tmp\ 16889}#)
                                          ((lambda (#{_\ 16894}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i16893"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i16882"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i16879"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i16829"
                                                           "i16830"
                                                           "i16831"
                                                           "i16832")))
                                                      (hygiene guile))
                                                   #{x\ 16883}#))
                                           #{tmp\ 16884}#)))
                                      ($sc-dispatch
                                        #{tmp\ 16884}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i16882"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i16879"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i16829"
                                                   "i16830"
                                                   "i16831"
                                                   "i16832")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 16884}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i16882"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i16879"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i16829"
                                              "i16830"
                                              "i16831"
                                              "i16832")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 16883}#))
                           #{tmp\ 16881}#))
                        #{x\ 16878}#)))
                   (#{quasi\ 16836}#
                     (lambda (#{p\ 16895}# #{lev\ 16896}#)
                       ((lambda (#{tmp\ 16899}#)
                          ((lambda (#{tmp\ 16900}#)
                             (if #{tmp\ 16900}#
                               (apply (lambda (#{p\ 16902}#)
                                        (if (= #{lev\ 16896}# 0)
                                          #{p\ 16902}#
                                          (#{quasicons\ 16833}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i16901"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i16897" "i16898"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i16829"
                                                     "i16830"
                                                     "i16831"
                                                     "i16832")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i16901"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i16897" "i16898"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i16829"
                                                     "i16830"
                                                     "i16831"
                                                     "i16832")))
                                                (hygiene guile)))
                                            (#{quasi\ 16836}#
                                              (list #{p\ 16902}#)
                                              (- #{lev\ 16896}# 1)))))
                                      #{tmp\ 16900}#)
                               ((lambda (#{tmp\ 16903}#)
                                  (if (if #{tmp\ 16903}#
                                        (apply (lambda (#{args\ 16905}#)
                                                 (= #{lev\ 16896}# 0))
                                               #{tmp\ 16903}#)
                                        #f)
                                    (apply (lambda (#{args\ 16907}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 16895}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i16906"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i16897"
                                                             "i16898"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i16829"
                                                             "i16830"
                                                             "i16831"
                                                             "i16832")))
                                                        (hygiene guile))
                                                     #{args\ 16907}#)))
                                           #{tmp\ 16903}#)
                                    ((lambda (#{tmp\ 16908}#)
                                       (if #{tmp\ 16908}#
                                         (apply (lambda (#{p\ 16911}#
                                                         #{q\ 16912}#)
                                                  (if (= #{lev\ 16896}# 0)
                                                    (#{quasiappend\ 16834}#
                                                      #{p\ 16911}#
                                                      (#{quasi\ 16836}#
                                                        #{q\ 16912}#
                                                        #{lev\ 16896}#))
                                                    (#{quasicons\ 16833}#
                                                      (#{quasicons\ 16833}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i16909"
                                                                 "i16910"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i16897"
                                                                 "i16898"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i16829"
                                                                 "i16830"
                                                                 "i16831"
                                                                 "i16832")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i16909"
                                                                 "i16910"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i16897"
                                                                 "i16898"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i16829"
                                                                 "i16830"
                                                                 "i16831"
                                                                 "i16832")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 16836}#
                                                          (list #{p\ 16911}#)
                                                          (- #{lev\ 16896}#
                                                             1)))
                                                      (#{quasi\ 16836}#
                                                        #{q\ 16912}#
                                                        #{lev\ 16896}#))))
                                                #{tmp\ 16908}#)
                                         ((lambda (#{tmp\ 16913}#)
                                            (if (if #{tmp\ 16913}#
                                                  (apply (lambda (#{args\ 16916}#
                                                                  #{q\ 16917}#)
                                                           (= #{lev\ 16896}#
                                                              0))
                                                         #{tmp\ 16913}#)
                                                  #f)
                                              (apply (lambda (#{args\ 16920}#
                                                              #{q\ 16921}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 16895}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i16918"
                                                                       "i16919"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i16897"
                                                                       "i16898"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i16829"
                                                                       "i16830"
                                                                       "i16831"
                                                                       "i16832")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 16920}#)))
                                                     #{tmp\ 16913}#)
                                              ((lambda (#{tmp\ 16922}#)
                                                 (if #{tmp\ 16922}#
                                                   (apply (lambda (#{p\ 16924}#)
                                                            (#{quasicons\ 16833}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i16923"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i16897"
                                                                       "i16898"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i16829"
                                                                       "i16830"
                                                                       "i16831"
                                                                       "i16832")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i16923"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i16897"
                                                                       "i16898"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i16829"
                                                                       "i16830"
                                                                       "i16831"
                                                                       "i16832")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 16836}#
                                                                (list #{p\ 16924}#)
                                                                (+ #{lev\ 16896}#
                                                                   1))))
                                                          #{tmp\ 16922}#)
                                                   ((lambda (#{tmp\ 16925}#)
                                                      (if #{tmp\ 16925}#
                                                        (apply (lambda (#{p\ 16928}#
                                                                        #{q\ 16929}#)
                                                                 (#{quasicons\ 16833}#
                                                                   (#{quasi\ 16836}#
                                                                     #{p\ 16928}#
                                                                     #{lev\ 16896}#)
                                                                   (#{quasi\ 16836}#
                                                                     #{q\ 16929}#
                                                                     #{lev\ 16896}#)))
                                                               #{tmp\ 16925}#)
                                                        ((lambda (#{tmp\ 16930}#)
                                                           (if #{tmp\ 16930}#
                                                             (apply (lambda (#{x\ 16932}#)
                                                                      (#{quasivector\ 16835}#
                                                                        (#{quasi\ 16836}#
                                                                          #{x\ 16932}#
                                                                          #{lev\ 16896}#)))
                                                                    #{tmp\ 16930}#)
                                                             ((lambda (#{p\ 16935}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i16934"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i16897"
                                                                              "i16898"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i16829"
                                                                              "i16830"
                                                                              "i16831"
                                                                              "i16832")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 16935}#))
                                                              #{tmp\ 16899}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 16899}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 16899}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 16899}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i16897" "i16898"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i16829"
                                                            "i16830"
                                                            "i16831"
                                                            "i16832")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 16899}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i16897" "i16898"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i16829"
                                                        "i16830"
                                                        "i16831"
                                                        "i16832")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 16899}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i16897" "i16898"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i16829"
                                                   "i16830"
                                                   "i16831"
                                                   "i16832")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 16899}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i16897" "i16898"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i16829"
                                             "i16830"
                                             "i16831"
                                             "i16832")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 16899}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i16897" "i16898"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i16829" "i16830" "i16831" "i16832")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 16895}#))))
            (lambda (#{x\ 16936}#)
              ((lambda (#{tmp\ 16938}#)
                 ((lambda (#{tmp\ 16939}#)
                    (if #{tmp\ 16939}#
                      (apply (lambda (#{_\ 16942}# #{e\ 16943}#)
                               (#{quasi\ 16836}# #{e\ 16943}# 0))
                             #{tmp\ 16939}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 16938}#)))
                  ($sc-dispatch #{tmp\ 16938}# (quote (any any)))))
               #{x\ 16936}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 16944}#)
            (letrec ((#{read-file\ 16947}#
                       (lambda (#{fn\ 16948}# #{k\ 16949}#)
                         (let ((#{p\ 16953}# (open-input-file #{fn\ 16948}#)))
                           (letrec ((#{f\ 16957}#
                                      (lambda (#{x\ 16958}# #{result\ 16959}#)
                                        (if (eof-object? #{x\ 16958}#)
                                          (begin
                                            (close-input-port #{p\ 16953}#)
                                            (reverse #{result\ 16959}#))
                                          (#{f\ 16957}#
                                            (read #{p\ 16953}#)
                                            (cons (datum->syntax
                                                    #{k\ 16949}#
                                                    #{x\ 16958}#)
                                                  #{result\ 16959}#))))))
                             (#{f\ 16957}# (read #{p\ 16953}#) (quote ())))))))
              ((lambda (#{tmp\ 16960}#)
                 ((lambda (#{tmp\ 16961}#)
                    (if #{tmp\ 16961}#
                      (apply (lambda (#{k\ 16964}# #{filename\ 16965}#)
                               (let ((#{fn\ 16967}#
                                       (syntax->datum #{filename\ 16965}#)))
                                 ((lambda (#{tmp\ 16969}#)
                                    ((lambda (#{tmp\ 16970}#)
                                       (if #{tmp\ 16970}#
                                         (apply (lambda (#{exp\ 16972}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i16971"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i16966"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i16962"
                                                                "i16963"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i16946"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i16945")))
                                                           (hygiene guile))
                                                        #{exp\ 16972}#))
                                                #{tmp\ 16970}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 16969}#)))
                                     ($sc-dispatch
                                       #{tmp\ 16969}#
                                       'each-any)))
                                  (#{read-file\ 16947}#
                                    #{fn\ 16967}#
                                    #{k\ 16964}#))))
                             #{tmp\ 16961}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 16960}#)))
                  ($sc-dispatch #{tmp\ 16960}# (quote (any any)))))
               #{x\ 16944}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 16974}#)
            ((lambda (#{tmp\ 16976}#)
               ((lambda (#{tmp\ 16977}#)
                  (if #{tmp\ 16977}#
                    (apply (lambda (#{k\ 16980}# #{filename\ 16981}#)
                             (let ((#{fn\ 16983}#
                                     (syntax->datum #{filename\ 16981}#)))
                               ((lambda (#{tmp\ 16985}#)
                                  ((lambda (#{fn\ 16987}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i16986"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i16982"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i16978" "i16979"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i16975")))
                                              (hygiene guile))
                                           #{fn\ 16987}#))
                                   #{tmp\ 16985}#))
                                (let ((#{t\ 16990}#
                                        (%search-load-path #{fn\ 16983}#)))
                                  (if #{t\ 16990}#
                                    #{t\ 16990}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 16974}#
                                      #{filename\ 16981}#))))))
                           #{tmp\ 16977}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 16976}#)))
                ($sc-dispatch #{tmp\ 16976}# (quote (any any)))))
             #{x\ 16974}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 16992}#)
            ((lambda (#{tmp\ 16994}#)
               ((lambda (#{tmp\ 16995}#)
                  (if #{tmp\ 16995}#
                    (apply (lambda (#{_\ 16998}# #{e\ 16999}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 16992}#))
                           #{tmp\ 16995}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 16994}#)))
                ($sc-dispatch #{tmp\ 16994}# (quote (any any)))))
             #{x\ 16992}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 17000}#)
            ((lambda (#{tmp\ 17002}#)
               ((lambda (#{tmp\ 17003}#)
                  (if #{tmp\ 17003}#
                    (apply (lambda (#{_\ 17006}# #{e\ 17007}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 17000}#))
                           #{tmp\ 17003}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 17002}#)))
                ($sc-dispatch #{tmp\ 17002}# (quote (any any)))))
             #{x\ 17000}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 17008}#)
            ((lambda (#{tmp\ 17010}#)
               ((lambda (#{tmp\ 17011}#)
                  (if #{tmp\ 17011}#
                    (apply (lambda (#{_\ 17016}#
                                    #{e\ 17017}#
                                    #{m1\ 17018}#
                                    #{m2\ 17019}#)
                             ((lambda (#{tmp\ 17021}#)
                                ((lambda (#{body\ 17023}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i17022"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i17012"
                                                 "i17013"
                                                 "i17014"
                                                 "i17015"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i17009")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i17022"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i17012"
                                                             "i17013"
                                                             "i17014"
                                                             "i17015"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i17009")))
                                                        (hygiene guile))
                                                     #{e\ 17017}#))
                                         #{body\ 17023}#))
                                 #{tmp\ 17021}#))
                              (letrec ((#{f\ 17027}#
                                         (lambda (#{clause\ 17028}#
                                                  #{clauses\ 17029}#)
                                           (if (null? #{clauses\ 17029}#)
                                             ((lambda (#{tmp\ 17031}#)
                                                ((lambda (#{tmp\ 17032}#)
                                                   (if #{tmp\ 17032}#
                                                     (apply (lambda (#{e1\ 17035}#
                                                                     #{e2\ 17036}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i17033"
                                                                            "i17034"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i17024"
                                                                            "i17025"
                                                                            "i17026"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i17012"
                                                                            "i17013"
                                                                            "i17014"
                                                                            "i17015"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i17009")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 17035}#
                                                                          #{e2\ 17036}#)))
                                                            #{tmp\ 17032}#)
                                                     ((lambda (#{tmp\ 17038}#)
                                                        (if #{tmp\ 17038}#
                                                          (apply (lambda (#{k\ 17042}#
                                                                          #{e1\ 17043}#
                                                                          #{e2\ 17044}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i17039"
                                                                                 "i17040"
                                                                                 "i17041"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i17024"
                                                                                 "i17025"
                                                                                 "i17026"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i17012"
                                                                                 "i17013"
                                                                                 "i17014"
                                                                                 "i17015"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i17009")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17039"
                                                                                       "i17040"
                                                                                       "i17041"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17024"
                                                                                       "i17025"
                                                                                       "i17026"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17012"
                                                                                       "i17013"
                                                                                       "i17014"
                                                                                       "i17015"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i17009")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17039"
                                                                                       "i17040"
                                                                                       "i17041"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17024"
                                                                                       "i17025"
                                                                                       "i17026"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17012"
                                                                                       "i17013"
                                                                                       "i17014"
                                                                                       "i17015"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i17009")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i17039"
                                                                                             "i17040"
                                                                                             "i17041"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i17024"
                                                                                             "i17025"
                                                                                             "i17026"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i17012"
                                                                                             "i17013"
                                                                                             "i17014"
                                                                                             "i17015"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i17009")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 17042}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17039"
                                                                                       "i17040"
                                                                                       "i17041"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17024"
                                                                                       "i17025"
                                                                                       "i17026"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i17012"
                                                                                       "i17013"
                                                                                       "i17014"
                                                                                       "i17015"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i17009")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 17043}#
                                                                                     #{e2\ 17044}#))))
                                                                 #{tmp\ 17038}#)
                                                          ((lambda (#{_\ 17048}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 17008}#
                                                               #{clause\ 17028}#))
                                                           #{tmp\ 17031}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 17031}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 17031}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i17024"
                                                              "i17025"
                                                              "i17026"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i17012"
                                                              "i17013"
                                                              "i17014"
                                                              "i17015"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i17009")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 17028}#)
                                             ((lambda (#{tmp\ 17050}#)
                                                ((lambda (#{rest\ 17052}#)
                                                   ((lambda (#{tmp\ 17053}#)
                                                      ((lambda (#{tmp\ 17054}#)
                                                         (if #{tmp\ 17054}#
                                                           (apply (lambda (#{k\ 17058}#
                                                                           #{e1\ 17059}#
                                                                           #{e2\ 17060}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i17055"
                                                                                  "i17056"
                                                                                  "i17057"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i17051"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i17024"
                                                                                  "i17025"
                                                                                  "i17026"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i17012"
                                                                                  "i17013"
                                                                                  "i17014"
                                                                                  "i17015"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i17009")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17055"
                                                                                        "i17056"
                                                                                        "i17057"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i17051"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17024"
                                                                                        "i17025"
                                                                                        "i17026"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17012"
                                                                                        "i17013"
                                                                                        "i17014"
                                                                                        "i17015"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i17009")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17055"
                                                                                        "i17056"
                                                                                        "i17057"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i17051"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17024"
                                                                                        "i17025"
                                                                                        "i17026"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17012"
                                                                                        "i17013"
                                                                                        "i17014"
                                                                                        "i17015"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i17009")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i17055"
                                                                                              "i17056"
                                                                                              "i17057"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i17051"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i17024"
                                                                                              "i17025"
                                                                                              "i17026"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i17012"
                                                                                              "i17013"
                                                                                              "i17014"
                                                                                              "i17015"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i17009")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 17058}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17055"
                                                                                        "i17056"
                                                                                        "i17057"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i17051"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17024"
                                                                                        "i17025"
                                                                                        "i17026"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i17012"
                                                                                        "i17013"
                                                                                        "i17014"
                                                                                        "i17015"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i17009")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 17059}#
                                                                                      #{e2\ 17060}#))
                                                                          #{rest\ 17052}#))
                                                                  #{tmp\ 17054}#)
                                                           ((lambda (#{_\ 17064}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 17008}#
                                                                #{clause\ 17028}#))
                                                            #{tmp\ 17053}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 17053}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 17028}#))
                                                 #{tmp\ 17050}#))
                                              (#{f\ 17027}#
                                                (car #{clauses\ 17029}#)
                                                (cdr #{clauses\ 17029}#)))))))
                                (#{f\ 17027}# #{m1\ 17018}# #{m2\ 17019}#))))
                           #{tmp\ 17011}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 17010}#)))
                ($sc-dispatch
                  #{tmp\ 17010}#
                  '(any any any . each-any))))
             #{x\ 17008}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 17065}#)
            ((lambda (#{tmp\ 17067}#)
               ((lambda (#{tmp\ 17068}#)
                  (if #{tmp\ 17068}#
                    (apply (lambda (#{_\ 17071}# #{e\ 17072}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i17069" "i17070"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i17066")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i17069" "i17070"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i17066")))
                                       (hygiene guile)))
                                   '#((#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i17069" "i17070"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i17066")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         identifier-syntax
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i17069" "i17070"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i17066")))
                                         (hygiene guile))))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i17069" "i17070"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i17066")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i17069" "i17070"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i17066")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i17069" "i17070"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i17066")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i17069" "i17070"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i17066")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i17069" "i17070"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i17066")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i17069" "i17070"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i17066")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i17069"
                                                             "i17070"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i17066")))
                                                        (hygiene guile))
                                                     #{e\ 17072}#))
                                         (list (cons #{_\ 17071}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i17069"
                                                              "i17070"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i17066")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i17069"
                                                              "i17070"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i17066")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i17069"
                                                             "i17070"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i17066")))
                                                        (hygiene guile))
                                                     (cons #{e\ 17072}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i17069"
                                                                    "i17070"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i17066")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i17069"
                                                                    "i17070"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i17066")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 17068}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 17067}#)))
                ($sc-dispatch #{tmp\ 17067}# (quote (any any)))))
             #{x\ 17065}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 17073}#)
            ((lambda (#{tmp\ 17075}#)
               ((lambda (#{tmp\ 17076}#)
                  (if #{tmp\ 17076}#
                    (apply (lambda (#{_\ 17082}#
                                    #{id\ 17083}#
                                    #{args\ 17084}#
                                    #{b0\ 17085}#
                                    #{b1\ 17086}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i17077"
                                           "i17078"
                                           "i17079"
                                           "i17080"
                                           "i17081"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i17074")))
                                      (hygiene guile))
                                   #{id\ 17083}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i17077"
                                                 "i17078"
                                                 "i17079"
                                                 "i17080"
                                                 "i17081"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i17074")))
                                            (hygiene guile))
                                         (cons #{args\ 17084}#
                                               (cons #{b0\ 17085}#
                                                     #{b1\ 17086}#)))))
                           #{tmp\ 17076}#)
                    ((lambda (#{tmp\ 17088}#)
                       (if (if #{tmp\ 17088}#
                             (apply (lambda (#{_\ 17092}#
                                             #{id\ 17093}#
                                             #{val\ 17094}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i17089" "i17090" "i17091"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i17074")))
                                           (hygiene guile))))
                                    #{tmp\ 17088}#)
                             #f)
                         (apply (lambda (#{_\ 17098}#
                                         #{id\ 17099}#
                                         #{val\ 17100}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i17095" "i17096" "i17097"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i17074")))
                                           (hygiene guile))
                                        #{id\ 17099}#
                                        #{val\ 17100}#))
                                #{tmp\ 17088}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 17075}#)))
                     ($sc-dispatch
                       #{tmp\ 17075}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 17075}#
                  '(any (any . any) any . each-any))))
             #{x\ 17073}#))
          (module-name (current-module)))))

