(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 20}#
           (lambda (#{f\ 82}# #{first\ 83}# . #{rest\ 84}#)
             (let ((#{t\ 90}# (null? #{first\ 83}#)))
               (if #{t\ 90}#
                 #{t\ 90}#
                 (if (null? #{rest\ 84}#)
                   (letrec ((#{andmap\ 94}#
                              (lambda (#{first\ 95}#)
                                (let ((#{x\ 98}# (car #{first\ 95}#))
                                      (#{first\ 99}# (cdr #{first\ 95}#)))
                                  (if (null? #{first\ 99}#)
                                    (#{f\ 82}# #{x\ 98}#)
                                    (if (#{f\ 82}# #{x\ 98}#)
                                      (#{andmap\ 94}# #{first\ 99}#)
                                      #f))))))
                     (#{andmap\ 94}# #{first\ 83}#))
                   (letrec ((#{andmap\ 105}#
                              (lambda (#{first\ 106}# #{rest\ 107}#)
                                (let ((#{x\ 112}# (car #{first\ 106}#))
                                      (#{xr\ 113}# (map car #{rest\ 107}#))
                                      (#{first\ 114}# (cdr #{first\ 106}#))
                                      (#{rest\ 115}# (map cdr #{rest\ 107}#)))
                                  (if (null? #{first\ 114}#)
                                    (apply #{f\ 82}#
                                           (cons #{x\ 112}# #{xr\ 113}#))
                                    (if (apply #{f\ 82}#
                                               (cons #{x\ 112}# #{xr\ 113}#))
                                      (#{andmap\ 105}#
                                        #{first\ 114}#
                                        #{rest\ 115}#)
                                      #f))))))
                     (#{andmap\ 105}# #{first\ 83}# #{rest\ 84}#))))))))
  (letrec ((#{lambda-var-list\ 337}#
             (lambda (#{vars\ 552}#)
               (letrec ((#{lvl\ 558}#
                          (lambda (#{vars\ 559}# #{ls\ 560}# #{w\ 561}#)
                            (if (pair? #{vars\ 559}#)
                              (#{lvl\ 558}#
                                (cdr #{vars\ 559}#)
                                (cons (#{wrap\ 291}#
                                        (car #{vars\ 559}#)
                                        #{w\ 561}#
                                        #f)
                                      #{ls\ 560}#)
                                #{w\ 561}#)
                              (if (#{id?\ 222}# #{vars\ 559}#)
                                (cons (#{wrap\ 291}#
                                        #{vars\ 559}#
                                        #{w\ 561}#
                                        #f)
                                      #{ls\ 560}#)
                                (if (null? #{vars\ 559}#)
                                  #{ls\ 560}#
                                  (if (#{syntax-object?\ 186}# #{vars\ 559}#)
                                    (#{lvl\ 558}#
                                      (#{syntax-object-expression\ 188}#
                                        #{vars\ 559}#)
                                      #{ls\ 560}#
                                      (#{join-wraps\ 273}#
                                        #{w\ 561}#
                                        (#{syntax-object-wrap\ 190}#
                                          #{vars\ 559}#)))
                                    (cons #{vars\ 559}# #{ls\ 560}#))))))))
                 (#{lvl\ 558}#
                   #{vars\ 552}#
                   '()
                   '(())))))
           (#{gen-var\ 335}#
             (lambda (#{id\ 572}#)
               (let ((#{id\ 575}#
                       (if (#{syntax-object?\ 186}# #{id\ 572}#)
                         (#{syntax-object-expression\ 188}# #{id\ 572}#)
                         #{id\ 572}#)))
                 (gensym
                   (string-append (symbol->string #{id\ 575}#) " ")))))
           (#{strip\ 333}#
             (lambda (#{x\ 577}# #{w\ 578}#)
               (if (memq 'top
                         (#{wrap-marks\ 229}# #{w\ 578}#))
                 #{x\ 577}#
                 (letrec ((#{f\ 584}# (lambda (#{x\ 585}#)
                                        (if (#{syntax-object?\ 186}#
                                              #{x\ 585}#)
                                          (#{strip\ 333}#
                                            (#{syntax-object-expression\ 188}#
                                              #{x\ 585}#)
                                            (#{syntax-object-wrap\ 190}#
                                              #{x\ 585}#))
                                          (if (pair? #{x\ 585}#)
                                            (let ((#{a\ 592}# (#{f\ 584}# (car #{x\ 585}#)))
                                                  (#{d\ 593}# (#{f\ 584}# (cdr #{x\ 585}#))))
                                              (if (if (eq? #{a\ 592}#
                                                           (car #{x\ 585}#))
                                                    (eq? #{d\ 593}#
                                                         (cdr #{x\ 585}#))
                                                    #f)
                                                #{x\ 585}#
                                                (cons #{a\ 592}# #{d\ 593}#)))
                                            (if (vector? #{x\ 585}#)
                                              (let ((#{old\ 599}#
                                                      (vector->list
                                                        #{x\ 585}#)))
                                                (let ((#{new\ 601}#
                                                        (map #{f\ 584}#
                                                             #{old\ 599}#)))
                                                  (if (#{and-map*\ 20}#
                                                        eq?
                                                        #{old\ 599}#
                                                        #{new\ 601}#)
                                                    #{x\ 585}#
                                                    (list->vector
                                                      #{new\ 601}#))))
                                              #{x\ 585}#))))))
                   (#{f\ 584}# #{x\ 577}#)))))
           (#{chi-lambda-case\ 331}#
             (lambda (#{e\ 603}#
                      #{r\ 604}#
                      #{w\ 605}#
                      #{s\ 606}#
                      #{mod\ 607}#
                      #{get-formals\ 608}#
                      #{clauses\ 609}#)
               (letrec ((#{expand-body\ 624}#
                          (lambda (#{req\ 625}#
                                   #{opt\ 626}#
                                   #{rest\ 627}#
                                   #{kw\ 628}#
                                   #{body\ 629}#
                                   #{vars\ 630}#
                                   #{r*\ 631}#
                                   #{w*\ 632}#
                                   #{inits\ 633}#
                                   #{meta\ 634}#)
                            ((lambda (#{tmp\ 645}#)
                               ((lambda (#{tmp\ 646}#)
                                  (if (if #{tmp\ 646}#
                                        (apply (lambda (#{docstring\ 650}#
                                                        #{e1\ 651}#
                                                        #{e2\ 652}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 650}#)))
                                               #{tmp\ 646}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 656}#
                                                    #{e1\ 657}#
                                                    #{e2\ 658}#)
                                             (#{expand-body\ 624}#
                                               #{req\ 625}#
                                               #{opt\ 626}#
                                               #{rest\ 627}#
                                               #{kw\ 628}#
                                               (cons #{e1\ 657}# #{e2\ 658}#)
                                               #{vars\ 630}#
                                               #{r*\ 631}#
                                               #{w*\ 632}#
                                               #{inits\ 633}#
                                               (append
                                                 #{meta\ 634}#
                                                 (list (cons 'documentation
                                                             (syntax->datum
                                                               #{docstring\ 656}#))))))
                                           #{tmp\ 646}#)
                                    ((lambda (#{tmp\ 661}#)
                                       (if #{tmp\ 661}#
                                         (apply (lambda (#{k\ 666}#
                                                         #{v\ 667}#
                                                         #{e1\ 668}#
                                                         #{e2\ 669}#)
                                                  (#{expand-body\ 624}#
                                                    #{req\ 625}#
                                                    #{opt\ 626}#
                                                    #{rest\ 627}#
                                                    #{kw\ 628}#
                                                    (cons #{e1\ 668}#
                                                          #{e2\ 669}#)
                                                    #{vars\ 630}#
                                                    #{r*\ 631}#
                                                    #{w*\ 632}#
                                                    #{inits\ 633}#
                                                    (append
                                                      #{meta\ 634}#
                                                      (syntax->datum
                                                        (map cons
                                                             #{k\ 666}#
                                                             #{v\ 667}#)))))
                                                #{tmp\ 661}#)
                                         ((lambda (#{tmp\ 673}#)
                                            (if #{tmp\ 673}#
                                              (apply (lambda (#{e1\ 676}#
                                                              #{e2\ 677}#)
                                                       (values
                                                         #{meta\ 634}#
                                                         #{req\ 625}#
                                                         #{opt\ 626}#
                                                         #{rest\ 627}#
                                                         #{kw\ 628}#
                                                         #{inits\ 633}#
                                                         #{vars\ 630}#
                                                         (#{chi-body\ 315}#
                                                           (cons #{e1\ 676}#
                                                                 #{e2\ 677}#)
                                                           (#{source-wrap\ 293}#
                                                             #{e\ 603}#
                                                             #{w\ 605}#
                                                             #{s\ 606}#
                                                             #{mod\ 607}#)
                                                           #{r*\ 631}#
                                                           #{w*\ 632}#
                                                           #{mod\ 607}#)))
                                                     #{tmp\ 673}#)
                                              (syntax-violation
                                                #f
                                                "source expression failed to match any pattern"
                                                #{tmp\ 645}#)))
                                          ($sc-dispatch
                                            #{tmp\ 645}#
                                            '(any . each-any)))))
                                     ($sc-dispatch
                                       #{tmp\ 645}#
                                       '(#(vector #(each (any . any)))
                                         any
                                         .
                                         each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 645}#
                                  '(any any . each-any))))
                             #{body\ 629}#)))
                        (#{expand-kw\ 622}#
                          (lambda (#{req\ 679}#
                                   #{opt\ 680}#
                                   #{rest\ 681}#
                                   #{kw\ 682}#
                                   #{body\ 683}#
                                   #{vars\ 684}#
                                   #{r*\ 685}#
                                   #{w*\ 686}#
                                   #{aok\ 687}#
                                   #{out\ 688}#
                                   #{inits\ 689}#)
                            (if (pair? #{kw\ 682}#)
                              ((lambda (#{tmp\ 703}#)
                                 ((lambda (#{tmp\ 704}#)
                                    (if #{tmp\ 704}#
                                      (apply (lambda (#{k\ 708}#
                                                      #{id\ 709}#
                                                      #{i\ 710}#)
                                               (let ((#{v\ 713}# (#{gen-var\ 335}#
                                                                   #{id\ 709}#)))
                                                 (let ((#{l\ 715}# (#{gen-labels\ 240}#
                                                                     (list #{v\ 713}#))))
                                                   (let ((#{r**\ 717}#
                                                           (#{extend-var-env\ 212}#
                                                             #{l\ 715}#
                                                             (list #{v\ 713}#)
                                                             #{r*\ 685}#)))
                                                     (let ((#{w**\ 719}#
                                                             (#{make-binding-wrap\ 269}#
                                                               (list #{id\ 709}#)
                                                               #{l\ 715}#
                                                               #{w*\ 686}#)))
                                                       (#{expand-kw\ 622}#
                                                         #{req\ 679}#
                                                         #{opt\ 680}#
                                                         #{rest\ 681}#
                                                         (cdr #{kw\ 682}#)
                                                         #{body\ 683}#
                                                         (cons #{v\ 713}#
                                                               #{vars\ 684}#)
                                                         #{r**\ 717}#
                                                         #{w**\ 719}#
                                                         #{aok\ 687}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 708}#)
                                                                     (syntax->datum
                                                                       #{id\ 709}#)
                                                                     #{v\ 713}#)
                                                               #{out\ 688}#)
                                                         (cons (#{chi\ 307}#
                                                                 #{i\ 710}#
                                                                 #{r*\ 685}#
                                                                 #{w*\ 686}#
                                                                 #{mod\ 607}#)
                                                               #{inits\ 689}#)))))))
                                             #{tmp\ 704}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 703}#)))
                                  ($sc-dispatch
                                    #{tmp\ 703}#
                                    '(any any any))))
                               (car #{kw\ 682}#))
                              (#{expand-body\ 624}#
                                #{req\ 679}#
                                #{opt\ 680}#
                                #{rest\ 681}#
                                (if (let ((#{t\ 723}# #{aok\ 687}#))
                                      (if #{t\ 723}#
                                        #{t\ 723}#
                                        (pair? #{out\ 688}#)))
                                  (cons #{aok\ 687}# (reverse #{out\ 688}#))
                                  #f)
                                #{body\ 683}#
                                (reverse #{vars\ 684}#)
                                #{r*\ 685}#
                                #{w*\ 686}#
                                (reverse #{inits\ 689}#)
                                '()))))
                        (#{expand-opt\ 620}#
                          (lambda (#{req\ 725}#
                                   #{opt\ 726}#
                                   #{rest\ 727}#
                                   #{kw\ 728}#
                                   #{body\ 729}#
                                   #{vars\ 730}#
                                   #{r*\ 731}#
                                   #{w*\ 732}#
                                   #{out\ 733}#
                                   #{inits\ 734}#)
                            (if (pair? #{opt\ 726}#)
                              ((lambda (#{tmp\ 747}#)
                                 ((lambda (#{tmp\ 748}#)
                                    (if #{tmp\ 748}#
                                      (apply (lambda (#{id\ 751}# #{i\ 752}#)
                                               (let ((#{v\ 755}# (#{gen-var\ 335}#
                                                                   #{id\ 751}#)))
                                                 (let ((#{l\ 757}# (#{gen-labels\ 240}#
                                                                     (list #{v\ 755}#))))
                                                   (let ((#{r**\ 759}#
                                                           (#{extend-var-env\ 212}#
                                                             #{l\ 757}#
                                                             (list #{v\ 755}#)
                                                             #{r*\ 731}#)))
                                                     (let ((#{w**\ 761}#
                                                             (#{make-binding-wrap\ 269}#
                                                               (list #{id\ 751}#)
                                                               #{l\ 757}#
                                                               #{w*\ 732}#)))
                                                       (#{expand-opt\ 620}#
                                                         #{req\ 725}#
                                                         (cdr #{opt\ 726}#)
                                                         #{rest\ 727}#
                                                         #{kw\ 728}#
                                                         #{body\ 729}#
                                                         (cons #{v\ 755}#
                                                               #{vars\ 730}#)
                                                         #{r**\ 759}#
                                                         #{w**\ 761}#
                                                         (cons (syntax->datum
                                                                 #{id\ 751}#)
                                                               #{out\ 733}#)
                                                         (cons (#{chi\ 307}#
                                                                 #{i\ 752}#
                                                                 #{r*\ 731}#
                                                                 #{w*\ 732}#
                                                                 #{mod\ 607}#)
                                                               #{inits\ 734}#)))))))
                                             #{tmp\ 748}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 747}#)))
                                  ($sc-dispatch
                                    #{tmp\ 747}#
                                    '(any any))))
                               (car #{opt\ 726}#))
                              (if #{rest\ 727}#
                                (let ((#{v\ 766}# (#{gen-var\ 335}#
                                                    #{rest\ 727}#)))
                                  (let ((#{l\ 768}# (#{gen-labels\ 240}#
                                                      (list #{v\ 766}#))))
                                    (let ((#{r*\ 770}#
                                            (#{extend-var-env\ 212}#
                                              #{l\ 768}#
                                              (list #{v\ 766}#)
                                              #{r*\ 731}#)))
                                      (let ((#{w*\ 772}#
                                              (#{make-binding-wrap\ 269}#
                                                (list #{rest\ 727}#)
                                                #{l\ 768}#
                                                #{w*\ 732}#)))
                                        (#{expand-kw\ 622}#
                                          #{req\ 725}#
                                          (if (pair? #{out\ 733}#)
                                            (reverse #{out\ 733}#)
                                            #f)
                                          (syntax->datum #{rest\ 727}#)
                                          (if (pair? #{kw\ 728}#)
                                            (cdr #{kw\ 728}#)
                                            #{kw\ 728}#)
                                          #{body\ 729}#
                                          (cons #{v\ 766}# #{vars\ 730}#)
                                          #{r*\ 770}#
                                          #{w*\ 772}#
                                          (if (pair? #{kw\ 728}#)
                                            (car #{kw\ 728}#)
                                            #f)
                                          '()
                                          #{inits\ 734}#)))))
                                (#{expand-kw\ 622}#
                                  #{req\ 725}#
                                  (if (pair? #{out\ 733}#)
                                    (reverse #{out\ 733}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 728}#)
                                    (cdr #{kw\ 728}#)
                                    #{kw\ 728}#)
                                  #{body\ 729}#
                                  #{vars\ 730}#
                                  #{r*\ 731}#
                                  #{w*\ 732}#
                                  (if (pair? #{kw\ 728}#) (car #{kw\ 728}#) #f)
                                  '()
                                  #{inits\ 734}#)))))
                        (#{expand-req\ 618}#
                          (lambda (#{req\ 774}#
                                   #{opt\ 775}#
                                   #{rest\ 776}#
                                   #{kw\ 777}#
                                   #{body\ 778}#)
                            (let ((#{vars\ 786}#
                                    (map #{gen-var\ 335}# #{req\ 774}#))
                                  (#{labels\ 787}#
                                    (#{gen-labels\ 240}# #{req\ 774}#)))
                              (let ((#{r*\ 790}#
                                      (#{extend-var-env\ 212}#
                                        #{labels\ 787}#
                                        #{vars\ 786}#
                                        #{r\ 604}#))
                                    (#{w*\ 791}#
                                      (#{make-binding-wrap\ 269}#
                                        #{req\ 774}#
                                        #{labels\ 787}#
                                        #{w\ 605}#)))
                                (#{expand-opt\ 620}#
                                  (map syntax->datum #{req\ 774}#)
                                  #{opt\ 775}#
                                  #{rest\ 776}#
                                  #{kw\ 777}#
                                  #{body\ 778}#
                                  (reverse #{vars\ 786}#)
                                  #{r*\ 790}#
                                  #{w*\ 791}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 792}#)
                    ((lambda (#{tmp\ 793}#)
                       (if #{tmp\ 793}#
                         (apply (lambda () (values (quote ()) #f))
                                #{tmp\ 793}#)
                         ((lambda (#{tmp\ 794}#)
                            (if #{tmp\ 794}#
                              (apply (lambda (#{args\ 801}#
                                              #{e1\ 802}#
                                              #{e2\ 803}#
                                              #{args*\ 804}#
                                              #{e1*\ 805}#
                                              #{e2*\ 806}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 608}#
                                             #{args\ 801}#))
                                         (lambda (#{req\ 807}#
                                                  #{opt\ 808}#
                                                  #{rest\ 809}#
                                                  #{kw\ 810}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 618}#
                                                 #{req\ 807}#
                                                 #{opt\ 808}#
                                                 #{rest\ 809}#
                                                 #{kw\ 810}#
                                                 (cons #{e1\ 802}#
                                                       #{e2\ 803}#)))
                                             (lambda (#{meta\ 816}#
                                                      #{req\ 817}#
                                                      #{opt\ 818}#
                                                      #{rest\ 819}#
                                                      #{kw\ 820}#
                                                      #{inits\ 821}#
                                                      #{vars\ 822}#
                                                      #{body\ 823}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 331}#
                                                     #{e\ 603}#
                                                     #{r\ 604}#
                                                     #{w\ 605}#
                                                     #{s\ 606}#
                                                     #{mod\ 607}#
                                                     #{get-formals\ 608}#
                                                     (map (lambda (#{tmp\ 834}#
                                                                   #{tmp\ 833}#
                                                                   #{tmp\ 832}#)
                                                            (cons #{tmp\ 832}#
                                                                  (cons #{tmp\ 833}#
                                                                        #{tmp\ 834}#)))
                                                          #{e2*\ 806}#
                                                          #{e1*\ 805}#
                                                          #{args*\ 804}#)))
                                                 (lambda (#{meta*\ 836}#
                                                          #{else*\ 837}#)
                                                   (values
                                                     (append
                                                       #{meta\ 816}#
                                                       #{meta*\ 836}#)
                                                     (#{build-lambda-case\ 168}#
                                                       #{s\ 606}#
                                                       #{req\ 817}#
                                                       #{opt\ 818}#
                                                       #{rest\ 819}#
                                                       #{kw\ 820}#
                                                       #{inits\ 821}#
                                                       #{vars\ 822}#
                                                       #{body\ 823}#
                                                       #{else*\ 837}#)))))))))
                                     #{tmp\ 794}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 792}#)))
                          ($sc-dispatch
                            #{tmp\ 792}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 792}# (quote ()))))
                  #{clauses\ 609}#))))
           (#{lambda*-formals\ 329}#
             (lambda (#{orig-args\ 840}#)
               (letrec ((#{check\ 851}#
                          (lambda (#{req\ 852}#
                                   #{opt\ 853}#
                                   #{rest\ 854}#
                                   #{kw\ 855}#)
                            (if (#{distinct-bound-ids?\ 287}#
                                  (append
                                    #{req\ 852}#
                                    (map car #{opt\ 853}#)
                                    (if #{rest\ 854}#
                                      (list #{rest\ 854}#)
                                      '())
                                    (if (pair? #{kw\ 855}#)
                                      (map cadr (cdr #{kw\ 855}#))
                                      '())))
                              (values
                                #{req\ 852}#
                                #{opt\ 853}#
                                #{rest\ 854}#
                                #{kw\ 855}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 840}#))))
                        (#{rest\ 849}#
                          (lambda (#{args\ 863}#
                                   #{req\ 864}#
                                   #{opt\ 865}#
                                   #{kw\ 866}#)
                            ((lambda (#{tmp\ 871}#)
                               ((lambda (#{tmp\ 872}#)
                                  (if (if #{tmp\ 872}#
                                        (apply (lambda (#{r\ 874}#)
                                                 (#{id?\ 222}# #{r\ 874}#))
                                               #{tmp\ 872}#)
                                        #f)
                                    (apply (lambda (#{r\ 876}#)
                                             (#{check\ 851}#
                                               #{req\ 864}#
                                               #{opt\ 865}#
                                               #{r\ 876}#
                                               #{kw\ 866}#))
                                           #{tmp\ 872}#)
                                    ((lambda (#{else\ 878}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 840}#
                                         #{args\ 863}#))
                                     #{tmp\ 871}#)))
                                (list #{tmp\ 871}#)))
                             #{args\ 863}#)))
                        (#{key\ 847}#
                          (lambda (#{args\ 879}#
                                   #{req\ 880}#
                                   #{opt\ 881}#
                                   #{rkey\ 882}#)
                            ((lambda (#{tmp\ 887}#)
                               ((lambda (#{tmp\ 888}#)
                                  (if #{tmp\ 888}#
                                    (apply (lambda ()
                                             (#{check\ 851}#
                                               #{req\ 880}#
                                               #{opt\ 881}#
                                               #f
                                               (cons #f
                                                     (reverse #{rkey\ 882}#))))
                                           #{tmp\ 888}#)
                                    ((lambda (#{tmp\ 889}#)
                                       (if (if #{tmp\ 889}#
                                             (apply (lambda (#{a\ 892}#
                                                             #{b\ 893}#)
                                                      (#{id?\ 222}#
                                                        #{a\ 892}#))
                                                    #{tmp\ 889}#)
                                             #f)
                                         (apply (lambda (#{a\ 896}# #{b\ 897}#)
                                                  ((lambda (#{tmp\ 899}#)
                                                     ((lambda (#{k\ 901}#)
                                                        (#{key\ 847}#
                                                          #{b\ 897}#
                                                          #{req\ 880}#
                                                          #{opt\ 881}#
                                                          (cons (cons #{k\ 901}#
                                                                      (cons #{a\ 896}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i900"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i894"
                                                                                     "i895"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i883"
                                                                                     "i884"
                                                                                     "i885"
                                                                                     "i886"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i850"
                                                                                    "i848"
                                                                                    "i846"
                                                                                    "i844"
                                                                                    "i842"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i841"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*
                                                                                     noexpand)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i336"
                                                                                    "i334"
                                                                                    "i332"
                                                                                    "i330"
                                                                                    "i328"
                                                                                    "i326"
                                                                                    "i324"
                                                                                    "i322"
                                                                                    "i320"
                                                                                    "i318"
                                                                                    "i316"
                                                                                    "i314"
                                                                                    "i312"
                                                                                    "i310"
                                                                                    "i308"
                                                                                    "i306"
                                                                                    "i304"
                                                                                    "i302"
                                                                                    "i300"
                                                                                    "i298"
                                                                                    "i296"
                                                                                    "i294"
                                                                                    "i292"
                                                                                    "i290"
                                                                                    "i288"
                                                                                    "i286"
                                                                                    "i284"
                                                                                    "i282"
                                                                                    "i280"
                                                                                    "i278"
                                                                                    "i276"
                                                                                    "i274"
                                                                                    "i272"
                                                                                    "i270"
                                                                                    "i268"
                                                                                    "i266"
                                                                                    "i265"
                                                                                    "i264"
                                                                                    "i262"
                                                                                    "i261"
                                                                                    "i260"
                                                                                    "i259"
                                                                                    "i258"
                                                                                    "i256"
                                                                                    "i254"
                                                                                    "i252"
                                                                                    "i250"
                                                                                    "i248"
                                                                                    "i246"
                                                                                    "i244"
                                                                                    "i242"
                                                                                    "i239"
                                                                                    "i237"
                                                                                    "i236"
                                                                                    "i235"
                                                                                    "i234"
                                                                                    "i233"
                                                                                    "i232"
                                                                                    "i230"
                                                                                    "i228"
                                                                                    "i226"
                                                                                    "i224"
                                                                                    "i223"
                                                                                    "i221"
                                                                                    "i219"
                                                                                    "i217"
                                                                                    "i215"
                                                                                    "i213"
                                                                                    "i211"
                                                                                    "i209"
                                                                                    "i208"
                                                                                    "i206"
                                                                                    "i204"
                                                                                    "i203"
                                                                                    "i202"
                                                                                    "i200"
                                                                                    "i199"
                                                                                    "i197"
                                                                                    "i195"
                                                                                    "i193"
                                                                                    "i191"
                                                                                    "i189"
                                                                                    "i187"
                                                                                    "i185"
                                                                                    "i183"
                                                                                    "i181"
                                                                                    "i179"
                                                                                    "i177"
                                                                                    "i175"
                                                                                    "i173"
                                                                                    "i171"
                                                                                    "i169"
                                                                                    "i167"
                                                                                    "i165"
                                                                                    "i163"
                                                                                    "i161"
                                                                                    "i159"
                                                                                    "i157"
                                                                                    "i155"
                                                                                    "i153"
                                                                                    "i151"
                                                                                    "i149"
                                                                                    "i147"
                                                                                    "i145"
                                                                                    "i143"
                                                                                    "i141"
                                                                                    "i139"
                                                                                    "i137"
                                                                                    "i135"
                                                                                    "i134"
                                                                                    "i132"
                                                                                    "i130"
                                                                                    "i128"
                                                                                    "i126"
                                                                                    "i124"
                                                                                    "i122"
                                                                                    "i120"
                                                                                    "i118"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i21"
                                                                                    "i19")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 882}#)))
                                                      #{tmp\ 899}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 896}#))))
                                                #{tmp\ 889}#)
                                         ((lambda (#{tmp\ 902}#)
                                            (if (if #{tmp\ 902}#
                                                  (apply (lambda (#{a\ 906}#
                                                                  #{init\ 907}#
                                                                  #{b\ 908}#)
                                                           (#{id?\ 222}#
                                                             #{a\ 906}#))
                                                         #{tmp\ 902}#)
                                                  #f)
                                              (apply (lambda (#{a\ 912}#
                                                              #{init\ 913}#
                                                              #{b\ 914}#)
                                                       ((lambda (#{tmp\ 916}#)
                                                          ((lambda (#{k\ 918}#)
                                                             (#{key\ 847}#
                                                               #{b\ 914}#
                                                               #{req\ 880}#
                                                               #{opt\ 881}#
                                                               (cons (list #{k\ 918}#
                                                                           #{a\ 912}#
                                                                           #{init\ 913}#)
                                                                     #{rkey\ 882}#)))
                                                           #{tmp\ 916}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 912}#))))
                                                     #{tmp\ 902}#)
                                              ((lambda (#{tmp\ 919}#)
                                                 (if (if #{tmp\ 919}#
                                                       (apply (lambda (#{a\ 924}#
                                                                       #{init\ 925}#
                                                                       #{k\ 926}#
                                                                       #{b\ 927}#)
                                                                (if (#{id?\ 222}#
                                                                      #{a\ 924}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 926}#))
                                                                  #f))
                                                              #{tmp\ 919}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 934}#
                                                                   #{init\ 935}#
                                                                   #{k\ 936}#
                                                                   #{b\ 937}#)
                                                            (#{key\ 847}#
                                                              #{b\ 937}#
                                                              #{req\ 880}#
                                                              #{opt\ 881}#
                                                              (cons (list #{k\ 936}#
                                                                          #{a\ 934}#
                                                                          #{init\ 935}#)
                                                                    #{rkey\ 882}#)))
                                                          #{tmp\ 919}#)
                                                   ((lambda (#{tmp\ 938}#)
                                                      (if (if #{tmp\ 938}#
                                                            (apply (lambda (#{aok\ 940}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 940}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 938}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 942}#)
                                                                 (#{check\ 851}#
                                                                   #{req\ 880}#
                                                                   #{opt\ 881}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 882}#))))
                                                               #{tmp\ 938}#)
                                                        ((lambda (#{tmp\ 943}#)
                                                           (if (if #{tmp\ 943}#
                                                                 (apply (lambda (#{aok\ 947}#
                                                                                 #{a\ 948}#
                                                                                 #{b\ 949}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 947}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 948}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 943}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 955}#
                                                                             #{a\ 956}#
                                                                             #{b\ 957}#)
                                                                      (#{rest\ 849}#
                                                                        #{b\ 957}#
                                                                        #{req\ 880}#
                                                                        #{opt\ 881}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 882}#))))
                                                                    #{tmp\ 943}#)
                                                             ((lambda (#{tmp\ 958}#)
                                                                (if (if #{tmp\ 958}#
                                                                      (apply (lambda (#{aok\ 961}#
                                                                                      #{r\ 962}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 961}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 222}#
                                                                                   #{r\ 962}#)
                                                                                 #f))
                                                                             #{tmp\ 958}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 967}#
                                                                                  #{r\ 968}#)
                                                                           (#{rest\ 849}#
                                                                             #{r\ 968}#
                                                                             #{req\ 880}#
                                                                             #{opt\ 881}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 882}#))))
                                                                         #{tmp\ 958}#)
                                                                  ((lambda (#{tmp\ 969}#)
                                                                     (if (if #{tmp\ 969}#
                                                                           (apply (lambda (#{a\ 972}#
                                                                                           #{b\ 973}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 972}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 969}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 976}#
                                                                                       #{b\ 977}#)
                                                                                (#{rest\ 849}#
                                                                                  #{b\ 977}#
                                                                                  #{req\ 880}#
                                                                                  #{opt\ 881}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 882}#))))
                                                                              #{tmp\ 969}#)
                                                                       ((lambda (#{tmp\ 978}#)
                                                                          (if (if #{tmp\ 978}#
                                                                                (apply (lambda (#{r\ 980}#)
                                                                                         (#{id?\ 222}#
                                                                                           #{r\ 980}#))
                                                                                       #{tmp\ 978}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 982}#)
                                                                                     (#{rest\ 849}#
                                                                                       #{r\ 982}#
                                                                                       #{req\ 880}#
                                                                                       #{opt\ 881}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 882}#))))
                                                                                   #{tmp\ 978}#)
                                                                            ((lambda (#{else\ 984}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 840}#
                                                                                 #{args\ 879}#))
                                                                             #{tmp\ 887}#)))
                                                                        (list #{tmp\ 887}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 887}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 887}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 887}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 887}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 887}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 887}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 887}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 887}# (quote ()))))
                             #{args\ 879}#)))
                        (#{opt\ 845}#
                          (lambda (#{args\ 985}# #{req\ 986}# #{ropt\ 987}#)
                            ((lambda (#{tmp\ 991}#)
                               ((lambda (#{tmp\ 992}#)
                                  (if #{tmp\ 992}#
                                    (apply (lambda ()
                                             (#{check\ 851}#
                                               #{req\ 986}#
                                               (reverse #{ropt\ 987}#)
                                               #f
                                               '()))
                                           #{tmp\ 992}#)
                                    ((lambda (#{tmp\ 993}#)
                                       (if (if #{tmp\ 993}#
                                             (apply (lambda (#{a\ 996}#
                                                             #{b\ 997}#)
                                                      (#{id?\ 222}#
                                                        #{a\ 996}#))
                                                    #{tmp\ 993}#)
                                             #f)
                                         (apply (lambda (#{a\ 1000}#
                                                         #{b\ 1001}#)
                                                  (#{opt\ 845}#
                                                    #{b\ 1001}#
                                                    #{req\ 986}#
                                                    (cons (cons #{a\ 1000}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i998"
                                                                         "i999"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i988"
                                                                         "i989"
                                                                         "i990"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i850"
                                                                        "i848"
                                                                        "i846"
                                                                        "i844"
                                                                        "i842"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i841"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*
                                                                         noexpand)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i336"
                                                                        "i334"
                                                                        "i332"
                                                                        "i330"
                                                                        "i328"
                                                                        "i326"
                                                                        "i324"
                                                                        "i322"
                                                                        "i320"
                                                                        "i318"
                                                                        "i316"
                                                                        "i314"
                                                                        "i312"
                                                                        "i310"
                                                                        "i308"
                                                                        "i306"
                                                                        "i304"
                                                                        "i302"
                                                                        "i300"
                                                                        "i298"
                                                                        "i296"
                                                                        "i294"
                                                                        "i292"
                                                                        "i290"
                                                                        "i288"
                                                                        "i286"
                                                                        "i284"
                                                                        "i282"
                                                                        "i280"
                                                                        "i278"
                                                                        "i276"
                                                                        "i274"
                                                                        "i272"
                                                                        "i270"
                                                                        "i268"
                                                                        "i266"
                                                                        "i265"
                                                                        "i264"
                                                                        "i262"
                                                                        "i261"
                                                                        "i260"
                                                                        "i259"
                                                                        "i258"
                                                                        "i256"
                                                                        "i254"
                                                                        "i252"
                                                                        "i250"
                                                                        "i248"
                                                                        "i246"
                                                                        "i244"
                                                                        "i242"
                                                                        "i239"
                                                                        "i237"
                                                                        "i236"
                                                                        "i235"
                                                                        "i234"
                                                                        "i233"
                                                                        "i232"
                                                                        "i230"
                                                                        "i228"
                                                                        "i226"
                                                                        "i224"
                                                                        "i223"
                                                                        "i221"
                                                                        "i219"
                                                                        "i217"
                                                                        "i215"
                                                                        "i213"
                                                                        "i211"
                                                                        "i209"
                                                                        "i208"
                                                                        "i206"
                                                                        "i204"
                                                                        "i203"
                                                                        "i202"
                                                                        "i200"
                                                                        "i199"
                                                                        "i197"
                                                                        "i195"
                                                                        "i193"
                                                                        "i191"
                                                                        "i189"
                                                                        "i187"
                                                                        "i185"
                                                                        "i183"
                                                                        "i181"
                                                                        "i179"
                                                                        "i177"
                                                                        "i175"
                                                                        "i173"
                                                                        "i171"
                                                                        "i169"
                                                                        "i167"
                                                                        "i165"
                                                                        "i163"
                                                                        "i161"
                                                                        "i159"
                                                                        "i157"
                                                                        "i155"
                                                                        "i153"
                                                                        "i151"
                                                                        "i149"
                                                                        "i147"
                                                                        "i145"
                                                                        "i143"
                                                                        "i141"
                                                                        "i139"
                                                                        "i137"
                                                                        "i135"
                                                                        "i134"
                                                                        "i132"
                                                                        "i130"
                                                                        "i128"
                                                                        "i126"
                                                                        "i124"
                                                                        "i122"
                                                                        "i120"
                                                                        "i118"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i21"
                                                                        "i19")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 987}#)))
                                                #{tmp\ 993}#)
                                         ((lambda (#{tmp\ 1002}#)
                                            (if (if #{tmp\ 1002}#
                                                  (apply (lambda (#{a\ 1006}#
                                                                  #{init\ 1007}#
                                                                  #{b\ 1008}#)
                                                           (#{id?\ 222}#
                                                             #{a\ 1006}#))
                                                         #{tmp\ 1002}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1012}#
                                                              #{init\ 1013}#
                                                              #{b\ 1014}#)
                                                       (#{opt\ 845}#
                                                         #{b\ 1014}#
                                                         #{req\ 986}#
                                                         (cons (list #{a\ 1012}#
                                                                     #{init\ 1013}#)
                                                               #{ropt\ 987}#)))
                                                     #{tmp\ 1002}#)
                                              ((lambda (#{tmp\ 1015}#)
                                                 (if (if #{tmp\ 1015}#
                                                       (apply (lambda (#{a\ 1018}#
                                                                       #{b\ 1019}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1018}#)
                                                                     #:key))
                                                              #{tmp\ 1015}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1022}#
                                                                   #{b\ 1023}#)
                                                            (#{key\ 847}#
                                                              #{b\ 1023}#
                                                              #{req\ 986}#
                                                              (reverse
                                                                #{ropt\ 987}#)
                                                              '()))
                                                          #{tmp\ 1015}#)
                                                   ((lambda (#{tmp\ 1024}#)
                                                      (if (if #{tmp\ 1024}#
                                                            (apply (lambda (#{a\ 1027}#
                                                                            #{b\ 1028}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1027}#)
                                                                          #:rest))
                                                                   #{tmp\ 1024}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1031}#
                                                                        #{b\ 1032}#)
                                                                 (#{rest\ 849}#
                                                                   #{b\ 1032}#
                                                                   #{req\ 986}#
                                                                   (reverse
                                                                     #{ropt\ 987}#)
                                                                   '()))
                                                               #{tmp\ 1024}#)
                                                        ((lambda (#{tmp\ 1033}#)
                                                           (if (if #{tmp\ 1033}#
                                                                 (apply (lambda (#{r\ 1035}#)
                                                                          (#{id?\ 222}#
                                                                            #{r\ 1035}#))
                                                                        #{tmp\ 1033}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1037}#)
                                                                      (#{rest\ 849}#
                                                                        #{r\ 1037}#
                                                                        #{req\ 986}#
                                                                        (reverse
                                                                          #{ropt\ 987}#)
                                                                        '()))
                                                                    #{tmp\ 1033}#)
                                                             ((lambda (#{else\ 1039}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 840}#
                                                                  #{args\ 985}#))
                                                              #{tmp\ 991}#)))
                                                         (list #{tmp\ 991}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 991}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 991}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 991}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 991}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 991}# (quote ()))))
                             #{args\ 985}#)))
                        (#{req\ 843}#
                          (lambda (#{args\ 1040}# #{rreq\ 1041}#)
                            ((lambda (#{tmp\ 1044}#)
                               ((lambda (#{tmp\ 1045}#)
                                  (if #{tmp\ 1045}#
                                    (apply (lambda ()
                                             (#{check\ 851}#
                                               (reverse #{rreq\ 1041}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 1045}#)
                                    ((lambda (#{tmp\ 1046}#)
                                       (if (if #{tmp\ 1046}#
                                             (apply (lambda (#{a\ 1049}#
                                                             #{b\ 1050}#)
                                                      (#{id?\ 222}#
                                                        #{a\ 1049}#))
                                                    #{tmp\ 1046}#)
                                             #f)
                                         (apply (lambda (#{a\ 1053}#
                                                         #{b\ 1054}#)
                                                  (#{req\ 843}#
                                                    #{b\ 1054}#
                                                    (cons #{a\ 1053}#
                                                          #{rreq\ 1041}#)))
                                                #{tmp\ 1046}#)
                                         ((lambda (#{tmp\ 1055}#)
                                            (if (if #{tmp\ 1055}#
                                                  (apply (lambda (#{a\ 1058}#
                                                                  #{b\ 1059}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 1058}#)
                                                                #:optional))
                                                         #{tmp\ 1055}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1062}#
                                                              #{b\ 1063}#)
                                                       (#{opt\ 845}#
                                                         #{b\ 1063}#
                                                         (reverse
                                                           #{rreq\ 1041}#)
                                                         '()))
                                                     #{tmp\ 1055}#)
                                              ((lambda (#{tmp\ 1064}#)
                                                 (if (if #{tmp\ 1064}#
                                                       (apply (lambda (#{a\ 1067}#
                                                                       #{b\ 1068}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1067}#)
                                                                     #:key))
                                                              #{tmp\ 1064}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1071}#
                                                                   #{b\ 1072}#)
                                                            (#{key\ 847}#
                                                              #{b\ 1072}#
                                                              (reverse
                                                                #{rreq\ 1041}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 1064}#)
                                                   ((lambda (#{tmp\ 1073}#)
                                                      (if (if #{tmp\ 1073}#
                                                            (apply (lambda (#{a\ 1076}#
                                                                            #{b\ 1077}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1076}#)
                                                                          #:rest))
                                                                   #{tmp\ 1073}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1080}#
                                                                        #{b\ 1081}#)
                                                                 (#{rest\ 849}#
                                                                   #{b\ 1081}#
                                                                   (reverse
                                                                     #{rreq\ 1041}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 1073}#)
                                                        ((lambda (#{tmp\ 1082}#)
                                                           (if (if #{tmp\ 1082}#
                                                                 (apply (lambda (#{r\ 1084}#)
                                                                          (#{id?\ 222}#
                                                                            #{r\ 1084}#))
                                                                        #{tmp\ 1082}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1086}#)
                                                                      (#{rest\ 849}#
                                                                        #{r\ 1086}#
                                                                        (reverse
                                                                          #{rreq\ 1041}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 1082}#)
                                                             ((lambda (#{else\ 1088}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 840}#
                                                                  #{args\ 1040}#))
                                                              #{tmp\ 1044}#)))
                                                         (list #{tmp\ 1044}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1044}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1044}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 1044}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 1044}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1044}# (quote ()))))
                             #{args\ 1040}#))))
                 (#{req\ 843}# #{orig-args\ 840}# (quote ())))))
           (#{chi-simple-lambda\ 327}#
             (lambda (#{e\ 1089}#
                      #{r\ 1090}#
                      #{w\ 1091}#
                      #{s\ 1092}#
                      #{mod\ 1093}#
                      #{req\ 1094}#
                      #{rest\ 1095}#
                      #{meta\ 1096}#
                      #{body\ 1097}#)
               (let ((#{ids\ 1109}#
                       (if #{rest\ 1095}#
                         (append #{req\ 1094}# (list #{rest\ 1095}#))
                         #{req\ 1094}#)))
                 (let ((#{vars\ 1111}#
                         (map #{gen-var\ 335}# #{ids\ 1109}#)))
                   (let ((#{labels\ 1113}#
                           (#{gen-labels\ 240}# #{ids\ 1109}#)))
                     (#{build-simple-lambda\ 164}#
                       #{s\ 1092}#
                       (map syntax->datum #{req\ 1094}#)
                       (if #{rest\ 1095}#
                         (syntax->datum #{rest\ 1095}#)
                         #f)
                       #{vars\ 1111}#
                       #{meta\ 1096}#
                       (#{chi-body\ 315}#
                         #{body\ 1097}#
                         (#{source-wrap\ 293}#
                           #{e\ 1089}#
                           #{w\ 1091}#
                           #{s\ 1092}#
                           #{mod\ 1093}#)
                         (#{extend-var-env\ 212}#
                           #{labels\ 1113}#
                           #{vars\ 1111}#
                           #{r\ 1090}#)
                         (#{make-binding-wrap\ 269}#
                           #{ids\ 1109}#
                           #{labels\ 1113}#
                           #{w\ 1091}#)
                         #{mod\ 1093}#)))))))
           (#{lambda-formals\ 325}#
             (lambda (#{orig-args\ 1116}#)
               (letrec ((#{check\ 1121}#
                          (lambda (#{req\ 1122}# #{rest\ 1123}#)
                            (if (#{distinct-bound-ids?\ 287}#
                                  (if #{rest\ 1123}#
                                    (cons #{rest\ 1123}# #{req\ 1122}#)
                                    #{req\ 1122}#))
                              (values #{req\ 1122}# #f #{rest\ 1123}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 1116}#))))
                        (#{req\ 1119}#
                          (lambda (#{args\ 1129}# #{rreq\ 1130}#)
                            ((lambda (#{tmp\ 1133}#)
                               ((lambda (#{tmp\ 1134}#)
                                  (if #{tmp\ 1134}#
                                    (apply (lambda ()
                                             (#{check\ 1121}#
                                               (reverse #{rreq\ 1130}#)
                                               #f))
                                           #{tmp\ 1134}#)
                                    ((lambda (#{tmp\ 1135}#)
                                       (if (if #{tmp\ 1135}#
                                             (apply (lambda (#{a\ 1138}#
                                                             #{b\ 1139}#)
                                                      (#{id?\ 222}#
                                                        #{a\ 1138}#))
                                                    #{tmp\ 1135}#)
                                             #f)
                                         (apply (lambda (#{a\ 1142}#
                                                         #{b\ 1143}#)
                                                  (#{req\ 1119}#
                                                    #{b\ 1143}#
                                                    (cons #{a\ 1142}#
                                                          #{rreq\ 1130}#)))
                                                #{tmp\ 1135}#)
                                         ((lambda (#{tmp\ 1144}#)
                                            (if (if #{tmp\ 1144}#
                                                  (apply (lambda (#{r\ 1146}#)
                                                           (#{id?\ 222}#
                                                             #{r\ 1146}#))
                                                         #{tmp\ 1144}#)
                                                  #f)
                                              (apply (lambda (#{r\ 1148}#)
                                                       (#{check\ 1121}#
                                                         (reverse
                                                           #{rreq\ 1130}#)
                                                         #{r\ 1148}#))
                                                     #{tmp\ 1144}#)
                                              ((lambda (#{else\ 1150}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 1116}#
                                                   #{args\ 1129}#))
                                               #{tmp\ 1133}#)))
                                          (list #{tmp\ 1133}#))))
                                     ($sc-dispatch
                                       #{tmp\ 1133}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1133}# (quote ()))))
                             #{args\ 1129}#))))
                 (#{req\ 1119}# #{orig-args\ 1116}# (quote ())))))
           (#{ellipsis?\ 323}#
             (lambda (#{x\ 1151}#)
               (if (#{nonsymbol-id?\ 220}# #{x\ 1151}#)
                 (#{free-id=?\ 281}#
                   #{x\ 1151}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i1152"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*
                           noexpand)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i336"
                          "i334"
                          "i332"
                          "i330"
                          "i328"
                          "i326"
                          "i324"
                          "i322"
                          "i320"
                          "i318"
                          "i316"
                          "i314"
                          "i312"
                          "i310"
                          "i308"
                          "i306"
                          "i304"
                          "i302"
                          "i300"
                          "i298"
                          "i296"
                          "i294"
                          "i292"
                          "i290"
                          "i288"
                          "i286"
                          "i284"
                          "i282"
                          "i280"
                          "i278"
                          "i276"
                          "i274"
                          "i272"
                          "i270"
                          "i268"
                          "i266"
                          "i265"
                          "i264"
                          "i262"
                          "i261"
                          "i260"
                          "i259"
                          "i258"
                          "i256"
                          "i254"
                          "i252"
                          "i250"
                          "i248"
                          "i246"
                          "i244"
                          "i242"
                          "i239"
                          "i237"
                          "i236"
                          "i235"
                          "i234"
                          "i233"
                          "i232"
                          "i230"
                          "i228"
                          "i226"
                          "i224"
                          "i223"
                          "i221"
                          "i219"
                          "i217"
                          "i215"
                          "i213"
                          "i211"
                          "i209"
                          "i208"
                          "i206"
                          "i204"
                          "i203"
                          "i202"
                          "i200"
                          "i199"
                          "i197"
                          "i195"
                          "i193"
                          "i191"
                          "i189"
                          "i187"
                          "i185"
                          "i183"
                          "i181"
                          "i179"
                          "i177"
                          "i175"
                          "i173"
                          "i171"
                          "i169"
                          "i167"
                          "i165"
                          "i163"
                          "i161"
                          "i159"
                          "i157"
                          "i155"
                          "i153"
                          "i151"
                          "i149"
                          "i147"
                          "i145"
                          "i143"
                          "i141"
                          "i139"
                          "i137"
                          "i135"
                          "i134"
                          "i132"
                          "i130"
                          "i128"
                          "i126"
                          "i124"
                          "i122"
                          "i120"
                          "i118"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i21" "i19")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 321}#
             (lambda () (#{build-void\ 142}# #f)))
           (#{eval-local-transformer\ 319}#
             (lambda (#{expanded\ 1156}# #{mod\ 1157}#)
               (let ((#{p\ 1161}#
                       (#{local-eval-hook\ 133}#
                         #{expanded\ 1156}#
                         #{mod\ 1157}#)))
                 (if (procedure? #{p\ 1161}#)
                   (cons #{p\ 1161}# (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 1161}#)))))
           (#{chi-local-syntax\ 317}#
             (lambda (#{rec?\ 1162}#
                      #{e\ 1163}#
                      #{r\ 1164}#
                      #{w\ 1165}#
                      #{s\ 1166}#
                      #{mod\ 1167}#
                      #{k\ 1168}#)
               ((lambda (#{tmp\ 1176}#)
                  ((lambda (#{tmp\ 1177}#)
                     (if #{tmp\ 1177}#
                       (apply (lambda (#{_\ 1183}#
                                       #{id\ 1184}#
                                       #{val\ 1185}#
                                       #{e1\ 1186}#
                                       #{e2\ 1187}#)
                                (let ((#{ids\ 1189}# #{id\ 1184}#))
                                  (if (not (#{valid-bound-ids?\ 285}#
                                             #{ids\ 1189}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 1163}#)
                                    (let ((#{labels\ 1192}#
                                            (#{gen-labels\ 240}#
                                              #{ids\ 1189}#)))
                                      (let ((#{new-w\ 1194}#
                                              (#{make-binding-wrap\ 269}#
                                                #{ids\ 1189}#
                                                #{labels\ 1192}#
                                                #{w\ 1165}#)))
                                        (#{k\ 1168}#
                                          (cons #{e1\ 1186}# #{e2\ 1187}#)
                                          (#{extend-env\ 210}#
                                            #{labels\ 1192}#
                                            (let ((#{w\ 1198}#
                                                    (if #{rec?\ 1162}#
                                                      #{new-w\ 1194}#
                                                      #{w\ 1165}#))
                                                  (#{trans-r\ 1199}#
                                                    (#{macros-only-env\ 214}#
                                                      #{r\ 1164}#)))
                                              (map (lambda (#{x\ 1200}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 319}#
                                                             (#{chi\ 307}#
                                                               #{x\ 1200}#
                                                               #{trans-r\ 1199}#
                                                               #{w\ 1198}#
                                                               #{mod\ 1167}#)
                                                             #{mod\ 1167}#)))
                                                   #{val\ 1185}#))
                                            #{r\ 1164}#)
                                          #{new-w\ 1194}#
                                          #{s\ 1166}#
                                          #{mod\ 1167}#))))))
                              #{tmp\ 1177}#)
                       ((lambda (#{_\ 1205}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 293}#
                              #{e\ 1163}#
                              #{w\ 1165}#
                              #{s\ 1166}#
                              #{mod\ 1167}#)))
                        #{tmp\ 1176}#)))
                   ($sc-dispatch
                     #{tmp\ 1176}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 1163}#)))
           (#{chi-body\ 315}#
             (lambda (#{body\ 1206}#
                      #{outer-form\ 1207}#
                      #{r\ 1208}#
                      #{w\ 1209}#
                      #{mod\ 1210}#)
               (let ((#{r\ 1218}#
                       (cons '("placeholder" placeholder)
                             #{r\ 1208}#)))
                 (let ((#{ribcage\ 1220}#
                         (#{make-ribcage\ 243}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 1223}#
                           (#{make-wrap\ 227}#
                             (#{wrap-marks\ 229}# #{w\ 1209}#)
                             (cons #{ribcage\ 1220}#
                                   (#{wrap-subst\ 231}# #{w\ 1209}#)))))
                     (letrec ((#{parse\ 1232}#
                                (lambda (#{body\ 1233}#
                                         #{ids\ 1234}#
                                         #{labels\ 1235}#
                                         #{var-ids\ 1236}#
                                         #{vars\ 1237}#
                                         #{vals\ 1238}#
                                         #{bindings\ 1239}#)
                                  (if (null? #{body\ 1233}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 1207}#)
                                    (let ((#{e\ 1244}# (cdar #{body\ 1233}#))
                                          (#{er\ 1245}# (caar #{body\ 1233}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 303}#
                                            #{e\ 1244}#
                                            #{er\ 1245}#
                                            '(())
                                            (#{source-annotation\ 201}#
                                              #{er\ 1245}#)
                                            #{ribcage\ 1220}#
                                            #{mod\ 1210}#
                                            #f))
                                        (lambda (#{type\ 1247}#
                                                 #{value\ 1248}#
                                                 #{e\ 1249}#
                                                 #{w\ 1250}#
                                                 #{s\ 1251}#
                                                 #{mod\ 1252}#)
                                          (if (memv #{type\ 1247}#
                                                    '(define-form))
                                            (let ((#{id\ 1262}#
                                                    (#{wrap\ 291}#
                                                      #{value\ 1248}#
                                                      #{w\ 1250}#
                                                      #{mod\ 1252}#))
                                                  (#{label\ 1263}#
                                                    (#{gen-label\ 238}#)))
                                              (let ((#{var\ 1265}#
                                                      (#{gen-var\ 335}#
                                                        #{id\ 1262}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 267}#
                                                    #{ribcage\ 1220}#
                                                    #{id\ 1262}#
                                                    #{label\ 1263}#)
                                                  (#{parse\ 1232}#
                                                    (cdr #{body\ 1233}#)
                                                    (cons #{id\ 1262}#
                                                          #{ids\ 1234}#)
                                                    (cons #{label\ 1263}#
                                                          #{labels\ 1235}#)
                                                    (cons #{id\ 1262}#
                                                          #{var-ids\ 1236}#)
                                                    (cons #{var\ 1265}#
                                                          #{vars\ 1237}#)
                                                    (cons (cons #{er\ 1245}#
                                                                (#{wrap\ 291}#
                                                                  #{e\ 1249}#
                                                                  #{w\ 1250}#
                                                                  #{mod\ 1252}#))
                                                          #{vals\ 1238}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 1265}#)
                                                          #{bindings\ 1239}#)))))
                                            (if (memv #{type\ 1247}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 1270}#
                                                      (#{wrap\ 291}#
                                                        #{value\ 1248}#
                                                        #{w\ 1250}#
                                                        #{mod\ 1252}#))
                                                    (#{label\ 1271}#
                                                      (#{gen-label\ 238}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 267}#
                                                    #{ribcage\ 1220}#
                                                    #{id\ 1270}#
                                                    #{label\ 1271}#)
                                                  (#{parse\ 1232}#
                                                    (cdr #{body\ 1233}#)
                                                    (cons #{id\ 1270}#
                                                          #{ids\ 1234}#)
                                                    (cons #{label\ 1271}#
                                                          #{labels\ 1235}#)
                                                    #{var-ids\ 1236}#
                                                    #{vars\ 1237}#
                                                    #{vals\ 1238}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 1245}#
                                                                      (#{wrap\ 291}#
                                                                        #{e\ 1249}#
                                                                        #{w\ 1250}#
                                                                        #{mod\ 1252}#)))
                                                          #{bindings\ 1239}#))))
                                              (if (memv #{type\ 1247}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 1274}#)
                                                   ((lambda (#{tmp\ 1275}#)
                                                      (if #{tmp\ 1275}#
                                                        (apply (lambda (#{_\ 1278}#
                                                                        #{e1\ 1279}#)
                                                                 (#{parse\ 1232}#
                                                                   (letrec ((#{f\ 1282}#
                                                                              (lambda (#{forms\ 1283}#)
                                                                                (if (null? #{forms\ 1283}#)
                                                                                  (cdr #{body\ 1233}#)
                                                                                  (cons (cons #{er\ 1245}#
                                                                                              (#{wrap\ 291}#
                                                                                                (car #{forms\ 1283}#)
                                                                                                #{w\ 1250}#
                                                                                                #{mod\ 1252}#))
                                                                                        (#{f\ 1282}#
                                                                                          (cdr #{forms\ 1283}#)))))))
                                                                     (#{f\ 1282}#
                                                                       #{e1\ 1279}#))
                                                                   #{ids\ 1234}#
                                                                   #{labels\ 1235}#
                                                                   #{var-ids\ 1236}#
                                                                   #{vars\ 1237}#
                                                                   #{vals\ 1238}#
                                                                   #{bindings\ 1239}#))
                                                               #{tmp\ 1275}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 1274}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 1274}#
                                                      '(any . each-any))))
                                                 #{e\ 1249}#)
                                                (if (memv #{type\ 1247}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 317}#
                                                    #{value\ 1248}#
                                                    #{e\ 1249}#
                                                    #{er\ 1245}#
                                                    #{w\ 1250}#
                                                    #{s\ 1251}#
                                                    #{mod\ 1252}#
                                                    (lambda (#{forms\ 1286}#
                                                             #{er\ 1287}#
                                                             #{w\ 1288}#
                                                             #{s\ 1289}#
                                                             #{mod\ 1290}#)
                                                      (#{parse\ 1232}#
                                                        (letrec ((#{f\ 1298}#
                                                                   (lambda (#{forms\ 1299}#)
                                                                     (if (null? #{forms\ 1299}#)
                                                                       (cdr #{body\ 1233}#)
                                                                       (cons (cons #{er\ 1287}#
                                                                                   (#{wrap\ 291}#
                                                                                     (car #{forms\ 1299}#)
                                                                                     #{w\ 1288}#
                                                                                     #{mod\ 1290}#))
                                                                             (#{f\ 1298}#
                                                                               (cdr #{forms\ 1299}#)))))))
                                                          (#{f\ 1298}#
                                                            #{forms\ 1286}#))
                                                        #{ids\ 1234}#
                                                        #{labels\ 1235}#
                                                        #{var-ids\ 1236}#
                                                        #{vars\ 1237}#
                                                        #{vals\ 1238}#
                                                        #{bindings\ 1239}#)))
                                                  (if (null? #{ids\ 1234}#)
                                                    (#{build-sequence\ 174}#
                                                      #f
                                                      (map (lambda (#{x\ 1302}#)
                                                             (#{chi\ 307}#
                                                               (cdr #{x\ 1302}#)
                                                               (car #{x\ 1302}#)
                                                               '(())
                                                               #{mod\ 1252}#))
                                                           (cons (cons #{er\ 1245}#
                                                                       (#{source-wrap\ 293}#
                                                                         #{e\ 1249}#
                                                                         #{w\ 1250}#
                                                                         #{s\ 1251}#
                                                                         #{mod\ 1252}#))
                                                                 (cdr #{body\ 1233}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 285}#
                                                                 #{ids\ 1234}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 1207}#))
                                                      (letrec ((#{loop\ 1309}#
                                                                 (lambda (#{bs\ 1310}#
                                                                          #{er-cache\ 1311}#
                                                                          #{r-cache\ 1312}#)
                                                                   (if (not (null? #{bs\ 1310}#))
                                                                     (let ((#{b\ 1315}#
                                                                             (car #{bs\ 1310}#)))
                                                                       (if (eq? (car #{b\ 1315}#)
                                                                                'macro)
                                                                         (let ((#{er\ 1318}#
                                                                                 (cadr #{b\ 1315}#)))
                                                                           (let ((#{r-cache\ 1320}#
                                                                                   (if (eq? #{er\ 1318}#
                                                                                            #{er-cache\ 1311}#)
                                                                                     #{r-cache\ 1312}#
                                                                                     (#{macros-only-env\ 214}#
                                                                                       #{er\ 1318}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 1315}#
                                                                                 (#{eval-local-transformer\ 319}#
                                                                                   (#{chi\ 307}#
                                                                                     (cddr #{b\ 1315}#)
                                                                                     #{r-cache\ 1320}#
                                                                                     '(())
                                                                                     #{mod\ 1252}#)
                                                                                   #{mod\ 1252}#))
                                                                               (#{loop\ 1309}#
                                                                                 (cdr #{bs\ 1310}#)
                                                                                 #{er\ 1318}#
                                                                                 #{r-cache\ 1320}#))))
                                                                         (#{loop\ 1309}#
                                                                           (cdr #{bs\ 1310}#)
                                                                           #{er-cache\ 1311}#
                                                                           #{r-cache\ 1312}#)))))))
                                                        (#{loop\ 1309}#
                                                          #{bindings\ 1239}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 1218}#
                                                        (#{extend-env\ 210}#
                                                          #{labels\ 1235}#
                                                          #{bindings\ 1239}#
                                                          (cdr #{r\ 1218}#)))
                                                      (#{build-letrec\ 180}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 1236}#)
                                                        #{vars\ 1237}#
                                                        (map (lambda (#{x\ 1323}#)
                                                               (#{chi\ 307}#
                                                                 (cdr #{x\ 1323}#)
                                                                 (car #{x\ 1323}#)
                                                                 '(())
                                                                 #{mod\ 1252}#))
                                                             #{vals\ 1238}#)
                                                        (#{build-sequence\ 174}#
                                                          #f
                                                          (map (lambda (#{x\ 1327}#)
                                                                 (#{chi\ 307}#
                                                                   (cdr #{x\ 1327}#)
                                                                   (car #{x\ 1327}#)
                                                                   '(())
                                                                   #{mod\ 1252}#))
                                                               (cons (cons #{er\ 1245}#
                                                                           (#{source-wrap\ 293}#
                                                                             #{e\ 1249}#
                                                                             #{w\ 1250}#
                                                                             #{s\ 1251}#
                                                                             #{mod\ 1252}#))
                                                                     (cdr #{body\ 1233}#))))))))))))))))))
                       (#{parse\ 1232}#
                         (map (lambda (#{x\ 1240}#)
                                (cons #{r\ 1218}#
                                      (#{wrap\ 291}#
                                        #{x\ 1240}#
                                        #{w\ 1223}#
                                        #{mod\ 1210}#)))
                              #{body\ 1206}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 313}#
             (lambda (#{p\ 1330}#
                      #{e\ 1331}#
                      #{r\ 1332}#
                      #{w\ 1333}#
                      #{rib\ 1334}#
                      #{mod\ 1335}#)
               (letrec ((#{rebuild-macro-output\ 1343}#
                          (lambda (#{x\ 1344}# #{m\ 1345}#)
                            (if (pair? #{x\ 1344}#)
                              (cons (#{rebuild-macro-output\ 1343}#
                                      (car #{x\ 1344}#)
                                      #{m\ 1345}#)
                                    (#{rebuild-macro-output\ 1343}#
                                      (cdr #{x\ 1344}#)
                                      #{m\ 1345}#))
                              (if (#{syntax-object?\ 186}# #{x\ 1344}#)
                                (let ((#{w\ 1353}#
                                        (#{syntax-object-wrap\ 190}#
                                          #{x\ 1344}#)))
                                  (let ((#{ms\ 1356}#
                                          (#{wrap-marks\ 229}# #{w\ 1353}#))
                                        (#{s\ 1357}#
                                          (#{wrap-subst\ 231}# #{w\ 1353}#)))
                                    (if (if (pair? #{ms\ 1356}#)
                                          (eq? (car #{ms\ 1356}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 184}#
                                        (#{syntax-object-expression\ 188}#
                                          #{x\ 1344}#)
                                        (#{make-wrap\ 227}#
                                          (cdr #{ms\ 1356}#)
                                          (if #{rib\ 1334}#
                                            (cons #{rib\ 1334}#
                                                  (cdr #{s\ 1357}#))
                                            (cdr #{s\ 1357}#)))
                                        (#{syntax-object-module\ 192}#
                                          #{x\ 1344}#))
                                      (#{make-syntax-object\ 184}#
                                        (#{syntax-object-expression\ 188}#
                                          #{x\ 1344}#)
                                        (#{make-wrap\ 227}#
                                          (cons #{m\ 1345}# #{ms\ 1356}#)
                                          (if #{rib\ 1334}#
                                            (cons #{rib\ 1334}#
                                                  (cons 'shift
                                                        #{s\ 1357}#))
                                            (cons (quote shift) #{s\ 1357}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 1330}#))))))
                                (if (vector? #{x\ 1344}#)
                                  (let ((#{n\ 1365}#
                                          (vector-length #{x\ 1344}#)))
                                    (let ((#{v\ 1367}#
                                            (make-vector #{n\ 1365}#)))
                                      (letrec ((#{loop\ 1370}#
                                                 (lambda (#{i\ 1371}#)
                                                   (if (#{fx=\ 127}#
                                                         #{i\ 1371}#
                                                         #{n\ 1365}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 1367}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 1367}#
                                                         #{i\ 1371}#
                                                         (#{rebuild-macro-output\ 1343}#
                                                           (vector-ref
                                                             #{x\ 1344}#
                                                             #{i\ 1371}#)
                                                           #{m\ 1345}#))
                                                       (#{loop\ 1370}#
                                                         (#{fx+\ 123}#
                                                           #{i\ 1371}#
                                                           1)))))))
                                        (#{loop\ 1370}# 0))))
                                  (if (symbol? #{x\ 1344}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 293}#
                                        #{e\ 1331}#
                                        #{w\ 1333}#
                                        (#{wrap-subst\ 231}# #{w\ 1333}#)
                                        #{mod\ 1335}#)
                                      #{x\ 1344}#)
                                    #{x\ 1344}#)))))))
                 (#{rebuild-macro-output\ 1343}#
                   ((car #{p\ 1330}#)
                    (#{wrap\ 291}#
                      #{e\ 1331}#
                      (#{anti-mark\ 263}# #{w\ 1333}#)
                      #{mod\ 1335}#))
                   (gensym "m")))))
           (#{chi-application\ 311}#
             (lambda (#{x\ 1378}#
                      #{e\ 1379}#
                      #{r\ 1380}#
                      #{w\ 1381}#
                      #{s\ 1382}#
                      #{mod\ 1383}#)
               ((lambda (#{tmp\ 1390}#)
                  ((lambda (#{tmp\ 1391}#)
                     (if #{tmp\ 1391}#
                       (apply (lambda (#{e0\ 1394}# #{e1\ 1395}#)
                                (#{build-application\ 144}#
                                  #{s\ 1382}#
                                  #{x\ 1378}#
                                  (map (lambda (#{e\ 1396}#)
                                         (#{chi\ 307}#
                                           #{e\ 1396}#
                                           #{r\ 1380}#
                                           #{w\ 1381}#
                                           #{mod\ 1383}#))
                                       #{e1\ 1395}#)))
                              #{tmp\ 1391}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 1390}#)))
                   ($sc-dispatch
                     #{tmp\ 1390}#
                     '(any . each-any))))
                #{e\ 1379}#)))
           (#{chi-expr\ 309}#
             (lambda (#{type\ 1399}#
                      #{value\ 1400}#
                      #{e\ 1401}#
                      #{r\ 1402}#
                      #{w\ 1403}#
                      #{s\ 1404}#
                      #{mod\ 1405}#)
               (if (memv #{type\ 1399}# (quote (lexical)))
                 (#{build-lexical-reference\ 150}#
                   'value
                   #{s\ 1404}#
                   #{e\ 1401}#
                   #{value\ 1400}#)
                 (if (memv #{type\ 1399}# (quote (core core-form)))
                   (#{value\ 1400}#
                     #{e\ 1401}#
                     #{r\ 1402}#
                     #{w\ 1403}#
                     #{s\ 1404}#
                     #{mod\ 1405}#)
                   (if (memv #{type\ 1399}# (quote (module-ref)))
                     (call-with-values
                       (lambda () (#{value\ 1400}# #{e\ 1401}#))
                       (lambda (#{id\ 1416}# #{mod\ 1417}#)
                         (#{build-global-reference\ 156}#
                           #{s\ 1404}#
                           #{id\ 1416}#
                           #{mod\ 1417}#)))
                     (if (memv #{type\ 1399}# (quote (lexical-call)))
                       (#{chi-application\ 311}#
                         (#{build-lexical-reference\ 150}#
                           'fun
                           (#{source-annotation\ 201}# (car #{e\ 1401}#))
                           (car #{e\ 1401}#)
                           #{value\ 1400}#)
                         #{e\ 1401}#
                         #{r\ 1402}#
                         #{w\ 1403}#
                         #{s\ 1404}#
                         #{mod\ 1405}#)
                       (if (memv #{type\ 1399}# (quote (global-call)))
                         (#{chi-application\ 311}#
                           (#{build-global-reference\ 156}#
                             (#{source-annotation\ 201}# (car #{e\ 1401}#))
                             (if (#{syntax-object?\ 186}# #{value\ 1400}#)
                               (#{syntax-object-expression\ 188}#
                                 #{value\ 1400}#)
                               #{value\ 1400}#)
                             (if (#{syntax-object?\ 186}# #{value\ 1400}#)
                               (#{syntax-object-module\ 192}# #{value\ 1400}#)
                               #{mod\ 1405}#))
                           #{e\ 1401}#
                           #{r\ 1402}#
                           #{w\ 1403}#
                           #{s\ 1404}#
                           #{mod\ 1405}#)
                         (if (memv #{type\ 1399}# (quote (constant)))
                           (#{build-data\ 172}#
                             #{s\ 1404}#
                             (#{strip\ 333}#
                               (#{source-wrap\ 293}#
                                 #{e\ 1401}#
                                 #{w\ 1403}#
                                 #{s\ 1404}#
                                 #{mod\ 1405}#)
                               '(())))
                           (if (memv #{type\ 1399}# (quote (global)))
                             (#{build-global-reference\ 156}#
                               #{s\ 1404}#
                               #{value\ 1400}#
                               #{mod\ 1405}#)
                             (if (memv #{type\ 1399}# (quote (call)))
                               (#{chi-application\ 311}#
                                 (#{chi\ 307}#
                                   (car #{e\ 1401}#)
                                   #{r\ 1402}#
                                   #{w\ 1403}#
                                   #{mod\ 1405}#)
                                 #{e\ 1401}#
                                 #{r\ 1402}#
                                 #{w\ 1403}#
                                 #{s\ 1404}#
                                 #{mod\ 1405}#)
                               (if (memv #{type\ 1399}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 1427}#)
                                    ((lambda (#{tmp\ 1428}#)
                                       (if #{tmp\ 1428}#
                                         (apply (lambda (#{_\ 1432}#
                                                         #{e1\ 1433}#
                                                         #{e2\ 1434}#)
                                                  (#{chi-sequence\ 295}#
                                                    (cons #{e1\ 1433}#
                                                          #{e2\ 1434}#)
                                                    #{r\ 1402}#
                                                    #{w\ 1403}#
                                                    #{s\ 1404}#
                                                    #{mod\ 1405}#))
                                                #{tmp\ 1428}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 1427}#)))
                                     ($sc-dispatch
                                       #{tmp\ 1427}#
                                       '(any any . each-any))))
                                  #{e\ 1401}#)
                                 (if (memv #{type\ 1399}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 317}#
                                     #{value\ 1400}#
                                     #{e\ 1401}#
                                     #{r\ 1402}#
                                     #{w\ 1403}#
                                     #{s\ 1404}#
                                     #{mod\ 1405}#
                                     #{chi-sequence\ 295}#)
                                   (if (memv #{type\ 1399}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 1438}#)
                                        ((lambda (#{tmp\ 1439}#)
                                           (if #{tmp\ 1439}#
                                             (apply (lambda (#{_\ 1444}#
                                                             #{x\ 1445}#
                                                             #{e1\ 1446}#
                                                             #{e2\ 1447}#)
                                                      (let ((#{when-list\ 1449}#
                                                              (#{chi-when-list\ 301}#
                                                                #{e\ 1401}#
                                                                #{x\ 1445}#
                                                                #{w\ 1403}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 1449}#)
                                                          (#{chi-sequence\ 295}#
                                                            (cons #{e1\ 1446}#
                                                                  #{e2\ 1447}#)
                                                            #{r\ 1402}#
                                                            #{w\ 1403}#
                                                            #{s\ 1404}#
                                                            #{mod\ 1405}#)
                                                          (#{chi-void\ 321}#))))
                                                    #{tmp\ 1439}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 1438}#)))
                                         ($sc-dispatch
                                           #{tmp\ 1438}#
                                           '(any each-any any . each-any))))
                                      #{e\ 1401}#)
                                     (if (memv #{type\ 1399}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 1401}#
                                         (#{wrap\ 291}#
                                           #{value\ 1400}#
                                           #{w\ 1403}#
                                           #{mod\ 1405}#))
                                       (if (memv #{type\ 1399}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 293}#
                                             #{e\ 1401}#
                                             #{w\ 1403}#
                                             #{s\ 1404}#
                                             #{mod\ 1405}#))
                                         (if (memv #{type\ 1399}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 293}#
                                               #{e\ 1401}#
                                               #{w\ 1403}#
                                               #{s\ 1404}#
                                               #{mod\ 1405}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 293}#
                                               #{e\ 1401}#
                                               #{w\ 1403}#
                                               #{s\ 1404}#
                                               #{mod\ 1405}#))))))))))))))))))
           (#{chi\ 307}#
             (lambda (#{e\ 1456}#
                      #{r\ 1457}#
                      #{w\ 1458}#
                      #{mod\ 1459}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 303}#
                     #{e\ 1456}#
                     #{r\ 1457}#
                     #{w\ 1458}#
                     (#{source-annotation\ 201}# #{e\ 1456}#)
                     #f
                     #{mod\ 1459}#
                     #f))
                 (lambda (#{type\ 1464}#
                          #{value\ 1465}#
                          #{e\ 1466}#
                          #{w\ 1467}#
                          #{s\ 1468}#
                          #{mod\ 1469}#)
                   (#{chi-expr\ 309}#
                     #{type\ 1464}#
                     #{value\ 1465}#
                     #{e\ 1466}#
                     #{r\ 1457}#
                     #{w\ 1467}#
                     #{s\ 1468}#
                     #{mod\ 1469}#)))))
           (#{chi-top\ 305}#
             (lambda (#{e\ 1476}#
                      #{r\ 1477}#
                      #{w\ 1478}#
                      #{m\ 1479}#
                      #{esew\ 1480}#
                      #{mod\ 1481}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 303}#
                     #{e\ 1476}#
                     #{r\ 1477}#
                     #{w\ 1478}#
                     (#{source-annotation\ 201}# #{e\ 1476}#)
                     #f
                     #{mod\ 1481}#
                     #f))
                 (lambda (#{type\ 1502}#
                          #{value\ 1503}#
                          #{e\ 1504}#
                          #{w\ 1505}#
                          #{s\ 1506}#
                          #{mod\ 1507}#)
                   (if (memv #{type\ 1502}# (quote (begin-form)))
                     ((lambda (#{tmp\ 1515}#)
                        ((lambda (#{tmp\ 1516}#)
                           (if #{tmp\ 1516}#
                             (apply (lambda (#{_\ 1518}#) (#{chi-void\ 321}#))
                                    #{tmp\ 1516}#)
                             ((lambda (#{tmp\ 1519}#)
                                (if #{tmp\ 1519}#
                                  (apply (lambda (#{_\ 1523}#
                                                  #{e1\ 1524}#
                                                  #{e2\ 1525}#)
                                           (#{chi-top-sequence\ 297}#
                                             (cons #{e1\ 1524}# #{e2\ 1525}#)
                                             #{r\ 1477}#
                                             #{w\ 1505}#
                                             #{s\ 1506}#
                                             #{m\ 1479}#
                                             #{esew\ 1480}#
                                             #{mod\ 1507}#))
                                         #{tmp\ 1519}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 1515}#)))
                              ($sc-dispatch
                                #{tmp\ 1515}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 1515}# (quote (any)))))
                      #{e\ 1504}#)
                     (if (memv #{type\ 1502}# (quote (local-syntax-form)))
                       (#{chi-local-syntax\ 317}#
                         #{value\ 1503}#
                         #{e\ 1504}#
                         #{r\ 1477}#
                         #{w\ 1505}#
                         #{s\ 1506}#
                         #{mod\ 1507}#
                         (lambda (#{body\ 1528}#
                                  #{r\ 1529}#
                                  #{w\ 1530}#
                                  #{s\ 1531}#
                                  #{mod\ 1532}#)
                           (#{chi-top-sequence\ 297}#
                             #{body\ 1528}#
                             #{r\ 1529}#
                             #{w\ 1530}#
                             #{s\ 1531}#
                             #{m\ 1479}#
                             #{esew\ 1480}#
                             #{mod\ 1532}#)))
                       (if (memv #{type\ 1502}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 1539}#)
                            ((lambda (#{tmp\ 1540}#)
                               (if #{tmp\ 1540}#
                                 (apply (lambda (#{_\ 1545}#
                                                 #{x\ 1546}#
                                                 #{e1\ 1547}#
                                                 #{e2\ 1548}#)
                                          (let ((#{when-list\ 1551}#
                                                  (#{chi-when-list\ 301}#
                                                    #{e\ 1504}#
                                                    #{x\ 1546}#
                                                    #{w\ 1505}#))
                                                (#{body\ 1552}#
                                                  (cons #{e1\ 1547}#
                                                        #{e2\ 1548}#)))
                                            (if (eq? #{m\ 1479}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 1551}#)
                                                (#{chi-top-sequence\ 297}#
                                                  #{body\ 1552}#
                                                  #{r\ 1477}#
                                                  #{w\ 1505}#
                                                  #{s\ 1506}#
                                                  (if (memq 'expand
                                                            #{when-list\ 1551}#)
                                                    'c&e
                                                    'e)
                                                  '(eval)
                                                  #{mod\ 1507}#)
                                                (begin
                                                  (if (memq 'expand
                                                            #{when-list\ 1551}#)
                                                    (#{top-level-eval-hook\ 131}#
                                                      (#{chi-top-sequence\ 297}#
                                                        #{body\ 1552}#
                                                        #{r\ 1477}#
                                                        #{w\ 1505}#
                                                        #{s\ 1506}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 1507}#)
                                                      #{mod\ 1507}#))
                                                  (#{chi-void\ 321}#)))
                                              (if (memq 'load
                                                        #{when-list\ 1551}#)
                                                (if (let ((#{t\ 1561}#
                                                            (memq 'compile
                                                                  #{when-list\ 1551}#)))
                                                      (if #{t\ 1561}#
                                                        #{t\ 1561}#
                                                        (let ((#{t\ 1564}#
                                                                (memq 'expand
                                                                      #{when-list\ 1551}#)))
                                                          (if #{t\ 1564}#
                                                            #{t\ 1564}#
                                                            (if (eq? #{m\ 1479}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 1551}#)
                                                              #f)))))
                                                  (#{chi-top-sequence\ 297}#
                                                    #{body\ 1552}#
                                                    #{r\ 1477}#
                                                    #{w\ 1505}#
                                                    #{s\ 1506}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 1507}#)
                                                  (if (memq #{m\ 1479}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 297}#
                                                      #{body\ 1552}#
                                                      #{r\ 1477}#
                                                      #{w\ 1505}#
                                                      #{s\ 1506}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 1507}#)
                                                    (#{chi-void\ 321}#)))
                                                (if (let ((#{t\ 1572}#
                                                            (memq 'compile
                                                                  #{when-list\ 1551}#)))
                                                      (if #{t\ 1572}#
                                                        #{t\ 1572}#
                                                        (let ((#{t\ 1575}#
                                                                (memq 'expand
                                                                      #{when-list\ 1551}#)))
                                                          (if #{t\ 1575}#
                                                            #{t\ 1575}#
                                                            (if (eq? #{m\ 1479}#
                                                                     'c&e)
                                                              (memq 'eval
                                                                    #{when-list\ 1551}#)
                                                              #f)))))
                                                  (begin
                                                    (#{top-level-eval-hook\ 131}#
                                                      (#{chi-top-sequence\ 297}#
                                                        #{body\ 1552}#
                                                        #{r\ 1477}#
                                                        #{w\ 1505}#
                                                        #{s\ 1506}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 1507}#)
                                                      #{mod\ 1507}#)
                                                    (#{chi-void\ 321}#))
                                                  (#{chi-void\ 321}#))))))
                                        #{tmp\ 1540}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 1539}#)))
                             ($sc-dispatch
                               #{tmp\ 1539}#
                               '(any each-any any . each-any))))
                          #{e\ 1504}#)
                         (if (memv #{type\ 1502}#
                                   '(define-syntax-form))
                           (let ((#{n\ 1583}#
                                   (#{id-var-name\ 279}#
                                     #{value\ 1503}#
                                     #{w\ 1505}#))
                                 (#{r\ 1584}#
                                   (#{macros-only-env\ 214}# #{r\ 1477}#)))
                             (if (memv #{m\ 1479}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 1480}#)
                                 (let ((#{e\ 1587}#
                                         (#{chi-install-global\ 299}#
                                           #{n\ 1583}#
                                           (#{chi\ 307}#
                                             #{e\ 1504}#
                                             #{r\ 1584}#
                                             #{w\ 1505}#
                                             #{mod\ 1507}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 131}#
                                       #{e\ 1587}#
                                       #{mod\ 1507}#)
                                     (if (memq (quote load) #{esew\ 1480}#)
                                       #{e\ 1587}#
                                       (#{chi-void\ 321}#))))
                                 (if (memq (quote load) #{esew\ 1480}#)
                                   (#{chi-install-global\ 299}#
                                     #{n\ 1583}#
                                     (#{chi\ 307}#
                                       #{e\ 1504}#
                                       #{r\ 1584}#
                                       #{w\ 1505}#
                                       #{mod\ 1507}#))
                                   (#{chi-void\ 321}#)))
                               (if (memv #{m\ 1479}# (quote (c&e)))
                                 (let ((#{e\ 1590}#
                                         (#{chi-install-global\ 299}#
                                           #{n\ 1583}#
                                           (#{chi\ 307}#
                                             #{e\ 1504}#
                                             #{r\ 1584}#
                                             #{w\ 1505}#
                                             #{mod\ 1507}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 131}#
                                       #{e\ 1590}#
                                       #{mod\ 1507}#)
                                     #{e\ 1590}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 1480}#)
                                     (#{top-level-eval-hook\ 131}#
                                       (#{chi-install-global\ 299}#
                                         #{n\ 1583}#
                                         (#{chi\ 307}#
                                           #{e\ 1504}#
                                           #{r\ 1584}#
                                           #{w\ 1505}#
                                           #{mod\ 1507}#))
                                       #{mod\ 1507}#))
                                   (#{chi-void\ 321}#)))))
                           (if (memv #{type\ 1502}# (quote (define-form)))
                             (let ((#{n\ 1595}#
                                     (#{id-var-name\ 279}#
                                       #{value\ 1503}#
                                       #{w\ 1505}#)))
                               (let ((#{type\ 1597}#
                                       (#{binding-type\ 205}#
                                         (#{lookup\ 216}#
                                           #{n\ 1595}#
                                           #{r\ 1477}#
                                           #{mod\ 1507}#))))
                                 (if (memv #{type\ 1597}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (memq #{m\ 1479}# (quote (c c&e)))
                                           (if (not (module-local-variable
                                                      (current-module)
                                                      #{n\ 1595}#))
                                             (current-module)
                                             #f)
                                           #f)
                                       (let ((#{old\ 1603}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 1595}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 1595}#
                                           (if (variable? #{old\ 1603}#)
                                             (variable-ref #{old\ 1603}#)
                                             #f))))
                                     (let ((#{x\ 1606}#
                                             (#{build-global-definition\ 162}#
                                               #{s\ 1506}#
                                               #{n\ 1595}#
                                               (#{chi\ 307}#
                                                 #{e\ 1504}#
                                                 #{r\ 1477}#
                                                 #{w\ 1505}#
                                                 #{mod\ 1507}#))))
                                       (begin
                                         (if (eq? #{m\ 1479}# (quote c&e))
                                           (#{top-level-eval-hook\ 131}#
                                             #{x\ 1606}#
                                             #{mod\ 1507}#))
                                         #{x\ 1606}#)))
                                   (if (memv #{type\ 1597}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 1504}#
                                       (#{wrap\ 291}#
                                         #{value\ 1503}#
                                         #{w\ 1505}#
                                         #{mod\ 1507}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 1504}#
                                       (#{wrap\ 291}#
                                         #{value\ 1503}#
                                         #{w\ 1505}#
                                         #{mod\ 1507}#))))))
                             (let ((#{x\ 1612}#
                                     (#{chi-expr\ 309}#
                                       #{type\ 1502}#
                                       #{value\ 1503}#
                                       #{e\ 1504}#
                                       #{r\ 1477}#
                                       #{w\ 1505}#
                                       #{s\ 1506}#
                                       #{mod\ 1507}#)))
                               (begin
                                 (if (eq? #{m\ 1479}# (quote c&e))
                                   (#{top-level-eval-hook\ 131}#
                                     #{x\ 1612}#
                                     #{mod\ 1507}#))
                                 #{x\ 1612}#)))))))))))
           (#{syntax-type\ 303}#
             (lambda (#{e\ 1613}#
                      #{r\ 1614}#
                      #{w\ 1615}#
                      #{s\ 1616}#
                      #{rib\ 1617}#
                      #{mod\ 1618}#
                      #{for-car?\ 1619}#)
               (if (symbol? #{e\ 1613}#)
                 (let ((#{n\ 1631}#
                         (#{id-var-name\ 279}# #{e\ 1613}# #{w\ 1615}#)))
                   (let ((#{b\ 1633}#
                           (#{lookup\ 216}#
                             #{n\ 1631}#
                             #{r\ 1614}#
                             #{mod\ 1618}#)))
                     (let ((#{type\ 1635}#
                             (#{binding-type\ 205}# #{b\ 1633}#)))
                       (if (memv #{type\ 1635}# (quote (lexical)))
                         (values
                           #{type\ 1635}#
                           (#{binding-value\ 207}# #{b\ 1633}#)
                           #{e\ 1613}#
                           #{w\ 1615}#
                           #{s\ 1616}#
                           #{mod\ 1618}#)
                         (if (memv #{type\ 1635}# (quote (global)))
                           (values
                             #{type\ 1635}#
                             #{n\ 1631}#
                             #{e\ 1613}#
                             #{w\ 1615}#
                             #{s\ 1616}#
                             #{mod\ 1618}#)
                           (if (memv #{type\ 1635}# (quote (macro)))
                             (if #{for-car?\ 1619}#
                               (values
                                 #{type\ 1635}#
                                 (#{binding-value\ 207}# #{b\ 1633}#)
                                 #{e\ 1613}#
                                 #{w\ 1615}#
                                 #{s\ 1616}#
                                 #{mod\ 1618}#)
                               (#{syntax-type\ 303}#
                                 (#{chi-macro\ 313}#
                                   (#{binding-value\ 207}# #{b\ 1633}#)
                                   #{e\ 1613}#
                                   #{r\ 1614}#
                                   #{w\ 1615}#
                                   #{rib\ 1617}#
                                   #{mod\ 1618}#)
                                 #{r\ 1614}#
                                 '(())
                                 #{s\ 1616}#
                                 #{rib\ 1617}#
                                 #{mod\ 1618}#
                                 #f))
                             (values
                               #{type\ 1635}#
                               (#{binding-value\ 207}# #{b\ 1633}#)
                               #{e\ 1613}#
                               #{w\ 1615}#
                               #{s\ 1616}#
                               #{mod\ 1618}#)))))))
                 (if (pair? #{e\ 1613}#)
                   (let ((#{first\ 1644}# (car #{e\ 1613}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 303}#
                           #{first\ 1644}#
                           #{r\ 1614}#
                           #{w\ 1615}#
                           #{s\ 1616}#
                           #{rib\ 1617}#
                           #{mod\ 1618}#
                           #t))
                       (lambda (#{ftype\ 1645}#
                                #{fval\ 1646}#
                                #{fe\ 1647}#
                                #{fw\ 1648}#
                                #{fs\ 1649}#
                                #{fmod\ 1650}#)
                         (if (memv #{ftype\ 1645}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 1646}#
                             #{e\ 1613}#
                             #{w\ 1615}#
                             #{s\ 1616}#
                             #{mod\ 1618}#)
                           (if (memv #{ftype\ 1645}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 184}#
                                 #{fval\ 1646}#
                                 #{w\ 1615}#
                                 #{fmod\ 1650}#)
                               #{e\ 1613}#
                               #{w\ 1615}#
                               #{s\ 1616}#
                               #{mod\ 1618}#)
                             (if (memv #{ftype\ 1645}# (quote (macro)))
                               (#{syntax-type\ 303}#
                                 (#{chi-macro\ 313}#
                                   #{fval\ 1646}#
                                   #{e\ 1613}#
                                   #{r\ 1614}#
                                   #{w\ 1615}#
                                   #{rib\ 1617}#
                                   #{mod\ 1618}#)
                                 #{r\ 1614}#
                                 '(())
                                 #{s\ 1616}#
                                 #{rib\ 1617}#
                                 #{mod\ 1618}#
                                 #{for-car?\ 1619}#)
                               (if (memv #{ftype\ 1645}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda () (#{fval\ 1646}# #{e\ 1613}#))
                                   (lambda (#{sym\ 1662}# #{mod\ 1663}#)
                                     (#{syntax-type\ 303}#
                                       #{sym\ 1662}#
                                       #{r\ 1614}#
                                       #{w\ 1615}#
                                       #{s\ 1616}#
                                       #{rib\ 1617}#
                                       #{mod\ 1663}#
                                       #{for-car?\ 1619}#)))
                                 (if (memv #{ftype\ 1645}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 1646}#
                                     #{e\ 1613}#
                                     #{w\ 1615}#
                                     #{s\ 1616}#
                                     #{mod\ 1618}#)
                                   (if (memv #{ftype\ 1645}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 1646}#
                                       #{e\ 1613}#
                                       #{w\ 1615}#
                                       #{s\ 1616}#
                                       #{mod\ 1618}#)
                                     (if (memv #{ftype\ 1645}# (quote (begin)))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 1613}#
                                         #{w\ 1615}#
                                         #{s\ 1616}#
                                         #{mod\ 1618}#)
                                       (if (memv #{ftype\ 1645}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 1613}#
                                           #{w\ 1615}#
                                           #{s\ 1616}#
                                           #{mod\ 1618}#)
                                         (if (memv #{ftype\ 1645}#
                                                   '(define))
                                           ((lambda (#{tmp\ 1671}#)
                                              ((lambda (#{tmp\ 1672}#)
                                                 (if (if #{tmp\ 1672}#
                                                       (apply (lambda (#{_\ 1676}#
                                                                       #{name\ 1677}#
                                                                       #{val\ 1678}#)
                                                                (#{id?\ 222}#
                                                                  #{name\ 1677}#))
                                                              #{tmp\ 1672}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 1682}#
                                                                   #{name\ 1683}#
                                                                   #{val\ 1684}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 1683}#
                                                              #{val\ 1684}#
                                                              #{w\ 1615}#
                                                              #{s\ 1616}#
                                                              #{mod\ 1618}#))
                                                          #{tmp\ 1672}#)
                                                   ((lambda (#{tmp\ 1685}#)
                                                      (if (if #{tmp\ 1685}#
                                                            (apply (lambda (#{_\ 1691}#
                                                                            #{name\ 1692}#
                                                                            #{args\ 1693}#
                                                                            #{e1\ 1694}#
                                                                            #{e2\ 1695}#)
                                                                     (if (#{id?\ 222}#
                                                                           #{name\ 1692}#)
                                                                       (#{valid-bound-ids?\ 285}#
                                                                         (#{lambda-var-list\ 337}#
                                                                           #{args\ 1693}#))
                                                                       #f))
                                                                   #{tmp\ 1685}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 1703}#
                                                                        #{name\ 1704}#
                                                                        #{args\ 1705}#
                                                                        #{e1\ 1706}#
                                                                        #{e2\ 1707}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 291}#
                                                                     #{name\ 1704}#
                                                                     #{w\ 1615}#
                                                                     #{mod\ 1618}#)
                                                                   (#{decorate-source\ 140}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1698"
                                                                                   "i1699"
                                                                                   "i1700"
                                                                                   "i1701"
                                                                                   "i1702"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1651"
                                                                                   "i1652"
                                                                                   "i1653"
                                                                                   "i1654"
                                                                                   "i1655"
                                                                                   "i1656"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i1643"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1620"
                                                                                   "i1621"
                                                                                   "i1622"
                                                                                   "i1623"
                                                                                   "i1624"
                                                                                   "i1625"
                                                                                   "i1626"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*
                                                                                   noexpand)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i336"
                                                                                  "i334"
                                                                                  "i332"
                                                                                  "i330"
                                                                                  "i328"
                                                                                  "i326"
                                                                                  "i324"
                                                                                  "i322"
                                                                                  "i320"
                                                                                  "i318"
                                                                                  "i316"
                                                                                  "i314"
                                                                                  "i312"
                                                                                  "i310"
                                                                                  "i308"
                                                                                  "i306"
                                                                                  "i304"
                                                                                  "i302"
                                                                                  "i300"
                                                                                  "i298"
                                                                                  "i296"
                                                                                  "i294"
                                                                                  "i292"
                                                                                  "i290"
                                                                                  "i288"
                                                                                  "i286"
                                                                                  "i284"
                                                                                  "i282"
                                                                                  "i280"
                                                                                  "i278"
                                                                                  "i276"
                                                                                  "i274"
                                                                                  "i272"
                                                                                  "i270"
                                                                                  "i268"
                                                                                  "i266"
                                                                                  "i265"
                                                                                  "i264"
                                                                                  "i262"
                                                                                  "i261"
                                                                                  "i260"
                                                                                  "i259"
                                                                                  "i258"
                                                                                  "i256"
                                                                                  "i254"
                                                                                  "i252"
                                                                                  "i250"
                                                                                  "i248"
                                                                                  "i246"
                                                                                  "i244"
                                                                                  "i242"
                                                                                  "i239"
                                                                                  "i237"
                                                                                  "i236"
                                                                                  "i235"
                                                                                  "i234"
                                                                                  "i233"
                                                                                  "i232"
                                                                                  "i230"
                                                                                  "i228"
                                                                                  "i226"
                                                                                  "i224"
                                                                                  "i223"
                                                                                  "i221"
                                                                                  "i219"
                                                                                  "i217"
                                                                                  "i215"
                                                                                  "i213"
                                                                                  "i211"
                                                                                  "i209"
                                                                                  "i208"
                                                                                  "i206"
                                                                                  "i204"
                                                                                  "i203"
                                                                                  "i202"
                                                                                  "i200"
                                                                                  "i199"
                                                                                  "i197"
                                                                                  "i195"
                                                                                  "i193"
                                                                                  "i191"
                                                                                  "i189"
                                                                                  "i187"
                                                                                  "i185"
                                                                                  "i183"
                                                                                  "i181"
                                                                                  "i179"
                                                                                  "i177"
                                                                                  "i175"
                                                                                  "i173"
                                                                                  "i171"
                                                                                  "i169"
                                                                                  "i167"
                                                                                  "i165"
                                                                                  "i163"
                                                                                  "i161"
                                                                                  "i159"
                                                                                  "i157"
                                                                                  "i155"
                                                                                  "i153"
                                                                                  "i151"
                                                                                  "i149"
                                                                                  "i147"
                                                                                  "i145"
                                                                                  "i143"
                                                                                  "i141"
                                                                                  "i139"
                                                                                  "i137"
                                                                                  "i135"
                                                                                  "i134"
                                                                                  "i132"
                                                                                  "i130"
                                                                                  "i128"
                                                                                  "i126"
                                                                                  "i124"
                                                                                  "i122"
                                                                                  "i120"
                                                                                  "i118"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i21"
                                                                                  "i19")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 291}#
                                                                             (cons #{args\ 1705}#
                                                                                   (cons #{e1\ 1706}#
                                                                                         #{e2\ 1707}#))
                                                                             #{w\ 1615}#
                                                                             #{mod\ 1618}#))
                                                                     #{s\ 1616}#)
                                                                   '(())
                                                                   #{s\ 1616}#
                                                                   #{mod\ 1618}#))
                                                               #{tmp\ 1685}#)
                                                        ((lambda (#{tmp\ 1710}#)
                                                           (if (if #{tmp\ 1710}#
                                                                 (apply (lambda (#{_\ 1713}#
                                                                                 #{name\ 1714}#)
                                                                          (#{id?\ 222}#
                                                                            #{name\ 1714}#))
                                                                        #{tmp\ 1710}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 1717}#
                                                                             #{name\ 1718}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 291}#
                                                                          #{name\ 1718}#
                                                                          #{w\ 1615}#
                                                                          #{mod\ 1618}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1715"
                                                                                 "i1716"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1651"
                                                                                 "i1652"
                                                                                 "i1653"
                                                                                 "i1654"
                                                                                 "i1655"
                                                                                 "i1656"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1643"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1620"
                                                                                 "i1621"
                                                                                 "i1622"
                                                                                 "i1623"
                                                                                 "i1624"
                                                                                 "i1625"
                                                                                 "i1626"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i288"
                                                                                "i286"
                                                                                "i284"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i265"
                                                                                "i264"
                                                                                "i262"
                                                                                "i261"
                                                                                "i260"
                                                                                "i259"
                                                                                "i258"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i239"
                                                                                "i237"
                                                                                "i236"
                                                                                "i235"
                                                                                "i234"
                                                                                "i233"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i226"
                                                                                "i224"
                                                                                "i223"
                                                                                "i221"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i208"
                                                                                "i206"
                                                                                "i204"
                                                                                "i203"
                                                                                "i202"
                                                                                "i200"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i157"
                                                                                "i155"
                                                                                "i153"
                                                                                "i151"
                                                                                "i149"
                                                                                "i147"
                                                                                "i145"
                                                                                "i143"
                                                                                "i141"
                                                                                "i139"
                                                                                "i137"
                                                                                "i135"
                                                                                "i134"
                                                                                "i132"
                                                                                "i130"
                                                                                "i128"
                                                                                "i126"
                                                                                "i124"
                                                                                "i122"
                                                                                "i120"
                                                                                "i118"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i21"
                                                                                "i19")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1715"
                                                                                 "i1716"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1651"
                                                                                 "i1652"
                                                                                 "i1653"
                                                                                 "i1654"
                                                                                 "i1655"
                                                                                 "i1656"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1643"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1620"
                                                                                 "i1621"
                                                                                 "i1622"
                                                                                 "i1623"
                                                                                 "i1624"
                                                                                 "i1625"
                                                                                 "i1626"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i288"
                                                                                "i286"
                                                                                "i284"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i265"
                                                                                "i264"
                                                                                "i262"
                                                                                "i261"
                                                                                "i260"
                                                                                "i259"
                                                                                "i258"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i239"
                                                                                "i237"
                                                                                "i236"
                                                                                "i235"
                                                                                "i234"
                                                                                "i233"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i226"
                                                                                "i224"
                                                                                "i223"
                                                                                "i221"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i208"
                                                                                "i206"
                                                                                "i204"
                                                                                "i203"
                                                                                "i202"
                                                                                "i200"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i157"
                                                                                "i155"
                                                                                "i153"
                                                                                "i151"
                                                                                "i149"
                                                                                "i147"
                                                                                "i145"
                                                                                "i143"
                                                                                "i141"
                                                                                "i139"
                                                                                "i137"
                                                                                "i135"
                                                                                "i134"
                                                                                "i132"
                                                                                "i130"
                                                                                "i128"
                                                                                "i126"
                                                                                "i124"
                                                                                "i122"
                                                                                "i120"
                                                                                "i118"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i21"
                                                                                "i19")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1715"
                                                                                 "i1716"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1651"
                                                                                 "i1652"
                                                                                 "i1653"
                                                                                 "i1654"
                                                                                 "i1655"
                                                                                 "i1656"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1643"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1620"
                                                                                 "i1621"
                                                                                 "i1622"
                                                                                 "i1623"
                                                                                 "i1624"
                                                                                 "i1625"
                                                                                 "i1626"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i288"
                                                                                "i286"
                                                                                "i284"
                                                                                "i282"
                                                                                "i280"
                                                                                "i278"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i265"
                                                                                "i264"
                                                                                "i262"
                                                                                "i261"
                                                                                "i260"
                                                                                "i259"
                                                                                "i258"
                                                                                "i256"
                                                                                "i254"
                                                                                "i252"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i239"
                                                                                "i237"
                                                                                "i236"
                                                                                "i235"
                                                                                "i234"
                                                                                "i233"
                                                                                "i232"
                                                                                "i230"
                                                                                "i228"
                                                                                "i226"
                                                                                "i224"
                                                                                "i223"
                                                                                "i221"
                                                                                "i219"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i208"
                                                                                "i206"
                                                                                "i204"
                                                                                "i203"
                                                                                "i202"
                                                                                "i200"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i157"
                                                                                "i155"
                                                                                "i153"
                                                                                "i151"
                                                                                "i149"
                                                                                "i147"
                                                                                "i145"
                                                                                "i143"
                                                                                "i141"
                                                                                "i139"
                                                                                "i137"
                                                                                "i135"
                                                                                "i134"
                                                                                "i132"
                                                                                "i130"
                                                                                "i128"
                                                                                "i126"
                                                                                "i124"
                                                                                "i122"
                                                                                "i120"
                                                                                "i118"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i21"
                                                                                "i19")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 1616}#
                                                                        #{mod\ 1618}#))
                                                                    #{tmp\ 1710}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 1671}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 1671}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1671}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1671}#
                                                 '(any any any))))
                                            #{e\ 1613}#)
                                           (if (memv #{ftype\ 1645}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 1721}#)
                                                ((lambda (#{tmp\ 1722}#)
                                                   (if (if #{tmp\ 1722}#
                                                         (apply (lambda (#{_\ 1726}#
                                                                         #{name\ 1727}#
                                                                         #{val\ 1728}#)
                                                                  (#{id?\ 222}#
                                                                    #{name\ 1727}#))
                                                                #{tmp\ 1722}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 1732}#
                                                                     #{name\ 1733}#
                                                                     #{val\ 1734}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 1733}#
                                                                #{val\ 1734}#
                                                                #{w\ 1615}#
                                                                #{s\ 1616}#
                                                                #{mod\ 1618}#))
                                                            #{tmp\ 1722}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 1721}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 1721}#
                                                   '(any any any))))
                                              #{e\ 1613}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 1613}#
                                               #{w\ 1615}#
                                               #{s\ 1616}#
                                               #{mod\ 1618}#))))))))))))))
                   (if (#{syntax-object?\ 186}# #{e\ 1613}#)
                     (#{syntax-type\ 303}#
                       (#{syntax-object-expression\ 188}# #{e\ 1613}#)
                       #{r\ 1614}#
                       (#{join-wraps\ 273}#
                         #{w\ 1615}#
                         (#{syntax-object-wrap\ 190}# #{e\ 1613}#))
                       #{s\ 1616}#
                       #{rib\ 1617}#
                       (let ((#{t\ 1740}#
                               (#{syntax-object-module\ 192}# #{e\ 1613}#)))
                         (if #{t\ 1740}# #{t\ 1740}# #{mod\ 1618}#))
                       #{for-car?\ 1619}#)
                     (if (self-evaluating? #{e\ 1613}#)
                       (values
                         'constant
                         #f
                         #{e\ 1613}#
                         #{w\ 1615}#
                         #{s\ 1616}#
                         #{mod\ 1618}#)
                       (values
                         'other
                         #f
                         #{e\ 1613}#
                         #{w\ 1615}#
                         #{s\ 1616}#
                         #{mod\ 1618}#)))))))
           (#{chi-when-list\ 301}#
             (lambda (#{e\ 1745}# #{when-list\ 1746}# #{w\ 1747}#)
               (letrec ((#{f\ 1754}#
                          (lambda (#{when-list\ 1755}# #{situations\ 1756}#)
                            (if (null? #{when-list\ 1755}#)
                              #{situations\ 1756}#
                              (#{f\ 1754}#
                                (cdr #{when-list\ 1755}#)
                                (cons (let ((#{x\ 1758}#
                                              (car #{when-list\ 1755}#)))
                                        (if (#{free-id=?\ 281}#
                                              #{x\ 1758}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i1757"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i1751" "i1752" "i1753"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i1748" "i1749" "i1750"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*
                                                      noexpand)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i336"
                                                     "i334"
                                                     "i332"
                                                     "i330"
                                                     "i328"
                                                     "i326"
                                                     "i324"
                                                     "i322"
                                                     "i320"
                                                     "i318"
                                                     "i316"
                                                     "i314"
                                                     "i312"
                                                     "i310"
                                                     "i308"
                                                     "i306"
                                                     "i304"
                                                     "i302"
                                                     "i300"
                                                     "i298"
                                                     "i296"
                                                     "i294"
                                                     "i292"
                                                     "i290"
                                                     "i288"
                                                     "i286"
                                                     "i284"
                                                     "i282"
                                                     "i280"
                                                     "i278"
                                                     "i276"
                                                     "i274"
                                                     "i272"
                                                     "i270"
                                                     "i268"
                                                     "i266"
                                                     "i265"
                                                     "i264"
                                                     "i262"
                                                     "i261"
                                                     "i260"
                                                     "i259"
                                                     "i258"
                                                     "i256"
                                                     "i254"
                                                     "i252"
                                                     "i250"
                                                     "i248"
                                                     "i246"
                                                     "i244"
                                                     "i242"
                                                     "i239"
                                                     "i237"
                                                     "i236"
                                                     "i235"
                                                     "i234"
                                                     "i233"
                                                     "i232"
                                                     "i230"
                                                     "i228"
                                                     "i226"
                                                     "i224"
                                                     "i223"
                                                     "i221"
                                                     "i219"
                                                     "i217"
                                                     "i215"
                                                     "i213"
                                                     "i211"
                                                     "i209"
                                                     "i208"
                                                     "i206"
                                                     "i204"
                                                     "i203"
                                                     "i202"
                                                     "i200"
                                                     "i199"
                                                     "i197"
                                                     "i195"
                                                     "i193"
                                                     "i191"
                                                     "i189"
                                                     "i187"
                                                     "i185"
                                                     "i183"
                                                     "i181"
                                                     "i179"
                                                     "i177"
                                                     "i175"
                                                     "i173"
                                                     "i171"
                                                     "i169"
                                                     "i167"
                                                     "i165"
                                                     "i163"
                                                     "i161"
                                                     "i159"
                                                     "i157"
                                                     "i155"
                                                     "i153"
                                                     "i151"
                                                     "i149"
                                                     "i147"
                                                     "i145"
                                                     "i143"
                                                     "i141"
                                                     "i139"
                                                     "i137"
                                                     "i135"
                                                     "i134"
                                                     "i132"
                                                     "i130"
                                                     "i128"
                                                     "i126"
                                                     "i124"
                                                     "i122"
                                                     "i120"
                                                     "i118"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i21" "i19")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 281}#
                                                #{x\ 1758}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i1757"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i1751"
                                                        "i1752"
                                                        "i1753"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i1748"
                                                        "i1749"
                                                        "i1750"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i336"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i328"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i288"
                                                       "i286"
                                                       "i284"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i265"
                                                       "i264"
                                                       "i262"
                                                       "i261"
                                                       "i260"
                                                       "i259"
                                                       "i258"
                                                       "i256"
                                                       "i254"
                                                       "i252"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i242"
                                                       "i239"
                                                       "i237"
                                                       "i236"
                                                       "i235"
                                                       "i234"
                                                       "i233"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i223"
                                                       "i221"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i208"
                                                       "i206"
                                                       "i204"
                                                       "i203"
                                                       "i202"
                                                       "i200"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"
                                                       "i169"
                                                       "i167"
                                                       "i165"
                                                       "i163"
                                                       "i161"
                                                       "i159"
                                                       "i157"
                                                       "i155"
                                                       "i153"
                                                       "i151"
                                                       "i149"
                                                       "i147"
                                                       "i145"
                                                       "i143"
                                                       "i141"
                                                       "i139"
                                                       "i137"
                                                       "i135"
                                                       "i134"
                                                       "i132"
                                                       "i130"
                                                       "i128"
                                                       "i126"
                                                       "i124"
                                                       "i122"
                                                       "i120"
                                                       "i118"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i21" "i19")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 281}#
                                                  #{x\ 1758}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i1757"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i1751"
                                                          "i1752"
                                                          "i1753"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i1748"
                                                          "i1749"
                                                          "i1750"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*
                                                          noexpand)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i336"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i328"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i306"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i288"
                                                         "i286"
                                                         "i284"
                                                         "i282"
                                                         "i280"
                                                         "i278"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i265"
                                                         "i264"
                                                         "i262"
                                                         "i261"
                                                         "i260"
                                                         "i259"
                                                         "i258"
                                                         "i256"
                                                         "i254"
                                                         "i252"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i242"
                                                         "i239"
                                                         "i237"
                                                         "i236"
                                                         "i235"
                                                         "i234"
                                                         "i233"
                                                         "i232"
                                                         "i230"
                                                         "i228"
                                                         "i226"
                                                         "i224"
                                                         "i223"
                                                         "i221"
                                                         "i219"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i208"
                                                         "i206"
                                                         "i204"
                                                         "i203"
                                                         "i202"
                                                         "i200"
                                                         "i199"
                                                         "i197"
                                                         "i195"
                                                         "i193"
                                                         "i191"
                                                         "i189"
                                                         "i187"
                                                         "i185"
                                                         "i183"
                                                         "i181"
                                                         "i179"
                                                         "i177"
                                                         "i175"
                                                         "i173"
                                                         "i171"
                                                         "i169"
                                                         "i167"
                                                         "i165"
                                                         "i163"
                                                         "i161"
                                                         "i159"
                                                         "i157"
                                                         "i155"
                                                         "i153"
                                                         "i151"
                                                         "i149"
                                                         "i147"
                                                         "i145"
                                                         "i143"
                                                         "i141"
                                                         "i139"
                                                         "i137"
                                                         "i135"
                                                         "i134"
                                                         "i132"
                                                         "i130"
                                                         "i128"
                                                         "i126"
                                                         "i124"
                                                         "i122"
                                                         "i120"
                                                         "i118"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i21" "i19")))
                                                     (hygiene guile)))
                                              'eval
                                              (if (#{free-id=?\ 281}#
                                                    #{x\ 1758}#
                                                    '#(syntax-object
                                                       expand
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i1757"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(f
                                                            when-list
                                                            situations)
                                                          #((top) (top) (top))
                                                          #("i1751"
                                                            "i1752"
                                                            "i1753"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(e when-list w)
                                                          #((top) (top) (top))
                                                          #("i1748"
                                                            "i1749"
                                                            "i1750"))
                                                        #(ribcage
                                                          (lambda-var-list
                                                            gen-var
                                                            strip
                                                            chi-lambda-case
                                                            lambda*-formals
                                                            chi-simple-lambda
                                                            lambda-formals
                                                            ellipsis?
                                                            chi-void
                                                            eval-local-transformer
                                                            chi-local-syntax
                                                            chi-body
                                                            chi-macro
                                                            chi-application
                                                            chi-expr
                                                            chi
                                                            chi-top
                                                            syntax-type
                                                            chi-when-list
                                                            chi-install-global
                                                            chi-top-sequence
                                                            chi-sequence
                                                            source-wrap
                                                            wrap
                                                            bound-id-member?
                                                            distinct-bound-ids?
                                                            valid-bound-ids?
                                                            bound-id=?
                                                            free-id=?
                                                            id-var-name
                                                            same-marks?
                                                            join-marks
                                                            join-wraps
                                                            smart-append
                                                            make-binding-wrap
                                                            extend-ribcage!
                                                            make-empty-ribcage
                                                            new-mark
                                                            anti-mark
                                                            the-anti-mark
                                                            top-marked?
                                                            top-wrap
                                                            empty-wrap
                                                            set-ribcage-labels!
                                                            set-ribcage-marks!
                                                            set-ribcage-symnames!
                                                            ribcage-labels
                                                            ribcage-marks
                                                            ribcage-symnames
                                                            ribcage?
                                                            make-ribcage
                                                            gen-labels
                                                            gen-label
                                                            make-rename
                                                            rename-marks
                                                            rename-new
                                                            rename-old
                                                            subst-rename?
                                                            wrap-subst
                                                            wrap-marks
                                                            make-wrap
                                                            id-sym-name&marks
                                                            id-sym-name
                                                            id?
                                                            nonsymbol-id?
                                                            global-extend
                                                            lookup
                                                            macros-only-env
                                                            extend-var-env
                                                            extend-env
                                                            null-env
                                                            binding-value
                                                            binding-type
                                                            make-binding
                                                            arg-check
                                                            source-annotation
                                                            no-source
                                                            set-syntax-object-module!
                                                            set-syntax-object-wrap!
                                                            set-syntax-object-expression!
                                                            syntax-object-module
                                                            syntax-object-wrap
                                                            syntax-object-expression
                                                            syntax-object?
                                                            make-syntax-object
                                                            build-lexical-var
                                                            build-letrec
                                                            build-named-let
                                                            build-let
                                                            build-sequence
                                                            build-data
                                                            build-primref
                                                            build-lambda-case
                                                            build-case-lambda
                                                            build-simple-lambda
                                                            build-global-definition
                                                            maybe-name-value!
                                                            build-global-assignment
                                                            build-global-reference
                                                            analyze-variable
                                                            build-lexical-assignment
                                                            build-lexical-reference
                                                            build-dynlet
                                                            build-conditional
                                                            build-application
                                                            build-void
                                                            decorate-source
                                                            get-global-definition-hook
                                                            put-global-definition-hook
                                                            gensym-hook
                                                            local-eval-hook
                                                            top-level-eval-hook
                                                            fx<
                                                            fx=
                                                            fx-
                                                            fx+
                                                            *mode*
                                                            noexpand)
                                                          ((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                          ("i336"
                                                           "i334"
                                                           "i332"
                                                           "i330"
                                                           "i328"
                                                           "i326"
                                                           "i324"
                                                           "i322"
                                                           "i320"
                                                           "i318"
                                                           "i316"
                                                           "i314"
                                                           "i312"
                                                           "i310"
                                                           "i308"
                                                           "i306"
                                                           "i304"
                                                           "i302"
                                                           "i300"
                                                           "i298"
                                                           "i296"
                                                           "i294"
                                                           "i292"
                                                           "i290"
                                                           "i288"
                                                           "i286"
                                                           "i284"
                                                           "i282"
                                                           "i280"
                                                           "i278"
                                                           "i276"
                                                           "i274"
                                                           "i272"
                                                           "i270"
                                                           "i268"
                                                           "i266"
                                                           "i265"
                                                           "i264"
                                                           "i262"
                                                           "i261"
                                                           "i260"
                                                           "i259"
                                                           "i258"
                                                           "i256"
                                                           "i254"
                                                           "i252"
                                                           "i250"
                                                           "i248"
                                                           "i246"
                                                           "i244"
                                                           "i242"
                                                           "i239"
                                                           "i237"
                                                           "i236"
                                                           "i235"
                                                           "i234"
                                                           "i233"
                                                           "i232"
                                                           "i230"
                                                           "i228"
                                                           "i226"
                                                           "i224"
                                                           "i223"
                                                           "i221"
                                                           "i219"
                                                           "i217"
                                                           "i215"
                                                           "i213"
                                                           "i211"
                                                           "i209"
                                                           "i208"
                                                           "i206"
                                                           "i204"
                                                           "i203"
                                                           "i202"
                                                           "i200"
                                                           "i199"
                                                           "i197"
                                                           "i195"
                                                           "i193"
                                                           "i191"
                                                           "i189"
                                                           "i187"
                                                           "i185"
                                                           "i183"
                                                           "i181"
                                                           "i179"
                                                           "i177"
                                                           "i175"
                                                           "i173"
                                                           "i171"
                                                           "i169"
                                                           "i167"
                                                           "i165"
                                                           "i163"
                                                           "i161"
                                                           "i159"
                                                           "i157"
                                                           "i155"
                                                           "i153"
                                                           "i151"
                                                           "i149"
                                                           "i147"
                                                           "i145"
                                                           "i143"
                                                           "i141"
                                                           "i139"
                                                           "i137"
                                                           "i135"
                                                           "i134"
                                                           "i132"
                                                           "i130"
                                                           "i128"
                                                           "i126"
                                                           "i124"
                                                           "i122"
                                                           "i120"
                                                           "i118"))
                                                        #(ribcage
                                                          (define-structure
                                                            and-map*)
                                                          ((top) (top))
                                                          ("i21" "i19")))
                                                       (hygiene guile)))
                                                'expand
                                                (syntax-violation
                                                  'eval-when
                                                  "invalid situation"
                                                  #{e\ 1745}#
                                                  (#{wrap\ 291}#
                                                    #{x\ 1758}#
                                                    #{w\ 1747}#
                                                    #f)))))))
                                      #{situations\ 1756}#))))))
                 (#{f\ 1754}# #{when-list\ 1746}# (quote ())))))
           (#{chi-install-global\ 299}#
             (lambda (#{name\ 1768}# #{e\ 1769}#)
               (#{build-global-definition\ 162}#
                 #f
                 #{name\ 1768}#
                 (#{build-application\ 144}#
                   #f
                   (#{build-primref\ 170}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 172}# #f #{name\ 1768}#)
                         (#{build-data\ 172}# #f (quote macro))
                         (#{build-application\ 144}#
                           #f
                           (#{build-primref\ 170}# #f (quote cons))
                           (list #{e\ 1769}#
                                 (#{build-application\ 144}#
                                   #f
                                   (#{build-primref\ 170}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 144}#
                                           #f
                                           (#{build-primref\ 170}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 297}#
             (lambda (#{body\ 1783}#
                      #{r\ 1784}#
                      #{w\ 1785}#
                      #{s\ 1786}#
                      #{m\ 1787}#
                      #{esew\ 1788}#
                      #{mod\ 1789}#)
               (#{build-sequence\ 174}#
                 #{s\ 1786}#
                 (letrec ((#{dobody\ 1806}#
                            (lambda (#{body\ 1807}#
                                     #{r\ 1808}#
                                     #{w\ 1809}#
                                     #{m\ 1810}#
                                     #{esew\ 1811}#
                                     #{mod\ 1812}#
                                     #{module\ 1813}#
                                     #{out\ 1814}#)
                              (if (null? #{body\ 1807}#)
                                (reverse #{out\ 1814}#)
                                (let ((#{first\ 1817}#
                                        (#{chi-top\ 305}#
                                          (car #{body\ 1807}#)
                                          #{r\ 1808}#
                                          #{w\ 1809}#
                                          #{m\ 1810}#
                                          #{esew\ 1811}#
                                          #{mod\ 1812}#)))
                                  (let ((#{new-module\ 1819}#
                                          (current-module)))
                                    (#{dobody\ 1806}#
                                      (cdr #{body\ 1807}#)
                                      #{r\ 1808}#
                                      #{w\ 1809}#
                                      #{m\ 1810}#
                                      #{esew\ 1811}#
                                      (if (eq? #{module\ 1813}#
                                               #{new-module\ 1819}#)
                                        #{mod\ 1812}#
                                        (cons 'hygiene
                                              (module-name
                                                #{new-module\ 1819}#)))
                                      #{new-module\ 1819}#
                                      (cons #{first\ 1817}#
                                            #{out\ 1814}#))))))))
                   (#{dobody\ 1806}#
                     #{body\ 1783}#
                     #{r\ 1784}#
                     #{w\ 1785}#
                     #{m\ 1787}#
                     #{esew\ 1788}#
                     #{mod\ 1789}#
                     (current-module)
                     '())))))
           (#{chi-sequence\ 295}#
             (lambda (#{body\ 1820}#
                      #{r\ 1821}#
                      #{w\ 1822}#
                      #{s\ 1823}#
                      #{mod\ 1824}#)
               (#{build-sequence\ 174}#
                 #{s\ 1823}#
                 (letrec ((#{dobody\ 1835}#
                            (lambda (#{body\ 1836}#
                                     #{r\ 1837}#
                                     #{w\ 1838}#
                                     #{mod\ 1839}#)
                              (if (null? #{body\ 1836}#)
                                '()
                                (let ((#{first\ 1841}#
                                        (#{chi\ 307}#
                                          (car #{body\ 1836}#)
                                          #{r\ 1837}#
                                          #{w\ 1838}#
                                          #{mod\ 1839}#)))
                                  (cons #{first\ 1841}#
                                        (#{dobody\ 1835}#
                                          (cdr #{body\ 1836}#)
                                          #{r\ 1837}#
                                          #{w\ 1838}#
                                          #{mod\ 1839}#)))))))
                   (#{dobody\ 1835}#
                     #{body\ 1820}#
                     #{r\ 1821}#
                     #{w\ 1822}#
                     #{mod\ 1824}#)))))
           (#{source-wrap\ 293}#
             (lambda (#{x\ 1842}#
                      #{w\ 1843}#
                      #{s\ 1844}#
                      #{defmod\ 1845}#)
               (#{wrap\ 291}#
                 (#{decorate-source\ 140}#
                   #{x\ 1842}#
                   #{s\ 1844}#)
                 #{w\ 1843}#
                 #{defmod\ 1845}#)))
           (#{wrap\ 291}#
             (lambda (#{x\ 1850}# #{w\ 1851}# #{defmod\ 1852}#)
               (if (if (null? (#{wrap-marks\ 229}# #{w\ 1851}#))
                     (null? (#{wrap-subst\ 231}# #{w\ 1851}#))
                     #f)
                 #{x\ 1850}#
                 (if (#{syntax-object?\ 186}# #{x\ 1850}#)
                   (#{make-syntax-object\ 184}#
                     (#{syntax-object-expression\ 188}# #{x\ 1850}#)
                     (#{join-wraps\ 273}#
                       #{w\ 1851}#
                       (#{syntax-object-wrap\ 190}# #{x\ 1850}#))
                     (#{syntax-object-module\ 192}# #{x\ 1850}#))
                   (if (null? #{x\ 1850}#)
                     #{x\ 1850}#
                     (#{make-syntax-object\ 184}#
                       #{x\ 1850}#
                       #{w\ 1851}#
                       #{defmod\ 1852}#))))))
           (#{bound-id-member?\ 289}#
             (lambda (#{x\ 1865}# #{list\ 1866}#)
               (if (not (null? #{list\ 1866}#))
                 (let ((#{t\ 1873}#
                         (#{bound-id=?\ 283}#
                           #{x\ 1865}#
                           (car #{list\ 1866}#))))
                   (if #{t\ 1873}#
                     #{t\ 1873}#
                     (#{bound-id-member?\ 289}#
                       #{x\ 1865}#
                       (cdr #{list\ 1866}#))))
                 #f)))
           (#{distinct-bound-ids?\ 287}#
             (lambda (#{ids\ 1875}#)
               (letrec ((#{distinct?\ 1879}#
                          (lambda (#{ids\ 1880}#)
                            (let ((#{t\ 1883}# (null? #{ids\ 1880}#)))
                              (if #{t\ 1883}#
                                #{t\ 1883}#
                                (if (not (#{bound-id-member?\ 289}#
                                           (car #{ids\ 1880}#)
                                           (cdr #{ids\ 1880}#)))
                                  (#{distinct?\ 1879}# (cdr #{ids\ 1880}#))
                                  #f))))))
                 (#{distinct?\ 1879}# #{ids\ 1875}#))))
           (#{valid-bound-ids?\ 285}#
             (lambda (#{ids\ 1887}#)
               (if (letrec ((#{all-ids?\ 1892}#
                              (lambda (#{ids\ 1893}#)
                                (let ((#{t\ 1896}# (null? #{ids\ 1893}#)))
                                  (if #{t\ 1896}#
                                    #{t\ 1896}#
                                    (if (#{id?\ 222}# (car #{ids\ 1893}#))
                                      (#{all-ids?\ 1892}# (cdr #{ids\ 1893}#))
                                      #f))))))
                     (#{all-ids?\ 1892}# #{ids\ 1887}#))
                 (#{distinct-bound-ids?\ 287}# #{ids\ 1887}#)
                 #f)))
           (#{bound-id=?\ 283}#
             (lambda (#{i\ 1901}# #{j\ 1902}#)
               (if (if (#{syntax-object?\ 186}# #{i\ 1901}#)
                     (#{syntax-object?\ 186}# #{j\ 1902}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 188}# #{i\ 1901}#)
                          (#{syntax-object-expression\ 188}# #{j\ 1902}#))
                   (#{same-marks?\ 277}#
                     (#{wrap-marks\ 229}#
                       (#{syntax-object-wrap\ 190}# #{i\ 1901}#))
                     (#{wrap-marks\ 229}#
                       (#{syntax-object-wrap\ 190}# #{j\ 1902}#)))
                   #f)
                 (eq? #{i\ 1901}# #{j\ 1902}#))))
           (#{free-id=?\ 281}#
             (lambda (#{i\ 1909}# #{j\ 1910}#)
               (if (eq? (let ((#{x\ 1916}# #{i\ 1909}#))
                          (if (#{syntax-object?\ 186}# #{x\ 1916}#)
                            (#{syntax-object-expression\ 188}# #{x\ 1916}#)
                            #{x\ 1916}#))
                        (let ((#{x\ 1919}# #{j\ 1910}#))
                          (if (#{syntax-object?\ 186}# #{x\ 1919}#)
                            (#{syntax-object-expression\ 188}# #{x\ 1919}#)
                            #{x\ 1919}#)))
                 (eq? (#{id-var-name\ 279}# #{i\ 1909}# (quote (())))
                      (#{id-var-name\ 279}# #{j\ 1910}# (quote (()))))
                 #f)))
           (#{id-var-name\ 279}#
             (lambda (#{id\ 1923}# #{w\ 1924}#)
               (letrec ((#{search-vector-rib\ 1933}#
                          (lambda (#{sym\ 1945}#
                                   #{subst\ 1946}#
                                   #{marks\ 1947}#
                                   #{symnames\ 1948}#
                                   #{ribcage\ 1949}#)
                            (let ((#{n\ 1956}#
                                    (vector-length #{symnames\ 1948}#)))
                              (letrec ((#{f\ 1959}#
                                         (lambda (#{i\ 1960}#)
                                           (if (#{fx=\ 127}#
                                                 #{i\ 1960}#
                                                 #{n\ 1956}#)
                                             (#{search\ 1929}#
                                               #{sym\ 1945}#
                                               (cdr #{subst\ 1946}#)
                                               #{marks\ 1947}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 1948}#
                                                            #{i\ 1960}#)
                                                          #{sym\ 1945}#)
                                                   (#{same-marks?\ 277}#
                                                     #{marks\ 1947}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 249}#
                                                         #{ribcage\ 1949}#)
                                                       #{i\ 1960}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 251}#
                                                     #{ribcage\ 1949}#)
                                                   #{i\ 1960}#)
                                                 #{marks\ 1947}#)
                                               (#{f\ 1959}#
                                                 (#{fx+\ 123}#
                                                   #{i\ 1960}#
                                                   1)))))))
                                (#{f\ 1959}# 0)))))
                        (#{search-list-rib\ 1931}#
                          (lambda (#{sym\ 1968}#
                                   #{subst\ 1969}#
                                   #{marks\ 1970}#
                                   #{symnames\ 1971}#
                                   #{ribcage\ 1972}#)
                            (letrec ((#{f\ 1981}#
                                       (lambda (#{symnames\ 1982}# #{i\ 1983}#)
                                         (if (null? #{symnames\ 1982}#)
                                           (#{search\ 1929}#
                                             #{sym\ 1968}#
                                             (cdr #{subst\ 1969}#)
                                             #{marks\ 1970}#)
                                           (if (if (eq? (car #{symnames\ 1982}#)
                                                        #{sym\ 1968}#)
                                                 (#{same-marks?\ 277}#
                                                   #{marks\ 1970}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 249}#
                                                       #{ribcage\ 1972}#)
                                                     #{i\ 1983}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 251}#
                                                   #{ribcage\ 1972}#)
                                                 #{i\ 1983}#)
                                               #{marks\ 1970}#)
                                             (#{f\ 1981}#
                                               (cdr #{symnames\ 1982}#)
                                               (#{fx+\ 123}#
                                                 #{i\ 1983}#
                                                 1)))))))
                              (#{f\ 1981}# #{symnames\ 1971}# 0))))
                        (#{search\ 1929}#
                          (lambda (#{sym\ 1991}#
                                   #{subst\ 1992}#
                                   #{marks\ 1993}#)
                            (if (null? #{subst\ 1992}#)
                              (values #f #{marks\ 1993}#)
                              (let ((#{fst\ 1998}# (car #{subst\ 1992}#)))
                                (if (eq? #{fst\ 1998}# (quote shift))
                                  (#{search\ 1929}#
                                    #{sym\ 1991}#
                                    (cdr #{subst\ 1992}#)
                                    (cdr #{marks\ 1993}#))
                                  (let ((#{symnames\ 2000}#
                                          (#{ribcage-symnames\ 247}#
                                            #{fst\ 1998}#)))
                                    (if (vector? #{symnames\ 2000}#)
                                      (#{search-vector-rib\ 1933}#
                                        #{sym\ 1991}#
                                        #{subst\ 1992}#
                                        #{marks\ 1993}#
                                        #{symnames\ 2000}#
                                        #{fst\ 1998}#)
                                      (#{search-list-rib\ 1931}#
                                        #{sym\ 1991}#
                                        #{subst\ 1992}#
                                        #{marks\ 1993}#
                                        #{symnames\ 2000}#
                                        #{fst\ 1998}#)))))))))
                 (if (symbol? #{id\ 1923}#)
                   (let ((#{t\ 2003}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 1929}#
                                 #{id\ 1923}#
                                 (#{wrap-subst\ 231}# #{w\ 1924}#)
                                 (#{wrap-marks\ 229}# #{w\ 1924}#)))
                             (lambda (#{x\ 2005}# . #{ignore\ 2006}#)
                               #{x\ 2005}#))))
                     (if #{t\ 2003}# #{t\ 2003}# #{id\ 1923}#))
                   (if (#{syntax-object?\ 186}# #{id\ 1923}#)
                     (let ((#{id\ 2014}#
                             (#{syntax-object-expression\ 188}# #{id\ 1923}#))
                           (#{w1\ 2015}#
                             (#{syntax-object-wrap\ 190}# #{id\ 1923}#)))
                       (let ((#{marks\ 2017}#
                               (#{join-marks\ 275}#
                                 (#{wrap-marks\ 229}# #{w\ 1924}#)
                                 (#{wrap-marks\ 229}# #{w1\ 2015}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 1929}#
                               #{id\ 2014}#
                               (#{wrap-subst\ 231}# #{w\ 1924}#)
                               #{marks\ 2017}#))
                           (lambda (#{new-id\ 2018}# #{marks\ 2019}#)
                             (let ((#{t\ 2024}# #{new-id\ 2018}#))
                               (if #{t\ 2024}#
                                 #{t\ 2024}#
                                 (let ((#{t\ 2027}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 1929}#
                                               #{id\ 2014}#
                                               (#{wrap-subst\ 231}#
                                                 #{w1\ 2015}#)
                                               #{marks\ 2019}#))
                                           (lambda (#{x\ 2029}#
                                                    .
                                                    #{ignore\ 2030}#)
                                             #{x\ 2029}#))))
                                   (if #{t\ 2027}#
                                     #{t\ 2027}#
                                     #{id\ 2014}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 1923}#))))))
           (#{same-marks?\ 277}#
             (lambda (#{x\ 2035}# #{y\ 2036}#)
               (let ((#{t\ 2041}# (eq? #{x\ 2035}# #{y\ 2036}#)))
                 (if #{t\ 2041}#
                   #{t\ 2041}#
                   (if (not (null? #{x\ 2035}#))
                     (if (not (null? #{y\ 2036}#))
                       (if (eq? (car #{x\ 2035}#) (car #{y\ 2036}#))
                         (#{same-marks?\ 277}#
                           (cdr #{x\ 2035}#)
                           (cdr #{y\ 2036}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 275}#
             (lambda (#{m1\ 2047}# #{m2\ 2048}#)
               (#{smart-append\ 271}# #{m1\ 2047}# #{m2\ 2048}#)))
           (#{join-wraps\ 273}#
             (lambda (#{w1\ 2051}# #{w2\ 2052}#)
               (let ((#{m1\ 2057}# (#{wrap-marks\ 229}# #{w1\ 2051}#))
                     (#{s1\ 2058}# (#{wrap-subst\ 231}# #{w1\ 2051}#)))
                 (if (null? #{m1\ 2057}#)
                   (if (null? #{s1\ 2058}#)
                     #{w2\ 2052}#
                     (#{make-wrap\ 227}#
                       (#{wrap-marks\ 229}# #{w2\ 2052}#)
                       (#{smart-append\ 271}#
                         #{s1\ 2058}#
                         (#{wrap-subst\ 231}# #{w2\ 2052}#))))
                   (#{make-wrap\ 227}#
                     (#{smart-append\ 271}#
                       #{m1\ 2057}#
                       (#{wrap-marks\ 229}# #{w2\ 2052}#))
                     (#{smart-append\ 271}#
                       #{s1\ 2058}#
                       (#{wrap-subst\ 231}# #{w2\ 2052}#)))))))
           (#{smart-append\ 271}#
             (lambda (#{m1\ 2059}# #{m2\ 2060}#)
               (if (null? #{m2\ 2060}#)
                 #{m1\ 2059}#
                 (append #{m1\ 2059}# #{m2\ 2060}#))))
           (#{make-binding-wrap\ 269}#
             (lambda (#{ids\ 2063}# #{labels\ 2064}# #{w\ 2065}#)
               (if (null? #{ids\ 2063}#)
                 #{w\ 2065}#
                 (#{make-wrap\ 227}#
                   (#{wrap-marks\ 229}# #{w\ 2065}#)
                   (cons (let ((#{labelvec\ 2070}#
                                 (list->vector #{labels\ 2064}#)))
                           (let ((#{n\ 2072}#
                                   (vector-length #{labelvec\ 2070}#)))
                             (let ((#{symnamevec\ 2075}#
                                     (make-vector #{n\ 2072}#))
                                   (#{marksvec\ 2076}#
                                     (make-vector #{n\ 2072}#)))
                               (begin
                                 (letrec ((#{f\ 2080}#
                                            (lambda (#{ids\ 2081}# #{i\ 2082}#)
                                              (if (not (null? #{ids\ 2081}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 225}#
                                                      (car #{ids\ 2081}#)
                                                      #{w\ 2065}#))
                                                  (lambda (#{symname\ 2083}#
                                                           #{marks\ 2084}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 2075}#
                                                        #{i\ 2082}#
                                                        #{symname\ 2083}#)
                                                      (vector-set!
                                                        #{marksvec\ 2076}#
                                                        #{i\ 2082}#
                                                        #{marks\ 2084}#)
                                                      (#{f\ 2080}#
                                                        (cdr #{ids\ 2081}#)
                                                        (#{fx+\ 123}#
                                                          #{i\ 2082}#
                                                          1)))))))))
                                   (#{f\ 2080}# #{ids\ 2063}# 0))
                                 (#{make-ribcage\ 243}#
                                   #{symnamevec\ 2075}#
                                   #{marksvec\ 2076}#
                                   #{labelvec\ 2070}#)))))
                         (#{wrap-subst\ 231}# #{w\ 2065}#))))))
           (#{extend-ribcage!\ 267}#
             (lambda (#{ribcage\ 2087}# #{id\ 2088}# #{label\ 2089}#)
               (begin
                 (#{set-ribcage-symnames!\ 253}#
                   #{ribcage\ 2087}#
                   (cons (#{syntax-object-expression\ 188}# #{id\ 2088}#)
                         (#{ribcage-symnames\ 247}# #{ribcage\ 2087}#)))
                 (#{set-ribcage-marks!\ 255}#
                   #{ribcage\ 2087}#
                   (cons (#{wrap-marks\ 229}#
                           (#{syntax-object-wrap\ 190}# #{id\ 2088}#))
                         (#{ribcage-marks\ 249}# #{ribcage\ 2087}#)))
                 (#{set-ribcage-labels!\ 257}#
                   #{ribcage\ 2087}#
                   (cons #{label\ 2089}#
                         (#{ribcage-labels\ 251}# #{ribcage\ 2087}#))))))
           (#{anti-mark\ 263}#
             (lambda (#{w\ 2093}#)
               (#{make-wrap\ 227}#
                 (cons #f (#{wrap-marks\ 229}# #{w\ 2093}#))
                 (cons 'shift
                       (#{wrap-subst\ 231}# #{w\ 2093}#)))))
           (#{set-ribcage-labels!\ 257}#
             (lambda (#{x\ 2096}# #{update\ 2097}#)
               (vector-set! #{x\ 2096}# 3 #{update\ 2097}#)))
           (#{set-ribcage-marks!\ 255}#
             (lambda (#{x\ 2100}# #{update\ 2101}#)
               (vector-set! #{x\ 2100}# 2 #{update\ 2101}#)))
           (#{set-ribcage-symnames!\ 253}#
             (lambda (#{x\ 2104}# #{update\ 2105}#)
               (vector-set! #{x\ 2104}# 1 #{update\ 2105}#)))
           (#{ribcage-labels\ 251}#
             (lambda (#{x\ 2108}#) (vector-ref #{x\ 2108}# 3)))
           (#{ribcage-marks\ 249}#
             (lambda (#{x\ 2110}#) (vector-ref #{x\ 2110}# 2)))
           (#{ribcage-symnames\ 247}#
             (lambda (#{x\ 2112}#) (vector-ref #{x\ 2112}# 1)))
           (#{ribcage?\ 245}#
             (lambda (#{x\ 2114}#)
               (if (vector? #{x\ 2114}#)
                 (if (= (vector-length #{x\ 2114}#) 4)
                   (eq? (vector-ref #{x\ 2114}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 243}#
             (lambda (#{symnames\ 2119}#
                      #{marks\ 2120}#
                      #{labels\ 2121}#)
               (vector
                 'ribcage
                 #{symnames\ 2119}#
                 #{marks\ 2120}#
                 #{labels\ 2121}#)))
           (#{gen-labels\ 240}#
             (lambda (#{ls\ 2125}#)
               (if (null? #{ls\ 2125}#)
                 '()
                 (cons (#{gen-label\ 238}#)
                       (#{gen-labels\ 240}# (cdr #{ls\ 2125}#))))))
           (#{gen-label\ 238}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 231}# cdr)
           (#{wrap-marks\ 229}# car)
           (#{make-wrap\ 227}# cons)
           (#{id-sym-name&marks\ 225}#
             (lambda (#{x\ 2127}# #{w\ 2128}#)
               (if (#{syntax-object?\ 186}# #{x\ 2127}#)
                 (values
                   (#{syntax-object-expression\ 188}# #{x\ 2127}#)
                   (#{join-marks\ 275}#
                     (#{wrap-marks\ 229}# #{w\ 2128}#)
                     (#{wrap-marks\ 229}#
                       (#{syntax-object-wrap\ 190}# #{x\ 2127}#))))
                 (values
                   #{x\ 2127}#
                   (#{wrap-marks\ 229}# #{w\ 2128}#)))))
           (#{id?\ 222}#
             (lambda (#{x\ 2131}#)
               (if (symbol? #{x\ 2131}#)
                 #t
                 (if (#{syntax-object?\ 186}# #{x\ 2131}#)
                   (symbol?
                     (#{syntax-object-expression\ 188}# #{x\ 2131}#))
                   #f))))
           (#{nonsymbol-id?\ 220}#
             (lambda (#{x\ 2138}#)
               (if (#{syntax-object?\ 186}# #{x\ 2138}#)
                 (symbol?
                   (#{syntax-object-expression\ 188}# #{x\ 2138}#))
                 #f)))
           (#{global-extend\ 218}#
             (lambda (#{type\ 2142}# #{sym\ 2143}# #{val\ 2144}#)
               (#{put-global-definition-hook\ 136}#
                 #{sym\ 2143}#
                 #{type\ 2142}#
                 #{val\ 2144}#)))
           (#{lookup\ 216}#
             (lambda (#{x\ 2148}# #{r\ 2149}# #{mod\ 2150}#)
               (let ((#{t\ 2156}# (assq #{x\ 2148}# #{r\ 2149}#)))
                 (if #{t\ 2156}#
                   (cdr #{t\ 2156}#)
                   (if (symbol? #{x\ 2148}#)
                     (let ((#{t\ 2162}#
                             (#{get-global-definition-hook\ 138}#
                               #{x\ 2148}#
                               #{mod\ 2150}#)))
                       (if #{t\ 2162}# #{t\ 2162}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 214}#
             (lambda (#{r\ 2167}#)
               (if (null? #{r\ 2167}#)
                 '()
                 (let ((#{a\ 2170}# (car #{r\ 2167}#)))
                   (if (eq? (cadr #{a\ 2170}#) (quote macro))
                     (cons #{a\ 2170}#
                           (#{macros-only-env\ 214}# (cdr #{r\ 2167}#)))
                     (#{macros-only-env\ 214}# (cdr #{r\ 2167}#)))))))
           (#{extend-var-env\ 212}#
             (lambda (#{labels\ 2171}# #{vars\ 2172}# #{r\ 2173}#)
               (if (null? #{labels\ 2171}#)
                 #{r\ 2173}#
                 (#{extend-var-env\ 212}#
                   (cdr #{labels\ 2171}#)
                   (cdr #{vars\ 2172}#)
                   (cons (cons (car #{labels\ 2171}#)
                               (cons (quote lexical) (car #{vars\ 2172}#)))
                         #{r\ 2173}#)))))
           (#{extend-env\ 210}#
             (lambda (#{labels\ 2178}# #{bindings\ 2179}# #{r\ 2180}#)
               (if (null? #{labels\ 2178}#)
                 #{r\ 2180}#
                 (#{extend-env\ 210}#
                   (cdr #{labels\ 2178}#)
                   (cdr #{bindings\ 2179}#)
                   (cons (cons (car #{labels\ 2178}#)
                               (car #{bindings\ 2179}#))
                         #{r\ 2180}#)))))
           (#{binding-value\ 207}# cdr)
           (#{binding-type\ 205}# car)
           (#{source-annotation\ 201}#
             (lambda (#{x\ 2184}#)
               (if (#{syntax-object?\ 186}# #{x\ 2184}#)
                 (#{source-annotation\ 201}#
                   (#{syntax-object-expression\ 188}# #{x\ 2184}#))
                 (if (pair? #{x\ 2184}#)
                   (let ((#{props\ 2191}# (source-properties #{x\ 2184}#)))
                     (if (pair? #{props\ 2191}#) #{props\ 2191}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 198}#
             (lambda (#{x\ 2193}# #{update\ 2194}#)
               (vector-set! #{x\ 2193}# 3 #{update\ 2194}#)))
           (#{set-syntax-object-wrap!\ 196}#
             (lambda (#{x\ 2197}# #{update\ 2198}#)
               (vector-set! #{x\ 2197}# 2 #{update\ 2198}#)))
           (#{set-syntax-object-expression!\ 194}#
             (lambda (#{x\ 2201}# #{update\ 2202}#)
               (vector-set! #{x\ 2201}# 1 #{update\ 2202}#)))
           (#{syntax-object-module\ 192}#
             (lambda (#{x\ 2205}#) (vector-ref #{x\ 2205}# 3)))
           (#{syntax-object-wrap\ 190}#
             (lambda (#{x\ 2207}#) (vector-ref #{x\ 2207}# 2)))
           (#{syntax-object-expression\ 188}#
             (lambda (#{x\ 2209}#) (vector-ref #{x\ 2209}# 1)))
           (#{syntax-object?\ 186}#
             (lambda (#{x\ 2211}#)
               (if (vector? #{x\ 2211}#)
                 (if (= (vector-length #{x\ 2211}#) 4)
                   (eq? (vector-ref #{x\ 2211}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 184}#
             (lambda (#{expression\ 2216}#
                      #{wrap\ 2217}#
                      #{module\ 2218}#)
               (vector
                 'syntax-object
                 #{expression\ 2216}#
                 #{wrap\ 2217}#
                 #{module\ 2218}#)))
           (#{build-letrec\ 180}#
             (lambda (#{src\ 2222}#
                      #{ids\ 2223}#
                      #{vars\ 2224}#
                      #{val-exps\ 2225}#
                      #{body-exp\ 2226}#)
               (if (null? #{vars\ 2224}#)
                 #{body-exp\ 2226}#
                 (let ((#{atom-key\ 2234}# (fluid-ref #{*mode*\ 121}#)))
                   (if (memv #{atom-key\ 2234}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 160}#
                         #{ids\ 2223}#
                         #{val-exps\ 2225}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 2222}#
                        #{ids\ 2223}#
                        #{vars\ 2224}#
                        #{val-exps\ 2225}#
                        #{body-exp\ 2226}#))
                     (#{decorate-source\ 140}#
                       (list 'letrec
                             (map list #{vars\ 2224}# #{val-exps\ 2225}#)
                             #{body-exp\ 2226}#)
                       #{src\ 2222}#))))))
           (#{build-named-let\ 178}#
             (lambda (#{src\ 2238}#
                      #{ids\ 2239}#
                      #{vars\ 2240}#
                      #{val-exps\ 2241}#
                      #{body-exp\ 2242}#)
               (let ((#{f\ 2252}# (car #{vars\ 2240}#))
                     (#{f-name\ 2253}# (car #{ids\ 2239}#))
                     (#{vars\ 2254}# (cdr #{vars\ 2240}#))
                     (#{ids\ 2255}# (cdr #{ids\ 2239}#)))
                 (let ((#{atom-key\ 2258}# (fluid-ref #{*mode*\ 121}#)))
                   (if (memv #{atom-key\ 2258}# (quote (c)))
                     (let ((#{proc\ 2261}#
                             (#{build-simple-lambda\ 164}#
                               #{src\ 2238}#
                               #{ids\ 2255}#
                               #f
                               #{vars\ 2254}#
                               '()
                               #{body-exp\ 2242}#)))
                       (begin
                         (#{maybe-name-value!\ 160}#
                           #{f-name\ 2253}#
                           #{proc\ 2261}#)
                         (for-each
                           #{maybe-name-value!\ 160}#
                           #{ids\ 2255}#
                           #{val-exps\ 2241}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 2238}#
                          (list #{f-name\ 2253}#)
                          (list #{f\ 2252}#)
                          (list #{proc\ 2261}#)
                          (#{build-application\ 144}#
                            #{src\ 2238}#
                            (#{build-lexical-reference\ 150}#
                              'fun
                              #{src\ 2238}#
                              #{f-name\ 2253}#
                              #{f\ 2252}#)
                            #{val-exps\ 2241}#))))
                     (#{decorate-source\ 140}#
                       (list 'letrec
                             (list (list #{f\ 2252}#
                                         (list 'lambda
                                               #{vars\ 2254}#
                                               #{body-exp\ 2242}#)))
                             (cons #{f\ 2252}# #{val-exps\ 2241}#))
                       #{src\ 2238}#))))))
           (#{build-let\ 176}#
             (lambda (#{src\ 2264}#
                      #{ids\ 2265}#
                      #{vars\ 2266}#
                      #{val-exps\ 2267}#
                      #{body-exp\ 2268}#)
               (if (null? #{vars\ 2266}#)
                 #{body-exp\ 2268}#
                 (let ((#{atom-key\ 2276}# (fluid-ref #{*mode*\ 121}#)))
                   (if (memv #{atom-key\ 2276}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 160}#
                         #{ids\ 2265}#
                         #{val-exps\ 2267}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 2264}#
                        #{ids\ 2265}#
                        #{vars\ 2266}#
                        #{val-exps\ 2267}#
                        #{body-exp\ 2268}#))
                     (#{decorate-source\ 140}#
                       (list 'let
                             (map list #{vars\ 2266}# #{val-exps\ 2267}#)
                             #{body-exp\ 2268}#)
                       #{src\ 2264}#))))))
           (#{build-sequence\ 174}#
             (lambda (#{src\ 2280}# #{exps\ 2281}#)
               (if (null? (cdr #{exps\ 2281}#))
                 (car #{exps\ 2281}#)
                 (let ((#{atom-key\ 2286}# (fluid-ref #{*mode*\ 121}#)))
                   (if (memv #{atom-key\ 2286}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 2280}#
                      #{exps\ 2281}#)
                     (#{decorate-source\ 140}#
                       (cons (quote begin) #{exps\ 2281}#)
                       #{src\ 2280}#))))))
           (#{build-data\ 172}#
             (lambda (#{src\ 2290}# #{exp\ 2291}#)
               (let ((#{atom-key\ 2296}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2296}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 2290}#
                    #{exp\ 2291}#)
                   (#{decorate-source\ 140}#
                     (if (if (self-evaluating? #{exp\ 2291}#)
                           (not (vector? #{exp\ 2291}#))
                           #f)
                       #{exp\ 2291}#
                       (list (quote quote) #{exp\ 2291}#))
                     #{src\ 2290}#)))))
           (#{build-primref\ 170}#
             (lambda (#{src\ 2301}# #{name\ 2302}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 2307}# (fluid-ref #{*mode*\ 121}#)))
                   (if (memv #{atom-key\ 2307}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 2301}#
                      #{name\ 2302}#)
                     (#{decorate-source\ 140}#
                       #{name\ 2302}#
                       #{src\ 2301}#)))
                 (let ((#{atom-key\ 2312}# (fluid-ref #{*mode*\ 121}#)))
                   (if (memv #{atom-key\ 2312}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 2301}#
                      '(guile)
                      #{name\ 2302}#
                      #f)
                     (#{decorate-source\ 140}#
                       (list (quote @@) (quote (guile)) #{name\ 2302}#)
                       #{src\ 2301}#))))))
           (#{build-lambda-case\ 168}#
             (lambda (#{src\ 2316}#
                      #{req\ 2317}#
                      #{opt\ 2318}#
                      #{rest\ 2319}#
                      #{kw\ 2320}#
                      #{inits\ 2321}#
                      #{vars\ 2322}#
                      #{body\ 2323}#
                      #{else-case\ 2324}#)
               (let ((#{atom-key\ 2336}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2336}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 2316}#
                    #{req\ 2317}#
                    #{opt\ 2318}#
                    #{rest\ 2319}#
                    #{kw\ 2320}#
                    #{inits\ 2321}#
                    #{vars\ 2322}#
                    #{body\ 2323}#
                    #{else-case\ 2324}#)
                   (let ((#{nreq\ 2341}# (length #{req\ 2317}#)))
                     (let ((#{nopt\ 2343}#
                             (if #{opt\ 2318}# (length #{opt\ 2318}#) 0)))
                       (let ((#{rest-idx\ 2345}#
                               (if #{rest\ 2319}#
                                 (+ #{nreq\ 2341}# #{nopt\ 2343}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 2349}#
                                 (if #{kw\ 2320}# (car #{kw\ 2320}#) #f)))
                           (let ((#{kw-indices\ 2351}#
                                   (map (lambda (#{x\ 2352}#)
                                          (cons (car #{x\ 2352}#)
                                                (list-index
                                                  #{vars\ 2322}#
                                                  (caddr #{x\ 2352}#))))
                                        (if #{kw\ 2320}#
                                          (cdr #{kw\ 2320}#)
                                          '()))))
                             (let ((#{nargs\ 2355}#
                                     (apply max
                                            (+ #{nreq\ 2341}#
                                               #{nopt\ 2343}#
                                               (if #{rest\ 2319}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 2351}#)))))
                               (begin
                                 (let ((#{t\ 2358}#
                                         (= #{nargs\ 2355}#
                                            (length #{vars\ 2322}#)
                                            (+ #{nreq\ 2341}#
                                               (length #{inits\ 2321}#)
                                               (if #{rest\ 2319}# 1 0)))))
                                   (if #{t\ 2358}#
                                     #{t\ 2358}#
                                     (error "something went wrong"
                                            #{req\ 2317}#
                                            #{opt\ 2318}#
                                            #{rest\ 2319}#
                                            #{kw\ 2320}#
                                            #{inits\ 2321}#
                                            #{vars\ 2322}#
                                            #{nreq\ 2341}#
                                            #{nopt\ 2343}#
                                            #{kw-indices\ 2351}#
                                            #{nargs\ 2355}#)))
                                 (#{decorate-source\ 140}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 2341}#
                                                                       #{nopt\ 2343}#
                                                                       #{rest-idx\ 2345}#
                                                                       #{nargs\ 2355}#
                                                                       #{allow-other-keys?\ 2349}#
                                                                       #{kw-indices\ 2351}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 2361}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 2322}#
                                                                                    #{i\ 2361}#))
                                                                            #{inits\ 2321}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 2322}#
                                                                       #{body\ 2323}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 2366}#
                                                 #{else-case\ 2324}#))
                                           (if #{t\ 2366}#
                                             #{t\ 2366}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 2316}#))))))))))))
           (#{build-case-lambda\ 166}#
             (lambda (#{src\ 2369}# #{meta\ 2370}# #{body\ 2371}#)
               (let ((#{atom-key\ 2377}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2377}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 2369}#
                    #{meta\ 2370}#
                    #{body\ 2371}#)
                   (#{decorate-source\ 140}#
                     (list 'lambda
                           '%%args
                           (cons (quote cond) #{body\ 2371}#))
                     #{src\ 2369}#)))))
           (#{build-simple-lambda\ 164}#
             (lambda (#{src\ 2381}#
                      #{req\ 2382}#
                      #{rest\ 2383}#
                      #{vars\ 2384}#
                      #{meta\ 2385}#
                      #{exp\ 2386}#)
               (let ((#{atom-key\ 2395}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2395}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 2381}#
                    #{meta\ 2385}#
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 2381}#
                     #{req\ 2382}#
                     #f
                     #{rest\ 2383}#
                     #f
                     '()
                     #{vars\ 2384}#
                     #{exp\ 2386}#
                     #f))
                   (#{decorate-source\ 140}#
                     (list 'lambda
                           (if #{rest\ 2383}#
                             (apply cons* #{vars\ 2384}#)
                             #{vars\ 2384}#)
                           #{exp\ 2386}#)
                     #{src\ 2381}#)))))
           (#{build-global-definition\ 162}#
             (lambda (#{source\ 2399}# #{var\ 2400}# #{exp\ 2401}#)
               (let ((#{atom-key\ 2407}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2407}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 160}#
                       #{var\ 2400}#
                       #{exp\ 2401}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 2399}#
                      #{var\ 2400}#
                      #{exp\ 2401}#))
                   (#{decorate-source\ 140}#
                     (list (quote define) #{var\ 2400}# #{exp\ 2401}#)
                     #{source\ 2399}#)))))
           (#{maybe-name-value!\ 160}#
             (lambda (#{name\ 2411}# #{val\ 2412}#)
               (if ((@ (language tree-il) lambda?) #{val\ 2412}#)
                 (let ((#{meta\ 2418}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 2412}#)))
                   (if (not (assq (quote name) #{meta\ 2418}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 2412}#
                      (acons 'name
                             #{name\ 2411}#
                             #{meta\ 2418}#)))))))
           (#{build-global-assignment\ 158}#
             (lambda (#{source\ 2419}#
                      #{var\ 2420}#
                      #{exp\ 2421}#
                      #{mod\ 2422}#)
               (#{analyze-variable\ 154}#
                 #{mod\ 2422}#
                 #{var\ 2420}#
                 (lambda (#{mod\ 2427}# #{var\ 2428}# #{public?\ 2429}#)
                   (let ((#{atom-key\ 2435}# (fluid-ref #{*mode*\ 121}#)))
                     (if (memv #{atom-key\ 2435}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 2419}#
                        #{mod\ 2427}#
                        #{var\ 2428}#
                        #{public?\ 2429}#
                        #{exp\ 2421}#)
                       (#{decorate-source\ 140}#
                         (list 'set!
                               (list (if #{public?\ 2429}#
                                       '@
                                       '@@)
                                     #{mod\ 2427}#
                                     #{var\ 2428}#)
                               #{exp\ 2421}#)
                         #{source\ 2419}#))))
                 (lambda (#{var\ 2439}#)
                   (let ((#{atom-key\ 2443}# (fluid-ref #{*mode*\ 121}#)))
                     (if (memv #{atom-key\ 2443}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 2419}#
                        #{var\ 2439}#
                        #{exp\ 2421}#)
                       (#{decorate-source\ 140}#
                         (list (quote set!) #{var\ 2439}# #{exp\ 2421}#)
                         #{source\ 2419}#)))))))
           (#{build-global-reference\ 156}#
             (lambda (#{source\ 2447}# #{var\ 2448}# #{mod\ 2449}#)
               (#{analyze-variable\ 154}#
                 #{mod\ 2449}#
                 #{var\ 2448}#
                 (lambda (#{mod\ 2453}# #{var\ 2454}# #{public?\ 2455}#)
                   (let ((#{atom-key\ 2461}# (fluid-ref #{*mode*\ 121}#)))
                     (if (memv #{atom-key\ 2461}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 2447}#
                        #{mod\ 2453}#
                        #{var\ 2454}#
                        #{public?\ 2455}#)
                       (#{decorate-source\ 140}#
                         (list (if #{public?\ 2455}# (quote @) (quote @@))
                               #{mod\ 2453}#
                               #{var\ 2454}#)
                         #{source\ 2447}#))))
                 (lambda (#{var\ 2464}#)
                   (let ((#{atom-key\ 2468}# (fluid-ref #{*mode*\ 121}#)))
                     (if (memv #{atom-key\ 2468}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 2447}#
                        #{var\ 2464}#)
                       (#{decorate-source\ 140}#
                         #{var\ 2464}#
                         #{source\ 2447}#)))))))
           (#{analyze-variable\ 154}#
             (lambda (#{mod\ 2471}#
                      #{var\ 2472}#
                      #{modref-cont\ 2473}#
                      #{bare-cont\ 2474}#)
               (if (not #{mod\ 2471}#)
                 (#{bare-cont\ 2474}# #{var\ 2472}#)
                 (let ((#{kind\ 2481}# (car #{mod\ 2471}#))
                       (#{mod\ 2482}# (cdr #{mod\ 2471}#)))
                   (if (memv #{kind\ 2481}# (quote (public)))
                     (#{modref-cont\ 2473}#
                       #{mod\ 2482}#
                       #{var\ 2472}#
                       #t)
                     (if (memv #{kind\ 2481}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 2482}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 2473}#
                           #{mod\ 2482}#
                           #{var\ 2472}#
                           #f)
                         (#{bare-cont\ 2474}# #{var\ 2472}#))
                       (if (memv #{kind\ 2481}# (quote (bare)))
                         (#{bare-cont\ 2474}# #{var\ 2472}#)
                         (if (memv #{kind\ 2481}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 2482}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 2482}#)
                                   #{var\ 2472}#)
                                 #f)
                             (#{modref-cont\ 2473}#
                               #{mod\ 2482}#
                               #{var\ 2472}#
                               #f)
                             (#{bare-cont\ 2474}# #{var\ 2472}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 2472}#
                             #{mod\ 2482}#)))))))))
           (#{build-lexical-assignment\ 152}#
             (lambda (#{source\ 2490}#
                      #{name\ 2491}#
                      #{var\ 2492}#
                      #{exp\ 2493}#)
               (let ((#{atom-key\ 2500}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2500}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 2490}#
                    #{name\ 2491}#
                    #{var\ 2492}#
                    #{exp\ 2493}#)
                   (#{decorate-source\ 140}#
                     (list (quote set!) #{var\ 2492}# #{exp\ 2493}#)
                     #{source\ 2490}#)))))
           (#{build-lexical-reference\ 150}#
             (lambda (#{type\ 2504}#
                      #{source\ 2505}#
                      #{name\ 2506}#
                      #{var\ 2507}#)
               (let ((#{atom-key\ 2514}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2514}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 2505}#
                    #{name\ 2506}#
                    #{var\ 2507}#)
                   (#{decorate-source\ 140}#
                     #{var\ 2507}#
                     #{source\ 2505}#)))))
           (#{build-dynlet\ 148}#
             (lambda (#{source\ 2517}#
                      #{fluids\ 2518}#
                      #{vals\ 2519}#
                      #{body\ 2520}#)
               (let ((#{atom-key\ 2527}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2527}# (quote (c)))
                   ((@ (language tree-il) make-dynlet)
                    #{source\ 2517}#
                    #{fluids\ 2518}#
                    #{vals\ 2519}#
                    #{body\ 2520}#)
                   (#{decorate-source\ 140}#
                     (list 'with-fluids
                           (map list #{fluids\ 2518}# #{vals\ 2519}#)
                           #{body\ 2520}#)
                     #{source\ 2517}#)))))
           (#{build-conditional\ 146}#
             (lambda (#{source\ 2531}#
                      #{test-exp\ 2532}#
                      #{then-exp\ 2533}#
                      #{else-exp\ 2534}#)
               (let ((#{atom-key\ 2541}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2541}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 2531}#
                    #{test-exp\ 2532}#
                    #{then-exp\ 2533}#
                    #{else-exp\ 2534}#)
                   (#{decorate-source\ 140}#
                     (if (equal? #{else-exp\ 2534}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 2532}#
                             #{then-exp\ 2533}#)
                       (list 'if
                             #{test-exp\ 2532}#
                             #{then-exp\ 2533}#
                             #{else-exp\ 2534}#))
                     #{source\ 2531}#)))))
           (#{build-application\ 144}#
             (lambda (#{source\ 2546}#
                      #{fun-exp\ 2547}#
                      #{arg-exps\ 2548}#)
               (let ((#{atom-key\ 2554}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2554}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 2546}#
                    #{fun-exp\ 2547}#
                    #{arg-exps\ 2548}#)
                   (#{decorate-source\ 140}#
                     (cons #{fun-exp\ 2547}# #{arg-exps\ 2548}#)
                     #{source\ 2546}#)))))
           (#{build-void\ 142}#
             (lambda (#{source\ 2558}#)
               (let ((#{atom-key\ 2562}# (fluid-ref #{*mode*\ 121}#)))
                 (if (memv #{atom-key\ 2562}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 2558}#)
                   (#{decorate-source\ 140}#
                     '(if #f #f)
                     #{source\ 2558}#)))))
           (#{decorate-source\ 140}#
             (lambda (#{e\ 2565}# #{s\ 2566}#)
               (begin
                 (if (if (pair? #{e\ 2565}#) #{s\ 2566}# #f)
                   (set-source-properties! #{e\ 2565}# #{s\ 2566}#))
                 #{e\ 2565}#)))
           (#{get-global-definition-hook\ 138}#
             (lambda (#{symbol\ 2571}# #{module\ 2572}#)
               (begin
                 (if (if (not #{module\ 2572}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 2571}#))
                 (let ((#{v\ 2578}#
                         (module-variable
                           (if #{module\ 2572}#
                             (resolve-module (cdr #{module\ 2572}#))
                             (current-module))
                           #{symbol\ 2571}#)))
                   (if #{v\ 2578}#
                     (if (variable-bound? #{v\ 2578}#)
                       (let ((#{val\ 2583}# (variable-ref #{v\ 2578}#)))
                         (if (macro? #{val\ 2583}#)
                           (if (macro-type #{val\ 2583}#)
                             (cons (macro-type #{val\ 2583}#)
                                   (macro-binding #{val\ 2583}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 136}#
             (lambda (#{symbol\ 2587}# #{type\ 2588}# #{val\ 2589}#)
               (module-define!
                 (current-module)
                 #{symbol\ 2587}#
                 (make-syntax-transformer
                   #{symbol\ 2587}#
                   #{type\ 2588}#
                   #{val\ 2589}#))))
           (#{local-eval-hook\ 133}#
             (lambda (#{x\ 2593}# #{mod\ 2594}#)
               (primitive-eval
                 (list #{noexpand\ 119}#
                       (let ((#{atom-key\ 2600}# (fluid-ref #{*mode*\ 121}#)))
                         (if (memv #{atom-key\ 2600}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 2593}#)
                           #{x\ 2593}#))))))
           (#{top-level-eval-hook\ 131}#
             (lambda (#{x\ 2603}# #{mod\ 2604}#)
               (primitive-eval
                 (list #{noexpand\ 119}#
                       (let ((#{atom-key\ 2610}# (fluid-ref #{*mode*\ 121}#)))
                         (if (memv #{atom-key\ 2610}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 2603}#)
                           #{x\ 2603}#))))))
           (#{fx<\ 129}# <)
           (#{fx=\ 127}# =)
           (#{fx-\ 125}# -)
           (#{fx+\ 123}# +)
           (#{*mode*\ 121}# (make-fluid))
           (#{noexpand\ 119}# "noexpand"))
    (begin
      (#{global-extend\ 218}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 218}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 218}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 2613}#
                 #{r\ 2614}#
                 #{w\ 2615}#
                 #{s\ 2616}#
                 #{mod\ 2617}#)
          ((lambda (#{tmp\ 2623}#)
             ((lambda (#{tmp\ 2624}#)
                (if (if #{tmp\ 2624}#
                      (apply (lambda (#{_\ 2630}#
                                      #{var\ 2631}#
                                      #{val\ 2632}#
                                      #{e1\ 2633}#
                                      #{e2\ 2634}#)
                               (#{valid-bound-ids?\ 285}# #{var\ 2631}#))
                             #{tmp\ 2624}#)
                      #f)
                  (apply (lambda (#{_\ 2641}#
                                  #{var\ 2642}#
                                  #{val\ 2643}#
                                  #{e1\ 2644}#
                                  #{e2\ 2645}#)
                           (let ((#{names\ 2647}#
                                   (map (lambda (#{x\ 2648}#)
                                          (#{id-var-name\ 279}#
                                            #{x\ 2648}#
                                            #{w\ 2615}#))
                                        #{var\ 2642}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 2651}# #{n\ 2652}#)
                                   (let ((#{atom-key\ 2657}#
                                           (#{binding-type\ 205}#
                                             (#{lookup\ 216}#
                                               #{n\ 2652}#
                                               #{r\ 2614}#
                                               #{mod\ 2617}#))))
                                     (if (memv #{atom-key\ 2657}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 2613}#
                                         (#{source-wrap\ 293}#
                                           #{id\ 2651}#
                                           #{w\ 2615}#
                                           #{s\ 2616}#
                                           #{mod\ 2617}#)))))
                                 #{var\ 2642}#
                                 #{names\ 2647}#)
                               (#{chi-body\ 315}#
                                 (cons #{e1\ 2644}# #{e2\ 2645}#)
                                 (#{source-wrap\ 293}#
                                   #{e\ 2613}#
                                   #{w\ 2615}#
                                   #{s\ 2616}#
                                   #{mod\ 2617}#)
                                 (#{extend-env\ 210}#
                                   #{names\ 2647}#
                                   (let ((#{trans-r\ 2662}#
                                           (#{macros-only-env\ 214}#
                                             #{r\ 2614}#)))
                                     (map (lambda (#{x\ 2663}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 319}#
                                                    (#{chi\ 307}#
                                                      #{x\ 2663}#
                                                      #{trans-r\ 2662}#
                                                      #{w\ 2615}#
                                                      #{mod\ 2617}#)
                                                    #{mod\ 2617}#)))
                                          #{val\ 2643}#))
                                   #{r\ 2614}#)
                                 #{w\ 2615}#
                                 #{mod\ 2617}#))))
                         #{tmp\ 2624}#)
                  ((lambda (#{_\ 2668}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 293}#
                         #{e\ 2613}#
                         #{w\ 2615}#
                         #{s\ 2616}#
                         #{mod\ 2617}#)))
                   #{tmp\ 2623}#)))
              ($sc-dispatch
                #{tmp\ 2623}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 2613}#)))
      (#{global-extend\ 218}#
        'core
        'quote
        (lambda (#{e\ 2669}#
                 #{r\ 2670}#
                 #{w\ 2671}#
                 #{s\ 2672}#
                 #{mod\ 2673}#)
          ((lambda (#{tmp\ 2679}#)
             ((lambda (#{tmp\ 2680}#)
                (if #{tmp\ 2680}#
                  (apply (lambda (#{_\ 2683}# #{e\ 2684}#)
                           (#{build-data\ 172}#
                             #{s\ 2672}#
                             (#{strip\ 333}# #{e\ 2684}# #{w\ 2671}#)))
                         #{tmp\ 2680}#)
                  ((lambda (#{_\ 2686}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 293}#
                         #{e\ 2669}#
                         #{w\ 2671}#
                         #{s\ 2672}#
                         #{mod\ 2673}#)))
                   #{tmp\ 2679}#)))
              ($sc-dispatch #{tmp\ 2679}# (quote (any any)))))
           #{e\ 2669}#)))
      (#{global-extend\ 218}#
        'core
        'syntax
        (letrec ((#{regen\ 2702}#
                   (lambda (#{x\ 2703}#)
                     (let ((#{atom-key\ 2707}# (car #{x\ 2703}#)))
                       (if (memv #{atom-key\ 2707}# (quote (ref)))
                         (#{build-lexical-reference\ 150}#
                           'value
                           #f
                           (cadr #{x\ 2703}#)
                           (cadr #{x\ 2703}#))
                         (if (memv #{atom-key\ 2707}# (quote (primitive)))
                           (#{build-primref\ 170}# #f (cadr #{x\ 2703}#))
                           (if (memv #{atom-key\ 2707}# (quote (quote)))
                             (#{build-data\ 172}# #f (cadr #{x\ 2703}#))
                             (if (memv #{atom-key\ 2707}# (quote (lambda)))
                               (if (list? (cadr #{x\ 2703}#))
                                 (#{build-simple-lambda\ 164}#
                                   #f
                                   (cadr #{x\ 2703}#)
                                   #f
                                   (cadr #{x\ 2703}#)
                                   '()
                                   (#{regen\ 2702}# (caddr #{x\ 2703}#)))
                                 (error "how did we get here" #{x\ 2703}#))
                               (#{build-application\ 144}#
                                 #f
                                 (#{build-primref\ 170}# #f (car #{x\ 2703}#))
                                 (map #{regen\ 2702}#
                                      (cdr #{x\ 2703}#))))))))))
                 (#{gen-vector\ 2700}#
                   (lambda (#{x\ 2719}#)
                     (if (eq? (car #{x\ 2719}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 2719}#))
                       (if (eq? (car #{x\ 2719}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 2719}#)))
                         (list (quote list->vector) #{x\ 2719}#)))))
                 (#{gen-append\ 2698}#
                   (lambda (#{x\ 2729}# #{y\ 2730}#)
                     (if (equal? #{y\ 2730}# (quote (quote ())))
                       #{x\ 2729}#
                       (list (quote append) #{x\ 2729}# #{y\ 2730}#))))
                 (#{gen-cons\ 2696}#
                   (lambda (#{x\ 2734}# #{y\ 2735}#)
                     (let ((#{atom-key\ 2740}# (car #{y\ 2735}#)))
                       (if (memv #{atom-key\ 2740}# (quote (quote)))
                         (if (eq? (car #{x\ 2734}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 2734}#) (cadr #{y\ 2735}#)))
                           (if (eq? (cadr #{y\ 2735}#) (quote ()))
                             (list (quote list) #{x\ 2734}#)
                             (list (quote cons) #{x\ 2734}# #{y\ 2735}#)))
                         (if (memv #{atom-key\ 2740}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 2734}# (cdr #{y\ 2735}#)))
                           (list (quote cons) #{x\ 2734}# #{y\ 2735}#))))))
                 (#{gen-map\ 2694}#
                   (lambda (#{e\ 2749}# #{map-env\ 2750}#)
                     (let ((#{formals\ 2755}# (map cdr #{map-env\ 2750}#))
                           (#{actuals\ 2756}#
                             (map (lambda (#{x\ 2757}#)
                                    (list (quote ref) (car #{x\ 2757}#)))
                                  #{map-env\ 2750}#)))
                       (if (eq? (car #{e\ 2749}#) (quote ref))
                         (car #{actuals\ 2756}#)
                         (if (and-map
                               (lambda (#{x\ 2764}#)
                                 (if (eq? (car #{x\ 2764}#) (quote ref))
                                   (memq (cadr #{x\ 2764}#) #{formals\ 2755}#)
                                   #f))
                               (cdr #{e\ 2749}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 2749}#))
                                       (map (let ((#{r\ 2770}#
                                                    (map cons
                                                         #{formals\ 2755}#
                                                         #{actuals\ 2756}#)))
                                              (lambda (#{x\ 2771}#)
                                                (cdr (assq (cadr #{x\ 2771}#)
                                                           #{r\ 2770}#))))
                                            (cdr #{e\ 2749}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 2755}#
                                             #{e\ 2749}#)
                                       #{actuals\ 2756}#)))))))
                 (#{gen-mappend\ 2692}#
                   (lambda (#{e\ 2775}# #{map-env\ 2776}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 2694}# #{e\ 2775}# #{map-env\ 2776}#))))
                 (#{gen-ref\ 2690}#
                   (lambda (#{src\ 2780}#
                            #{var\ 2781}#
                            #{level\ 2782}#
                            #{maps\ 2783}#)
                     (if (#{fx=\ 127}# #{level\ 2782}# 0)
                       (values #{var\ 2781}# #{maps\ 2783}#)
                       (if (null? #{maps\ 2783}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 2780}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 2690}#
                               #{src\ 2780}#
                               #{var\ 2781}#
                               (#{fx-\ 125}# #{level\ 2782}# 1)
                               (cdr #{maps\ 2783}#)))
                           (lambda (#{outer-var\ 2788}# #{outer-maps\ 2789}#)
                             (let ((#{b\ 2793}#
                                     (assq #{outer-var\ 2788}#
                                           (car #{maps\ 2783}#))))
                               (if #{b\ 2793}#
                                 (values (cdr #{b\ 2793}#) #{maps\ 2783}#)
                                 (let ((#{inner-var\ 2795}#
                                         (#{gen-var\ 335}# (quote tmp))))
                                   (values
                                     #{inner-var\ 2795}#
                                     (cons (cons (cons #{outer-var\ 2788}#
                                                       #{inner-var\ 2795}#)
                                                 (car #{maps\ 2783}#))
                                           #{outer-maps\ 2789}#)))))))))))
                 (#{gen-syntax\ 2688}#
                   (lambda (#{src\ 2796}#
                            #{e\ 2797}#
                            #{r\ 2798}#
                            #{maps\ 2799}#
                            #{ellipsis?\ 2800}#
                            #{mod\ 2801}#)
                     (if (#{id?\ 222}# #{e\ 2797}#)
                       (let ((#{label\ 2809}#
                               (#{id-var-name\ 279}#
                                 #{e\ 2797}#
                                 '(()))))
                         (let ((#{b\ 2812}#
                                 (#{lookup\ 216}#
                                   #{label\ 2809}#
                                   #{r\ 2798}#
                                   #{mod\ 2801}#)))
                           (if (eq? (#{binding-type\ 205}# #{b\ 2812}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 2814}#
                                         (#{binding-value\ 207}# #{b\ 2812}#)))
                                   (#{gen-ref\ 2690}#
                                     #{src\ 2796}#
                                     (car #{var.lev\ 2814}#)
                                     (cdr #{var.lev\ 2814}#)
                                     #{maps\ 2799}#)))
                               (lambda (#{var\ 2815}# #{maps\ 2816}#)
                                 (values
                                   (list (quote ref) #{var\ 2815}#)
                                   #{maps\ 2816}#)))
                             (if (#{ellipsis?\ 2800}# #{e\ 2797}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 2796}#)
                               (values
                                 (list (quote quote) #{e\ 2797}#)
                                 #{maps\ 2799}#)))))
                       ((lambda (#{tmp\ 2821}#)
                          ((lambda (#{tmp\ 2822}#)
                             (if (if #{tmp\ 2822}#
                                   (apply (lambda (#{dots\ 2825}# #{e\ 2826}#)
                                            (#{ellipsis?\ 2800}#
                                              #{dots\ 2825}#))
                                          #{tmp\ 2822}#)
                                   #f)
                               (apply (lambda (#{dots\ 2829}# #{e\ 2830}#)
                                        (#{gen-syntax\ 2688}#
                                          #{src\ 2796}#
                                          #{e\ 2830}#
                                          #{r\ 2798}#
                                          #{maps\ 2799}#
                                          (lambda (#{x\ 2831}#) #f)
                                          #{mod\ 2801}#))
                                      #{tmp\ 2822}#)
                               ((lambda (#{tmp\ 2833}#)
                                  (if (if #{tmp\ 2833}#
                                        (apply (lambda (#{x\ 2837}#
                                                        #{dots\ 2838}#
                                                        #{y\ 2839}#)
                                                 (#{ellipsis?\ 2800}#
                                                   #{dots\ 2838}#))
                                               #{tmp\ 2833}#)
                                        #f)
                                    (apply (lambda (#{x\ 2843}#
                                                    #{dots\ 2844}#
                                                    #{y\ 2845}#)
                                             (letrec ((#{f\ 2849}#
                                                        (lambda (#{y\ 2850}#
                                                                 #{k\ 2851}#)
                                                          ((lambda (#{tmp\ 2858}#)
                                                             ((lambda (#{tmp\ 2859}#)
                                                                (if (if #{tmp\ 2859}#
                                                                      (apply (lambda (#{dots\ 2862}#
                                                                                      #{y\ 2863}#)
                                                                               (#{ellipsis?\ 2800}#
                                                                                 #{dots\ 2862}#))
                                                                             #{tmp\ 2859}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 2866}#
                                                                                  #{y\ 2867}#)
                                                                           (#{f\ 2849}#
                                                                             #{y\ 2867}#
                                                                             (lambda (#{maps\ 2868}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 2851}#
                                                                                     (cons '()
                                                                                           #{maps\ 2868}#)))
                                                                                 (lambda (#{x\ 2870}#
                                                                                          #{maps\ 2871}#)
                                                                                   (if (null? (car #{maps\ 2871}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 2796}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 2692}#
                                                                                         #{x\ 2870}#
                                                                                         (car #{maps\ 2871}#))
                                                                                       (cdr #{maps\ 2871}#))))))))
                                                                         #{tmp\ 2859}#)
                                                                  ((lambda (#{_\ 2875}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 2688}#
                                                                           #{src\ 2796}#
                                                                           #{y\ 2850}#
                                                                           #{r\ 2798}#
                                                                           #{maps\ 2799}#
                                                                           #{ellipsis?\ 2800}#
                                                                           #{mod\ 2801}#))
                                                                       (lambda (#{y\ 2876}#
                                                                                #{maps\ 2877}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 2851}#
                                                                               #{maps\ 2877}#))
                                                                           (lambda (#{x\ 2880}#
                                                                                    #{maps\ 2881}#)
                                                                             (values
                                                                               (#{gen-append\ 2698}#
                                                                                 #{x\ 2880}#
                                                                                 #{y\ 2876}#)
                                                                               #{maps\ 2881}#))))))
                                                                   #{tmp\ 2858}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 2858}#
                                                                '(any . any))))
                                                           #{y\ 2850}#))))
                                               (#{f\ 2849}#
                                                 #{y\ 2845}#
                                                 (lambda (#{maps\ 2852}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 2688}#
                                                         #{src\ 2796}#
                                                         #{x\ 2843}#
                                                         #{r\ 2798}#
                                                         (cons '()
                                                               #{maps\ 2852}#)
                                                         #{ellipsis?\ 2800}#
                                                         #{mod\ 2801}#))
                                                     (lambda (#{x\ 2854}#
                                                              #{maps\ 2855}#)
                                                       (if (null? (car #{maps\ 2855}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 2796}#)
                                                         (values
                                                           (#{gen-map\ 2694}#
                                                             #{x\ 2854}#
                                                             (car #{maps\ 2855}#))
                                                           (cdr #{maps\ 2855}#)))))))))
                                           #{tmp\ 2833}#)
                                    ((lambda (#{tmp\ 2884}#)
                                       (if #{tmp\ 2884}#
                                         (apply (lambda (#{x\ 2887}#
                                                         #{y\ 2888}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 2688}#
                                                        #{src\ 2796}#
                                                        #{x\ 2887}#
                                                        #{r\ 2798}#
                                                        #{maps\ 2799}#
                                                        #{ellipsis?\ 2800}#
                                                        #{mod\ 2801}#))
                                                    (lambda (#{x\ 2889}#
                                                             #{maps\ 2890}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 2688}#
                                                            #{src\ 2796}#
                                                            #{y\ 2888}#
                                                            #{r\ 2798}#
                                                            #{maps\ 2890}#
                                                            #{ellipsis?\ 2800}#
                                                            #{mod\ 2801}#))
                                                        (lambda (#{y\ 2893}#
                                                                 #{maps\ 2894}#)
                                                          (values
                                                            (#{gen-cons\ 2696}#
                                                              #{x\ 2889}#
                                                              #{y\ 2893}#)
                                                            #{maps\ 2894}#))))))
                                                #{tmp\ 2884}#)
                                         ((lambda (#{tmp\ 2897}#)
                                            (if #{tmp\ 2897}#
                                              (apply (lambda (#{e1\ 2900}#
                                                              #{e2\ 2901}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 2688}#
                                                             #{src\ 2796}#
                                                             (cons #{e1\ 2900}#
                                                                   #{e2\ 2901}#)
                                                             #{r\ 2798}#
                                                             #{maps\ 2799}#
                                                             #{ellipsis?\ 2800}#
                                                             #{mod\ 2801}#))
                                                         (lambda (#{e\ 2903}#
                                                                  #{maps\ 2904}#)
                                                           (values
                                                             (#{gen-vector\ 2700}#
                                                               #{e\ 2903}#)
                                                             #{maps\ 2904}#))))
                                                     #{tmp\ 2897}#)
                                              ((lambda (#{_\ 2908}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 2797}#)
                                                   #{maps\ 2799}#))
                                               #{tmp\ 2821}#)))
                                          ($sc-dispatch
                                            #{tmp\ 2821}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 2821}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 2821}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 2821}# (quote (any any)))))
                        #{e\ 2797}#)))))
          (lambda (#{e\ 2910}#
                   #{r\ 2911}#
                   #{w\ 2912}#
                   #{s\ 2913}#
                   #{mod\ 2914}#)
            (let ((#{e\ 2921}#
                    (#{source-wrap\ 293}#
                      #{e\ 2910}#
                      #{w\ 2912}#
                      #{s\ 2913}#
                      #{mod\ 2914}#)))
              ((lambda (#{tmp\ 2922}#)
                 ((lambda (#{tmp\ 2923}#)
                    (if #{tmp\ 2923}#
                      (apply (lambda (#{_\ 2926}# #{x\ 2927}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 2688}#
                                     #{e\ 2921}#
                                     #{x\ 2927}#
                                     #{r\ 2911}#
                                     '()
                                     #{ellipsis?\ 323}#
                                     #{mod\ 2914}#))
                                 (lambda (#{e\ 2928}# #{maps\ 2929}#)
                                   (#{regen\ 2702}# #{e\ 2928}#))))
                             #{tmp\ 2923}#)
                      ((lambda (#{_\ 2933}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 2921}#))
                       #{tmp\ 2922}#)))
                  ($sc-dispatch #{tmp\ 2922}# (quote (any any)))))
               #{e\ 2921}#)))))
      (#{global-extend\ 218}#
        'core
        'lambda
        (lambda (#{e\ 2934}#
                 #{r\ 2935}#
                 #{w\ 2936}#
                 #{s\ 2937}#
                 #{mod\ 2938}#)
          ((lambda (#{tmp\ 2944}#)
             ((lambda (#{tmp\ 2945}#)
                (if #{tmp\ 2945}#
                  (apply (lambda (#{_\ 2950}#
                                  #{args\ 2951}#
                                  #{e1\ 2952}#
                                  #{e2\ 2953}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 325}# #{args\ 2951}#))
                             (lambda (#{req\ 2954}#
                                      #{opt\ 2955}#
                                      #{rest\ 2956}#
                                      #{kw\ 2957}#)
                               (letrec ((#{lp\ 2965}#
                                          (lambda (#{body\ 2966}#
                                                   #{meta\ 2967}#)
                                            ((lambda (#{tmp\ 2969}#)
                                               ((lambda (#{tmp\ 2970}#)
                                                  (if (if #{tmp\ 2970}#
                                                        (apply (lambda (#{docstring\ 2974}#
                                                                        #{e1\ 2975}#
                                                                        #{e2\ 2976}#)
                                                                 (string?
                                                                   (syntax->datum
                                                                     #{docstring\ 2974}#)))
                                                               #{tmp\ 2970}#)
                                                        #f)
                                                    (apply (lambda (#{docstring\ 2980}#
                                                                    #{e1\ 2981}#
                                                                    #{e2\ 2982}#)
                                                             (#{lp\ 2965}#
                                                               (cons #{e1\ 2981}#
                                                                     #{e2\ 2982}#)
                                                               (append
                                                                 #{meta\ 2967}#
                                                                 (list (cons 'documentation
                                                                             (syntax->datum
                                                                               #{docstring\ 2980}#))))))
                                                           #{tmp\ 2970}#)
                                                    ((lambda (#{tmp\ 2985}#)
                                                       (if #{tmp\ 2985}#
                                                         (apply (lambda (#{k\ 2990}#
                                                                         #{v\ 2991}#
                                                                         #{e1\ 2992}#
                                                                         #{e2\ 2993}#)
                                                                  (#{lp\ 2965}#
                                                                    (cons #{e1\ 2992}#
                                                                          #{e2\ 2993}#)
                                                                    (append
                                                                      #{meta\ 2967}#
                                                                      (syntax->datum
                                                                        (map cons
                                                                             #{k\ 2990}#
                                                                             #{v\ 2991}#)))))
                                                                #{tmp\ 2985}#)
                                                         ((lambda (#{_\ 2998}#)
                                                            (#{chi-simple-lambda\ 327}#
                                                              #{e\ 2934}#
                                                              #{r\ 2935}#
                                                              #{w\ 2936}#
                                                              #{s\ 2937}#
                                                              #{mod\ 2938}#
                                                              #{req\ 2954}#
                                                              #{rest\ 2956}#
                                                              #{meta\ 2967}#
                                                              #{body\ 2966}#))
                                                          #{tmp\ 2969}#)))
                                                     ($sc-dispatch
                                                       #{tmp\ 2969}#
                                                       '(#(vector
                                                           #(each (any . any)))
                                                         any
                                                         .
                                                         each-any)))))
                                                ($sc-dispatch
                                                  #{tmp\ 2969}#
                                                  '(any any . each-any))))
                                             #{body\ 2966}#))))
                                 (#{lp\ 2965}#
                                   (cons #{e1\ 2952}# #{e2\ 2953}#)
                                   '())))))
                         #{tmp\ 2945}#)
                  ((lambda (#{_\ 3000}#)
                     (syntax-violation
                       'lambda
                       "bad lambda"
                       #{e\ 2934}#))
                   #{tmp\ 2944}#)))
              ($sc-dispatch
                #{tmp\ 2944}#
                '(any any any . each-any))))
           #{e\ 2934}#)))
      (#{global-extend\ 218}#
        'core
        'lambda*
        (lambda (#{e\ 3001}#
                 #{r\ 3002}#
                 #{w\ 3003}#
                 #{s\ 3004}#
                 #{mod\ 3005}#)
          ((lambda (#{tmp\ 3011}#)
             ((lambda (#{tmp\ 3012}#)
                (if #{tmp\ 3012}#
                  (apply (lambda (#{_\ 3017}#
                                  #{args\ 3018}#
                                  #{e1\ 3019}#
                                  #{e2\ 3020}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 331}#
                                 #{e\ 3001}#
                                 #{r\ 3002}#
                                 #{w\ 3003}#
                                 #{s\ 3004}#
                                 #{mod\ 3005}#
                                 #{lambda*-formals\ 329}#
                                 (list (cons #{args\ 3018}#
                                             (cons #{e1\ 3019}#
                                                   #{e2\ 3020}#)))))
                             (lambda (#{meta\ 3022}# #{lcase\ 3023}#)
                               (#{build-case-lambda\ 166}#
                                 #{s\ 3004}#
                                 #{meta\ 3022}#
                                 #{lcase\ 3023}#))))
                         #{tmp\ 3012}#)
                  ((lambda (#{_\ 3027}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 3001}#))
                   #{tmp\ 3011}#)))
              ($sc-dispatch
                #{tmp\ 3011}#
                '(any any any . each-any))))
           #{e\ 3001}#)))
      (#{global-extend\ 218}#
        'core
        'case-lambda
        (lambda (#{e\ 3028}#
                 #{r\ 3029}#
                 #{w\ 3030}#
                 #{s\ 3031}#
                 #{mod\ 3032}#)
          ((lambda (#{tmp\ 3038}#)
             ((lambda (#{tmp\ 3039}#)
                (if #{tmp\ 3039}#
                  (apply (lambda (#{_\ 3047}#
                                  #{args\ 3048}#
                                  #{e1\ 3049}#
                                  #{e2\ 3050}#
                                  #{args*\ 3051}#
                                  #{e1*\ 3052}#
                                  #{e2*\ 3053}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 331}#
                                 #{e\ 3028}#
                                 #{r\ 3029}#
                                 #{w\ 3030}#
                                 #{s\ 3031}#
                                 #{mod\ 3032}#
                                 #{lambda-formals\ 325}#
                                 (cons (cons #{args\ 3048}#
                                             (cons #{e1\ 3049}# #{e2\ 3050}#))
                                       (map (lambda (#{tmp\ 3057}#
                                                     #{tmp\ 3056}#
                                                     #{tmp\ 3055}#)
                                              (cons #{tmp\ 3055}#
                                                    (cons #{tmp\ 3056}#
                                                          #{tmp\ 3057}#)))
                                            #{e2*\ 3053}#
                                            #{e1*\ 3052}#
                                            #{args*\ 3051}#))))
                             (lambda (#{meta\ 3059}# #{lcase\ 3060}#)
                               (#{build-case-lambda\ 166}#
                                 #{s\ 3031}#
                                 #{meta\ 3059}#
                                 #{lcase\ 3060}#))))
                         #{tmp\ 3039}#)
                  ((lambda (#{_\ 3064}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 3028}#))
                   #{tmp\ 3038}#)))
              ($sc-dispatch
                #{tmp\ 3038}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3028}#)))
      (#{global-extend\ 218}#
        'core
        'case-lambda*
        (lambda (#{e\ 3065}#
                 #{r\ 3066}#
                 #{w\ 3067}#
                 #{s\ 3068}#
                 #{mod\ 3069}#)
          ((lambda (#{tmp\ 3075}#)
             ((lambda (#{tmp\ 3076}#)
                (if #{tmp\ 3076}#
                  (apply (lambda (#{_\ 3084}#
                                  #{args\ 3085}#
                                  #{e1\ 3086}#
                                  #{e2\ 3087}#
                                  #{args*\ 3088}#
                                  #{e1*\ 3089}#
                                  #{e2*\ 3090}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 331}#
                                 #{e\ 3065}#
                                 #{r\ 3066}#
                                 #{w\ 3067}#
                                 #{s\ 3068}#
                                 #{mod\ 3069}#
                                 #{lambda*-formals\ 329}#
                                 (cons (cons #{args\ 3085}#
                                             (cons #{e1\ 3086}# #{e2\ 3087}#))
                                       (map (lambda (#{tmp\ 3094}#
                                                     #{tmp\ 3093}#
                                                     #{tmp\ 3092}#)
                                              (cons #{tmp\ 3092}#
                                                    (cons #{tmp\ 3093}#
                                                          #{tmp\ 3094}#)))
                                            #{e2*\ 3090}#
                                            #{e1*\ 3089}#
                                            #{args*\ 3088}#))))
                             (lambda (#{meta\ 3096}# #{lcase\ 3097}#)
                               (#{build-case-lambda\ 166}#
                                 #{s\ 3068}#
                                 #{meta\ 3096}#
                                 #{lcase\ 3097}#))))
                         #{tmp\ 3076}#)
                  ((lambda (#{_\ 3101}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 3065}#))
                   #{tmp\ 3075}#)))
              ($sc-dispatch
                #{tmp\ 3075}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3065}#)))
      (#{global-extend\ 218}#
        'core
        'let
        (letrec ((#{chi-let\ 3103}#
                   (lambda (#{e\ 3104}#
                            #{r\ 3105}#
                            #{w\ 3106}#
                            #{s\ 3107}#
                            #{mod\ 3108}#
                            #{constructor\ 3109}#
                            #{ids\ 3110}#
                            #{vals\ 3111}#
                            #{exps\ 3112}#)
                     (if (not (#{valid-bound-ids?\ 285}# #{ids\ 3110}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 3104}#)
                       (let ((#{labels\ 3124}#
                               (#{gen-labels\ 240}# #{ids\ 3110}#))
                             (#{new-vars\ 3125}#
                               (map #{gen-var\ 335}# #{ids\ 3110}#)))
                         (let ((#{nw\ 3128}#
                                 (#{make-binding-wrap\ 269}#
                                   #{ids\ 3110}#
                                   #{labels\ 3124}#
                                   #{w\ 3106}#))
                               (#{nr\ 3129}#
                                 (#{extend-var-env\ 212}#
                                   #{labels\ 3124}#
                                   #{new-vars\ 3125}#
                                   #{r\ 3105}#)))
                           (#{constructor\ 3109}#
                             #{s\ 3107}#
                             (map syntax->datum #{ids\ 3110}#)
                             #{new-vars\ 3125}#
                             (map (lambda (#{x\ 3130}#)
                                    (#{chi\ 307}#
                                      #{x\ 3130}#
                                      #{r\ 3105}#
                                      #{w\ 3106}#
                                      #{mod\ 3108}#))
                                  #{vals\ 3111}#)
                             (#{chi-body\ 315}#
                               #{exps\ 3112}#
                               (#{source-wrap\ 293}#
                                 #{e\ 3104}#
                                 #{nw\ 3128}#
                                 #{s\ 3107}#
                                 #{mod\ 3108}#)
                               #{nr\ 3129}#
                               #{nw\ 3128}#
                               #{mod\ 3108}#))))))))
          (lambda (#{e\ 3132}#
                   #{r\ 3133}#
                   #{w\ 3134}#
                   #{s\ 3135}#
                   #{mod\ 3136}#)
            ((lambda (#{tmp\ 3142}#)
               ((lambda (#{tmp\ 3143}#)
                  (if (if #{tmp\ 3143}#
                        (apply (lambda (#{_\ 3149}#
                                        #{id\ 3150}#
                                        #{val\ 3151}#
                                        #{e1\ 3152}#
                                        #{e2\ 3153}#)
                                 (and-map #{id?\ 222}# #{id\ 3150}#))
                               #{tmp\ 3143}#)
                        #f)
                    (apply (lambda (#{_\ 3160}#
                                    #{id\ 3161}#
                                    #{val\ 3162}#
                                    #{e1\ 3163}#
                                    #{e2\ 3164}#)
                             (#{chi-let\ 3103}#
                               #{e\ 3132}#
                               #{r\ 3133}#
                               #{w\ 3134}#
                               #{s\ 3135}#
                               #{mod\ 3136}#
                               #{build-let\ 176}#
                               #{id\ 3161}#
                               #{val\ 3162}#
                               (cons #{e1\ 3163}# #{e2\ 3164}#)))
                           #{tmp\ 3143}#)
                    ((lambda (#{tmp\ 3168}#)
                       (if (if #{tmp\ 3168}#
                             (apply (lambda (#{_\ 3175}#
                                             #{f\ 3176}#
                                             #{id\ 3177}#
                                             #{val\ 3178}#
                                             #{e1\ 3179}#
                                             #{e2\ 3180}#)
                                      (if (#{id?\ 222}# #{f\ 3176}#)
                                        (and-map #{id?\ 222}# #{id\ 3177}#)
                                        #f))
                                    #{tmp\ 3168}#)
                             #f)
                         (apply (lambda (#{_\ 3190}#
                                         #{f\ 3191}#
                                         #{id\ 3192}#
                                         #{val\ 3193}#
                                         #{e1\ 3194}#
                                         #{e2\ 3195}#)
                                  (#{chi-let\ 3103}#
                                    #{e\ 3132}#
                                    #{r\ 3133}#
                                    #{w\ 3134}#
                                    #{s\ 3135}#
                                    #{mod\ 3136}#
                                    #{build-named-let\ 178}#
                                    (cons #{f\ 3191}# #{id\ 3192}#)
                                    #{val\ 3193}#
                                    (cons #{e1\ 3194}# #{e2\ 3195}#)))
                                #{tmp\ 3168}#)
                         ((lambda (#{_\ 3200}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 293}#
                                #{e\ 3132}#
                                #{w\ 3134}#
                                #{s\ 3135}#
                                #{mod\ 3136}#)))
                          #{tmp\ 3142}#)))
                     ($sc-dispatch
                       #{tmp\ 3142}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3142}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 3132}#))))
      (#{global-extend\ 218}#
        'core
        'letrec
        (lambda (#{e\ 3201}#
                 #{r\ 3202}#
                 #{w\ 3203}#
                 #{s\ 3204}#
                 #{mod\ 3205}#)
          ((lambda (#{tmp\ 3211}#)
             ((lambda (#{tmp\ 3212}#)
                (if (if #{tmp\ 3212}#
                      (apply (lambda (#{_\ 3218}#
                                      #{id\ 3219}#
                                      #{val\ 3220}#
                                      #{e1\ 3221}#
                                      #{e2\ 3222}#)
                               (and-map #{id?\ 222}# #{id\ 3219}#))
                             #{tmp\ 3212}#)
                      #f)
                  (apply (lambda (#{_\ 3229}#
                                  #{id\ 3230}#
                                  #{val\ 3231}#
                                  #{e1\ 3232}#
                                  #{e2\ 3233}#)
                           (let ((#{ids\ 3235}# #{id\ 3230}#))
                             (if (not (#{valid-bound-ids?\ 285}#
                                        #{ids\ 3235}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 3201}#)
                               (let ((#{labels\ 3239}#
                                       (#{gen-labels\ 240}# #{ids\ 3235}#))
                                     (#{new-vars\ 3240}#
                                       (map #{gen-var\ 335}# #{ids\ 3235}#)))
                                 (let ((#{w\ 3243}#
                                         (#{make-binding-wrap\ 269}#
                                           #{ids\ 3235}#
                                           #{labels\ 3239}#
                                           #{w\ 3203}#))
                                       (#{r\ 3244}#
                                         (#{extend-var-env\ 212}#
                                           #{labels\ 3239}#
                                           #{new-vars\ 3240}#
                                           #{r\ 3202}#)))
                                   (#{build-letrec\ 180}#
                                     #{s\ 3204}#
                                     (map syntax->datum #{ids\ 3235}#)
                                     #{new-vars\ 3240}#
                                     (map (lambda (#{x\ 3245}#)
                                            (#{chi\ 307}#
                                              #{x\ 3245}#
                                              #{r\ 3244}#
                                              #{w\ 3243}#
                                              #{mod\ 3205}#))
                                          #{val\ 3231}#)
                                     (#{chi-body\ 315}#
                                       (cons #{e1\ 3232}# #{e2\ 3233}#)
                                       (#{source-wrap\ 293}#
                                         #{e\ 3201}#
                                         #{w\ 3243}#
                                         #{s\ 3204}#
                                         #{mod\ 3205}#)
                                       #{r\ 3244}#
                                       #{w\ 3243}#
                                       #{mod\ 3205}#)))))))
                         #{tmp\ 3212}#)
                  ((lambda (#{_\ 3250}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 293}#
                         #{e\ 3201}#
                         #{w\ 3203}#
                         #{s\ 3204}#
                         #{mod\ 3205}#)))
                   #{tmp\ 3211}#)))
              ($sc-dispatch
                #{tmp\ 3211}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3201}#)))
      (#{global-extend\ 218}#
        'core
        'set!
        (lambda (#{e\ 3251}#
                 #{r\ 3252}#
                 #{w\ 3253}#
                 #{s\ 3254}#
                 #{mod\ 3255}#)
          ((lambda (#{tmp\ 3261}#)
             ((lambda (#{tmp\ 3262}#)
                (if (if #{tmp\ 3262}#
                      (apply (lambda (#{_\ 3266}# #{id\ 3267}# #{val\ 3268}#)
                               (#{id?\ 222}# #{id\ 3267}#))
                             #{tmp\ 3262}#)
                      #f)
                  (apply (lambda (#{_\ 3272}# #{id\ 3273}# #{val\ 3274}#)
                           (let ((#{val\ 3277}#
                                   (#{chi\ 307}#
                                     #{val\ 3274}#
                                     #{r\ 3252}#
                                     #{w\ 3253}#
                                     #{mod\ 3255}#))
                                 (#{n\ 3278}#
                                   (#{id-var-name\ 279}#
                                     #{id\ 3273}#
                                     #{w\ 3253}#)))
                             (let ((#{b\ 3280}#
                                     (#{lookup\ 216}#
                                       #{n\ 3278}#
                                       #{r\ 3252}#
                                       #{mod\ 3255}#)))
                               (let ((#{atom-key\ 3283}#
                                       (#{binding-type\ 205}# #{b\ 3280}#)))
                                 (if (memv #{atom-key\ 3283}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 152}#
                                     #{s\ 3254}#
                                     (syntax->datum #{id\ 3273}#)
                                     (#{binding-value\ 207}# #{b\ 3280}#)
                                     #{val\ 3277}#)
                                   (if (memv #{atom-key\ 3283}#
                                             '(global))
                                     (#{build-global-assignment\ 158}#
                                       #{s\ 3254}#
                                       #{n\ 3278}#
                                       #{val\ 3277}#
                                       #{mod\ 3255}#)
                                     (if (memv #{atom-key\ 3283}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 291}#
                                           #{id\ 3273}#
                                           #{w\ 3253}#
                                           #{mod\ 3255}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 293}#
                                           #{e\ 3251}#
                                           #{w\ 3253}#
                                           #{s\ 3254}#
                                           #{mod\ 3255}#)))))))))
                         #{tmp\ 3262}#)
                  ((lambda (#{tmp\ 3288}#)
                     (if #{tmp\ 3288}#
                       (apply (lambda (#{_\ 3293}#
                                       #{head\ 3294}#
                                       #{tail\ 3295}#
                                       #{val\ 3296}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 303}#
                                      #{head\ 3294}#
                                      #{r\ 3252}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 3255}#
                                      #t))
                                  (lambda (#{type\ 3299}#
                                           #{value\ 3300}#
                                           #{ee\ 3301}#
                                           #{ww\ 3302}#
                                           #{ss\ 3303}#
                                           #{modmod\ 3304}#)
                                    (if (memv #{type\ 3299}#
                                              '(module-ref))
                                      (let ((#{val\ 3313}#
                                              (#{chi\ 307}#
                                                #{val\ 3296}#
                                                #{r\ 3252}#
                                                #{w\ 3253}#
                                                #{mod\ 3255}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 3300}#
                                              (cons #{head\ 3294}#
                                                    #{tail\ 3295}#)))
                                          (lambda (#{id\ 3315}# #{mod\ 3316}#)
                                            (#{build-global-assignment\ 158}#
                                              #{s\ 3254}#
                                              #{id\ 3315}#
                                              #{val\ 3313}#
                                              #{mod\ 3316}#))))
                                      (#{build-application\ 144}#
                                        #{s\ 3254}#
                                        (#{chi\ 307}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3305"
                                                        "i3306"
                                                        "i3307"
                                                        "i3308"
                                                        "i3309"
                                                        "i3310"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3289"
                                                        "i3290"
                                                        "i3291"
                                                        "i3292"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3256"
                                                        "i3257"
                                                        "i3258"
                                                        "i3259"
                                                        "i3260"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i336"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i328"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i288"
                                                       "i286"
                                                       "i284"
                                                       "i282"
                                                       "i280"
                                                       "i278"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i265"
                                                       "i264"
                                                       "i262"
                                                       "i261"
                                                       "i260"
                                                       "i259"
                                                       "i258"
                                                       "i256"
                                                       "i254"
                                                       "i252"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i242"
                                                       "i239"
                                                       "i237"
                                                       "i236"
                                                       "i235"
                                                       "i234"
                                                       "i233"
                                                       "i232"
                                                       "i230"
                                                       "i228"
                                                       "i226"
                                                       "i224"
                                                       "i223"
                                                       "i221"
                                                       "i219"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i208"
                                                       "i206"
                                                       "i204"
                                                       "i203"
                                                       "i202"
                                                       "i200"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"
                                                       "i169"
                                                       "i167"
                                                       "i165"
                                                       "i163"
                                                       "i161"
                                                       "i159"
                                                       "i157"
                                                       "i155"
                                                       "i153"
                                                       "i151"
                                                       "i149"
                                                       "i147"
                                                       "i145"
                                                       "i143"
                                                       "i141"
                                                       "i139"
                                                       "i137"
                                                       "i135"
                                                       "i134"
                                                       "i132"
                                                       "i130"
                                                       "i128"
                                                       "i126"
                                                       "i124"
                                                       "i122"
                                                       "i120"
                                                       "i118"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i21" "i19")))
                                                   (hygiene guile))
                                                #{head\ 3294}#)
                                          #{r\ 3252}#
                                          #{w\ 3253}#
                                          #{mod\ 3255}#)
                                        (map (lambda (#{e\ 3320}#)
                                               (#{chi\ 307}#
                                                 #{e\ 3320}#
                                                 #{r\ 3252}#
                                                 #{w\ 3253}#
                                                 #{mod\ 3255}#))
                                             (append
                                               #{tail\ 3295}#
                                               (list #{val\ 3296}#))))))))
                              #{tmp\ 3288}#)
                       ((lambda (#{_\ 3324}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 293}#
                              #{e\ 3251}#
                              #{w\ 3253}#
                              #{s\ 3254}#
                              #{mod\ 3255}#)))
                        #{tmp\ 3261}#)))
                   ($sc-dispatch
                     #{tmp\ 3261}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 3261}#
                '(any any any))))
           #{e\ 3251}#)))
      (#{global-extend\ 218}#
        'module-ref
        '@
        (lambda (#{e\ 3325}#)
          ((lambda (#{tmp\ 3327}#)
             ((lambda (#{tmp\ 3328}#)
                (if (if #{tmp\ 3328}#
                      (apply (lambda (#{_\ 3332}# #{mod\ 3333}# #{id\ 3334}#)
                               (if (and-map #{id?\ 222}# #{mod\ 3333}#)
                                 (#{id?\ 222}# #{id\ 3334}#)
                                 #f))
                             #{tmp\ 3328}#)
                      #f)
                  (apply (lambda (#{_\ 3341}# #{mod\ 3342}# #{id\ 3343}#)
                           (values
                             (syntax->datum #{id\ 3343}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3338" "i3339" "i3340"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i3326"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i336"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i328"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i288"
                                            "i286"
                                            "i284"
                                            "i282"
                                            "i280"
                                            "i278"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i265"
                                            "i264"
                                            "i262"
                                            "i261"
                                            "i260"
                                            "i259"
                                            "i258"
                                            "i256"
                                            "i254"
                                            "i252"
                                            "i250"
                                            "i248"
                                            "i246"
                                            "i244"
                                            "i242"
                                            "i239"
                                            "i237"
                                            "i236"
                                            "i235"
                                            "i234"
                                            "i233"
                                            "i232"
                                            "i230"
                                            "i228"
                                            "i226"
                                            "i224"
                                            "i223"
                                            "i221"
                                            "i219"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i208"
                                            "i206"
                                            "i204"
                                            "i203"
                                            "i202"
                                            "i200"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"
                                            "i169"
                                            "i167"
                                            "i165"
                                            "i163"
                                            "i161"
                                            "i159"
                                            "i157"
                                            "i155"
                                            "i153"
                                            "i151"
                                            "i149"
                                            "i147"
                                            "i145"
                                            "i143"
                                            "i141"
                                            "i139"
                                            "i137"
                                            "i135"
                                            "i134"
                                            "i132"
                                            "i130"
                                            "i128"
                                            "i126"
                                            "i124"
                                            "i122"
                                            "i120"
                                            "i118"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i21" "i19")))
                                        (hygiene guile))
                                     #{mod\ 3342}#))))
                         #{tmp\ 3328}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3327}#)))
              ($sc-dispatch
                #{tmp\ 3327}#
                '(any each-any any))))
           #{e\ 3325}#)))
      (#{global-extend\ 218}#
        'module-ref
        '@@
        (lambda (#{e\ 3345}#)
          ((lambda (#{tmp\ 3347}#)
             ((lambda (#{tmp\ 3348}#)
                (if (if #{tmp\ 3348}#
                      (apply (lambda (#{_\ 3352}# #{mod\ 3353}# #{id\ 3354}#)
                               (if (and-map #{id?\ 222}# #{mod\ 3353}#)
                                 (#{id?\ 222}# #{id\ 3354}#)
                                 #f))
                             #{tmp\ 3348}#)
                      #f)
                  (apply (lambda (#{_\ 3361}# #{mod\ 3362}# #{id\ 3363}#)
                           (values
                             (syntax->datum #{id\ 3363}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        private
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3358" "i3359" "i3360"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i3346"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i336"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i328"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i288"
                                            "i286"
                                            "i284"
                                            "i282"
                                            "i280"
                                            "i278"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i265"
                                            "i264"
                                            "i262"
                                            "i261"
                                            "i260"
                                            "i259"
                                            "i258"
                                            "i256"
                                            "i254"
                                            "i252"
                                            "i250"
                                            "i248"
                                            "i246"
                                            "i244"
                                            "i242"
                                            "i239"
                                            "i237"
                                            "i236"
                                            "i235"
                                            "i234"
                                            "i233"
                                            "i232"
                                            "i230"
                                            "i228"
                                            "i226"
                                            "i224"
                                            "i223"
                                            "i221"
                                            "i219"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i208"
                                            "i206"
                                            "i204"
                                            "i203"
                                            "i202"
                                            "i200"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"
                                            "i169"
                                            "i167"
                                            "i165"
                                            "i163"
                                            "i161"
                                            "i159"
                                            "i157"
                                            "i155"
                                            "i153"
                                            "i151"
                                            "i149"
                                            "i147"
                                            "i145"
                                            "i143"
                                            "i141"
                                            "i139"
                                            "i137"
                                            "i135"
                                            "i134"
                                            "i132"
                                            "i130"
                                            "i128"
                                            "i126"
                                            "i124"
                                            "i122"
                                            "i120"
                                            "i118"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i21" "i19")))
                                        (hygiene guile))
                                     #{mod\ 3362}#))))
                         #{tmp\ 3348}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3347}#)))
              ($sc-dispatch
                #{tmp\ 3347}#
                '(any each-any any))))
           #{e\ 3345}#)))
      (#{global-extend\ 218}#
        'core
        'if
        (lambda (#{e\ 3365}#
                 #{r\ 3366}#
                 #{w\ 3367}#
                 #{s\ 3368}#
                 #{mod\ 3369}#)
          ((lambda (#{tmp\ 3375}#)
             ((lambda (#{tmp\ 3376}#)
                (if #{tmp\ 3376}#
                  (apply (lambda (#{_\ 3380}# #{test\ 3381}# #{then\ 3382}#)
                           (#{build-conditional\ 146}#
                             #{s\ 3368}#
                             (#{chi\ 307}#
                               #{test\ 3381}#
                               #{r\ 3366}#
                               #{w\ 3367}#
                               #{mod\ 3369}#)
                             (#{chi\ 307}#
                               #{then\ 3382}#
                               #{r\ 3366}#
                               #{w\ 3367}#
                               #{mod\ 3369}#)
                             (#{build-void\ 142}# #f)))
                         #{tmp\ 3376}#)
                  ((lambda (#{tmp\ 3384}#)
                     (if #{tmp\ 3384}#
                       (apply (lambda (#{_\ 3389}#
                                       #{test\ 3390}#
                                       #{then\ 3391}#
                                       #{else\ 3392}#)
                                (#{build-conditional\ 146}#
                                  #{s\ 3368}#
                                  (#{chi\ 307}#
                                    #{test\ 3390}#
                                    #{r\ 3366}#
                                    #{w\ 3367}#
                                    #{mod\ 3369}#)
                                  (#{chi\ 307}#
                                    #{then\ 3391}#
                                    #{r\ 3366}#
                                    #{w\ 3367}#
                                    #{mod\ 3369}#)
                                  (#{chi\ 307}#
                                    #{else\ 3392}#
                                    #{r\ 3366}#
                                    #{w\ 3367}#
                                    #{mod\ 3369}#)))
                              #{tmp\ 3384}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 3375}#)))
                   ($sc-dispatch
                     #{tmp\ 3375}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 3375}#
                '(any any any))))
           #{e\ 3365}#)))
      (#{global-extend\ 218}#
        'core
        'with-fluids
        (lambda (#{e\ 3393}#
                 #{r\ 3394}#
                 #{w\ 3395}#
                 #{s\ 3396}#
                 #{mod\ 3397}#)
          ((lambda (#{tmp\ 3403}#)
             ((lambda (#{tmp\ 3404}#)
                (if #{tmp\ 3404}#
                  (apply (lambda (#{_\ 3410}#
                                  #{fluid\ 3411}#
                                  #{val\ 3412}#
                                  #{b\ 3413}#
                                  #{b*\ 3414}#)
                           (#{build-dynlet\ 148}#
                             #{s\ 3396}#
                             (map (lambda (#{x\ 3415}#)
                                    (#{chi\ 307}#
                                      #{x\ 3415}#
                                      #{r\ 3394}#
                                      #{w\ 3395}#
                                      #{mod\ 3397}#))
                                  #{fluid\ 3411}#)
                             (map (lambda (#{x\ 3418}#)
                                    (#{chi\ 307}#
                                      #{x\ 3418}#
                                      #{r\ 3394}#
                                      #{w\ 3395}#
                                      #{mod\ 3397}#))
                                  #{val\ 3412}#)
                             (#{chi-body\ 315}#
                               (cons #{b\ 3413}# #{b*\ 3414}#)
                               (#{source-wrap\ 293}#
                                 #{e\ 3393}#
                                 #{w\ 3395}#
                                 #{s\ 3396}#
                                 #{mod\ 3397}#)
                               #{r\ 3394}#
                               #{w\ 3395}#
                               #{mod\ 3397}#)))
                         #{tmp\ 3404}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3403}#)))
              ($sc-dispatch
                #{tmp\ 3403}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3393}#)))
      (#{global-extend\ 218}#
        'begin
        'begin
        '())
      (#{global-extend\ 218}#
        'define
        'define
        '())
      (#{global-extend\ 218}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 218}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 218}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 3429}#
                   (lambda (#{x\ 3430}#
                            #{keys\ 3431}#
                            #{clauses\ 3432}#
                            #{r\ 3433}#
                            #{mod\ 3434}#)
                     (if (null? #{clauses\ 3432}#)
                       (#{build-application\ 144}#
                         #f
                         (#{build-primref\ 170}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 172}# #f #f)
                               (#{build-data\ 172}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 3430}#))
                       ((lambda (#{tmp\ 3444}#)
                          ((lambda (#{tmp\ 3445}#)
                             (if #{tmp\ 3445}#
                               (apply (lambda (#{pat\ 3448}# #{exp\ 3449}#)
                                        (if (if (#{id?\ 222}# #{pat\ 3448}#)
                                              (and-map
                                                (lambda (#{x\ 3452}#)
                                                  (not (#{free-id=?\ 281}#
                                                         #{pat\ 3448}#
                                                         #{x\ 3452}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i3446" "i3447"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i3435"
                                                              "i3436"
                                                              "i3437"
                                                              "i3438"
                                                              "i3439"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i3428"
                                                             "i3426"
                                                             "i3424"
                                                             "i3422"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*
                                                              noexpand)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i336"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i328"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i306"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i288"
                                                             "i286"
                                                             "i284"
                                                             "i282"
                                                             "i280"
                                                             "i278"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i265"
                                                             "i264"
                                                             "i262"
                                                             "i261"
                                                             "i260"
                                                             "i259"
                                                             "i258"
                                                             "i256"
                                                             "i254"
                                                             "i252"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i242"
                                                             "i239"
                                                             "i237"
                                                             "i236"
                                                             "i235"
                                                             "i234"
                                                             "i233"
                                                             "i232"
                                                             "i230"
                                                             "i228"
                                                             "i226"
                                                             "i224"
                                                             "i223"
                                                             "i221"
                                                             "i219"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i208"
                                                             "i206"
                                                             "i204"
                                                             "i203"
                                                             "i202"
                                                             "i200"
                                                             "i199"
                                                             "i197"
                                                             "i195"
                                                             "i193"
                                                             "i191"
                                                             "i189"
                                                             "i187"
                                                             "i185"
                                                             "i183"
                                                             "i181"
                                                             "i179"
                                                             "i177"
                                                             "i175"
                                                             "i173"
                                                             "i171"
                                                             "i169"
                                                             "i167"
                                                             "i165"
                                                             "i163"
                                                             "i161"
                                                             "i159"
                                                             "i157"
                                                             "i155"
                                                             "i153"
                                                             "i151"
                                                             "i149"
                                                             "i147"
                                                             "i145"
                                                             "i143"
                                                             "i141"
                                                             "i139"
                                                             "i137"
                                                             "i135"
                                                             "i134"
                                                             "i132"
                                                             "i130"
                                                             "i128"
                                                             "i126"
                                                             "i124"
                                                             "i122"
                                                             "i120"
                                                             "i118"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i21" "i19")))
                                                         (hygiene guile))
                                                      #{keys\ 3431}#))
                                              #f)
                                          (let ((#{labels\ 3456}#
                                                  (list (#{gen-label\ 238}#)))
                                                (#{var\ 3457}#
                                                  (#{gen-var\ 335}#
                                                    #{pat\ 3448}#)))
                                            (#{build-application\ 144}#
                                              #f
                                              (#{build-simple-lambda\ 164}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 3448}#))
                                                #f
                                                (list #{var\ 3457}#)
                                                '()
                                                (#{chi\ 307}#
                                                  #{exp\ 3449}#
                                                  (#{extend-env\ 210}#
                                                    #{labels\ 3456}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 3457}#
                                                                      0)))
                                                    #{r\ 3433}#)
                                                  (#{make-binding-wrap\ 269}#
                                                    (list #{pat\ 3448}#)
                                                    #{labels\ 3456}#
                                                    '(()))
                                                  #{mod\ 3434}#))
                                              (list #{x\ 3430}#)))
                                          (#{gen-clause\ 3427}#
                                            #{x\ 3430}#
                                            #{keys\ 3431}#
                                            (cdr #{clauses\ 3432}#)
                                            #{r\ 3433}#
                                            #{pat\ 3448}#
                                            #t
                                            #{exp\ 3449}#
                                            #{mod\ 3434}#)))
                                      #{tmp\ 3445}#)
                               ((lambda (#{tmp\ 3463}#)
                                  (if #{tmp\ 3463}#
                                    (apply (lambda (#{pat\ 3467}#
                                                    #{fender\ 3468}#
                                                    #{exp\ 3469}#)
                                             (#{gen-clause\ 3427}#
                                               #{x\ 3430}#
                                               #{keys\ 3431}#
                                               (cdr #{clauses\ 3432}#)
                                               #{r\ 3433}#
                                               #{pat\ 3467}#
                                               #{fender\ 3468}#
                                               #{exp\ 3469}#
                                               #{mod\ 3434}#))
                                           #{tmp\ 3463}#)
                                    ((lambda (#{_\ 3471}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 3432}#)))
                                     #{tmp\ 3444}#)))
                                ($sc-dispatch
                                  #{tmp\ 3444}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 3444}# (quote (any any)))))
                        (car #{clauses\ 3432}#)))))
                 (#{gen-clause\ 3427}#
                   (lambda (#{x\ 3472}#
                            #{keys\ 3473}#
                            #{clauses\ 3474}#
                            #{r\ 3475}#
                            #{pat\ 3476}#
                            #{fender\ 3477}#
                            #{exp\ 3478}#
                            #{mod\ 3479}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 3423}#
                           #{pat\ 3476}#
                           #{keys\ 3473}#))
                       (lambda (#{p\ 3488}# #{pvars\ 3489}#)
                         (if (not (#{distinct-bound-ids?\ 287}#
                                    (map car #{pvars\ 3489}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 3476}#)
                           (if (not (and-map
                                      (lambda (#{x\ 3496}#)
                                        (not (#{ellipsis?\ 323}#
                                               (car #{x\ 3496}#))))
                                      #{pvars\ 3489}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 3476}#)
                             (let ((#{y\ 3500}#
                                     (#{gen-var\ 335}# (quote tmp))))
                               (#{build-application\ 144}#
                                 #f
                                 (#{build-simple-lambda\ 164}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 3500}#)
                                   '()
                                   (let ((#{y\ 3504}#
                                           (#{build-lexical-reference\ 150}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 3500}#)))
                                     (#{build-conditional\ 146}#
                                       #f
                                       ((lambda (#{tmp\ 3507}#)
                                          ((lambda (#{tmp\ 3508}#)
                                             (if #{tmp\ 3508}#
                                               (apply (lambda () #{y\ 3504}#)
                                                      #{tmp\ 3508}#)
                                               ((lambda (#{_\ 3510}#)
                                                  (#{build-conditional\ 146}#
                                                    #f
                                                    #{y\ 3504}#
                                                    (#{build-dispatch-call\ 3425}#
                                                      #{pvars\ 3489}#
                                                      #{fender\ 3477}#
                                                      #{y\ 3504}#
                                                      #{r\ 3475}#
                                                      #{mod\ 3479}#)
                                                    (#{build-data\ 172}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 3507}#)))
                                           ($sc-dispatch
                                             #{tmp\ 3507}#
                                             '#(atom #t))))
                                        #{fender\ 3477}#)
                                       (#{build-dispatch-call\ 3425}#
                                         #{pvars\ 3489}#
                                         #{exp\ 3478}#
                                         #{y\ 3504}#
                                         #{r\ 3475}#
                                         #{mod\ 3479}#)
                                       (#{gen-syntax-case\ 3429}#
                                         #{x\ 3472}#
                                         #{keys\ 3473}#
                                         #{clauses\ 3474}#
                                         #{r\ 3475}#
                                         #{mod\ 3479}#))))
                                 (list (if (eq? #{p\ 3488}# (quote any))
                                         (#{build-application\ 144}#
                                           #f
                                           (#{build-primref\ 170}#
                                             #f
                                             'list)
                                           (list #{x\ 3472}#))
                                         (#{build-application\ 144}#
                                           #f
                                           (#{build-primref\ 170}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 3472}#
                                                 (#{build-data\ 172}#
                                                   #f
                                                   #{p\ 3488}#)))))))))))))
                 (#{build-dispatch-call\ 3425}#
                   (lambda (#{pvars\ 3518}#
                            #{exp\ 3519}#
                            #{y\ 3520}#
                            #{r\ 3521}#
                            #{mod\ 3522}#)
                     (let ((#{ids\ 3530}# (map car #{pvars\ 3518}#))
                           (#{levels\ 3531}# (map cdr #{pvars\ 3518}#)))
                       (let ((#{labels\ 3534}#
                               (#{gen-labels\ 240}# #{ids\ 3530}#))
                             (#{new-vars\ 3535}#
                               (map #{gen-var\ 335}# #{ids\ 3530}#)))
                         (#{build-application\ 144}#
                           #f
                           (#{build-primref\ 170}# #f (quote apply))
                           (list (#{build-simple-lambda\ 164}#
                                   #f
                                   (map syntax->datum #{ids\ 3530}#)
                                   #f
                                   #{new-vars\ 3535}#
                                   '()
                                   (#{chi\ 307}#
                                     #{exp\ 3519}#
                                     (#{extend-env\ 210}#
                                       #{labels\ 3534}#
                                       (map (lambda (#{var\ 3539}#
                                                     #{level\ 3540}#)
                                              (cons 'syntax
                                                    (cons #{var\ 3539}#
                                                          #{level\ 3540}#)))
                                            #{new-vars\ 3535}#
                                            (map cdr #{pvars\ 3518}#))
                                       #{r\ 3521}#)
                                     (#{make-binding-wrap\ 269}#
                                       #{ids\ 3530}#
                                       #{labels\ 3534}#
                                       '(()))
                                     #{mod\ 3522}#))
                                 #{y\ 3520}#))))))
                 (#{convert-pattern\ 3423}#
                   (lambda (#{pattern\ 3546}# #{keys\ 3547}#)
                     (letrec ((#{cvt\ 3553}#
                                (lambda (#{p\ 3554}# #{n\ 3555}# #{ids\ 3556}#)
                                  (if (#{id?\ 222}# #{p\ 3554}#)
                                    (if (#{bound-id-member?\ 289}#
                                          #{p\ 3554}#
                                          #{keys\ 3547}#)
                                      (values
                                        (vector (quote free-id) #{p\ 3554}#)
                                        #{ids\ 3556}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 3554}# #{n\ 3555}#)
                                              #{ids\ 3556}#)))
                                    ((lambda (#{tmp\ 3560}#)
                                       ((lambda (#{tmp\ 3561}#)
                                          (if (if #{tmp\ 3561}#
                                                (apply (lambda (#{x\ 3564}#
                                                                #{dots\ 3565}#)
                                                         (#{ellipsis?\ 323}#
                                                           #{dots\ 3565}#))
                                                       #{tmp\ 3561}#)
                                                #f)
                                            (apply (lambda (#{x\ 3568}#
                                                            #{dots\ 3569}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 3553}#
                                                           #{x\ 3568}#
                                                           (#{fx+\ 123}#
                                                             #{n\ 3555}#
                                                             1)
                                                           #{ids\ 3556}#))
                                                       (lambda (#{p\ 3570}#
                                                                #{ids\ 3571}#)
                                                         (values
                                                           (if (eq? #{p\ 3570}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 3570}#))
                                                           #{ids\ 3571}#))))
                                                   #{tmp\ 3561}#)
                                            ((lambda (#{tmp\ 3574}#)
                                               (if (if #{tmp\ 3574}#
                                                     (apply (lambda (#{x\ 3578}#
                                                                     #{dots\ 3579}#
                                                                     #{ys\ 3580}#)
                                                              (#{ellipsis?\ 323}#
                                                                #{dots\ 3579}#))
                                                            #{tmp\ 3574}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 3584}#
                                                                 #{dots\ 3585}#
                                                                 #{ys\ 3586}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 3551}#
                                                                #{ys\ 3586}#
                                                                #{n\ 3555}#
                                                                #{ids\ 3556}#))
                                                            (lambda (#{ys\ 3588}#
                                                                     #{ids\ 3589}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 3553}#
                                                                    #{x\ 3584}#
                                                                    (+ #{n\ 3555}#
                                                                       1)
                                                                    #{ids\ 3589}#))
                                                                (lambda (#{x\ 3592}#
                                                                         #{ids\ 3593}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 3592}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 3588}#)
                                                                                        '(())))))
                                                                    #{ids\ 3593}#))))))
                                                        #{tmp\ 3574}#)
                                                 ((lambda (#{tmp\ 3597}#)
                                                    (if #{tmp\ 3597}#
                                                      (apply (lambda (#{x\ 3600}#
                                                                      #{y\ 3601}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 3553}#
                                                                     #{y\ 3601}#
                                                                     #{n\ 3555}#
                                                                     #{ids\ 3556}#))
                                                                 (lambda (#{y\ 3602}#
                                                                          #{ids\ 3603}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 3553}#
                                                                         #{x\ 3600}#
                                                                         #{n\ 3555}#
                                                                         #{ids\ 3603}#))
                                                                     (lambda (#{x\ 3606}#
                                                                              #{ids\ 3607}#)
                                                                       (values
                                                                         (cons #{x\ 3606}#
                                                                               #{y\ 3602}#)
                                                                         #{ids\ 3607}#))))))
                                                             #{tmp\ 3597}#)
                                                      ((lambda (#{tmp\ 3610}#)
                                                         (if #{tmp\ 3610}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 3556}#))
                                                                  #{tmp\ 3610}#)
                                                           ((lambda (#{tmp\ 3611}#)
                                                              (if #{tmp\ 3611}#
                                                                (apply (lambda (#{x\ 3613}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 3553}#
                                                                               #{x\ 3613}#
                                                                               #{n\ 3555}#
                                                                               #{ids\ 3556}#))
                                                                           (lambda (#{p\ 3615}#
                                                                                    #{ids\ 3616}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 3615}#)
                                                                               #{ids\ 3616}#))))
                                                                       #{tmp\ 3611}#)
                                                                ((lambda (#{x\ 3620}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 333}#
                                                                         #{p\ 3554}#
                                                                         '(())))
                                                                     #{ids\ 3556}#))
                                                                 #{tmp\ 3560}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 3560}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 3560}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 3560}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 3560}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 3560}#
                                          '(any any))))
                                     #{p\ 3554}#))))
                              (#{cvt*\ 3551}#
                                (lambda (#{p*\ 3622}#
                                         #{n\ 3623}#
                                         #{ids\ 3624}#)
                                  (if (null? #{p*\ 3622}#)
                                    (values (quote ()) #{ids\ 3624}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 3551}#
                                          (cdr #{p*\ 3622}#)
                                          #{n\ 3623}#
                                          #{ids\ 3624}#))
                                      (lambda (#{y\ 3628}# #{ids\ 3629}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 3553}#
                                              (car #{p*\ 3622}#)
                                              #{n\ 3623}#
                                              #{ids\ 3629}#))
                                          (lambda (#{x\ 3632}# #{ids\ 3633}#)
                                            (values
                                              (cons #{x\ 3632}# #{y\ 3628}#)
                                              #{ids\ 3633}#)))))))))
                       (#{cvt\ 3553}# #{pattern\ 3546}# 0 (quote ()))))))
          (lambda (#{e\ 3636}#
                   #{r\ 3637}#
                   #{w\ 3638}#
                   #{s\ 3639}#
                   #{mod\ 3640}#)
            (let ((#{e\ 3647}#
                    (#{source-wrap\ 293}#
                      #{e\ 3636}#
                      #{w\ 3638}#
                      #{s\ 3639}#
                      #{mod\ 3640}#)))
              ((lambda (#{tmp\ 3648}#)
                 ((lambda (#{tmp\ 3649}#)
                    (if #{tmp\ 3649}#
                      (apply (lambda (#{_\ 3654}#
                                      #{val\ 3655}#
                                      #{key\ 3656}#
                                      #{m\ 3657}#)
                               (if (and-map
                                     (lambda (#{x\ 3658}#)
                                       (if (#{id?\ 222}# #{x\ 3658}#)
                                         (not (#{ellipsis?\ 323}# #{x\ 3658}#))
                                         #f))
                                     #{key\ 3656}#)
                                 (let ((#{x\ 3664}#
                                         (#{gen-var\ 335}# (quote tmp))))
                                   (#{build-application\ 144}#
                                     #{s\ 3639}#
                                     (#{build-simple-lambda\ 164}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 3664}#)
                                       '()
                                       (#{gen-syntax-case\ 3429}#
                                         (#{build-lexical-reference\ 150}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 3664}#)
                                         #{key\ 3656}#
                                         #{m\ 3657}#
                                         #{r\ 3637}#
                                         #{mod\ 3640}#))
                                     (list (#{chi\ 307}#
                                             #{val\ 3655}#
                                             #{r\ 3637}#
                                             '(())
                                             #{mod\ 3640}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 3647}#)))
                             #{tmp\ 3649}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 3648}#)))
                  ($sc-dispatch
                    #{tmp\ 3648}#
                    '(any any each-any . each-any))))
               #{e\ 3647}#)))))
      (set! macroexpand
        (lambda (#{x\ 3670}# . #{rest\ 3671}#)
          (if (if (pair? #{x\ 3670}#)
                (equal? (car #{x\ 3670}#) #{noexpand\ 119}#)
                #f)
            (cadr #{x\ 3670}#)
            (let ((#{m\ 3678}#
                    (if (null? #{rest\ 3671}#)
                      'e
                      (car #{rest\ 3671}#)))
                  (#{esew\ 3679}#
                    (if (let ((#{t\ 3682}# (null? #{rest\ 3671}#)))
                          (if #{t\ 3682}#
                            #{t\ 3682}#
                            (null? (cdr #{rest\ 3671}#))))
                      '(eval)
                      (cadr #{rest\ 3671}#))))
              (with-fluids
                ((#{*mode*\ 121}# #{m\ 3678}#))
                (#{chi-top\ 305}#
                  #{x\ 3670}#
                  '()
                  '((top))
                  #{m\ 3678}#
                  #{esew\ 3679}#
                  (cons 'hygiene
                        (module-name (current-module)))))))))
      (set! identifier?
        (lambda (#{x\ 3686}#)
          (#{nonsymbol-id?\ 220}# #{x\ 3686}#)))
      (set! datum->syntax
        (lambda (#{id\ 3688}# #{datum\ 3689}#)
          (#{make-syntax-object\ 184}#
            #{datum\ 3689}#
            (#{syntax-object-wrap\ 190}# #{id\ 3688}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 3692}#)
          (#{strip\ 333}# #{x\ 3692}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 3695}#)
          (begin
            (let ((#{x\ 3699}# #{ls\ 3695}#))
              (if (not (list? #{x\ 3699}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 3699}#)))
            (map (lambda (#{x\ 3700}#)
                   (#{wrap\ 291}# (gensym) (quote ((top))) #f))
                 #{ls\ 3695}#))))
      (set! free-identifier=?
        (lambda (#{x\ 3704}# #{y\ 3705}#)
          (begin
            (let ((#{x\ 3710}# #{x\ 3704}#))
              (if (not (#{nonsymbol-id?\ 220}# #{x\ 3710}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3710}#)))
            (let ((#{x\ 3713}# #{y\ 3705}#))
              (if (not (#{nonsymbol-id?\ 220}# #{x\ 3713}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3713}#)))
            (#{free-id=?\ 281}# #{x\ 3704}# #{y\ 3705}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 3714}# #{y\ 3715}#)
          (begin
            (let ((#{x\ 3720}# #{x\ 3714}#))
              (if (not (#{nonsymbol-id?\ 220}# #{x\ 3720}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3720}#)))
            (let ((#{x\ 3723}# #{y\ 3715}#))
              (if (not (#{nonsymbol-id?\ 220}# #{x\ 3723}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3723}#)))
            (#{bound-id=?\ 283}# #{x\ 3714}# #{y\ 3715}#))))
      (set! syntax-violation
        (lambda (#{who\ 3724}#
                 #{message\ 3725}#
                 #{form\ 3726}#
                 .
                 #{subform\ 3727}#)
          (begin
            (let ((#{x\ 3734}# #{who\ 3724}#))
              (if (not ((lambda (#{x\ 3735}#)
                          (let ((#{t\ 3739}# (not #{x\ 3735}#)))
                            (if #{t\ 3739}#
                              #{t\ 3739}#
                              (let ((#{t\ 3742}# (string? #{x\ 3735}#)))
                                (if #{t\ 3742}#
                                  #{t\ 3742}#
                                  (symbol? #{x\ 3735}#))))))
                        #{x\ 3734}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3734}#)))
            (let ((#{x\ 3746}# #{message\ 3725}#))
              (if (not (string? #{x\ 3746}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3746}#)))
            (scm-error
              'syntax-error
              'macroexpand
              (string-append
                (if #{who\ 3724}# "~a: " "")
                "~a "
                (if (null? #{subform\ 3727}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 3748}#
                      (cons #{message\ 3725}#
                            (map (lambda (#{x\ 3749}#)
                                   (#{strip\ 333}# #{x\ 3749}# (quote (()))))
                                 (append
                                   #{subform\ 3727}#
                                   (list #{form\ 3726}#))))))
                (if #{who\ 3724}#
                  (cons #{who\ 3724}# #{tail\ 3748}#)
                  #{tail\ 3748}#))
              #f))))
      (letrec ((#{match\ 3765}#
                 (lambda (#{e\ 3766}#
                          #{p\ 3767}#
                          #{w\ 3768}#
                          #{r\ 3769}#
                          #{mod\ 3770}#)
                   (if (not #{r\ 3769}#)
                     #f
                     (if (eq? #{p\ 3767}# (quote any))
                       (cons (#{wrap\ 291}#
                               #{e\ 3766}#
                               #{w\ 3768}#
                               #{mod\ 3770}#)
                             #{r\ 3769}#)
                       (if (#{syntax-object?\ 186}# #{e\ 3766}#)
                         (#{match*\ 3763}#
                           (#{syntax-object-expression\ 188}# #{e\ 3766}#)
                           #{p\ 3767}#
                           (#{join-wraps\ 273}#
                             #{w\ 3768}#
                             (#{syntax-object-wrap\ 190}# #{e\ 3766}#))
                           #{r\ 3769}#
                           (#{syntax-object-module\ 192}# #{e\ 3766}#))
                         (#{match*\ 3763}#
                           #{e\ 3766}#
                           #{p\ 3767}#
                           #{w\ 3768}#
                           #{r\ 3769}#
                           #{mod\ 3770}#))))))
               (#{match*\ 3763}#
                 (lambda (#{e\ 3783}#
                          #{p\ 3784}#
                          #{w\ 3785}#
                          #{r\ 3786}#
                          #{mod\ 3787}#)
                   (if (null? #{p\ 3784}#)
                     (if (null? #{e\ 3783}#) #{r\ 3786}# #f)
                     (if (pair? #{p\ 3784}#)
                       (if (pair? #{e\ 3783}#)
                         (#{match\ 3765}#
                           (car #{e\ 3783}#)
                           (car #{p\ 3784}#)
                           #{w\ 3785}#
                           (#{match\ 3765}#
                             (cdr #{e\ 3783}#)
                             (cdr #{p\ 3784}#)
                             #{w\ 3785}#
                             #{r\ 3786}#
                             #{mod\ 3787}#)
                           #{mod\ 3787}#)
                         #f)
                       (if (eq? #{p\ 3784}# (quote each-any))
                         (let ((#{l\ 3804}#
                                 (#{match-each-any\ 3757}#
                                   #{e\ 3783}#
                                   #{w\ 3785}#
                                   #{mod\ 3787}#)))
                           (if #{l\ 3804}#
                             (cons #{l\ 3804}# #{r\ 3786}#)
                             #f))
                         (let ((#{atom-key\ 3810}# (vector-ref #{p\ 3784}# 0)))
                           (if (memv #{atom-key\ 3810}# (quote (each)))
                             (if (null? #{e\ 3783}#)
                               (#{match-empty\ 3759}#
                                 (vector-ref #{p\ 3784}# 1)
                                 #{r\ 3786}#)
                               (let ((#{l\ 3813}#
                                       (#{match-each\ 3753}#
                                         #{e\ 3783}#
                                         (vector-ref #{p\ 3784}# 1)
                                         #{w\ 3785}#
                                         #{mod\ 3787}#)))
                                 (if #{l\ 3813}#
                                   (letrec ((#{collect\ 3818}#
                                              (lambda (#{l\ 3819}#)
                                                (if (null? (car #{l\ 3819}#))
                                                  #{r\ 3786}#
                                                  (cons (map car #{l\ 3819}#)
                                                        (#{collect\ 3818}#
                                                          (map cdr
                                                               #{l\ 3819}#)))))))
                                     (#{collect\ 3818}# #{l\ 3813}#))
                                   #f)))
                             (if (memv #{atom-key\ 3810}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 3755}#
                                     #{e\ 3783}#
                                     (vector-ref #{p\ 3784}# 1)
                                     (vector-ref #{p\ 3784}# 2)
                                     (vector-ref #{p\ 3784}# 3)
                                     #{w\ 3785}#
                                     #{r\ 3786}#
                                     #{mod\ 3787}#))
                                 (lambda (#{xr*\ 3821}#
                                          #{y-pat\ 3822}#
                                          #{r\ 3823}#)
                                   (if #{r\ 3823}#
                                     (if (null? #{y-pat\ 3822}#)
                                       (if (null? #{xr*\ 3821}#)
                                         (#{match-empty\ 3759}#
                                           (vector-ref #{p\ 3784}# 1)
                                           #{r\ 3823}#)
                                         (#{combine\ 3761}#
                                           #{xr*\ 3821}#
                                           #{r\ 3823}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 3810}# (quote (free-id)))
                                 (if (#{id?\ 222}# #{e\ 3783}#)
                                   (if (#{free-id=?\ 281}#
                                         (#{wrap\ 291}#
                                           #{e\ 3783}#
                                           #{w\ 3785}#
                                           #{mod\ 3787}#)
                                         (vector-ref #{p\ 3784}# 1))
                                     #{r\ 3786}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 3810}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 3784}# 1)
                                         (#{strip\ 333}#
                                           #{e\ 3783}#
                                           #{w\ 3785}#))
                                     #{r\ 3786}#
                                     #f)
                                   (if (memv #{atom-key\ 3810}#
                                             '(vector))
                                     (if (vector? #{e\ 3783}#)
                                       (#{match\ 3765}#
                                         (vector->list #{e\ 3783}#)
                                         (vector-ref #{p\ 3784}# 1)
                                         #{w\ 3785}#
                                         #{r\ 3786}#
                                         #{mod\ 3787}#)
                                       #f))))))))))))
               (#{combine\ 3761}#
                 (lambda (#{r*\ 3840}# #{r\ 3841}#)
                   (if (null? (car #{r*\ 3840}#))
                     #{r\ 3841}#
                     (cons (map car #{r*\ 3840}#)
                           (#{combine\ 3761}#
                             (map cdr #{r*\ 3840}#)
                             #{r\ 3841}#)))))
               (#{match-empty\ 3759}#
                 (lambda (#{p\ 3844}# #{r\ 3845}#)
                   (if (null? #{p\ 3844}#)
                     #{r\ 3845}#
                     (if (eq? #{p\ 3844}# (quote any))
                       (cons (quote ()) #{r\ 3845}#)
                       (if (pair? #{p\ 3844}#)
                         (#{match-empty\ 3759}#
                           (car #{p\ 3844}#)
                           (#{match-empty\ 3759}#
                             (cdr #{p\ 3844}#)
                             #{r\ 3845}#))
                         (if (eq? #{p\ 3844}# (quote each-any))
                           (cons (quote ()) #{r\ 3845}#)
                           (let ((#{atom-key\ 3859}#
                                   (vector-ref #{p\ 3844}# 0)))
                             (if (memv #{atom-key\ 3859}# (quote (each)))
                               (#{match-empty\ 3759}#
                                 (vector-ref #{p\ 3844}# 1)
                                 #{r\ 3845}#)
                               (if (memv #{atom-key\ 3859}# (quote (each+)))
                                 (#{match-empty\ 3759}#
                                   (vector-ref #{p\ 3844}# 1)
                                   (#{match-empty\ 3759}#
                                     (reverse (vector-ref #{p\ 3844}# 2))
                                     (#{match-empty\ 3759}#
                                       (vector-ref #{p\ 3844}# 3)
                                       #{r\ 3845}#)))
                                 (if (memv #{atom-key\ 3859}#
                                           '(free-id atom))
                                   #{r\ 3845}#
                                   (if (memv #{atom-key\ 3859}#
                                             '(vector))
                                     (#{match-empty\ 3759}#
                                       (vector-ref #{p\ 3844}# 1)
                                       #{r\ 3845}#))))))))))))
               (#{match-each-any\ 3757}#
                 (lambda (#{e\ 3864}# #{w\ 3865}# #{mod\ 3866}#)
                   (if (pair? #{e\ 3864}#)
                     (let ((#{l\ 3873}#
                             (#{match-each-any\ 3757}#
                               (cdr #{e\ 3864}#)
                               #{w\ 3865}#
                               #{mod\ 3866}#)))
                       (if #{l\ 3873}#
                         (cons (#{wrap\ 291}#
                                 (car #{e\ 3864}#)
                                 #{w\ 3865}#
                                 #{mod\ 3866}#)
                               #{l\ 3873}#)
                         #f))
                     (if (null? #{e\ 3864}#)
                       '()
                       (if (#{syntax-object?\ 186}# #{e\ 3864}#)
                         (#{match-each-any\ 3757}#
                           (#{syntax-object-expression\ 188}# #{e\ 3864}#)
                           (#{join-wraps\ 273}#
                             #{w\ 3865}#
                             (#{syntax-object-wrap\ 190}# #{e\ 3864}#))
                           #{mod\ 3866}#)
                         #f)))))
               (#{match-each+\ 3755}#
                 (lambda (#{e\ 3881}#
                          #{x-pat\ 3882}#
                          #{y-pat\ 3883}#
                          #{z-pat\ 3884}#
                          #{w\ 3885}#
                          #{r\ 3886}#
                          #{mod\ 3887}#)
                   (letrec ((#{f\ 3898}#
                              (lambda (#{e\ 3899}# #{w\ 3900}#)
                                (if (pair? #{e\ 3899}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 3898}#
                                        (cdr #{e\ 3899}#)
                                        #{w\ 3900}#))
                                    (lambda (#{xr*\ 3903}#
                                             #{y-pat\ 3904}#
                                             #{r\ 3905}#)
                                      (if #{r\ 3905}#
                                        (if (null? #{y-pat\ 3904}#)
                                          (let ((#{xr\ 3910}#
                                                  (#{match\ 3765}#
                                                    (car #{e\ 3899}#)
                                                    #{x-pat\ 3882}#
                                                    #{w\ 3900}#
                                                    '()
                                                    #{mod\ 3887}#)))
                                            (if #{xr\ 3910}#
                                              (values
                                                (cons #{xr\ 3910}#
                                                      #{xr*\ 3903}#)
                                                #{y-pat\ 3904}#
                                                #{r\ 3905}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 3904}#)
                                            (#{match\ 3765}#
                                              (car #{e\ 3899}#)
                                              (car #{y-pat\ 3904}#)
                                              #{w\ 3900}#
                                              #{r\ 3905}#
                                              #{mod\ 3887}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 186}# #{e\ 3899}#)
                                    (#{f\ 3898}#
                                      (#{syntax-object-expression\ 188}#
                                        #{e\ 3899}#)
                                      (#{join-wraps\ 273}#
                                        #{w\ 3900}#
                                        #{e\ 3899}#))
                                    (values
                                      '()
                                      #{y-pat\ 3883}#
                                      (#{match\ 3765}#
                                        #{e\ 3899}#
                                        #{z-pat\ 3884}#
                                        #{w\ 3900}#
                                        #{r\ 3886}#
                                        #{mod\ 3887}#)))))))
                     (#{f\ 3898}# #{e\ 3881}# #{w\ 3885}#))))
               (#{match-each\ 3753}#
                 (lambda (#{e\ 3914}#
                          #{p\ 3915}#
                          #{w\ 3916}#
                          #{mod\ 3917}#)
                   (if (pair? #{e\ 3914}#)
                     (let ((#{first\ 3925}#
                             (#{match\ 3765}#
                               (car #{e\ 3914}#)
                               #{p\ 3915}#
                               #{w\ 3916}#
                               '()
                               #{mod\ 3917}#)))
                       (if #{first\ 3925}#
                         (let ((#{rest\ 3929}#
                                 (#{match-each\ 3753}#
                                   (cdr #{e\ 3914}#)
                                   #{p\ 3915}#
                                   #{w\ 3916}#
                                   #{mod\ 3917}#)))
                           (if #{rest\ 3929}#
                             (cons #{first\ 3925}# #{rest\ 3929}#)
                             #f))
                         #f))
                     (if (null? #{e\ 3914}#)
                       '()
                       (if (#{syntax-object?\ 186}# #{e\ 3914}#)
                         (#{match-each\ 3753}#
                           (#{syntax-object-expression\ 188}# #{e\ 3914}#)
                           #{p\ 3915}#
                           (#{join-wraps\ 273}#
                             #{w\ 3916}#
                             (#{syntax-object-wrap\ 190}# #{e\ 3914}#))
                           (#{syntax-object-module\ 192}# #{e\ 3914}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 3937}# #{p\ 3938}#)
            (if (eq? #{p\ 3938}# (quote any))
              (list #{e\ 3937}#)
              (if (#{syntax-object?\ 186}# #{e\ 3937}#)
                (#{match*\ 3763}#
                  (#{syntax-object-expression\ 188}# #{e\ 3937}#)
                  #{p\ 3938}#
                  (#{syntax-object-wrap\ 190}# #{e\ 3937}#)
                  '()
                  (#{syntax-object-module\ 192}# #{e\ 3937}#))
                (#{match*\ 3763}#
                  #{e\ 3937}#
                  #{p\ 3938}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 3947}#)
            ((lambda (#{tmp\ 3949}#)
               ((lambda (#{tmp\ 3950}#)
                  (if #{tmp\ 3950}#
                    (apply (lambda (#{_\ 3954}# #{e1\ 3955}# #{e2\ 3956}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i3951" "i3952" "i3953"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i3948")))
                                      (hygiene guile))
                                   (cons #{e1\ 3955}# #{e2\ 3956}#)))
                           #{tmp\ 3950}#)
                    ((lambda (#{tmp\ 3958}#)
                       (if #{tmp\ 3958}#
                         (apply (lambda (#{_\ 3964}#
                                         #{out\ 3965}#
                                         #{in\ 3966}#
                                         #{e1\ 3967}#
                                         #{e2\ 3968}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i3959"
                                                "i3960"
                                                "i3961"
                                                "i3962"
                                                "i3963"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i3948")))
                                           (hygiene guile))
                                        #{in\ 3966}#
                                        '()
                                        (list #{out\ 3965}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i3959"
                                                            "i3960"
                                                            "i3961"
                                                            "i3962"
                                                            "i3963"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i3948")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 3967}#
                                                          #{e2\ 3968}#)))))
                                #{tmp\ 3958}#)
                         ((lambda (#{tmp\ 3970}#)
                            (if #{tmp\ 3970}#
                              (apply (lambda (#{_\ 3976}#
                                              #{out\ 3977}#
                                              #{in\ 3978}#
                                              #{e1\ 3979}#
                                              #{e2\ 3980}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i3971"
                                                     "i3972"
                                                     "i3973"
                                                     "i3974"
                                                     "i3975"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i3948")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i3971"
                                                           "i3972"
                                                           "i3973"
                                                           "i3974"
                                                           "i3975"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i3948")))
                                                      (hygiene guile))
                                                   #{in\ 3978}#)
                                             '()
                                             (list #{out\ 3977}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i3971"
                                                                 "i3972"
                                                                 "i3973"
                                                                 "i3974"
                                                                 "i3975"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i3948")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 3979}#
                                                               #{e2\ 3980}#)))))
                                     #{tmp\ 3970}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 3949}#)))
                          ($sc-dispatch
                            #{tmp\ 3949}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 3949}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3949}#
                  '(any () any . each-any))))
             #{x\ 3947}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 3984}#)
            ((lambda (#{tmp\ 3986}#)
               ((lambda (#{tmp\ 3987}#)
                  (if #{tmp\ 3987}#
                    (apply (lambda (#{_\ 3993}#
                                    #{k\ 3994}#
                                    #{keyword\ 3995}#
                                    #{pattern\ 3996}#
                                    #{template\ 3997}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i3988"
                                           "i3989"
                                           "i3990"
                                           "i3991"
                                           "i3992"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i3985")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i3988"
                                            "i3989"
                                            "i3990"
                                            "i3991"
                                            "i3992"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i3985")))
                                       (hygiene guile)))
                                   (vector
                                     '(#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i3988"
                                              "i3989"
                                              "i3990"
                                              "i3991"
                                              "i3992"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i3985")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         syntax-rules
                                         ((top)
                                          #(ribcage
                                            #(_ k keyword pattern template)
                                            #((top) (top) (top) (top) (top))
                                            #("i3988"
                                              "i3989"
                                              "i3990"
                                              "i3991"
                                              "i3992"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i3985")))
                                         (hygiene guile)))
                                     (cons '#(syntax-object
                                              patterns
                                              ((top)
                                               #(ribcage
                                                 #(_
                                                   k
                                                   keyword
                                                   pattern
                                                   template)
                                                 #((top)
                                                   (top)
                                                   (top)
                                                   (top)
                                                   (top))
                                                 #("i3988"
                                                   "i3989"
                                                   "i3990"
                                                   "i3991"
                                                   "i3992"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i3985")))
                                              (hygiene guile))
                                           #{pattern\ 3996}#))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i3988"
                                                 "i3989"
                                                 "i3990"
                                                 "i3991"
                                                 "i3992"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i3985")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i3988"
                                                       "i3989"
                                                       "i3990"
                                                       "i3991"
                                                       "i3992"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i3985")))
                                                  (hygiene guile))
                                               (cons #{k\ 3994}#
                                                     (map (lambda (#{tmp\ 4001}#
                                                                   #{tmp\ 4000}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i3988"
                                                                                "i3989"
                                                                                "i3990"
                                                                                "i3991"
                                                                                "i3992"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i3985")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 4000}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i3988"
                                                                                "i3989"
                                                                                "i3990"
                                                                                "i3991"
                                                                                "i3992"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i3985")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 4001}#)))
                                                          #{template\ 3997}#
                                                          #{pattern\ 3996}#))))))
                           #{tmp\ 3987}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 3986}#)))
                ($sc-dispatch
                  #{tmp\ 3986}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 3984}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 4002}#)
            ((lambda (#{tmp\ 4004}#)
               ((lambda (#{tmp\ 4005}#)
                  (if (if #{tmp\ 4005}#
                        (apply (lambda (#{let*\ 4011}#
                                        #{x\ 4012}#
                                        #{v\ 4013}#
                                        #{e1\ 4014}#
                                        #{e2\ 4015}#)
                                 (and-map identifier? #{x\ 4012}#))
                               #{tmp\ 4005}#)
                        #f)
                    (apply (lambda (#{let*\ 4022}#
                                    #{x\ 4023}#
                                    #{v\ 4024}#
                                    #{e1\ 4025}#
                                    #{e2\ 4026}#)
                             (letrec ((#{f\ 4029}#
                                        (lambda (#{bindings\ 4030}#)
                                          (if (null? #{bindings\ 4030}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i4027" "i4028"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i4017"
                                                          "i4018"
                                                          "i4019"
                                                          "i4020"
                                                          "i4021"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i4003")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 4025}#
                                                              #{e2\ 4026}#)))
                                            ((lambda (#{tmp\ 4035}#)
                                               ((lambda (#{tmp\ 4036}#)
                                                  (if #{tmp\ 4036}#
                                                    (apply (lambda (#{body\ 4039}#
                                                                    #{binding\ 4040}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4037"
                                                                           "i4038"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4027"
                                                                           "i4028"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i4017"
                                                                           "i4018"
                                                                           "i4019"
                                                                           "i4020"
                                                                           "i4021"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i4003")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 4040}#)
                                                                   #{body\ 4039}#))
                                                           #{tmp\ 4036}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 4035}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 4035}#
                                                  '(any any))))
                                             (list (#{f\ 4029}#
                                                     (cdr #{bindings\ 4030}#))
                                                   (car #{bindings\ 4030}#)))))))
                               (#{f\ 4029}#
                                 (map list #{x\ 4023}# #{v\ 4024}#))))
                           #{tmp\ 4005}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4004}#)))
                ($sc-dispatch
                  #{tmp\ 4004}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 4002}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 4041}#)
            ((lambda (#{tmp\ 4043}#)
               ((lambda (#{tmp\ 4044}#)
                  (if #{tmp\ 4044}#
                    (apply (lambda (#{_\ 4052}#
                                    #{var\ 4053}#
                                    #{init\ 4054}#
                                    #{step\ 4055}#
                                    #{e0\ 4056}#
                                    #{e1\ 4057}#
                                    #{c\ 4058}#)
                             ((lambda (#{tmp\ 4060}#)
                                ((lambda (#{tmp\ 4061}#)
                                   (if #{tmp\ 4061}#
                                     (apply (lambda (#{step\ 4063}#)
                                              ((lambda (#{tmp\ 4064}#)
                                                 ((lambda (#{tmp\ 4065}#)
                                                    (if #{tmp\ 4065}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4062"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4045"
                                                                             "i4046"
                                                                             "i4047"
                                                                             "i4048"
                                                                             "i4049"
                                                                             "i4050"
                                                                             "i4051"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4042")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4062"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4045"
                                                                             "i4046"
                                                                             "i4047"
                                                                             "i4048"
                                                                             "i4049"
                                                                             "i4050"
                                                                             "i4051"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4042")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 4053}#
                                                                          #{init\ 4054}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i4062"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i4045"
                                                                                   "i4046"
                                                                                   "i4047"
                                                                                   "i4048"
                                                                                   "i4049"
                                                                                   "i4050"
                                                                                   "i4051"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i4042")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4062"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4045"
                                                                                         "i4046"
                                                                                         "i4047"
                                                                                         "i4048"
                                                                                         "i4049"
                                                                                         "i4050"
                                                                                         "i4051"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4042")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 4056}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4062"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4045"
                                                                                         "i4046"
                                                                                         "i4047"
                                                                                         "i4048"
                                                                                         "i4049"
                                                                                         "i4050"
                                                                                         "i4051"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4042")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 4058}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i4062"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i4045"
                                                                                                       "i4046"
                                                                                                       "i4047"
                                                                                                       "i4048"
                                                                                                       "i4049"
                                                                                                       "i4050"
                                                                                                       "i4051"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i4042")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 4063}#)))))))
                                                             #{tmp\ 4065}#)
                                                      ((lambda (#{tmp\ 4070}#)
                                                         (if #{tmp\ 4070}#
                                                           (apply (lambda (#{e1\ 4073}#
                                                                           #{e2\ 4074}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4071"
                                                                                  "i4072"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4062"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4045"
                                                                                  "i4046"
                                                                                  "i4047"
                                                                                  "i4048"
                                                                                  "i4049"
                                                                                  "i4050"
                                                                                  "i4051"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4042")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4071"
                                                                                  "i4072"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4062"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4045"
                                                                                  "i4046"
                                                                                  "i4047"
                                                                                  "i4048"
                                                                                  "i4049"
                                                                                  "i4050"
                                                                                  "i4051"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4042")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 4053}#
                                                                               #{init\ 4054}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4071"
                                                                                        "i4072"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i4062"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4045"
                                                                                        "i4046"
                                                                                        "i4047"
                                                                                        "i4048"
                                                                                        "i4049"
                                                                                        "i4050"
                                                                                        "i4051"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i4042")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 4056}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4071"
                                                                                              "i4072"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4062"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4045"
                                                                                              "i4046"
                                                                                              "i4047"
                                                                                              "i4048"
                                                                                              "i4049"
                                                                                              "i4050"
                                                                                              "i4051"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4042")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 4073}#
                                                                                            #{e2\ 4074}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4071"
                                                                                              "i4072"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4062"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4045"
                                                                                              "i4046"
                                                                                              "i4047"
                                                                                              "i4048"
                                                                                              "i4049"
                                                                                              "i4050"
                                                                                              "i4051"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4042")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 4058}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i4071"
                                                                                                            "i4072"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i4062"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i4045"
                                                                                                            "i4046"
                                                                                                            "i4047"
                                                                                                            "i4048"
                                                                                                            "i4049"
                                                                                                            "i4050"
                                                                                                            "i4051"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i4042")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 4063}#)))))))
                                                                  #{tmp\ 4070}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 4064}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4064}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 4064}#
                                                    '())))
                                               #{e1\ 4057}#))
                                            #{tmp\ 4061}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 4060}#)))
                                 ($sc-dispatch
                                   #{tmp\ 4060}#
                                   'each-any)))
                              (map (lambda (#{v\ 4081}# #{s\ 4082}#)
                                     ((lambda (#{tmp\ 4085}#)
                                        ((lambda (#{tmp\ 4086}#)
                                           (if #{tmp\ 4086}#
                                             (apply (lambda () #{v\ 4081}#)
                                                    #{tmp\ 4086}#)
                                             ((lambda (#{tmp\ 4087}#)
                                                (if #{tmp\ 4087}#
                                                  (apply (lambda (#{e\ 4089}#)
                                                           #{e\ 4089}#)
                                                         #{tmp\ 4087}#)
                                                  ((lambda (#{_\ 4091}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 4041}#
                                                       #{s\ 4082}#))
                                                   #{tmp\ 4085}#)))
                                              ($sc-dispatch
                                                #{tmp\ 4085}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 4085}#
                                           '())))
                                      #{s\ 4082}#))
                                   #{var\ 4053}#
                                   #{step\ 4055}#)))
                           #{tmp\ 4044}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4043}#)))
                ($sc-dispatch
                  #{tmp\ 4043}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 4041}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 4098}#
                     (lambda (#{x\ 4102}# #{y\ 4103}#)
                       ((lambda (#{tmp\ 4107}#)
                          ((lambda (#{tmp\ 4108}#)
                             (if #{tmp\ 4108}#
                               (apply (lambda (#{x\ 4111}# #{y\ 4112}#)
                                        ((lambda (#{tmp\ 4113}#)
                                           ((lambda (#{tmp\ 4114}#)
                                              (if #{tmp\ 4114}#
                                                (apply (lambda (#{dy\ 4116}#)
                                                         ((lambda (#{tmp\ 4117}#)
                                                            ((lambda (#{tmp\ 4118}#)
                                                               (if #{tmp\ 4118}#
                                                                 (apply (lambda (#{dx\ 4120}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i4119"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i4115"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4109"
                                                                                        "i4110"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4104"
                                                                                        "i4105"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4094"
                                                                                        "i4095"
                                                                                        "i4096"
                                                                                        "i4097")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 4120}#
                                                                                      #{dy\ 4116}#)))
                                                                        #{tmp\ 4118}#)
                                                                 ((lambda (#{_\ 4122}#)
                                                                    (if (null? #{dy\ 4116}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4121"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4115"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4109"
                                                                                    "i4110"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4104"
                                                                                    "i4105"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4094"
                                                                                    "i4095"
                                                                                    "i4096"
                                                                                    "i4097")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4111}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4121"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4115"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4109"
                                                                                    "i4110"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4104"
                                                                                    "i4105"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4094"
                                                                                    "i4095"
                                                                                    "i4096"
                                                                                    "i4097")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4111}#
                                                                            #{y\ 4112}#)))
                                                                  #{tmp\ 4117}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 4117}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i4115"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4109"
                                                                          "i4110"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4104"
                                                                          "i4105"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i4094"
                                                                          "i4095"
                                                                          "i4096"
                                                                          "i4097")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 4111}#))
                                                       #{tmp\ 4114}#)
                                                ((lambda (#{tmp\ 4123}#)
                                                   (if #{tmp\ 4123}#
                                                     (apply (lambda (#{stuff\ 4125}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i4124"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4109"
                                                                            "i4110"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4104"
                                                                            "i4105"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4094"
                                                                            "i4095"
                                                                            "i4096"
                                                                            "i4097")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 4111}#
                                                                          #{stuff\ 4125}#)))
                                                            #{tmp\ 4123}#)
                                                     ((lambda (#{else\ 4127}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i4126"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4109"
                                                                      "i4110"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4104"
                                                                      "i4105"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i4094"
                                                                      "i4095"
                                                                      "i4096"
                                                                      "i4097")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 4111}#
                                                              #{y\ 4112}#))
                                                      #{tmp\ 4113}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 4113}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4109" "i4110"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4104" "i4105"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4094"
                                                              "i4095"
                                                              "i4096"
                                                              "i4097")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 4113}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4109" "i4110"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4104" "i4105"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4094"
                                                         "i4095"
                                                         "i4096"
                                                         "i4097")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 4112}#))
                                      #{tmp\ 4108}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4107}#)))
                           ($sc-dispatch #{tmp\ 4107}# (quote (any any)))))
                        (list #{x\ 4102}# #{y\ 4103}#))))
                   (#{quasiappend\ 4099}#
                     (lambda (#{x\ 4128}# #{y\ 4129}#)
                       ((lambda (#{tmp\ 4133}#)
                          ((lambda (#{tmp\ 4134}#)
                             (if #{tmp\ 4134}#
                               (apply (lambda (#{x\ 4137}# #{y\ 4138}#)
                                        ((lambda (#{tmp\ 4139}#)
                                           ((lambda (#{tmp\ 4140}#)
                                              (if #{tmp\ 4140}#
                                                (apply (lambda () #{x\ 4137}#)
                                                       #{tmp\ 4140}#)
                                                ((lambda (#{_\ 4142}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i4141"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4135"
                                                                 "i4136"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4130"
                                                                 "i4131"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4094"
                                                                 "i4095"
                                                                 "i4096"
                                                                 "i4097")))
                                                            (hygiene guile))
                                                         #{x\ 4137}#
                                                         #{y\ 4138}#))
                                                 #{tmp\ 4139}#)))
                                            ($sc-dispatch
                                              #{tmp\ 4139}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4135" "i4136"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4130" "i4131"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4094"
                                                         "i4095"
                                                         "i4096"
                                                         "i4097")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 4138}#))
                                      #{tmp\ 4134}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4133}#)))
                           ($sc-dispatch #{tmp\ 4133}# (quote (any any)))))
                        (list #{x\ 4128}# #{y\ 4129}#))))
                   (#{quasivector\ 4100}#
                     (lambda (#{x\ 4143}#)
                       ((lambda (#{tmp\ 4146}#)
                          ((lambda (#{x\ 4148}#)
                             ((lambda (#{tmp\ 4149}#)
                                ((lambda (#{tmp\ 4150}#)
                                   (if #{tmp\ 4150}#
                                     (apply (lambda (#{x\ 4152}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4151"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4147"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4144"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4094"
                                                            "i4095"
                                                            "i4096"
                                                            "i4097")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 4152}#)))
                                            #{tmp\ 4150}#)
                                     ((lambda (#{tmp\ 4154}#)
                                        (if #{tmp\ 4154}#
                                          (apply (lambda (#{x\ 4156}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4155"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4147"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4144"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4094"
                                                                 "i4095"
                                                                 "i4096"
                                                                 "i4097")))
                                                            (hygiene guile))
                                                         #{x\ 4156}#))
                                                 #{tmp\ 4154}#)
                                          ((lambda (#{_\ 4159}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i4158"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4147"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4144"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i4094"
                                                           "i4095"
                                                           "i4096"
                                                           "i4097")))
                                                      (hygiene guile))
                                                   #{x\ 4148}#))
                                           #{tmp\ 4149}#)))
                                      ($sc-dispatch
                                        #{tmp\ 4149}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4147"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4144"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4094"
                                                   "i4095"
                                                   "i4096"
                                                   "i4097")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 4149}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i4147"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4144"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i4094"
                                              "i4095"
                                              "i4096"
                                              "i4097")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 4148}#))
                           #{tmp\ 4146}#))
                        #{x\ 4143}#)))
                   (#{quasi\ 4101}#
                     (lambda (#{p\ 4160}# #{lev\ 4161}#)
                       ((lambda (#{tmp\ 4164}#)
                          ((lambda (#{tmp\ 4165}#)
                             (if #{tmp\ 4165}#
                               (apply (lambda (#{p\ 4167}#)
                                        (if (= #{lev\ 4161}# 0)
                                          #{p\ 4167}#
                                          (#{quasicons\ 4098}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4166"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4162" "i4163"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4094"
                                                     "i4095"
                                                     "i4096"
                                                     "i4097")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4166"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4162" "i4163"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4094"
                                                     "i4095"
                                                     "i4096"
                                                     "i4097")))
                                                (hygiene guile)))
                                            (#{quasi\ 4101}#
                                              (list #{p\ 4167}#)
                                              (- #{lev\ 4161}# 1)))))
                                      #{tmp\ 4165}#)
                               ((lambda (#{tmp\ 4168}#)
                                  (if (if #{tmp\ 4168}#
                                        (apply (lambda (#{args\ 4170}#)
                                                 (= #{lev\ 4161}# 0))
                                               #{tmp\ 4168}#)
                                        #f)
                                    (apply (lambda (#{args\ 4172}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 4160}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i4171"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i4162" "i4163"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4094"
                                                             "i4095"
                                                             "i4096"
                                                             "i4097")))
                                                        (hygiene guile))
                                                     #{args\ 4172}#)))
                                           #{tmp\ 4168}#)
                                    ((lambda (#{tmp\ 4173}#)
                                       (if #{tmp\ 4173}#
                                         (apply (lambda (#{p\ 4176}#
                                                         #{q\ 4177}#)
                                                  (if (= #{lev\ 4161}# 0)
                                                    (#{quasiappend\ 4099}#
                                                      #{p\ 4176}#
                                                      (#{quasi\ 4101}#
                                                        #{q\ 4177}#
                                                        #{lev\ 4161}#))
                                                    (#{quasicons\ 4098}#
                                                      (#{quasicons\ 4098}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4174"
                                                                 "i4175"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4162"
                                                                 "i4163"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4094"
                                                                 "i4095"
                                                                 "i4096"
                                                                 "i4097")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4174"
                                                                 "i4175"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4162"
                                                                 "i4163"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4094"
                                                                 "i4095"
                                                                 "i4096"
                                                                 "i4097")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 4101}#
                                                          (list #{p\ 4176}#)
                                                          (- #{lev\ 4161}# 1)))
                                                      (#{quasi\ 4101}#
                                                        #{q\ 4177}#
                                                        #{lev\ 4161}#))))
                                                #{tmp\ 4173}#)
                                         ((lambda (#{tmp\ 4178}#)
                                            (if (if #{tmp\ 4178}#
                                                  (apply (lambda (#{args\ 4181}#
                                                                  #{q\ 4182}#)
                                                           (= #{lev\ 4161}# 0))
                                                         #{tmp\ 4178}#)
                                                  #f)
                                              (apply (lambda (#{args\ 4185}#
                                                              #{q\ 4186}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 4160}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4183"
                                                                       "i4184"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4162"
                                                                       "i4163"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4094"
                                                                       "i4095"
                                                                       "i4096"
                                                                       "i4097")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 4185}#)))
                                                     #{tmp\ 4178}#)
                                              ((lambda (#{tmp\ 4187}#)
                                                 (if #{tmp\ 4187}#
                                                   (apply (lambda (#{p\ 4189}#)
                                                            (#{quasicons\ 4098}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4188"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4162"
                                                                       "i4163"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4094"
                                                                       "i4095"
                                                                       "i4096"
                                                                       "i4097")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4188"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4162"
                                                                       "i4163"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4094"
                                                                       "i4095"
                                                                       "i4096"
                                                                       "i4097")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 4101}#
                                                                (list #{p\ 4189}#)
                                                                (+ #{lev\ 4161}#
                                                                   1))))
                                                          #{tmp\ 4187}#)
                                                   ((lambda (#{tmp\ 4190}#)
                                                      (if #{tmp\ 4190}#
                                                        (apply (lambda (#{p\ 4193}#
                                                                        #{q\ 4194}#)
                                                                 (#{quasicons\ 4098}#
                                                                   (#{quasi\ 4101}#
                                                                     #{p\ 4193}#
                                                                     #{lev\ 4161}#)
                                                                   (#{quasi\ 4101}#
                                                                     #{q\ 4194}#
                                                                     #{lev\ 4161}#)))
                                                               #{tmp\ 4190}#)
                                                        ((lambda (#{tmp\ 4195}#)
                                                           (if #{tmp\ 4195}#
                                                             (apply (lambda (#{x\ 4197}#)
                                                                      (#{quasivector\ 4100}#
                                                                        (#{quasi\ 4101}#
                                                                          #{x\ 4197}#
                                                                          #{lev\ 4161}#)))
                                                                    #{tmp\ 4195}#)
                                                             ((lambda (#{p\ 4200}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i4199"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i4162"
                                                                              "i4163"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i4094"
                                                                              "i4095"
                                                                              "i4096"
                                                                              "i4097")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 4200}#))
                                                              #{tmp\ 4164}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 4164}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 4164}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 4164}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i4162" "i4163"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4094"
                                                            "i4095"
                                                            "i4096"
                                                            "i4097")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 4164}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i4162" "i4163"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i4094"
                                                        "i4095"
                                                        "i4096"
                                                        "i4097")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 4164}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i4162" "i4163"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4094"
                                                   "i4095"
                                                   "i4096"
                                                   "i4097")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 4164}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i4162" "i4163"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i4094" "i4095" "i4096" "i4097")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 4164}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i4162" "i4163"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i4094" "i4095" "i4096" "i4097")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 4160}#))))
            (lambda (#{x\ 4201}#)
              ((lambda (#{tmp\ 4203}#)
                 ((lambda (#{tmp\ 4204}#)
                    (if #{tmp\ 4204}#
                      (apply (lambda (#{_\ 4207}# #{e\ 4208}#)
                               (#{quasi\ 4101}# #{e\ 4208}# 0))
                             #{tmp\ 4204}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4203}#)))
                  ($sc-dispatch #{tmp\ 4203}# (quote (any any)))))
               #{x\ 4201}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 4209}#)
            (letrec ((#{read-file\ 4212}#
                       (lambda (#{fn\ 4213}# #{k\ 4214}#)
                         (let ((#{p\ 4218}# (open-input-file #{fn\ 4213}#)))
                           (letrec ((#{f\ 4222}#
                                      (lambda (#{x\ 4223}# #{result\ 4224}#)
                                        (if (eof-object? #{x\ 4223}#)
                                          (begin
                                            (close-input-port #{p\ 4218}#)
                                            (reverse #{result\ 4224}#))
                                          (#{f\ 4222}#
                                            (read #{p\ 4218}#)
                                            (cons (datum->syntax
                                                    #{k\ 4214}#
                                                    #{x\ 4223}#)
                                                  #{result\ 4224}#))))))
                             (#{f\ 4222}# (read #{p\ 4218}#) (quote ())))))))
              ((lambda (#{tmp\ 4225}#)
                 ((lambda (#{tmp\ 4226}#)
                    (if #{tmp\ 4226}#
                      (apply (lambda (#{k\ 4229}# #{filename\ 4230}#)
                               (let ((#{fn\ 4232}#
                                       (syntax->datum #{filename\ 4230}#)))
                                 ((lambda (#{tmp\ 4234}#)
                                    ((lambda (#{tmp\ 4235}#)
                                       (if #{tmp\ 4235}#
                                         (apply (lambda (#{exp\ 4237}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i4236"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i4231"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i4227"
                                                                "i4228"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i4211"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i4210")))
                                                           (hygiene guile))
                                                        #{exp\ 4237}#))
                                                #{tmp\ 4235}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 4234}#)))
                                     ($sc-dispatch
                                       #{tmp\ 4234}#
                                       'each-any)))
                                  (#{read-file\ 4212}#
                                    #{fn\ 4232}#
                                    #{k\ 4229}#))))
                             #{tmp\ 4226}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4225}#)))
                  ($sc-dispatch #{tmp\ 4225}# (quote (any any)))))
               #{x\ 4209}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 4239}#)
            ((lambda (#{tmp\ 4241}#)
               ((lambda (#{tmp\ 4242}#)
                  (if #{tmp\ 4242}#
                    (apply (lambda (#{k\ 4245}# #{filename\ 4246}#)
                             (let ((#{fn\ 4248}#
                                     (syntax->datum #{filename\ 4246}#)))
                               ((lambda (#{tmp\ 4250}#)
                                  ((lambda (#{fn\ 4252}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4251"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4247"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i4243" "i4244"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4240")))
                                              (hygiene guile))
                                           #{fn\ 4252}#))
                                   #{tmp\ 4250}#))
                                (let ((#{t\ 4255}#
                                        (%search-load-path #{fn\ 4248}#)))
                                  (if #{t\ 4255}#
                                    #{t\ 4255}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 4239}#
                                      #{filename\ 4246}#))))))
                           #{tmp\ 4242}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4241}#)))
                ($sc-dispatch #{tmp\ 4241}# (quote (any any)))))
             #{x\ 4239}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 4257}#)
            ((lambda (#{tmp\ 4259}#)
               ((lambda (#{tmp\ 4260}#)
                  (if #{tmp\ 4260}#
                    (apply (lambda (#{_\ 4263}# #{e\ 4264}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 4257}#))
                           #{tmp\ 4260}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4259}#)))
                ($sc-dispatch #{tmp\ 4259}# (quote (any any)))))
             #{x\ 4257}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 4265}#)
            ((lambda (#{tmp\ 4267}#)
               ((lambda (#{tmp\ 4268}#)
                  (if #{tmp\ 4268}#
                    (apply (lambda (#{_\ 4271}# #{e\ 4272}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 4265}#))
                           #{tmp\ 4268}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4267}#)))
                ($sc-dispatch #{tmp\ 4267}# (quote (any any)))))
             #{x\ 4265}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 4273}#)
            ((lambda (#{tmp\ 4275}#)
               ((lambda (#{tmp\ 4276}#)
                  (if #{tmp\ 4276}#
                    (apply (lambda (#{_\ 4281}#
                                    #{e\ 4282}#
                                    #{m1\ 4283}#
                                    #{m2\ 4284}#)
                             ((lambda (#{tmp\ 4286}#)
                                ((lambda (#{body\ 4288}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i4287"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i4277"
                                                 "i4278"
                                                 "i4279"
                                                 "i4280"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4274")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i4287"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4277"
                                                             "i4278"
                                                             "i4279"
                                                             "i4280"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4274")))
                                                        (hygiene guile))
                                                     #{e\ 4282}#))
                                         #{body\ 4288}#))
                                 #{tmp\ 4286}#))
                              (letrec ((#{f\ 4292}#
                                         (lambda (#{clause\ 4293}#
                                                  #{clauses\ 4294}#)
                                           (if (null? #{clauses\ 4294}#)
                                             ((lambda (#{tmp\ 4296}#)
                                                ((lambda (#{tmp\ 4297}#)
                                                   (if #{tmp\ 4297}#
                                                     (apply (lambda (#{e1\ 4300}#
                                                                     #{e2\ 4301}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4298"
                                                                            "i4299"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4289"
                                                                            "i4290"
                                                                            "i4291"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4277"
                                                                            "i4278"
                                                                            "i4279"
                                                                            "i4280"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i4274")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 4300}#
                                                                          #{e2\ 4301}#)))
                                                            #{tmp\ 4297}#)
                                                     ((lambda (#{tmp\ 4303}#)
                                                        (if #{tmp\ 4303}#
                                                          (apply (lambda (#{k\ 4307}#
                                                                          #{e1\ 4308}#
                                                                          #{e2\ 4309}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4304"
                                                                                 "i4305"
                                                                                 "i4306"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4289"
                                                                                 "i4290"
                                                                                 "i4291"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4277"
                                                                                 "i4278"
                                                                                 "i4279"
                                                                                 "i4280"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i4274")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4304"
                                                                                       "i4305"
                                                                                       "i4306"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4289"
                                                                                       "i4290"
                                                                                       "i4291"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4277"
                                                                                       "i4278"
                                                                                       "i4279"
                                                                                       "i4280"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4274")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4304"
                                                                                       "i4305"
                                                                                       "i4306"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4289"
                                                                                       "i4290"
                                                                                       "i4291"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4277"
                                                                                       "i4278"
                                                                                       "i4279"
                                                                                       "i4280"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4274")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4304"
                                                                                             "i4305"
                                                                                             "i4306"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4289"
                                                                                             "i4290"
                                                                                             "i4291"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4277"
                                                                                             "i4278"
                                                                                             "i4279"
                                                                                             "i4280"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i4274")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 4307}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4304"
                                                                                       "i4305"
                                                                                       "i4306"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4289"
                                                                                       "i4290"
                                                                                       "i4291"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4277"
                                                                                       "i4278"
                                                                                       "i4279"
                                                                                       "i4280"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4274")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 4308}#
                                                                                     #{e2\ 4309}#))))
                                                                 #{tmp\ 4303}#)
                                                          ((lambda (#{_\ 4313}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 4273}#
                                                               #{clause\ 4293}#))
                                                           #{tmp\ 4296}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 4296}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 4296}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i4289"
                                                              "i4290"
                                                              "i4291"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4277"
                                                              "i4278"
                                                              "i4279"
                                                              "i4280"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4274")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 4293}#)
                                             ((lambda (#{tmp\ 4315}#)
                                                ((lambda (#{rest\ 4317}#)
                                                   ((lambda (#{tmp\ 4318}#)
                                                      ((lambda (#{tmp\ 4319}#)
                                                         (if #{tmp\ 4319}#
                                                           (apply (lambda (#{k\ 4323}#
                                                                           #{e1\ 4324}#
                                                                           #{e2\ 4325}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4320"
                                                                                  "i4321"
                                                                                  "i4322"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i4316"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4289"
                                                                                  "i4290"
                                                                                  "i4291"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4277"
                                                                                  "i4278"
                                                                                  "i4279"
                                                                                  "i4280"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i4274")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4320"
                                                                                        "i4321"
                                                                                        "i4322"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4316"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4289"
                                                                                        "i4290"
                                                                                        "i4291"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4277"
                                                                                        "i4278"
                                                                                        "i4279"
                                                                                        "i4280"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4274")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4320"
                                                                                        "i4321"
                                                                                        "i4322"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4316"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4289"
                                                                                        "i4290"
                                                                                        "i4291"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4277"
                                                                                        "i4278"
                                                                                        "i4279"
                                                                                        "i4280"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4274")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4320"
                                                                                              "i4321"
                                                                                              "i4322"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i4316"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4289"
                                                                                              "i4290"
                                                                                              "i4291"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4277"
                                                                                              "i4278"
                                                                                              "i4279"
                                                                                              "i4280"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i4274")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 4323}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4320"
                                                                                        "i4321"
                                                                                        "i4322"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4316"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4289"
                                                                                        "i4290"
                                                                                        "i4291"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4277"
                                                                                        "i4278"
                                                                                        "i4279"
                                                                                        "i4280"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4274")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 4324}#
                                                                                      #{e2\ 4325}#))
                                                                          #{rest\ 4317}#))
                                                                  #{tmp\ 4319}#)
                                                           ((lambda (#{_\ 4329}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 4273}#
                                                                #{clause\ 4293}#))
                                                            #{tmp\ 4318}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4318}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 4293}#))
                                                 #{tmp\ 4315}#))
                                              (#{f\ 4292}#
                                                (car #{clauses\ 4294}#)
                                                (cdr #{clauses\ 4294}#)))))))
                                (#{f\ 4292}# #{m1\ 4283}# #{m2\ 4284}#))))
                           #{tmp\ 4276}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4275}#)))
                ($sc-dispatch
                  #{tmp\ 4275}#
                  '(any any any . each-any))))
             #{x\ 4273}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 4330}#)
            ((lambda (#{tmp\ 4332}#)
               ((lambda (#{tmp\ 4333}#)
                  (if #{tmp\ 4333}#
                    (apply (lambda (#{_\ 4336}# #{e\ 4337}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i4334" "i4335"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4331")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i4334" "i4335"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i4331")))
                                       (hygiene guile)))
                                   '#((#(syntax-object
                                         macro-type
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i4334" "i4335"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4331")))
                                         (hygiene guile))
                                       .
                                       #(syntax-object
                                         identifier-syntax
                                         ((top)
                                          #(ribcage
                                            #(_ e)
                                            #((top) (top))
                                            #("i4334" "i4335"))
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4331")))
                                         (hygiene guile))))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4334" "i4335"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4331")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4334" "i4335"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4331")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i4334" "i4335"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i4331")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i4334" "i4335"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i4331")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4334" "i4335"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4331")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4334" "i4335"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4331")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4334" "i4335"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4331")))
                                                        (hygiene guile))
                                                     #{e\ 4337}#))
                                         (list (cons #{_\ 4336}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4334" "i4335"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4331")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4334" "i4335"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4331")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4334" "i4335"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4331")))
                                                        (hygiene guile))
                                                     (cons #{e\ 4337}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4334"
                                                                    "i4335"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4331")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4334"
                                                                    "i4335"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4331")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 4333}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4332}#)))
                ($sc-dispatch #{tmp\ 4332}# (quote (any any)))))
             #{x\ 4330}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 4338}#)
            ((lambda (#{tmp\ 4340}#)
               ((lambda (#{tmp\ 4341}#)
                  (if #{tmp\ 4341}#
                    (apply (lambda (#{_\ 4347}#
                                    #{id\ 4348}#
                                    #{args\ 4349}#
                                    #{b0\ 4350}#
                                    #{b1\ 4351}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i4342"
                                           "i4343"
                                           "i4344"
                                           "i4345"
                                           "i4346"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4339")))
                                      (hygiene guile))
                                   #{id\ 4348}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i4342"
                                                 "i4343"
                                                 "i4344"
                                                 "i4345"
                                                 "i4346"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4339")))
                                            (hygiene guile))
                                         (cons #{args\ 4349}#
                                               (cons #{b0\ 4350}#
                                                     #{b1\ 4351}#)))))
                           #{tmp\ 4341}#)
                    ((lambda (#{tmp\ 4353}#)
                       (if (if #{tmp\ 4353}#
                             (apply (lambda (#{_\ 4357}#
                                             #{id\ 4358}#
                                             #{val\ 4359}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4354" "i4355" "i4356"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4339")))
                                           (hygiene guile))))
                                    #{tmp\ 4353}#)
                             #f)
                         (apply (lambda (#{_\ 4363}#
                                         #{id\ 4364}#
                                         #{val\ 4365}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4360" "i4361" "i4362"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4339")))
                                           (hygiene guile))
                                        #{id\ 4364}#
                                        #{val\ 4365}#))
                                #{tmp\ 4353}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 4340}#)))
                     ($sc-dispatch
                       #{tmp\ 4340}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 4340}#
                  '(any (any . any) any . each-any))))
             #{x\ 4338}#))
          (module-name (current-module)))))

