(eval-when (compile) (set-current-module (resolve-module (quote (guile)))))
(if #f #f)

(letrec ((#{and-map*\ 38}#
           (lambda (#{f\ 100}# #{first\ 101}# . #{rest\ 102}#)
             (let ((#{t\ 108}# (null? #{first\ 101}#)))
               (if #{t\ 108}#
                 #{t\ 108}#
                 (if (null? #{rest\ 102}#)
                   (letrec ((#{andmap\ 112}#
                              (lambda (#{first\ 113}#)
                                (let ((#{x\ 116}# (car #{first\ 113}#))
                                      (#{first\ 117}# (cdr #{first\ 113}#)))
                                  (if (null? #{first\ 117}#)
                                    (#{f\ 100}# #{x\ 116}#)
                                    (if (#{f\ 100}# #{x\ 116}#)
                                      (#{andmap\ 112}# #{first\ 117}#)
                                      #f))))))
                     (#{andmap\ 112}# #{first\ 101}#))
                   (letrec ((#{andmap\ 123}#
                              (lambda (#{first\ 124}# #{rest\ 125}#)
                                (let ((#{x\ 130}# (car #{first\ 124}#))
                                      (#{xr\ 131}# (map car #{rest\ 125}#))
                                      (#{first\ 132}# (cdr #{first\ 124}#))
                                      (#{rest\ 133}# (map cdr #{rest\ 125}#)))
                                  (if (null? #{first\ 132}#)
                                    (apply #{f\ 100}#
                                           (cons #{x\ 130}# #{xr\ 131}#))
                                    (if (apply #{f\ 100}#
                                               (cons #{x\ 130}# #{xr\ 131}#))
                                      (#{andmap\ 123}#
                                        #{first\ 132}#
                                        #{rest\ 133}#)
                                      #f))))))
                     (#{andmap\ 123}# #{first\ 101}# #{rest\ 102}#))))))))
  (letrec ((#{lambda-var-list\ 355}#
             (lambda (#{vars\ 570}#)
               (letrec ((#{lvl\ 576}#
                          (lambda (#{vars\ 577}# #{ls\ 578}# #{w\ 579}#)
                            (if (pair? #{vars\ 577}#)
                              (#{lvl\ 576}#
                                (cdr #{vars\ 577}#)
                                (cons (#{wrap\ 309}#
                                        (car #{vars\ 577}#)
                                        #{w\ 579}#
                                        #f)
                                      #{ls\ 578}#)
                                #{w\ 579}#)
                              (if (#{id?\ 240}# #{vars\ 577}#)
                                (cons (#{wrap\ 309}#
                                        #{vars\ 577}#
                                        #{w\ 579}#
                                        #f)
                                      #{ls\ 578}#)
                                (if (null? #{vars\ 577}#)
                                  #{ls\ 578}#
                                  (if (#{syntax-object?\ 204}# #{vars\ 577}#)
                                    (#{lvl\ 576}#
                                      (#{syntax-object-expression\ 206}#
                                        #{vars\ 577}#)
                                      #{ls\ 578}#
                                      (#{join-wraps\ 291}#
                                        #{w\ 579}#
                                        (#{syntax-object-wrap\ 208}#
                                          #{vars\ 577}#)))
                                    (cons #{vars\ 577}# #{ls\ 578}#))))))))
                 (#{lvl\ 576}#
                   #{vars\ 570}#
                   '()
                   '(())))))
           (#{gen-var\ 353}#
             (lambda (#{id\ 590}#)
               (let ((#{id\ 593}#
                       (if (#{syntax-object?\ 204}# #{id\ 590}#)
                         (#{syntax-object-expression\ 206}# #{id\ 590}#)
                         #{id\ 590}#)))
                 (gensym
                   (string-append (symbol->string #{id\ 593}#) " ")))))
           (#{strip\ 351}#
             (lambda (#{x\ 595}# #{w\ 596}#)
               (if (memq 'top
                         (#{wrap-marks\ 247}# #{w\ 596}#))
                 #{x\ 595}#
                 (letrec ((#{f\ 602}# (lambda (#{x\ 603}#)
                                        (if (#{syntax-object?\ 204}#
                                              #{x\ 603}#)
                                          (#{strip\ 351}#
                                            (#{syntax-object-expression\ 206}#
                                              #{x\ 603}#)
                                            (#{syntax-object-wrap\ 208}#
                                              #{x\ 603}#))
                                          (if (pair? #{x\ 603}#)
                                            (let ((#{a\ 610}# (#{f\ 602}# (car #{x\ 603}#)))
                                                  (#{d\ 611}# (#{f\ 602}# (cdr #{x\ 603}#))))
                                              (if (if (eq? #{a\ 610}#
                                                           (car #{x\ 603}#))
                                                    (eq? #{d\ 611}#
                                                         (cdr #{x\ 603}#))
                                                    #f)
                                                #{x\ 603}#
                                                (cons #{a\ 610}# #{d\ 611}#)))
                                            (if (vector? #{x\ 603}#)
                                              (let ((#{old\ 617}#
                                                      (vector->list
                                                        #{x\ 603}#)))
                                                (let ((#{new\ 619}#
                                                        (map #{f\ 602}#
                                                             #{old\ 617}#)))
                                                  (if (#{and-map*\ 38}#
                                                        eq?
                                                        #{old\ 617}#
                                                        #{new\ 619}#)
                                                    #{x\ 603}#
                                                    (list->vector
                                                      #{new\ 619}#))))
                                              #{x\ 603}#))))))
                   (#{f\ 602}# #{x\ 595}#)))))
           (#{chi-lambda-case\ 349}#
             (lambda (#{e\ 621}#
                      #{r\ 622}#
                      #{w\ 623}#
                      #{s\ 624}#
                      #{mod\ 625}#
                      #{get-formals\ 626}#
                      #{clauses\ 627}#)
               (letrec ((#{expand-body\ 642}#
                          (lambda (#{req\ 643}#
                                   #{opt\ 644}#
                                   #{rest\ 645}#
                                   #{kw\ 646}#
                                   #{body\ 647}#
                                   #{vars\ 648}#
                                   #{r*\ 649}#
                                   #{w*\ 650}#
                                   #{inits\ 651}#)
                            ((lambda (#{tmp\ 661}#)
                               ((lambda (#{tmp\ 662}#)
                                  (if (if #{tmp\ 662}#
                                        (apply (lambda (#{docstring\ 666}#
                                                        #{e1\ 667}#
                                                        #{e2\ 668}#)
                                                 (string?
                                                   (syntax->datum
                                                     #{docstring\ 666}#)))
                                               #{tmp\ 662}#)
                                        #f)
                                    (apply (lambda (#{docstring\ 672}#
                                                    #{e1\ 673}#
                                                    #{e2\ 674}#)
                                             (values
                                               (syntax->datum
                                                 #{docstring\ 672}#)
                                               #{req\ 643}#
                                               #{opt\ 644}#
                                               #{rest\ 645}#
                                               #{kw\ 646}#
                                               #{inits\ 651}#
                                               #{vars\ 648}#
                                               (#{chi-body\ 333}#
                                                 (cons #{e1\ 673}# #{e2\ 674}#)
                                                 (#{source-wrap\ 311}#
                                                   #{e\ 621}#
                                                   #{w\ 623}#
                                                   #{s\ 624}#
                                                   #{mod\ 625}#)
                                                 #{r*\ 649}#
                                                 #{w*\ 650}#
                                                 #{mod\ 625}#)))
                                           #{tmp\ 662}#)
                                    ((lambda (#{tmp\ 676}#)
                                       (if #{tmp\ 676}#
                                         (apply (lambda (#{e1\ 679}#
                                                         #{e2\ 680}#)
                                                  (values
                                                    #f
                                                    #{req\ 643}#
                                                    #{opt\ 644}#
                                                    #{rest\ 645}#
                                                    #{kw\ 646}#
                                                    #{inits\ 651}#
                                                    #{vars\ 648}#
                                                    (#{chi-body\ 333}#
                                                      (cons #{e1\ 679}#
                                                            #{e2\ 680}#)
                                                      (#{source-wrap\ 311}#
                                                        #{e\ 621}#
                                                        #{w\ 623}#
                                                        #{s\ 624}#
                                                        #{mod\ 625}#)
                                                      #{r*\ 649}#
                                                      #{w*\ 650}#
                                                      #{mod\ 625}#)))
                                                #{tmp\ 676}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 661}#)))
                                     ($sc-dispatch
                                       #{tmp\ 661}#
                                       '(any . each-any)))))
                                ($sc-dispatch
                                  #{tmp\ 661}#
                                  '(any any . each-any))))
                             #{body\ 647}#)))
                        (#{expand-kw\ 640}#
                          (lambda (#{req\ 682}#
                                   #{opt\ 683}#
                                   #{rest\ 684}#
                                   #{kw\ 685}#
                                   #{body\ 686}#
                                   #{vars\ 687}#
                                   #{r*\ 688}#
                                   #{w*\ 689}#
                                   #{aok\ 690}#
                                   #{out\ 691}#
                                   #{inits\ 692}#)
                            (if (pair? #{kw\ 685}#)
                              ((lambda (#{tmp\ 706}#)
                                 ((lambda (#{tmp\ 707}#)
                                    (if #{tmp\ 707}#
                                      (apply (lambda (#{k\ 711}#
                                                      #{id\ 712}#
                                                      #{i\ 713}#)
                                               (let ((#{v\ 716}# (#{gen-var\ 353}#
                                                                   #{id\ 712}#)))
                                                 (let ((#{l\ 718}# (#{gen-labels\ 258}#
                                                                     (list #{v\ 716}#))))
                                                   (let ((#{r**\ 720}#
                                                           (#{extend-var-env\ 230}#
                                                             #{l\ 718}#
                                                             (list #{v\ 716}#)
                                                             #{r*\ 688}#)))
                                                     (let ((#{w**\ 722}#
                                                             (#{make-binding-wrap\ 287}#
                                                               (list #{id\ 712}#)
                                                               #{l\ 718}#
                                                               #{w*\ 689}#)))
                                                       (#{expand-kw\ 640}#
                                                         #{req\ 682}#
                                                         #{opt\ 683}#
                                                         #{rest\ 684}#
                                                         (cdr #{kw\ 685}#)
                                                         #{body\ 686}#
                                                         (cons #{v\ 716}#
                                                               #{vars\ 687}#)
                                                         #{r**\ 720}#
                                                         #{w**\ 722}#
                                                         #{aok\ 690}#
                                                         (cons (list (syntax->datum
                                                                       #{k\ 711}#)
                                                                     (syntax->datum
                                                                       #{id\ 712}#)
                                                                     #{v\ 716}#)
                                                               #{out\ 691}#)
                                                         (cons (#{chi\ 325}#
                                                                 #{i\ 713}#
                                                                 #{r*\ 688}#
                                                                 #{w*\ 689}#
                                                                 #{mod\ 625}#)
                                                               #{inits\ 692}#)))))))
                                             #{tmp\ 707}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 706}#)))
                                  ($sc-dispatch
                                    #{tmp\ 706}#
                                    '(any any any))))
                               (car #{kw\ 685}#))
                              (#{expand-body\ 642}#
                                #{req\ 682}#
                                #{opt\ 683}#
                                #{rest\ 684}#
                                (if (let ((#{t\ 726}# #{aok\ 690}#))
                                      (if #{t\ 726}#
                                        #{t\ 726}#
                                        (pair? #{out\ 691}#)))
                                  (cons #{aok\ 690}# (reverse #{out\ 691}#))
                                  #f)
                                #{body\ 686}#
                                (reverse #{vars\ 687}#)
                                #{r*\ 688}#
                                #{w*\ 689}#
                                (reverse #{inits\ 692}#)))))
                        (#{expand-opt\ 638}#
                          (lambda (#{req\ 728}#
                                   #{opt\ 729}#
                                   #{rest\ 730}#
                                   #{kw\ 731}#
                                   #{body\ 732}#
                                   #{vars\ 733}#
                                   #{r*\ 734}#
                                   #{w*\ 735}#
                                   #{out\ 736}#
                                   #{inits\ 737}#)
                            (if (pair? #{opt\ 729}#)
                              ((lambda (#{tmp\ 750}#)
                                 ((lambda (#{tmp\ 751}#)
                                    (if #{tmp\ 751}#
                                      (apply (lambda (#{id\ 754}# #{i\ 755}#)
                                               (let ((#{v\ 758}# (#{gen-var\ 353}#
                                                                   #{id\ 754}#)))
                                                 (let ((#{l\ 760}# (#{gen-labels\ 258}#
                                                                     (list #{v\ 758}#))))
                                                   (let ((#{r**\ 762}#
                                                           (#{extend-var-env\ 230}#
                                                             #{l\ 760}#
                                                             (list #{v\ 758}#)
                                                             #{r*\ 734}#)))
                                                     (let ((#{w**\ 764}#
                                                             (#{make-binding-wrap\ 287}#
                                                               (list #{id\ 754}#)
                                                               #{l\ 760}#
                                                               #{w*\ 735}#)))
                                                       (#{expand-opt\ 638}#
                                                         #{req\ 728}#
                                                         (cdr #{opt\ 729}#)
                                                         #{rest\ 730}#
                                                         #{kw\ 731}#
                                                         #{body\ 732}#
                                                         (cons #{v\ 758}#
                                                               #{vars\ 733}#)
                                                         #{r**\ 762}#
                                                         #{w**\ 764}#
                                                         (cons (syntax->datum
                                                                 #{id\ 754}#)
                                                               #{out\ 736}#)
                                                         (cons (#{chi\ 325}#
                                                                 #{i\ 755}#
                                                                 #{r*\ 734}#
                                                                 #{w*\ 735}#
                                                                 #{mod\ 625}#)
                                                               #{inits\ 737}#)))))))
                                             #{tmp\ 751}#)
                                      (syntax-violation
                                        #f
                                        "source expression failed to match any pattern"
                                        #{tmp\ 750}#)))
                                  ($sc-dispatch
                                    #{tmp\ 750}#
                                    '(any any))))
                               (car #{opt\ 729}#))
                              (if #{rest\ 730}#
                                (let ((#{v\ 769}# (#{gen-var\ 353}#
                                                    #{rest\ 730}#)))
                                  (let ((#{l\ 771}# (#{gen-labels\ 258}#
                                                      (list #{v\ 769}#))))
                                    (let ((#{r*\ 773}#
                                            (#{extend-var-env\ 230}#
                                              #{l\ 771}#
                                              (list #{v\ 769}#)
                                              #{r*\ 734}#)))
                                      (let ((#{w*\ 775}#
                                              (#{make-binding-wrap\ 287}#
                                                (list #{rest\ 730}#)
                                                #{l\ 771}#
                                                #{w*\ 735}#)))
                                        (#{expand-kw\ 640}#
                                          #{req\ 728}#
                                          (if (pair? #{out\ 736}#)
                                            (reverse #{out\ 736}#)
                                            #f)
                                          (syntax->datum #{rest\ 730}#)
                                          (if (pair? #{kw\ 731}#)
                                            (cdr #{kw\ 731}#)
                                            #{kw\ 731}#)
                                          #{body\ 732}#
                                          (cons #{v\ 769}# #{vars\ 733}#)
                                          #{r*\ 773}#
                                          #{w*\ 775}#
                                          (if (pair? #{kw\ 731}#)
                                            (car #{kw\ 731}#)
                                            #f)
                                          '()
                                          #{inits\ 737}#)))))
                                (#{expand-kw\ 640}#
                                  #{req\ 728}#
                                  (if (pair? #{out\ 736}#)
                                    (reverse #{out\ 736}#)
                                    #f)
                                  #f
                                  (if (pair? #{kw\ 731}#)
                                    (cdr #{kw\ 731}#)
                                    #{kw\ 731}#)
                                  #{body\ 732}#
                                  #{vars\ 733}#
                                  #{r*\ 734}#
                                  #{w*\ 735}#
                                  (if (pair? #{kw\ 731}#) (car #{kw\ 731}#) #f)
                                  '()
                                  #{inits\ 737}#)))))
                        (#{expand-req\ 636}#
                          (lambda (#{req\ 777}#
                                   #{opt\ 778}#
                                   #{rest\ 779}#
                                   #{kw\ 780}#
                                   #{body\ 781}#)
                            (let ((#{vars\ 789}#
                                    (map #{gen-var\ 353}# #{req\ 777}#))
                                  (#{labels\ 790}#
                                    (#{gen-labels\ 258}# #{req\ 777}#)))
                              (let ((#{r*\ 793}#
                                      (#{extend-var-env\ 230}#
                                        #{labels\ 790}#
                                        #{vars\ 789}#
                                        #{r\ 622}#))
                                    (#{w*\ 794}#
                                      (#{make-binding-wrap\ 287}#
                                        #{req\ 777}#
                                        #{labels\ 790}#
                                        #{w\ 623}#)))
                                (#{expand-opt\ 638}#
                                  (map syntax->datum #{req\ 777}#)
                                  #{opt\ 778}#
                                  #{rest\ 779}#
                                  #{kw\ 780}#
                                  #{body\ 781}#
                                  (reverse #{vars\ 789}#)
                                  #{r*\ 793}#
                                  #{w*\ 794}#
                                  '()
                                  '()))))))
                 ((lambda (#{tmp\ 795}#)
                    ((lambda (#{tmp\ 796}#)
                       (if #{tmp\ 796}#
                         (apply (lambda () (values #f #f)) #{tmp\ 796}#)
                         ((lambda (#{tmp\ 797}#)
                            (if #{tmp\ 797}#
                              (apply (lambda (#{args\ 804}#
                                              #{e1\ 805}#
                                              #{e2\ 806}#
                                              #{args*\ 807}#
                                              #{e1*\ 808}#
                                              #{e2*\ 809}#)
                                       (call-with-values
                                         (lambda ()
                                           (#{get-formals\ 626}#
                                             #{args\ 804}#))
                                         (lambda (#{req\ 810}#
                                                  #{opt\ 811}#
                                                  #{rest\ 812}#
                                                  #{kw\ 813}#)
                                           (call-with-values
                                             (lambda ()
                                               (#{expand-req\ 636}#
                                                 #{req\ 810}#
                                                 #{opt\ 811}#
                                                 #{rest\ 812}#
                                                 #{kw\ 813}#
                                                 (cons #{e1\ 805}#
                                                       #{e2\ 806}#)))
                                             (lambda (#{docstring\ 819}#
                                                      #{req\ 820}#
                                                      #{opt\ 821}#
                                                      #{rest\ 822}#
                                                      #{kw\ 823}#
                                                      #{inits\ 824}#
                                                      #{vars\ 825}#
                                                      #{body\ 826}#)
                                               (call-with-values
                                                 (lambda ()
                                                   (#{chi-lambda-case\ 349}#
                                                     #{e\ 621}#
                                                     #{r\ 622}#
                                                     #{w\ 623}#
                                                     #{s\ 624}#
                                                     #{mod\ 625}#
                                                     #{get-formals\ 626}#
                                                     (map (lambda (#{tmp\ 837}#
                                                                   #{tmp\ 836}#
                                                                   #{tmp\ 835}#)
                                                            (cons #{tmp\ 835}#
                                                                  (cons #{tmp\ 836}#
                                                                        #{tmp\ 837}#)))
                                                          #{e2*\ 809}#
                                                          #{e1*\ 808}#
                                                          #{args*\ 807}#)))
                                                 (lambda (#{docstring*\ 839}#
                                                          #{else*\ 840}#)
                                                   (values
                                                     (let ((#{t\ 845}# #{docstring\ 819}#))
                                                       (if #{t\ 845}#
                                                         #{t\ 845}#
                                                         #{docstring*\ 839}#))
                                                     (#{build-lambda-case\ 186}#
                                                       #{s\ 624}#
                                                       #{req\ 820}#
                                                       #{opt\ 821}#
                                                       #{rest\ 822}#
                                                       #{kw\ 823}#
                                                       #{inits\ 824}#
                                                       #{vars\ 825}#
                                                       #{body\ 826}#
                                                       #{else*\ 840}#)))))))))
                                     #{tmp\ 797}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 795}#)))
                          ($sc-dispatch
                            #{tmp\ 795}#
                            '((any any . each-any)
                              .
                              #(each (any any . each-any)))))))
                     ($sc-dispatch #{tmp\ 795}# (quote ()))))
                  #{clauses\ 627}#))))
           (#{lambda*-formals\ 347}#
             (lambda (#{orig-args\ 847}#)
               (letrec ((#{check\ 858}#
                          (lambda (#{req\ 859}#
                                   #{opt\ 860}#
                                   #{rest\ 861}#
                                   #{kw\ 862}#)
                            (if (#{distinct-bound-ids?\ 305}#
                                  (append
                                    #{req\ 859}#
                                    (map car #{opt\ 860}#)
                                    (if #{rest\ 861}#
                                      (list #{rest\ 861}#)
                                      '())
                                    (if (pair? #{kw\ 862}#)
                                      (map cadr (cdr #{kw\ 862}#))
                                      '())))
                              (values
                                #{req\ 859}#
                                #{opt\ 860}#
                                #{rest\ 861}#
                                #{kw\ 862}#)
                              (syntax-violation
                                'lambda*
                                "duplicate identifier in argument list"
                                #{orig-args\ 847}#))))
                        (#{rest\ 856}#
                          (lambda (#{args\ 870}#
                                   #{req\ 871}#
                                   #{opt\ 872}#
                                   #{kw\ 873}#)
                            ((lambda (#{tmp\ 878}#)
                               ((lambda (#{tmp\ 879}#)
                                  (if (if #{tmp\ 879}#
                                        (apply (lambda (#{r\ 881}#)
                                                 (#{id?\ 240}# #{r\ 881}#))
                                               #{tmp\ 879}#)
                                        #f)
                                    (apply (lambda (#{r\ 883}#)
                                             (#{check\ 858}#
                                               #{req\ 871}#
                                               #{opt\ 872}#
                                               #{r\ 883}#
                                               #{kw\ 873}#))
                                           #{tmp\ 879}#)
                                    ((lambda (#{else\ 885}#)
                                       (syntax-violation
                                         'lambda*
                                         "invalid rest argument"
                                         #{orig-args\ 847}#
                                         #{args\ 870}#))
                                     #{tmp\ 878}#)))
                                (list #{tmp\ 878}#)))
                             #{args\ 870}#)))
                        (#{key\ 854}#
                          (lambda (#{args\ 886}#
                                   #{req\ 887}#
                                   #{opt\ 888}#
                                   #{rkey\ 889}#)
                            ((lambda (#{tmp\ 894}#)
                               ((lambda (#{tmp\ 895}#)
                                  (if #{tmp\ 895}#
                                    (apply (lambda ()
                                             (#{check\ 858}#
                                               #{req\ 887}#
                                               #{opt\ 888}#
                                               #f
                                               (cons #f
                                                     (reverse #{rkey\ 889}#))))
                                           #{tmp\ 895}#)
                                    ((lambda (#{tmp\ 896}#)
                                       (if (if #{tmp\ 896}#
                                             (apply (lambda (#{a\ 899}#
                                                             #{b\ 900}#)
                                                      (#{id?\ 240}#
                                                        #{a\ 899}#))
                                                    #{tmp\ 896}#)
                                             #f)
                                         (apply (lambda (#{a\ 903}# #{b\ 904}#)
                                                  ((lambda (#{tmp\ 906}#)
                                                     ((lambda (#{k\ 908}#)
                                                        (#{key\ 854}#
                                                          #{b\ 904}#
                                                          #{req\ 887}#
                                                          #{opt\ 888}#
                                                          (cons (cons #{k\ 908}#
                                                                      (cons #{a\ 903}#
                                                                            '(#(syntax-object
                                                                                #f
                                                                                ((top)
                                                                                 #(ribcage
                                                                                   #(k)
                                                                                   #((top))
                                                                                   #("i907"))
                                                                                 #(ribcage
                                                                                   #(a
                                                                                     b)
                                                                                   #((top)
                                                                                     (top))
                                                                                   #("i901"
                                                                                     "i902"))
                                                                                 #(ribcage
                                                                                   ()
                                                                                   ()
                                                                                   ())
                                                                                 #(ribcage
                                                                                   #(args
                                                                                     req
                                                                                     opt
                                                                                     rkey)
                                                                                   #((top)
                                                                                     (top)
                                                                                     (top)
                                                                                     (top))
                                                                                   #("i890"
                                                                                     "i891"
                                                                                     "i892"
                                                                                     "i893"))
                                                                                 #(ribcage
                                                                                   (check rest
                                                                                          key
                                                                                          opt
                                                                                          req)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i857"
                                                                                    "i855"
                                                                                    "i853"
                                                                                    "i851"
                                                                                    "i849"))
                                                                                 #(ribcage
                                                                                   #(orig-args)
                                                                                   #((top))
                                                                                   #("i848"))
                                                                                 #(ribcage
                                                                                   (lambda-var-list
                                                                                     gen-var
                                                                                     strip
                                                                                     chi-lambda-case
                                                                                     lambda*-formals
                                                                                     chi-simple-lambda
                                                                                     lambda-formals
                                                                                     ellipsis?
                                                                                     chi-void
                                                                                     eval-local-transformer
                                                                                     chi-local-syntax
                                                                                     chi-body
                                                                                     chi-macro
                                                                                     chi-application
                                                                                     chi-expr
                                                                                     chi
                                                                                     chi-top
                                                                                     syntax-type
                                                                                     chi-when-list
                                                                                     chi-install-global
                                                                                     chi-top-sequence
                                                                                     chi-sequence
                                                                                     source-wrap
                                                                                     wrap
                                                                                     bound-id-member?
                                                                                     distinct-bound-ids?
                                                                                     valid-bound-ids?
                                                                                     bound-id=?
                                                                                     free-id=?
                                                                                     id-var-name
                                                                                     same-marks?
                                                                                     join-marks
                                                                                     join-wraps
                                                                                     smart-append
                                                                                     make-binding-wrap
                                                                                     extend-ribcage!
                                                                                     make-empty-ribcage
                                                                                     new-mark
                                                                                     anti-mark
                                                                                     the-anti-mark
                                                                                     top-marked?
                                                                                     top-wrap
                                                                                     empty-wrap
                                                                                     set-ribcage-labels!
                                                                                     set-ribcage-marks!
                                                                                     set-ribcage-symnames!
                                                                                     ribcage-labels
                                                                                     ribcage-marks
                                                                                     ribcage-symnames
                                                                                     ribcage?
                                                                                     make-ribcage
                                                                                     gen-labels
                                                                                     gen-label
                                                                                     make-rename
                                                                                     rename-marks
                                                                                     rename-new
                                                                                     rename-old
                                                                                     subst-rename?
                                                                                     wrap-subst
                                                                                     wrap-marks
                                                                                     make-wrap
                                                                                     id-sym-name&marks
                                                                                     id-sym-name
                                                                                     id?
                                                                                     nonsymbol-id?
                                                                                     global-extend
                                                                                     lookup
                                                                                     macros-only-env
                                                                                     extend-var-env
                                                                                     extend-env
                                                                                     null-env
                                                                                     binding-value
                                                                                     binding-type
                                                                                     make-binding
                                                                                     arg-check
                                                                                     source-annotation
                                                                                     no-source
                                                                                     set-syntax-object-module!
                                                                                     set-syntax-object-wrap!
                                                                                     set-syntax-object-expression!
                                                                                     syntax-object-module
                                                                                     syntax-object-wrap
                                                                                     syntax-object-expression
                                                                                     syntax-object?
                                                                                     make-syntax-object
                                                                                     build-lexical-var
                                                                                     build-letrec
                                                                                     build-named-let
                                                                                     build-let
                                                                                     build-sequence
                                                                                     build-data
                                                                                     build-primref
                                                                                     build-lambda-case
                                                                                     build-case-lambda
                                                                                     build-simple-lambda
                                                                                     build-global-definition
                                                                                     maybe-name-value!
                                                                                     build-global-assignment
                                                                                     build-global-reference
                                                                                     analyze-variable
                                                                                     build-lexical-assignment
                                                                                     build-lexical-reference
                                                                                     build-dynlet
                                                                                     build-conditional
                                                                                     build-application
                                                                                     build-void
                                                                                     decorate-source
                                                                                     get-global-definition-hook
                                                                                     put-global-definition-hook
                                                                                     gensym-hook
                                                                                     local-eval-hook
                                                                                     top-level-eval-hook
                                                                                     fx<
                                                                                     fx=
                                                                                     fx-
                                                                                     fx+
                                                                                     *mode*
                                                                                     noexpand)
                                                                                   ((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                   ("i354"
                                                                                    "i352"
                                                                                    "i350"
                                                                                    "i348"
                                                                                    "i346"
                                                                                    "i344"
                                                                                    "i342"
                                                                                    "i340"
                                                                                    "i338"
                                                                                    "i336"
                                                                                    "i334"
                                                                                    "i332"
                                                                                    "i330"
                                                                                    "i328"
                                                                                    "i326"
                                                                                    "i324"
                                                                                    "i322"
                                                                                    "i320"
                                                                                    "i318"
                                                                                    "i316"
                                                                                    "i314"
                                                                                    "i312"
                                                                                    "i310"
                                                                                    "i308"
                                                                                    "i306"
                                                                                    "i304"
                                                                                    "i302"
                                                                                    "i300"
                                                                                    "i298"
                                                                                    "i296"
                                                                                    "i294"
                                                                                    "i292"
                                                                                    "i290"
                                                                                    "i288"
                                                                                    "i286"
                                                                                    "i284"
                                                                                    "i283"
                                                                                    "i282"
                                                                                    "i280"
                                                                                    "i279"
                                                                                    "i278"
                                                                                    "i277"
                                                                                    "i276"
                                                                                    "i274"
                                                                                    "i272"
                                                                                    "i270"
                                                                                    "i268"
                                                                                    "i266"
                                                                                    "i264"
                                                                                    "i262"
                                                                                    "i260"
                                                                                    "i257"
                                                                                    "i255"
                                                                                    "i254"
                                                                                    "i253"
                                                                                    "i252"
                                                                                    "i251"
                                                                                    "i250"
                                                                                    "i248"
                                                                                    "i246"
                                                                                    "i244"
                                                                                    "i242"
                                                                                    "i241"
                                                                                    "i239"
                                                                                    "i237"
                                                                                    "i235"
                                                                                    "i233"
                                                                                    "i231"
                                                                                    "i229"
                                                                                    "i227"
                                                                                    "i226"
                                                                                    "i224"
                                                                                    "i222"
                                                                                    "i221"
                                                                                    "i220"
                                                                                    "i218"
                                                                                    "i217"
                                                                                    "i215"
                                                                                    "i213"
                                                                                    "i211"
                                                                                    "i209"
                                                                                    "i207"
                                                                                    "i205"
                                                                                    "i203"
                                                                                    "i201"
                                                                                    "i199"
                                                                                    "i197"
                                                                                    "i195"
                                                                                    "i193"
                                                                                    "i191"
                                                                                    "i189"
                                                                                    "i187"
                                                                                    "i185"
                                                                                    "i183"
                                                                                    "i181"
                                                                                    "i179"
                                                                                    "i177"
                                                                                    "i175"
                                                                                    "i173"
                                                                                    "i171"
                                                                                    "i169"
                                                                                    "i167"
                                                                                    "i165"
                                                                                    "i163"
                                                                                    "i161"
                                                                                    "i159"
                                                                                    "i157"
                                                                                    "i155"
                                                                                    "i153"
                                                                                    "i152"
                                                                                    "i150"
                                                                                    "i148"
                                                                                    "i146"
                                                                                    "i144"
                                                                                    "i142"
                                                                                    "i140"
                                                                                    "i138"
                                                                                    "i136"))
                                                                                 #(ribcage
                                                                                   (define-structure
                                                                                     and-map*)
                                                                                   ((top)
                                                                                    (top))
                                                                                   ("i39"
                                                                                    "i37")))
                                                                                (hygiene
                                                                                  guile)))))
                                                                #{rkey\ 889}#)))
                                                      #{tmp\ 906}#))
                                                   (symbol->keyword
                                                     (syntax->datum
                                                       #{a\ 903}#))))
                                                #{tmp\ 896}#)
                                         ((lambda (#{tmp\ 909}#)
                                            (if (if #{tmp\ 909}#
                                                  (apply (lambda (#{a\ 913}#
                                                                  #{init\ 914}#
                                                                  #{b\ 915}#)
                                                           (#{id?\ 240}#
                                                             #{a\ 913}#))
                                                         #{tmp\ 909}#)
                                                  #f)
                                              (apply (lambda (#{a\ 919}#
                                                              #{init\ 920}#
                                                              #{b\ 921}#)
                                                       ((lambda (#{tmp\ 923}#)
                                                          ((lambda (#{k\ 925}#)
                                                             (#{key\ 854}#
                                                               #{b\ 921}#
                                                               #{req\ 887}#
                                                               #{opt\ 888}#
                                                               (cons (list #{k\ 925}#
                                                                           #{a\ 919}#
                                                                           #{init\ 920}#)
                                                                     #{rkey\ 889}#)))
                                                           #{tmp\ 923}#))
                                                        (symbol->keyword
                                                          (syntax->datum
                                                            #{a\ 919}#))))
                                                     #{tmp\ 909}#)
                                              ((lambda (#{tmp\ 926}#)
                                                 (if (if #{tmp\ 926}#
                                                       (apply (lambda (#{a\ 931}#
                                                                       #{init\ 932}#
                                                                       #{k\ 933}#
                                                                       #{b\ 934}#)
                                                                (if (#{id?\ 240}#
                                                                      #{a\ 931}#)
                                                                  (keyword?
                                                                    (syntax->datum
                                                                      #{k\ 933}#))
                                                                  #f))
                                                              #{tmp\ 926}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 941}#
                                                                   #{init\ 942}#
                                                                   #{k\ 943}#
                                                                   #{b\ 944}#)
                                                            (#{key\ 854}#
                                                              #{b\ 944}#
                                                              #{req\ 887}#
                                                              #{opt\ 888}#
                                                              (cons (list #{k\ 943}#
                                                                          #{a\ 941}#
                                                                          #{init\ 942}#)
                                                                    #{rkey\ 889}#)))
                                                          #{tmp\ 926}#)
                                                   ((lambda (#{tmp\ 945}#)
                                                      (if (if #{tmp\ 945}#
                                                            (apply (lambda (#{aok\ 947}#)
                                                                     (eq? (syntax->datum
                                                                            #{aok\ 947}#)
                                                                          #:allow-other-keys))
                                                                   #{tmp\ 945}#)
                                                            #f)
                                                        (apply (lambda (#{aok\ 949}#)
                                                                 (#{check\ 858}#
                                                                   #{req\ 887}#
                                                                   #{opt\ 888}#
                                                                   #f
                                                                   (cons #t
                                                                         (reverse
                                                                           #{rkey\ 889}#))))
                                                               #{tmp\ 945}#)
                                                        ((lambda (#{tmp\ 950}#)
                                                           (if (if #{tmp\ 950}#
                                                                 (apply (lambda (#{aok\ 954}#
                                                                                 #{a\ 955}#
                                                                                 #{b\ 956}#)
                                                                          (if (eq? (syntax->datum
                                                                                     #{aok\ 954}#)
                                                                                   #:allow-other-keys)
                                                                            (eq? (syntax->datum
                                                                                   #{a\ 955}#)
                                                                                 #:rest)
                                                                            #f))
                                                                        #{tmp\ 950}#)
                                                                 #f)
                                                             (apply (lambda (#{aok\ 962}#
                                                                             #{a\ 963}#
                                                                             #{b\ 964}#)
                                                                      (#{rest\ 856}#
                                                                        #{b\ 964}#
                                                                        #{req\ 887}#
                                                                        #{opt\ 888}#
                                                                        (cons #t
                                                                              (reverse
                                                                                #{rkey\ 889}#))))
                                                                    #{tmp\ 950}#)
                                                             ((lambda (#{tmp\ 965}#)
                                                                (if (if #{tmp\ 965}#
                                                                      (apply (lambda (#{aok\ 968}#
                                                                                      #{r\ 969}#)
                                                                               (if (eq? (syntax->datum
                                                                                          #{aok\ 968}#)
                                                                                        #:allow-other-keys)
                                                                                 (#{id?\ 240}#
                                                                                   #{r\ 969}#)
                                                                                 #f))
                                                                             #{tmp\ 965}#)
                                                                      #f)
                                                                  (apply (lambda (#{aok\ 974}#
                                                                                  #{r\ 975}#)
                                                                           (#{rest\ 856}#
                                                                             #{r\ 975}#
                                                                             #{req\ 887}#
                                                                             #{opt\ 888}#
                                                                             (cons #t
                                                                                   (reverse
                                                                                     #{rkey\ 889}#))))
                                                                         #{tmp\ 965}#)
                                                                  ((lambda (#{tmp\ 976}#)
                                                                     (if (if #{tmp\ 976}#
                                                                           (apply (lambda (#{a\ 979}#
                                                                                           #{b\ 980}#)
                                                                                    (eq? (syntax->datum
                                                                                           #{a\ 979}#)
                                                                                         #:rest))
                                                                                  #{tmp\ 976}#)
                                                                           #f)
                                                                       (apply (lambda (#{a\ 983}#
                                                                                       #{b\ 984}#)
                                                                                (#{rest\ 856}#
                                                                                  #{b\ 984}#
                                                                                  #{req\ 887}#
                                                                                  #{opt\ 888}#
                                                                                  (cons #f
                                                                                        (reverse
                                                                                          #{rkey\ 889}#))))
                                                                              #{tmp\ 976}#)
                                                                       ((lambda (#{tmp\ 985}#)
                                                                          (if (if #{tmp\ 985}#
                                                                                (apply (lambda (#{r\ 987}#)
                                                                                         (#{id?\ 240}#
                                                                                           #{r\ 987}#))
                                                                                       #{tmp\ 985}#)
                                                                                #f)
                                                                            (apply (lambda (#{r\ 989}#)
                                                                                     (#{rest\ 856}#
                                                                                       #{r\ 989}#
                                                                                       #{req\ 887}#
                                                                                       #{opt\ 888}#
                                                                                       (cons #f
                                                                                             (reverse
                                                                                               #{rkey\ 889}#))))
                                                                                   #{tmp\ 985}#)
                                                                            ((lambda (#{else\ 991}#)
                                                                               (syntax-violation
                                                                                 'lambda*
                                                                                 "invalid keyword argument list"
                                                                                 #{orig-args\ 847}#
                                                                                 #{args\ 886}#))
                                                                             #{tmp\ 894}#)))
                                                                        (list #{tmp\ 894}#))))
                                                                   ($sc-dispatch
                                                                     #{tmp\ 894}#
                                                                     '(any any)))))
                                                              ($sc-dispatch
                                                                #{tmp\ 894}#
                                                                '(any .
                                                                      any)))))
                                                         ($sc-dispatch
                                                           #{tmp\ 894}#
                                                           '(any any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 894}#
                                                      '(any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 894}#
                                                 '((any any any) . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 894}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 894}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 894}# (quote ()))))
                             #{args\ 886}#)))
                        (#{opt\ 852}#
                          (lambda (#{args\ 992}# #{req\ 993}# #{ropt\ 994}#)
                            ((lambda (#{tmp\ 998}#)
                               ((lambda (#{tmp\ 999}#)
                                  (if #{tmp\ 999}#
                                    (apply (lambda ()
                                             (#{check\ 858}#
                                               #{req\ 993}#
                                               (reverse #{ropt\ 994}#)
                                               #f
                                               '()))
                                           #{tmp\ 999}#)
                                    ((lambda (#{tmp\ 1000}#)
                                       (if (if #{tmp\ 1000}#
                                             (apply (lambda (#{a\ 1003}#
                                                             #{b\ 1004}#)
                                                      (#{id?\ 240}#
                                                        #{a\ 1003}#))
                                                    #{tmp\ 1000}#)
                                             #f)
                                         (apply (lambda (#{a\ 1007}#
                                                         #{b\ 1008}#)
                                                  (#{opt\ 852}#
                                                    #{b\ 1008}#
                                                    #{req\ 993}#
                                                    (cons (cons #{a\ 1007}#
                                                                '(#(syntax-object
                                                                    #f
                                                                    ((top)
                                                                     #(ribcage
                                                                       #(a b)
                                                                       #((top)
                                                                         (top))
                                                                       #("i1005"
                                                                         "i1006"))
                                                                     #(ribcage
                                                                       ()
                                                                       ()
                                                                       ())
                                                                     #(ribcage
                                                                       #(args
                                                                         req
                                                                         ropt)
                                                                       #((top)
                                                                         (top)
                                                                         (top))
                                                                       #("i995"
                                                                         "i996"
                                                                         "i997"))
                                                                     #(ribcage
                                                                       (check rest
                                                                              key
                                                                              opt
                                                                              req)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i857"
                                                                        "i855"
                                                                        "i853"
                                                                        "i851"
                                                                        "i849"))
                                                                     #(ribcage
                                                                       #(orig-args)
                                                                       #((top))
                                                                       #("i848"))
                                                                     #(ribcage
                                                                       (lambda-var-list
                                                                         gen-var
                                                                         strip
                                                                         chi-lambda-case
                                                                         lambda*-formals
                                                                         chi-simple-lambda
                                                                         lambda-formals
                                                                         ellipsis?
                                                                         chi-void
                                                                         eval-local-transformer
                                                                         chi-local-syntax
                                                                         chi-body
                                                                         chi-macro
                                                                         chi-application
                                                                         chi-expr
                                                                         chi
                                                                         chi-top
                                                                         syntax-type
                                                                         chi-when-list
                                                                         chi-install-global
                                                                         chi-top-sequence
                                                                         chi-sequence
                                                                         source-wrap
                                                                         wrap
                                                                         bound-id-member?
                                                                         distinct-bound-ids?
                                                                         valid-bound-ids?
                                                                         bound-id=?
                                                                         free-id=?
                                                                         id-var-name
                                                                         same-marks?
                                                                         join-marks
                                                                         join-wraps
                                                                         smart-append
                                                                         make-binding-wrap
                                                                         extend-ribcage!
                                                                         make-empty-ribcage
                                                                         new-mark
                                                                         anti-mark
                                                                         the-anti-mark
                                                                         top-marked?
                                                                         top-wrap
                                                                         empty-wrap
                                                                         set-ribcage-labels!
                                                                         set-ribcage-marks!
                                                                         set-ribcage-symnames!
                                                                         ribcage-labels
                                                                         ribcage-marks
                                                                         ribcage-symnames
                                                                         ribcage?
                                                                         make-ribcage
                                                                         gen-labels
                                                                         gen-label
                                                                         make-rename
                                                                         rename-marks
                                                                         rename-new
                                                                         rename-old
                                                                         subst-rename?
                                                                         wrap-subst
                                                                         wrap-marks
                                                                         make-wrap
                                                                         id-sym-name&marks
                                                                         id-sym-name
                                                                         id?
                                                                         nonsymbol-id?
                                                                         global-extend
                                                                         lookup
                                                                         macros-only-env
                                                                         extend-var-env
                                                                         extend-env
                                                                         null-env
                                                                         binding-value
                                                                         binding-type
                                                                         make-binding
                                                                         arg-check
                                                                         source-annotation
                                                                         no-source
                                                                         set-syntax-object-module!
                                                                         set-syntax-object-wrap!
                                                                         set-syntax-object-expression!
                                                                         syntax-object-module
                                                                         syntax-object-wrap
                                                                         syntax-object-expression
                                                                         syntax-object?
                                                                         make-syntax-object
                                                                         build-lexical-var
                                                                         build-letrec
                                                                         build-named-let
                                                                         build-let
                                                                         build-sequence
                                                                         build-data
                                                                         build-primref
                                                                         build-lambda-case
                                                                         build-case-lambda
                                                                         build-simple-lambda
                                                                         build-global-definition
                                                                         maybe-name-value!
                                                                         build-global-assignment
                                                                         build-global-reference
                                                                         analyze-variable
                                                                         build-lexical-assignment
                                                                         build-lexical-reference
                                                                         build-dynlet
                                                                         build-conditional
                                                                         build-application
                                                                         build-void
                                                                         decorate-source
                                                                         get-global-definition-hook
                                                                         put-global-definition-hook
                                                                         gensym-hook
                                                                         local-eval-hook
                                                                         top-level-eval-hook
                                                                         fx<
                                                                         fx=
                                                                         fx-
                                                                         fx+
                                                                         *mode*
                                                                         noexpand)
                                                                       ((top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top)
                                                                        (top))
                                                                       ("i354"
                                                                        "i352"
                                                                        "i350"
                                                                        "i348"
                                                                        "i346"
                                                                        "i344"
                                                                        "i342"
                                                                        "i340"
                                                                        "i338"
                                                                        "i336"
                                                                        "i334"
                                                                        "i332"
                                                                        "i330"
                                                                        "i328"
                                                                        "i326"
                                                                        "i324"
                                                                        "i322"
                                                                        "i320"
                                                                        "i318"
                                                                        "i316"
                                                                        "i314"
                                                                        "i312"
                                                                        "i310"
                                                                        "i308"
                                                                        "i306"
                                                                        "i304"
                                                                        "i302"
                                                                        "i300"
                                                                        "i298"
                                                                        "i296"
                                                                        "i294"
                                                                        "i292"
                                                                        "i290"
                                                                        "i288"
                                                                        "i286"
                                                                        "i284"
                                                                        "i283"
                                                                        "i282"
                                                                        "i280"
                                                                        "i279"
                                                                        "i278"
                                                                        "i277"
                                                                        "i276"
                                                                        "i274"
                                                                        "i272"
                                                                        "i270"
                                                                        "i268"
                                                                        "i266"
                                                                        "i264"
                                                                        "i262"
                                                                        "i260"
                                                                        "i257"
                                                                        "i255"
                                                                        "i254"
                                                                        "i253"
                                                                        "i252"
                                                                        "i251"
                                                                        "i250"
                                                                        "i248"
                                                                        "i246"
                                                                        "i244"
                                                                        "i242"
                                                                        "i241"
                                                                        "i239"
                                                                        "i237"
                                                                        "i235"
                                                                        "i233"
                                                                        "i231"
                                                                        "i229"
                                                                        "i227"
                                                                        "i226"
                                                                        "i224"
                                                                        "i222"
                                                                        "i221"
                                                                        "i220"
                                                                        "i218"
                                                                        "i217"
                                                                        "i215"
                                                                        "i213"
                                                                        "i211"
                                                                        "i209"
                                                                        "i207"
                                                                        "i205"
                                                                        "i203"
                                                                        "i201"
                                                                        "i199"
                                                                        "i197"
                                                                        "i195"
                                                                        "i193"
                                                                        "i191"
                                                                        "i189"
                                                                        "i187"
                                                                        "i185"
                                                                        "i183"
                                                                        "i181"
                                                                        "i179"
                                                                        "i177"
                                                                        "i175"
                                                                        "i173"
                                                                        "i171"
                                                                        "i169"
                                                                        "i167"
                                                                        "i165"
                                                                        "i163"
                                                                        "i161"
                                                                        "i159"
                                                                        "i157"
                                                                        "i155"
                                                                        "i153"
                                                                        "i152"
                                                                        "i150"
                                                                        "i148"
                                                                        "i146"
                                                                        "i144"
                                                                        "i142"
                                                                        "i140"
                                                                        "i138"
                                                                        "i136"))
                                                                     #(ribcage
                                                                       (define-structure
                                                                         and-map*)
                                                                       ((top)
                                                                        (top))
                                                                       ("i39"
                                                                        "i37")))
                                                                    (hygiene
                                                                      guile))))
                                                          #{ropt\ 994}#)))
                                                #{tmp\ 1000}#)
                                         ((lambda (#{tmp\ 1009}#)
                                            (if (if #{tmp\ 1009}#
                                                  (apply (lambda (#{a\ 1013}#
                                                                  #{init\ 1014}#
                                                                  #{b\ 1015}#)
                                                           (#{id?\ 240}#
                                                             #{a\ 1013}#))
                                                         #{tmp\ 1009}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1019}#
                                                              #{init\ 1020}#
                                                              #{b\ 1021}#)
                                                       (#{opt\ 852}#
                                                         #{b\ 1021}#
                                                         #{req\ 993}#
                                                         (cons (list #{a\ 1019}#
                                                                     #{init\ 1020}#)
                                                               #{ropt\ 994}#)))
                                                     #{tmp\ 1009}#)
                                              ((lambda (#{tmp\ 1022}#)
                                                 (if (if #{tmp\ 1022}#
                                                       (apply (lambda (#{a\ 1025}#
                                                                       #{b\ 1026}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1025}#)
                                                                     #:key))
                                                              #{tmp\ 1022}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1029}#
                                                                   #{b\ 1030}#)
                                                            (#{key\ 854}#
                                                              #{b\ 1030}#
                                                              #{req\ 993}#
                                                              (reverse
                                                                #{ropt\ 994}#)
                                                              '()))
                                                          #{tmp\ 1022}#)
                                                   ((lambda (#{tmp\ 1031}#)
                                                      (if (if #{tmp\ 1031}#
                                                            (apply (lambda (#{a\ 1034}#
                                                                            #{b\ 1035}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1034}#)
                                                                          #:rest))
                                                                   #{tmp\ 1031}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1038}#
                                                                        #{b\ 1039}#)
                                                                 (#{rest\ 856}#
                                                                   #{b\ 1039}#
                                                                   #{req\ 993}#
                                                                   (reverse
                                                                     #{ropt\ 994}#)
                                                                   '()))
                                                               #{tmp\ 1031}#)
                                                        ((lambda (#{tmp\ 1040}#)
                                                           (if (if #{tmp\ 1040}#
                                                                 (apply (lambda (#{r\ 1042}#)
                                                                          (#{id?\ 240}#
                                                                            #{r\ 1042}#))
                                                                        #{tmp\ 1040}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1044}#)
                                                                      (#{rest\ 856}#
                                                                        #{r\ 1044}#
                                                                        #{req\ 993}#
                                                                        (reverse
                                                                          #{ropt\ 994}#)
                                                                        '()))
                                                                    #{tmp\ 1040}#)
                                                             ((lambda (#{else\ 1046}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid optional argument list"
                                                                  #{orig-args\ 847}#
                                                                  #{args\ 992}#))
                                                              #{tmp\ 998}#)))
                                                         (list #{tmp\ 998}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 998}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 998}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 998}#
                                            '((any any) . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 998}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 998}# (quote ()))))
                             #{args\ 992}#)))
                        (#{req\ 850}#
                          (lambda (#{args\ 1047}# #{rreq\ 1048}#)
                            ((lambda (#{tmp\ 1051}#)
                               ((lambda (#{tmp\ 1052}#)
                                  (if #{tmp\ 1052}#
                                    (apply (lambda ()
                                             (#{check\ 858}#
                                               (reverse #{rreq\ 1048}#)
                                               '()
                                               #f
                                               '()))
                                           #{tmp\ 1052}#)
                                    ((lambda (#{tmp\ 1053}#)
                                       (if (if #{tmp\ 1053}#
                                             (apply (lambda (#{a\ 1056}#
                                                             #{b\ 1057}#)
                                                      (#{id?\ 240}#
                                                        #{a\ 1056}#))
                                                    #{tmp\ 1053}#)
                                             #f)
                                         (apply (lambda (#{a\ 1060}#
                                                         #{b\ 1061}#)
                                                  (#{req\ 850}#
                                                    #{b\ 1061}#
                                                    (cons #{a\ 1060}#
                                                          #{rreq\ 1048}#)))
                                                #{tmp\ 1053}#)
                                         ((lambda (#{tmp\ 1062}#)
                                            (if (if #{tmp\ 1062}#
                                                  (apply (lambda (#{a\ 1065}#
                                                                  #{b\ 1066}#)
                                                           (eq? (syntax->datum
                                                                  #{a\ 1065}#)
                                                                #:optional))
                                                         #{tmp\ 1062}#)
                                                  #f)
                                              (apply (lambda (#{a\ 1069}#
                                                              #{b\ 1070}#)
                                                       (#{opt\ 852}#
                                                         #{b\ 1070}#
                                                         (reverse
                                                           #{rreq\ 1048}#)
                                                         '()))
                                                     #{tmp\ 1062}#)
                                              ((lambda (#{tmp\ 1071}#)
                                                 (if (if #{tmp\ 1071}#
                                                       (apply (lambda (#{a\ 1074}#
                                                                       #{b\ 1075}#)
                                                                (eq? (syntax->datum
                                                                       #{a\ 1074}#)
                                                                     #:key))
                                                              #{tmp\ 1071}#)
                                                       #f)
                                                   (apply (lambda (#{a\ 1078}#
                                                                   #{b\ 1079}#)
                                                            (#{key\ 854}#
                                                              #{b\ 1079}#
                                                              (reverse
                                                                #{rreq\ 1048}#)
                                                              '()
                                                              '()))
                                                          #{tmp\ 1071}#)
                                                   ((lambda (#{tmp\ 1080}#)
                                                      (if (if #{tmp\ 1080}#
                                                            (apply (lambda (#{a\ 1083}#
                                                                            #{b\ 1084}#)
                                                                     (eq? (syntax->datum
                                                                            #{a\ 1083}#)
                                                                          #:rest))
                                                                   #{tmp\ 1080}#)
                                                            #f)
                                                        (apply (lambda (#{a\ 1087}#
                                                                        #{b\ 1088}#)
                                                                 (#{rest\ 856}#
                                                                   #{b\ 1088}#
                                                                   (reverse
                                                                     #{rreq\ 1048}#)
                                                                   '()
                                                                   '()))
                                                               #{tmp\ 1080}#)
                                                        ((lambda (#{tmp\ 1089}#)
                                                           (if (if #{tmp\ 1089}#
                                                                 (apply (lambda (#{r\ 1091}#)
                                                                          (#{id?\ 240}#
                                                                            #{r\ 1091}#))
                                                                        #{tmp\ 1089}#)
                                                                 #f)
                                                             (apply (lambda (#{r\ 1093}#)
                                                                      (#{rest\ 856}#
                                                                        #{r\ 1093}#
                                                                        (reverse
                                                                          #{rreq\ 1048}#)
                                                                        '()
                                                                        '()))
                                                                    #{tmp\ 1089}#)
                                                             ((lambda (#{else\ 1095}#)
                                                                (syntax-violation
                                                                  'lambda*
                                                                  "invalid argument list"
                                                                  #{orig-args\ 847}#
                                                                  #{args\ 1047}#))
                                                              #{tmp\ 1051}#)))
                                                         (list #{tmp\ 1051}#))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1051}#
                                                      '(any any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1051}#
                                                 '(any . any)))))
                                          ($sc-dispatch
                                            #{tmp\ 1051}#
                                            '(any . any)))))
                                     ($sc-dispatch
                                       #{tmp\ 1051}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1051}# (quote ()))))
                             #{args\ 1047}#))))
                 (#{req\ 850}# #{orig-args\ 847}# (quote ())))))
           (#{chi-simple-lambda\ 345}#
             (lambda (#{e\ 1096}#
                      #{r\ 1097}#
                      #{w\ 1098}#
                      #{s\ 1099}#
                      #{mod\ 1100}#
                      #{req\ 1101}#
                      #{rest\ 1102}#
                      #{docstring\ 1103}#
                      #{body\ 1104}#)
               (let ((#{ids\ 1116}#
                       (if #{rest\ 1102}#
                         (append #{req\ 1101}# (list #{rest\ 1102}#))
                         #{req\ 1101}#)))
                 (let ((#{vars\ 1118}#
                         (map #{gen-var\ 353}# #{ids\ 1116}#)))
                   (let ((#{labels\ 1120}#
                           (#{gen-labels\ 258}# #{ids\ 1116}#)))
                     (#{build-simple-lambda\ 182}#
                       #{s\ 1099}#
                       (map syntax->datum #{req\ 1101}#)
                       (if #{rest\ 1102}#
                         (syntax->datum #{rest\ 1102}#)
                         #f)
                       #{vars\ 1118}#
                       #{docstring\ 1103}#
                       (#{chi-body\ 333}#
                         #{body\ 1104}#
                         (#{source-wrap\ 311}#
                           #{e\ 1096}#
                           #{w\ 1098}#
                           #{s\ 1099}#
                           #{mod\ 1100}#)
                         (#{extend-var-env\ 230}#
                           #{labels\ 1120}#
                           #{vars\ 1118}#
                           #{r\ 1097}#)
                         (#{make-binding-wrap\ 287}#
                           #{ids\ 1116}#
                           #{labels\ 1120}#
                           #{w\ 1098}#)
                         #{mod\ 1100}#)))))))
           (#{lambda-formals\ 343}#
             (lambda (#{orig-args\ 1123}#)
               (letrec ((#{check\ 1128}#
                          (lambda (#{req\ 1129}# #{rest\ 1130}#)
                            (if (#{distinct-bound-ids?\ 305}#
                                  (if #{rest\ 1130}#
                                    (cons #{rest\ 1130}# #{req\ 1129}#)
                                    #{req\ 1129}#))
                              (values #{req\ 1129}# #f #{rest\ 1130}# #f)
                              (syntax-violation
                                'lambda
                                "duplicate identifier in argument list"
                                #{orig-args\ 1123}#))))
                        (#{req\ 1126}#
                          (lambda (#{args\ 1136}# #{rreq\ 1137}#)
                            ((lambda (#{tmp\ 1140}#)
                               ((lambda (#{tmp\ 1141}#)
                                  (if #{tmp\ 1141}#
                                    (apply (lambda ()
                                             (#{check\ 1128}#
                                               (reverse #{rreq\ 1137}#)
                                               #f))
                                           #{tmp\ 1141}#)
                                    ((lambda (#{tmp\ 1142}#)
                                       (if (if #{tmp\ 1142}#
                                             (apply (lambda (#{a\ 1145}#
                                                             #{b\ 1146}#)
                                                      (#{id?\ 240}#
                                                        #{a\ 1145}#))
                                                    #{tmp\ 1142}#)
                                             #f)
                                         (apply (lambda (#{a\ 1149}#
                                                         #{b\ 1150}#)
                                                  (#{req\ 1126}#
                                                    #{b\ 1150}#
                                                    (cons #{a\ 1149}#
                                                          #{rreq\ 1137}#)))
                                                #{tmp\ 1142}#)
                                         ((lambda (#{tmp\ 1151}#)
                                            (if (if #{tmp\ 1151}#
                                                  (apply (lambda (#{r\ 1153}#)
                                                           (#{id?\ 240}#
                                                             #{r\ 1153}#))
                                                         #{tmp\ 1151}#)
                                                  #f)
                                              (apply (lambda (#{r\ 1155}#)
                                                       (#{check\ 1128}#
                                                         (reverse
                                                           #{rreq\ 1137}#)
                                                         #{r\ 1155}#))
                                                     #{tmp\ 1151}#)
                                              ((lambda (#{else\ 1157}#)
                                                 (syntax-violation
                                                   'lambda
                                                   "invalid argument list"
                                                   #{orig-args\ 1123}#
                                                   #{args\ 1136}#))
                                               #{tmp\ 1140}#)))
                                          (list #{tmp\ 1140}#))))
                                     ($sc-dispatch
                                       #{tmp\ 1140}#
                                       '(any . any)))))
                                ($sc-dispatch #{tmp\ 1140}# (quote ()))))
                             #{args\ 1136}#))))
                 (#{req\ 1126}# #{orig-args\ 1123}# (quote ())))))
           (#{ellipsis?\ 341}#
             (lambda (#{x\ 1158}#)
               (if (#{nonsymbol-id?\ 238}# #{x\ 1158}#)
                 (#{free-id=?\ 299}#
                   #{x\ 1158}#
                   '#(syntax-object
                      ...
                      ((top)
                       #(ribcage () () ())
                       #(ribcage () () ())
                       #(ribcage #(x) #((top)) #("i1159"))
                       #(ribcage
                         (lambda-var-list
                           gen-var
                           strip
                           chi-lambda-case
                           lambda*-formals
                           chi-simple-lambda
                           lambda-formals
                           ellipsis?
                           chi-void
                           eval-local-transformer
                           chi-local-syntax
                           chi-body
                           chi-macro
                           chi-application
                           chi-expr
                           chi
                           chi-top
                           syntax-type
                           chi-when-list
                           chi-install-global
                           chi-top-sequence
                           chi-sequence
                           source-wrap
                           wrap
                           bound-id-member?
                           distinct-bound-ids?
                           valid-bound-ids?
                           bound-id=?
                           free-id=?
                           id-var-name
                           same-marks?
                           join-marks
                           join-wraps
                           smart-append
                           make-binding-wrap
                           extend-ribcage!
                           make-empty-ribcage
                           new-mark
                           anti-mark
                           the-anti-mark
                           top-marked?
                           top-wrap
                           empty-wrap
                           set-ribcage-labels!
                           set-ribcage-marks!
                           set-ribcage-symnames!
                           ribcage-labels
                           ribcage-marks
                           ribcage-symnames
                           ribcage?
                           make-ribcage
                           gen-labels
                           gen-label
                           make-rename
                           rename-marks
                           rename-new
                           rename-old
                           subst-rename?
                           wrap-subst
                           wrap-marks
                           make-wrap
                           id-sym-name&marks
                           id-sym-name
                           id?
                           nonsymbol-id?
                           global-extend
                           lookup
                           macros-only-env
                           extend-var-env
                           extend-env
                           null-env
                           binding-value
                           binding-type
                           make-binding
                           arg-check
                           source-annotation
                           no-source
                           set-syntax-object-module!
                           set-syntax-object-wrap!
                           set-syntax-object-expression!
                           syntax-object-module
                           syntax-object-wrap
                           syntax-object-expression
                           syntax-object?
                           make-syntax-object
                           build-lexical-var
                           build-letrec
                           build-named-let
                           build-let
                           build-sequence
                           build-data
                           build-primref
                           build-lambda-case
                           build-case-lambda
                           build-simple-lambda
                           build-global-definition
                           maybe-name-value!
                           build-global-assignment
                           build-global-reference
                           analyze-variable
                           build-lexical-assignment
                           build-lexical-reference
                           build-dynlet
                           build-conditional
                           build-application
                           build-void
                           decorate-source
                           get-global-definition-hook
                           put-global-definition-hook
                           gensym-hook
                           local-eval-hook
                           top-level-eval-hook
                           fx<
                           fx=
                           fx-
                           fx+
                           *mode*
                           noexpand)
                         ((top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top)
                          (top))
                         ("i354"
                          "i352"
                          "i350"
                          "i348"
                          "i346"
                          "i344"
                          "i342"
                          "i340"
                          "i338"
                          "i336"
                          "i334"
                          "i332"
                          "i330"
                          "i328"
                          "i326"
                          "i324"
                          "i322"
                          "i320"
                          "i318"
                          "i316"
                          "i314"
                          "i312"
                          "i310"
                          "i308"
                          "i306"
                          "i304"
                          "i302"
                          "i300"
                          "i298"
                          "i296"
                          "i294"
                          "i292"
                          "i290"
                          "i288"
                          "i286"
                          "i284"
                          "i283"
                          "i282"
                          "i280"
                          "i279"
                          "i278"
                          "i277"
                          "i276"
                          "i274"
                          "i272"
                          "i270"
                          "i268"
                          "i266"
                          "i264"
                          "i262"
                          "i260"
                          "i257"
                          "i255"
                          "i254"
                          "i253"
                          "i252"
                          "i251"
                          "i250"
                          "i248"
                          "i246"
                          "i244"
                          "i242"
                          "i241"
                          "i239"
                          "i237"
                          "i235"
                          "i233"
                          "i231"
                          "i229"
                          "i227"
                          "i226"
                          "i224"
                          "i222"
                          "i221"
                          "i220"
                          "i218"
                          "i217"
                          "i215"
                          "i213"
                          "i211"
                          "i209"
                          "i207"
                          "i205"
                          "i203"
                          "i201"
                          "i199"
                          "i197"
                          "i195"
                          "i193"
                          "i191"
                          "i189"
                          "i187"
                          "i185"
                          "i183"
                          "i181"
                          "i179"
                          "i177"
                          "i175"
                          "i173"
                          "i171"
                          "i169"
                          "i167"
                          "i165"
                          "i163"
                          "i161"
                          "i159"
                          "i157"
                          "i155"
                          "i153"
                          "i152"
                          "i150"
                          "i148"
                          "i146"
                          "i144"
                          "i142"
                          "i140"
                          "i138"
                          "i136"))
                       #(ribcage
                         (define-structure and-map*)
                         ((top) (top))
                         ("i39" "i37")))
                      (hygiene guile)))
                 #f)))
           (#{chi-void\ 339}#
             (lambda () (#{build-void\ 160}# #f)))
           (#{eval-local-transformer\ 337}#
             (lambda (#{expanded\ 1163}# #{mod\ 1164}#)
               (let ((#{p\ 1168}#
                       (#{local-eval-hook\ 151}#
                         #{expanded\ 1163}#
                         #{mod\ 1164}#)))
                 (if (procedure? #{p\ 1168}#)
                   (cons #{p\ 1168}# (module-name (current-module)))
                   (syntax-violation
                     #f
                     "nonprocedure transformer"
                     #{p\ 1168}#)))))
           (#{chi-local-syntax\ 335}#
             (lambda (#{rec?\ 1169}#
                      #{e\ 1170}#
                      #{r\ 1171}#
                      #{w\ 1172}#
                      #{s\ 1173}#
                      #{mod\ 1174}#
                      #{k\ 1175}#)
               ((lambda (#{tmp\ 1183}#)
                  ((lambda (#{tmp\ 1184}#)
                     (if #{tmp\ 1184}#
                       (apply (lambda (#{_\ 1190}#
                                       #{id\ 1191}#
                                       #{val\ 1192}#
                                       #{e1\ 1193}#
                                       #{e2\ 1194}#)
                                (let ((#{ids\ 1196}# #{id\ 1191}#))
                                  (if (not (#{valid-bound-ids?\ 303}#
                                             #{ids\ 1196}#))
                                    (syntax-violation
                                      #f
                                      "duplicate bound keyword"
                                      #{e\ 1170}#)
                                    (let ((#{labels\ 1199}#
                                            (#{gen-labels\ 258}#
                                              #{ids\ 1196}#)))
                                      (let ((#{new-w\ 1201}#
                                              (#{make-binding-wrap\ 287}#
                                                #{ids\ 1196}#
                                                #{labels\ 1199}#
                                                #{w\ 1172}#)))
                                        (#{k\ 1175}#
                                          (cons #{e1\ 1193}# #{e2\ 1194}#)
                                          (#{extend-env\ 228}#
                                            #{labels\ 1199}#
                                            (let ((#{w\ 1205}#
                                                    (if #{rec?\ 1169}#
                                                      #{new-w\ 1201}#
                                                      #{w\ 1172}#))
                                                  (#{trans-r\ 1206}#
                                                    (#{macros-only-env\ 232}#
                                                      #{r\ 1171}#)))
                                              (map (lambda (#{x\ 1207}#)
                                                     (cons 'macro
                                                           (#{eval-local-transformer\ 337}#
                                                             (#{chi\ 325}#
                                                               #{x\ 1207}#
                                                               #{trans-r\ 1206}#
                                                               #{w\ 1205}#
                                                               #{mod\ 1174}#)
                                                             #{mod\ 1174}#)))
                                                   #{val\ 1192}#))
                                            #{r\ 1171}#)
                                          #{new-w\ 1201}#
                                          #{s\ 1173}#
                                          #{mod\ 1174}#))))))
                              #{tmp\ 1184}#)
                       ((lambda (#{_\ 1212}#)
                          (syntax-violation
                            #f
                            "bad local syntax definition"
                            (#{source-wrap\ 311}#
                              #{e\ 1170}#
                              #{w\ 1172}#
                              #{s\ 1173}#
                              #{mod\ 1174}#)))
                        #{tmp\ 1183}#)))
                   ($sc-dispatch
                     #{tmp\ 1183}#
                     '(any #(each (any any)) any . each-any))))
                #{e\ 1170}#)))
           (#{chi-body\ 333}#
             (lambda (#{body\ 1213}#
                      #{outer-form\ 1214}#
                      #{r\ 1215}#
                      #{w\ 1216}#
                      #{mod\ 1217}#)
               (let ((#{r\ 1225}#
                       (cons '("placeholder" placeholder)
                             #{r\ 1215}#)))
                 (let ((#{ribcage\ 1227}#
                         (#{make-ribcage\ 261}#
                           '()
                           '()
                           '())))
                   (let ((#{w\ 1230}#
                           (#{make-wrap\ 245}#
                             (#{wrap-marks\ 247}# #{w\ 1216}#)
                             (cons #{ribcage\ 1227}#
                                   (#{wrap-subst\ 249}# #{w\ 1216}#)))))
                     (letrec ((#{parse\ 1239}#
                                (lambda (#{body\ 1240}#
                                         #{ids\ 1241}#
                                         #{labels\ 1242}#
                                         #{var-ids\ 1243}#
                                         #{vars\ 1244}#
                                         #{vals\ 1245}#
                                         #{bindings\ 1246}#)
                                  (if (null? #{body\ 1240}#)
                                    (syntax-violation
                                      #f
                                      "no expressions in body"
                                      #{outer-form\ 1214}#)
                                    (let ((#{e\ 1251}# (cdar #{body\ 1240}#))
                                          (#{er\ 1252}# (caar #{body\ 1240}#)))
                                      (call-with-values
                                        (lambda ()
                                          (#{syntax-type\ 321}#
                                            #{e\ 1251}#
                                            #{er\ 1252}#
                                            '(())
                                            (#{source-annotation\ 219}#
                                              #{er\ 1252}#)
                                            #{ribcage\ 1227}#
                                            #{mod\ 1217}#
                                            #f))
                                        (lambda (#{type\ 1254}#
                                                 #{value\ 1255}#
                                                 #{e\ 1256}#
                                                 #{w\ 1257}#
                                                 #{s\ 1258}#
                                                 #{mod\ 1259}#)
                                          (if (memv #{type\ 1254}#
                                                    '(define-form))
                                            (let ((#{id\ 1269}#
                                                    (#{wrap\ 309}#
                                                      #{value\ 1255}#
                                                      #{w\ 1257}#
                                                      #{mod\ 1259}#))
                                                  (#{label\ 1270}#
                                                    (#{gen-label\ 256}#)))
                                              (let ((#{var\ 1272}#
                                                      (#{gen-var\ 353}#
                                                        #{id\ 1269}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 285}#
                                                    #{ribcage\ 1227}#
                                                    #{id\ 1269}#
                                                    #{label\ 1270}#)
                                                  (#{parse\ 1239}#
                                                    (cdr #{body\ 1240}#)
                                                    (cons #{id\ 1269}#
                                                          #{ids\ 1241}#)
                                                    (cons #{label\ 1270}#
                                                          #{labels\ 1242}#)
                                                    (cons #{id\ 1269}#
                                                          #{var-ids\ 1243}#)
                                                    (cons #{var\ 1272}#
                                                          #{vars\ 1244}#)
                                                    (cons (cons #{er\ 1252}#
                                                                (#{wrap\ 309}#
                                                                  #{e\ 1256}#
                                                                  #{w\ 1257}#
                                                                  #{mod\ 1259}#))
                                                          #{vals\ 1245}#)
                                                    (cons (cons 'lexical
                                                                #{var\ 1272}#)
                                                          #{bindings\ 1246}#)))))
                                            (if (memv #{type\ 1254}#
                                                      '(define-syntax-form))
                                              (let ((#{id\ 1277}#
                                                      (#{wrap\ 309}#
                                                        #{value\ 1255}#
                                                        #{w\ 1257}#
                                                        #{mod\ 1259}#))
                                                    (#{label\ 1278}#
                                                      (#{gen-label\ 256}#)))
                                                (begin
                                                  (#{extend-ribcage!\ 285}#
                                                    #{ribcage\ 1227}#
                                                    #{id\ 1277}#
                                                    #{label\ 1278}#)
                                                  (#{parse\ 1239}#
                                                    (cdr #{body\ 1240}#)
                                                    (cons #{id\ 1277}#
                                                          #{ids\ 1241}#)
                                                    (cons #{label\ 1278}#
                                                          #{labels\ 1242}#)
                                                    #{var-ids\ 1243}#
                                                    #{vars\ 1244}#
                                                    #{vals\ 1245}#
                                                    (cons (cons 'macro
                                                                (cons #{er\ 1252}#
                                                                      (#{wrap\ 309}#
                                                                        #{e\ 1256}#
                                                                        #{w\ 1257}#
                                                                        #{mod\ 1259}#)))
                                                          #{bindings\ 1246}#))))
                                              (if (memv #{type\ 1254}#
                                                        '(begin-form))
                                                ((lambda (#{tmp\ 1281}#)
                                                   ((lambda (#{tmp\ 1282}#)
                                                      (if #{tmp\ 1282}#
                                                        (apply (lambda (#{_\ 1285}#
                                                                        #{e1\ 1286}#)
                                                                 (#{parse\ 1239}#
                                                                   (letrec ((#{f\ 1289}#
                                                                              (lambda (#{forms\ 1290}#)
                                                                                (if (null? #{forms\ 1290}#)
                                                                                  (cdr #{body\ 1240}#)
                                                                                  (cons (cons #{er\ 1252}#
                                                                                              (#{wrap\ 309}#
                                                                                                (car #{forms\ 1290}#)
                                                                                                #{w\ 1257}#
                                                                                                #{mod\ 1259}#))
                                                                                        (#{f\ 1289}#
                                                                                          (cdr #{forms\ 1290}#)))))))
                                                                     (#{f\ 1289}#
                                                                       #{e1\ 1286}#))
                                                                   #{ids\ 1241}#
                                                                   #{labels\ 1242}#
                                                                   #{var-ids\ 1243}#
                                                                   #{vars\ 1244}#
                                                                   #{vals\ 1245}#
                                                                   #{bindings\ 1246}#))
                                                               #{tmp\ 1282}#)
                                                        (syntax-violation
                                                          #f
                                                          "source expression failed to match any pattern"
                                                          #{tmp\ 1281}#)))
                                                    ($sc-dispatch
                                                      #{tmp\ 1281}#
                                                      '(any . each-any))))
                                                 #{e\ 1256}#)
                                                (if (memv #{type\ 1254}#
                                                          '(local-syntax-form))
                                                  (#{chi-local-syntax\ 335}#
                                                    #{value\ 1255}#
                                                    #{e\ 1256}#
                                                    #{er\ 1252}#
                                                    #{w\ 1257}#
                                                    #{s\ 1258}#
                                                    #{mod\ 1259}#
                                                    (lambda (#{forms\ 1293}#
                                                             #{er\ 1294}#
                                                             #{w\ 1295}#
                                                             #{s\ 1296}#
                                                             #{mod\ 1297}#)
                                                      (#{parse\ 1239}#
                                                        (letrec ((#{f\ 1305}#
                                                                   (lambda (#{forms\ 1306}#)
                                                                     (if (null? #{forms\ 1306}#)
                                                                       (cdr #{body\ 1240}#)
                                                                       (cons (cons #{er\ 1294}#
                                                                                   (#{wrap\ 309}#
                                                                                     (car #{forms\ 1306}#)
                                                                                     #{w\ 1295}#
                                                                                     #{mod\ 1297}#))
                                                                             (#{f\ 1305}#
                                                                               (cdr #{forms\ 1306}#)))))))
                                                          (#{f\ 1305}#
                                                            #{forms\ 1293}#))
                                                        #{ids\ 1241}#
                                                        #{labels\ 1242}#
                                                        #{var-ids\ 1243}#
                                                        #{vars\ 1244}#
                                                        #{vals\ 1245}#
                                                        #{bindings\ 1246}#)))
                                                  (if (null? #{ids\ 1241}#)
                                                    (#{build-sequence\ 192}#
                                                      #f
                                                      (map (lambda (#{x\ 1309}#)
                                                             (#{chi\ 325}#
                                                               (cdr #{x\ 1309}#)
                                                               (car #{x\ 1309}#)
                                                               '(())
                                                               #{mod\ 1259}#))
                                                           (cons (cons #{er\ 1252}#
                                                                       (#{source-wrap\ 311}#
                                                                         #{e\ 1256}#
                                                                         #{w\ 1257}#
                                                                         #{s\ 1258}#
                                                                         #{mod\ 1259}#))
                                                                 (cdr #{body\ 1240}#))))
                                                    (begin
                                                      (if (not (#{valid-bound-ids?\ 303}#
                                                                 #{ids\ 1241}#))
                                                        (syntax-violation
                                                          #f
                                                          "invalid or duplicate identifier in definition"
                                                          #{outer-form\ 1214}#))
                                                      (letrec ((#{loop\ 1316}#
                                                                 (lambda (#{bs\ 1317}#
                                                                          #{er-cache\ 1318}#
                                                                          #{r-cache\ 1319}#)
                                                                   (if (not (null? #{bs\ 1317}#))
                                                                     (let ((#{b\ 1322}#
                                                                             (car #{bs\ 1317}#)))
                                                                       (if (eq? (car #{b\ 1322}#)
                                                                                'macro)
                                                                         (let ((#{er\ 1325}#
                                                                                 (cadr #{b\ 1322}#)))
                                                                           (let ((#{r-cache\ 1327}#
                                                                                   (if (eq? #{er\ 1325}#
                                                                                            #{er-cache\ 1318}#)
                                                                                     #{r-cache\ 1319}#
                                                                                     (#{macros-only-env\ 232}#
                                                                                       #{er\ 1325}#))))
                                                                             (begin
                                                                               (set-cdr!
                                                                                 #{b\ 1322}#
                                                                                 (#{eval-local-transformer\ 337}#
                                                                                   (#{chi\ 325}#
                                                                                     (cddr #{b\ 1322}#)
                                                                                     #{r-cache\ 1327}#
                                                                                     '(())
                                                                                     #{mod\ 1259}#)
                                                                                   #{mod\ 1259}#))
                                                                               (#{loop\ 1316}#
                                                                                 (cdr #{bs\ 1317}#)
                                                                                 #{er\ 1325}#
                                                                                 #{r-cache\ 1327}#))))
                                                                         (#{loop\ 1316}#
                                                                           (cdr #{bs\ 1317}#)
                                                                           #{er-cache\ 1318}#
                                                                           #{r-cache\ 1319}#)))))))
                                                        (#{loop\ 1316}#
                                                          #{bindings\ 1246}#
                                                          #f
                                                          #f))
                                                      (set-cdr!
                                                        #{r\ 1225}#
                                                        (#{extend-env\ 228}#
                                                          #{labels\ 1242}#
                                                          #{bindings\ 1246}#
                                                          (cdr #{r\ 1225}#)))
                                                      (#{build-letrec\ 198}#
                                                        #f
                                                        (map syntax->datum
                                                             #{var-ids\ 1243}#)
                                                        #{vars\ 1244}#
                                                        (map (lambda (#{x\ 1330}#)
                                                               (#{chi\ 325}#
                                                                 (cdr #{x\ 1330}#)
                                                                 (car #{x\ 1330}#)
                                                                 '(())
                                                                 #{mod\ 1259}#))
                                                             #{vals\ 1245}#)
                                                        (#{build-sequence\ 192}#
                                                          #f
                                                          (map (lambda (#{x\ 1334}#)
                                                                 (#{chi\ 325}#
                                                                   (cdr #{x\ 1334}#)
                                                                   (car #{x\ 1334}#)
                                                                   '(())
                                                                   #{mod\ 1259}#))
                                                               (cons (cons #{er\ 1252}#
                                                                           (#{source-wrap\ 311}#
                                                                             #{e\ 1256}#
                                                                             #{w\ 1257}#
                                                                             #{s\ 1258}#
                                                                             #{mod\ 1259}#))
                                                                     (cdr #{body\ 1240}#))))))))))))))))))
                       (#{parse\ 1239}#
                         (map (lambda (#{x\ 1247}#)
                                (cons #{r\ 1225}#
                                      (#{wrap\ 309}#
                                        #{x\ 1247}#
                                        #{w\ 1230}#
                                        #{mod\ 1217}#)))
                              #{body\ 1213}#)
                         '()
                         '()
                         '()
                         '()
                         '()
                         '())))))))
           (#{chi-macro\ 331}#
             (lambda (#{p\ 1337}#
                      #{e\ 1338}#
                      #{r\ 1339}#
                      #{w\ 1340}#
                      #{rib\ 1341}#
                      #{mod\ 1342}#)
               (letrec ((#{rebuild-macro-output\ 1350}#
                          (lambda (#{x\ 1351}# #{m\ 1352}#)
                            (if (pair? #{x\ 1351}#)
                              (cons (#{rebuild-macro-output\ 1350}#
                                      (car #{x\ 1351}#)
                                      #{m\ 1352}#)
                                    (#{rebuild-macro-output\ 1350}#
                                      (cdr #{x\ 1351}#)
                                      #{m\ 1352}#))
                              (if (#{syntax-object?\ 204}# #{x\ 1351}#)
                                (let ((#{w\ 1360}#
                                        (#{syntax-object-wrap\ 208}#
                                          #{x\ 1351}#)))
                                  (let ((#{ms\ 1363}#
                                          (#{wrap-marks\ 247}# #{w\ 1360}#))
                                        (#{s\ 1364}#
                                          (#{wrap-subst\ 249}# #{w\ 1360}#)))
                                    (if (if (pair? #{ms\ 1363}#)
                                          (eq? (car #{ms\ 1363}#) #f)
                                          #f)
                                      (#{make-syntax-object\ 202}#
                                        (#{syntax-object-expression\ 206}#
                                          #{x\ 1351}#)
                                        (#{make-wrap\ 245}#
                                          (cdr #{ms\ 1363}#)
                                          (if #{rib\ 1341}#
                                            (cons #{rib\ 1341}#
                                                  (cdr #{s\ 1364}#))
                                            (cdr #{s\ 1364}#)))
                                        (#{syntax-object-module\ 210}#
                                          #{x\ 1351}#))
                                      (#{make-syntax-object\ 202}#
                                        (#{syntax-object-expression\ 206}#
                                          #{x\ 1351}#)
                                        (#{make-wrap\ 245}#
                                          (cons #{m\ 1352}# #{ms\ 1363}#)
                                          (if #{rib\ 1341}#
                                            (cons #{rib\ 1341}#
                                                  (cons 'shift
                                                        #{s\ 1364}#))
                                            (cons (quote shift) #{s\ 1364}#)))
                                        (cons 'hygiene
                                              (cdr #{p\ 1337}#))))))
                                (if (vector? #{x\ 1351}#)
                                  (let ((#{n\ 1372}#
                                          (vector-length #{x\ 1351}#)))
                                    (let ((#{v\ 1374}#
                                            (make-vector #{n\ 1372}#)))
                                      (letrec ((#{loop\ 1377}#
                                                 (lambda (#{i\ 1378}#)
                                                   (if (#{fx=\ 145}#
                                                         #{i\ 1378}#
                                                         #{n\ 1372}#)
                                                     (begin
                                                       (if #f #f)
                                                       #{v\ 1374}#)
                                                     (begin
                                                       (vector-set!
                                                         #{v\ 1374}#
                                                         #{i\ 1378}#
                                                         (#{rebuild-macro-output\ 1350}#
                                                           (vector-ref
                                                             #{x\ 1351}#
                                                             #{i\ 1378}#)
                                                           #{m\ 1352}#))
                                                       (#{loop\ 1377}#
                                                         (#{fx+\ 141}#
                                                           #{i\ 1378}#
                                                           1)))))))
                                        (#{loop\ 1377}# 0))))
                                  (if (symbol? #{x\ 1351}#)
                                    (syntax-violation
                                      #f
                                      "encountered raw symbol in macro output"
                                      (#{source-wrap\ 311}#
                                        #{e\ 1338}#
                                        #{w\ 1340}#
                                        (#{wrap-subst\ 249}# #{w\ 1340}#)
                                        #{mod\ 1342}#)
                                      #{x\ 1351}#)
                                    #{x\ 1351}#)))))))
                 (#{rebuild-macro-output\ 1350}#
                   ((car #{p\ 1337}#)
                    (#{wrap\ 309}#
                      #{e\ 1338}#
                      (#{anti-mark\ 281}# #{w\ 1340}#)
                      #{mod\ 1342}#))
                   (gensym "m")))))
           (#{chi-application\ 329}#
             (lambda (#{x\ 1385}#
                      #{e\ 1386}#
                      #{r\ 1387}#
                      #{w\ 1388}#
                      #{s\ 1389}#
                      #{mod\ 1390}#)
               ((lambda (#{tmp\ 1397}#)
                  ((lambda (#{tmp\ 1398}#)
                     (if #{tmp\ 1398}#
                       (apply (lambda (#{e0\ 1401}# #{e1\ 1402}#)
                                (#{build-application\ 162}#
                                  #{s\ 1389}#
                                  #{x\ 1385}#
                                  (map (lambda (#{e\ 1403}#)
                                         (#{chi\ 325}#
                                           #{e\ 1403}#
                                           #{r\ 1387}#
                                           #{w\ 1388}#
                                           #{mod\ 1390}#))
                                       #{e1\ 1402}#)))
                              #{tmp\ 1398}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 1397}#)))
                   ($sc-dispatch
                     #{tmp\ 1397}#
                     '(any . each-any))))
                #{e\ 1386}#)))
           (#{chi-expr\ 327}#
             (lambda (#{type\ 1406}#
                      #{value\ 1407}#
                      #{e\ 1408}#
                      #{r\ 1409}#
                      #{w\ 1410}#
                      #{s\ 1411}#
                      #{mod\ 1412}#)
               (if (memv #{type\ 1406}# (quote (lexical)))
                 (#{build-lexical-reference\ 168}#
                   'value
                   #{s\ 1411}#
                   #{e\ 1408}#
                   #{value\ 1407}#)
                 (if (memv #{type\ 1406}# (quote (core core-form)))
                   (#{value\ 1407}#
                     #{e\ 1408}#
                     #{r\ 1409}#
                     #{w\ 1410}#
                     #{s\ 1411}#
                     #{mod\ 1412}#)
                   (if (memv #{type\ 1406}# (quote (module-ref)))
                     (call-with-values
                       (lambda () (#{value\ 1407}# #{e\ 1408}#))
                       (lambda (#{id\ 1423}# #{mod\ 1424}#)
                         (#{build-global-reference\ 174}#
                           #{s\ 1411}#
                           #{id\ 1423}#
                           #{mod\ 1424}#)))
                     (if (memv #{type\ 1406}# (quote (lexical-call)))
                       (#{chi-application\ 329}#
                         (#{build-lexical-reference\ 168}#
                           'fun
                           (#{source-annotation\ 219}# (car #{e\ 1408}#))
                           (car #{e\ 1408}#)
                           #{value\ 1407}#)
                         #{e\ 1408}#
                         #{r\ 1409}#
                         #{w\ 1410}#
                         #{s\ 1411}#
                         #{mod\ 1412}#)
                       (if (memv #{type\ 1406}# (quote (global-call)))
                         (#{chi-application\ 329}#
                           (#{build-global-reference\ 174}#
                             (#{source-annotation\ 219}# (car #{e\ 1408}#))
                             (if (#{syntax-object?\ 204}# #{value\ 1407}#)
                               (#{syntax-object-expression\ 206}#
                                 #{value\ 1407}#)
                               #{value\ 1407}#)
                             (if (#{syntax-object?\ 204}# #{value\ 1407}#)
                               (#{syntax-object-module\ 210}# #{value\ 1407}#)
                               #{mod\ 1412}#))
                           #{e\ 1408}#
                           #{r\ 1409}#
                           #{w\ 1410}#
                           #{s\ 1411}#
                           #{mod\ 1412}#)
                         (if (memv #{type\ 1406}# (quote (constant)))
                           (#{build-data\ 190}#
                             #{s\ 1411}#
                             (#{strip\ 351}#
                               (#{source-wrap\ 311}#
                                 #{e\ 1408}#
                                 #{w\ 1410}#
                                 #{s\ 1411}#
                                 #{mod\ 1412}#)
                               '(())))
                           (if (memv #{type\ 1406}# (quote (global)))
                             (#{build-global-reference\ 174}#
                               #{s\ 1411}#
                               #{value\ 1407}#
                               #{mod\ 1412}#)
                             (if (memv #{type\ 1406}# (quote (call)))
                               (#{chi-application\ 329}#
                                 (#{chi\ 325}#
                                   (car #{e\ 1408}#)
                                   #{r\ 1409}#
                                   #{w\ 1410}#
                                   #{mod\ 1412}#)
                                 #{e\ 1408}#
                                 #{r\ 1409}#
                                 #{w\ 1410}#
                                 #{s\ 1411}#
                                 #{mod\ 1412}#)
                               (if (memv #{type\ 1406}# (quote (begin-form)))
                                 ((lambda (#{tmp\ 1434}#)
                                    ((lambda (#{tmp\ 1435}#)
                                       (if #{tmp\ 1435}#
                                         (apply (lambda (#{_\ 1439}#
                                                         #{e1\ 1440}#
                                                         #{e2\ 1441}#)
                                                  (#{chi-sequence\ 313}#
                                                    (cons #{e1\ 1440}#
                                                          #{e2\ 1441}#)
                                                    #{r\ 1409}#
                                                    #{w\ 1410}#
                                                    #{s\ 1411}#
                                                    #{mod\ 1412}#))
                                                #{tmp\ 1435}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 1434}#)))
                                     ($sc-dispatch
                                       #{tmp\ 1434}#
                                       '(any any . each-any))))
                                  #{e\ 1408}#)
                                 (if (memv #{type\ 1406}#
                                           '(local-syntax-form))
                                   (#{chi-local-syntax\ 335}#
                                     #{value\ 1407}#
                                     #{e\ 1408}#
                                     #{r\ 1409}#
                                     #{w\ 1410}#
                                     #{s\ 1411}#
                                     #{mod\ 1412}#
                                     #{chi-sequence\ 313}#)
                                   (if (memv #{type\ 1406}#
                                             '(eval-when-form))
                                     ((lambda (#{tmp\ 1445}#)
                                        ((lambda (#{tmp\ 1446}#)
                                           (if #{tmp\ 1446}#
                                             (apply (lambda (#{_\ 1451}#
                                                             #{x\ 1452}#
                                                             #{e1\ 1453}#
                                                             #{e2\ 1454}#)
                                                      (let ((#{when-list\ 1456}#
                                                              (#{chi-when-list\ 319}#
                                                                #{e\ 1408}#
                                                                #{x\ 1452}#
                                                                #{w\ 1410}#)))
                                                        (if (memq 'eval
                                                                  #{when-list\ 1456}#)
                                                          (#{chi-sequence\ 313}#
                                                            (cons #{e1\ 1453}#
                                                                  #{e2\ 1454}#)
                                                            #{r\ 1409}#
                                                            #{w\ 1410}#
                                                            #{s\ 1411}#
                                                            #{mod\ 1412}#)
                                                          (#{chi-void\ 339}#))))
                                                    #{tmp\ 1446}#)
                                             (syntax-violation
                                               #f
                                               "source expression failed to match any pattern"
                                               #{tmp\ 1445}#)))
                                         ($sc-dispatch
                                           #{tmp\ 1445}#
                                           '(any each-any any . each-any))))
                                      #{e\ 1408}#)
                                     (if (memv #{type\ 1406}#
                                               '(define-form
                                                  define-syntax-form))
                                       (syntax-violation
                                         #f
                                         "definition in expression context"
                                         #{e\ 1408}#
                                         (#{wrap\ 309}#
                                           #{value\ 1407}#
                                           #{w\ 1410}#
                                           #{mod\ 1412}#))
                                       (if (memv #{type\ 1406}#
                                                 '(syntax))
                                         (syntax-violation
                                           #f
                                           "reference to pattern variable outside syntax form"
                                           (#{source-wrap\ 311}#
                                             #{e\ 1408}#
                                             #{w\ 1410}#
                                             #{s\ 1411}#
                                             #{mod\ 1412}#))
                                         (if (memv #{type\ 1406}#
                                                   '(displaced-lexical))
                                           (syntax-violation
                                             #f
                                             "reference to identifier outside its scope"
                                             (#{source-wrap\ 311}#
                                               #{e\ 1408}#
                                               #{w\ 1410}#
                                               #{s\ 1411}#
                                               #{mod\ 1412}#))
                                           (syntax-violation
                                             #f
                                             "unexpected syntax"
                                             (#{source-wrap\ 311}#
                                               #{e\ 1408}#
                                               #{w\ 1410}#
                                               #{s\ 1411}#
                                               #{mod\ 1412}#))))))))))))))))))
           (#{chi\ 325}#
             (lambda (#{e\ 1463}#
                      #{r\ 1464}#
                      #{w\ 1465}#
                      #{mod\ 1466}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 321}#
                     #{e\ 1463}#
                     #{r\ 1464}#
                     #{w\ 1465}#
                     (#{source-annotation\ 219}# #{e\ 1463}#)
                     #f
                     #{mod\ 1466}#
                     #f))
                 (lambda (#{type\ 1471}#
                          #{value\ 1472}#
                          #{e\ 1473}#
                          #{w\ 1474}#
                          #{s\ 1475}#
                          #{mod\ 1476}#)
                   (#{chi-expr\ 327}#
                     #{type\ 1471}#
                     #{value\ 1472}#
                     #{e\ 1473}#
                     #{r\ 1464}#
                     #{w\ 1474}#
                     #{s\ 1475}#
                     #{mod\ 1476}#)))))
           (#{chi-top\ 323}#
             (lambda (#{e\ 1483}#
                      #{r\ 1484}#
                      #{w\ 1485}#
                      #{m\ 1486}#
                      #{esew\ 1487}#
                      #{mod\ 1488}#)
               (call-with-values
                 (lambda ()
                   (#{syntax-type\ 321}#
                     #{e\ 1483}#
                     #{r\ 1484}#
                     #{w\ 1485}#
                     (#{source-annotation\ 219}# #{e\ 1483}#)
                     #f
                     #{mod\ 1488}#
                     #f))
                 (lambda (#{type\ 1509}#
                          #{value\ 1510}#
                          #{e\ 1511}#
                          #{w\ 1512}#
                          #{s\ 1513}#
                          #{mod\ 1514}#)
                   (if (memv #{type\ 1509}# (quote (begin-form)))
                     ((lambda (#{tmp\ 1522}#)
                        ((lambda (#{tmp\ 1523}#)
                           (if #{tmp\ 1523}#
                             (apply (lambda (#{_\ 1525}#) (#{chi-void\ 339}#))
                                    #{tmp\ 1523}#)
                             ((lambda (#{tmp\ 1526}#)
                                (if #{tmp\ 1526}#
                                  (apply (lambda (#{_\ 1530}#
                                                  #{e1\ 1531}#
                                                  #{e2\ 1532}#)
                                           (#{chi-top-sequence\ 315}#
                                             (cons #{e1\ 1531}# #{e2\ 1532}#)
                                             #{r\ 1484}#
                                             #{w\ 1512}#
                                             #{s\ 1513}#
                                             #{m\ 1486}#
                                             #{esew\ 1487}#
                                             #{mod\ 1514}#))
                                         #{tmp\ 1526}#)
                                  (syntax-violation
                                    #f
                                    "source expression failed to match any pattern"
                                    #{tmp\ 1522}#)))
                              ($sc-dispatch
                                #{tmp\ 1522}#
                                '(any any . each-any)))))
                         ($sc-dispatch #{tmp\ 1522}# (quote (any)))))
                      #{e\ 1511}#)
                     (if (memv #{type\ 1509}# (quote (local-syntax-form)))
                       (#{chi-local-syntax\ 335}#
                         #{value\ 1510}#
                         #{e\ 1511}#
                         #{r\ 1484}#
                         #{w\ 1512}#
                         #{s\ 1513}#
                         #{mod\ 1514}#
                         (lambda (#{body\ 1535}#
                                  #{r\ 1536}#
                                  #{w\ 1537}#
                                  #{s\ 1538}#
                                  #{mod\ 1539}#)
                           (#{chi-top-sequence\ 315}#
                             #{body\ 1535}#
                             #{r\ 1536}#
                             #{w\ 1537}#
                             #{s\ 1538}#
                             #{m\ 1486}#
                             #{esew\ 1487}#
                             #{mod\ 1539}#)))
                       (if (memv #{type\ 1509}# (quote (eval-when-form)))
                         ((lambda (#{tmp\ 1546}#)
                            ((lambda (#{tmp\ 1547}#)
                               (if #{tmp\ 1547}#
                                 (apply (lambda (#{_\ 1552}#
                                                 #{x\ 1553}#
                                                 #{e1\ 1554}#
                                                 #{e2\ 1555}#)
                                          (let ((#{when-list\ 1558}#
                                                  (#{chi-when-list\ 319}#
                                                    #{e\ 1511}#
                                                    #{x\ 1553}#
                                                    #{w\ 1512}#))
                                                (#{body\ 1559}#
                                                  (cons #{e1\ 1554}#
                                                        #{e2\ 1555}#)))
                                            (if (eq? #{m\ 1486}# (quote e))
                                              (if (memq 'eval
                                                        #{when-list\ 1558}#)
                                                (#{chi-top-sequence\ 315}#
                                                  #{body\ 1559}#
                                                  #{r\ 1484}#
                                                  #{w\ 1512}#
                                                  #{s\ 1513}#
                                                  'e
                                                  '(eval)
                                                  #{mod\ 1514}#)
                                                (#{chi-void\ 339}#))
                                              (if (memq 'load
                                                        #{when-list\ 1558}#)
                                                (if (let ((#{t\ 1568}#
                                                            (memq 'compile
                                                                  #{when-list\ 1558}#)))
                                                      (if #{t\ 1568}#
                                                        #{t\ 1568}#
                                                        (if (eq? #{m\ 1486}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 1558}#)
                                                          #f)))
                                                  (#{chi-top-sequence\ 315}#
                                                    #{body\ 1559}#
                                                    #{r\ 1484}#
                                                    #{w\ 1512}#
                                                    #{s\ 1513}#
                                                    'c&e
                                                    '(compile load)
                                                    #{mod\ 1514}#)
                                                  (if (memq #{m\ 1486}#
                                                            '(c c&e))
                                                    (#{chi-top-sequence\ 315}#
                                                      #{body\ 1559}#
                                                      #{r\ 1484}#
                                                      #{w\ 1512}#
                                                      #{s\ 1513}#
                                                      'c
                                                      '(load)
                                                      #{mod\ 1514}#)
                                                    (#{chi-void\ 339}#)))
                                                (if (let ((#{t\ 1576}#
                                                            (memq 'compile
                                                                  #{when-list\ 1558}#)))
                                                      (if #{t\ 1576}#
                                                        #{t\ 1576}#
                                                        (if (eq? #{m\ 1486}#
                                                                 'c&e)
                                                          (memq 'eval
                                                                #{when-list\ 1558}#)
                                                          #f)))
                                                  (begin
                                                    (#{top-level-eval-hook\ 149}#
                                                      (#{chi-top-sequence\ 315}#
                                                        #{body\ 1559}#
                                                        #{r\ 1484}#
                                                        #{w\ 1512}#
                                                        #{s\ 1513}#
                                                        'e
                                                        '(eval)
                                                        #{mod\ 1514}#)
                                                      #{mod\ 1514}#)
                                                    (#{chi-void\ 339}#))
                                                  (#{chi-void\ 339}#))))))
                                        #{tmp\ 1547}#)
                                 (syntax-violation
                                   #f
                                   "source expression failed to match any pattern"
                                   #{tmp\ 1546}#)))
                             ($sc-dispatch
                               #{tmp\ 1546}#
                               '(any each-any any . each-any))))
                          #{e\ 1511}#)
                         (if (memv #{type\ 1509}#
                                   '(define-syntax-form))
                           (let ((#{n\ 1584}#
                                   (#{id-var-name\ 297}#
                                     #{value\ 1510}#
                                     #{w\ 1512}#))
                                 (#{r\ 1585}#
                                   (#{macros-only-env\ 232}# #{r\ 1484}#)))
                             (if (memv #{m\ 1486}# (quote (c)))
                               (if (memq (quote compile) #{esew\ 1487}#)
                                 (let ((#{e\ 1588}#
                                         (#{chi-install-global\ 317}#
                                           #{n\ 1584}#
                                           (#{chi\ 325}#
                                             #{e\ 1511}#
                                             #{r\ 1585}#
                                             #{w\ 1512}#
                                             #{mod\ 1514}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 149}#
                                       #{e\ 1588}#
                                       #{mod\ 1514}#)
                                     (if (memq (quote load) #{esew\ 1487}#)
                                       #{e\ 1588}#
                                       (#{chi-void\ 339}#))))
                                 (if (memq (quote load) #{esew\ 1487}#)
                                   (#{chi-install-global\ 317}#
                                     #{n\ 1584}#
                                     (#{chi\ 325}#
                                       #{e\ 1511}#
                                       #{r\ 1585}#
                                       #{w\ 1512}#
                                       #{mod\ 1514}#))
                                   (#{chi-void\ 339}#)))
                               (if (memv #{m\ 1486}# (quote (c&e)))
                                 (let ((#{e\ 1591}#
                                         (#{chi-install-global\ 317}#
                                           #{n\ 1584}#
                                           (#{chi\ 325}#
                                             #{e\ 1511}#
                                             #{r\ 1585}#
                                             #{w\ 1512}#
                                             #{mod\ 1514}#))))
                                   (begin
                                     (#{top-level-eval-hook\ 149}#
                                       #{e\ 1591}#
                                       #{mod\ 1514}#)
                                     #{e\ 1591}#))
                                 (begin
                                   (if (memq (quote eval) #{esew\ 1487}#)
                                     (#{top-level-eval-hook\ 149}#
                                       (#{chi-install-global\ 317}#
                                         #{n\ 1584}#
                                         (#{chi\ 325}#
                                           #{e\ 1511}#
                                           #{r\ 1585}#
                                           #{w\ 1512}#
                                           #{mod\ 1514}#))
                                       #{mod\ 1514}#))
                                   (#{chi-void\ 339}#)))))
                           (if (memv #{type\ 1509}# (quote (define-form)))
                             (let ((#{n\ 1596}#
                                     (#{id-var-name\ 297}#
                                       #{value\ 1510}#
                                       #{w\ 1512}#)))
                               (let ((#{type\ 1598}#
                                       (#{binding-type\ 223}#
                                         (#{lookup\ 234}#
                                           #{n\ 1596}#
                                           #{r\ 1484}#
                                           #{mod\ 1514}#))))
                                 (if (memv #{type\ 1598}#
                                           '(global core macro module-ref))
                                   (begin
                                     (if (if (not (module-local-variable
                                                    (current-module)
                                                    #{n\ 1596}#))
                                           (current-module)
                                           #f)
                                       (let ((#{old\ 1603}#
                                               (module-variable
                                                 (current-module)
                                                 #{n\ 1596}#)))
                                         (module-define!
                                           (current-module)
                                           #{n\ 1596}#
                                           (if (variable? #{old\ 1603}#)
                                             (variable-ref #{old\ 1603}#)
                                             #f))))
                                     (let ((#{x\ 1606}#
                                             (#{build-global-definition\ 180}#
                                               #{s\ 1513}#
                                               #{n\ 1596}#
                                               (#{chi\ 325}#
                                                 #{e\ 1511}#
                                                 #{r\ 1484}#
                                                 #{w\ 1512}#
                                                 #{mod\ 1514}#))))
                                       (begin
                                         (if (eq? #{m\ 1486}# (quote c&e))
                                           (#{top-level-eval-hook\ 149}#
                                             #{x\ 1606}#
                                             #{mod\ 1514}#))
                                         #{x\ 1606}#)))
                                   (if (memv #{type\ 1598}#
                                             '(displaced-lexical))
                                     (syntax-violation
                                       #f
                                       "identifier out of context"
                                       #{e\ 1511}#
                                       (#{wrap\ 309}#
                                         #{value\ 1510}#
                                         #{w\ 1512}#
                                         #{mod\ 1514}#))
                                     (syntax-violation
                                       #f
                                       "cannot define keyword at top level"
                                       #{e\ 1511}#
                                       (#{wrap\ 309}#
                                         #{value\ 1510}#
                                         #{w\ 1512}#
                                         #{mod\ 1514}#))))))
                             (let ((#{x\ 1612}#
                                     (#{chi-expr\ 327}#
                                       #{type\ 1509}#
                                       #{value\ 1510}#
                                       #{e\ 1511}#
                                       #{r\ 1484}#
                                       #{w\ 1512}#
                                       #{s\ 1513}#
                                       #{mod\ 1514}#)))
                               (begin
                                 (if (eq? #{m\ 1486}# (quote c&e))
                                   (#{top-level-eval-hook\ 149}#
                                     #{x\ 1612}#
                                     #{mod\ 1514}#))
                                 #{x\ 1612}#)))))))))))
           (#{syntax-type\ 321}#
             (lambda (#{e\ 1613}#
                      #{r\ 1614}#
                      #{w\ 1615}#
                      #{s\ 1616}#
                      #{rib\ 1617}#
                      #{mod\ 1618}#
                      #{for-car?\ 1619}#)
               (if (symbol? #{e\ 1613}#)
                 (let ((#{n\ 1631}#
                         (#{id-var-name\ 297}# #{e\ 1613}# #{w\ 1615}#)))
                   (let ((#{b\ 1633}#
                           (#{lookup\ 234}#
                             #{n\ 1631}#
                             #{r\ 1614}#
                             #{mod\ 1618}#)))
                     (let ((#{type\ 1635}#
                             (#{binding-type\ 223}# #{b\ 1633}#)))
                       (if (memv #{type\ 1635}# (quote (lexical)))
                         (values
                           #{type\ 1635}#
                           (#{binding-value\ 225}# #{b\ 1633}#)
                           #{e\ 1613}#
                           #{w\ 1615}#
                           #{s\ 1616}#
                           #{mod\ 1618}#)
                         (if (memv #{type\ 1635}# (quote (global)))
                           (values
                             #{type\ 1635}#
                             #{n\ 1631}#
                             #{e\ 1613}#
                             #{w\ 1615}#
                             #{s\ 1616}#
                             #{mod\ 1618}#)
                           (if (memv #{type\ 1635}# (quote (macro)))
                             (if #{for-car?\ 1619}#
                               (values
                                 #{type\ 1635}#
                                 (#{binding-value\ 225}# #{b\ 1633}#)
                                 #{e\ 1613}#
                                 #{w\ 1615}#
                                 #{s\ 1616}#
                                 #{mod\ 1618}#)
                               (#{syntax-type\ 321}#
                                 (#{chi-macro\ 331}#
                                   (#{binding-value\ 225}# #{b\ 1633}#)
                                   #{e\ 1613}#
                                   #{r\ 1614}#
                                   #{w\ 1615}#
                                   #{rib\ 1617}#
                                   #{mod\ 1618}#)
                                 #{r\ 1614}#
                                 '(())
                                 #{s\ 1616}#
                                 #{rib\ 1617}#
                                 #{mod\ 1618}#
                                 #f))
                             (values
                               #{type\ 1635}#
                               (#{binding-value\ 225}# #{b\ 1633}#)
                               #{e\ 1613}#
                               #{w\ 1615}#
                               #{s\ 1616}#
                               #{mod\ 1618}#)))))))
                 (if (pair? #{e\ 1613}#)
                   (let ((#{first\ 1644}# (car #{e\ 1613}#)))
                     (call-with-values
                       (lambda ()
                         (#{syntax-type\ 321}#
                           #{first\ 1644}#
                           #{r\ 1614}#
                           #{w\ 1615}#
                           #{s\ 1616}#
                           #{rib\ 1617}#
                           #{mod\ 1618}#
                           #t))
                       (lambda (#{ftype\ 1645}#
                                #{fval\ 1646}#
                                #{fe\ 1647}#
                                #{fw\ 1648}#
                                #{fs\ 1649}#
                                #{fmod\ 1650}#)
                         (if (memv #{ftype\ 1645}# (quote (lexical)))
                           (values
                             'lexical-call
                             #{fval\ 1646}#
                             #{e\ 1613}#
                             #{w\ 1615}#
                             #{s\ 1616}#
                             #{mod\ 1618}#)
                           (if (memv #{ftype\ 1645}# (quote (global)))
                             (values
                               'global-call
                               (#{make-syntax-object\ 202}#
                                 #{fval\ 1646}#
                                 #{w\ 1615}#
                                 #{fmod\ 1650}#)
                               #{e\ 1613}#
                               #{w\ 1615}#
                               #{s\ 1616}#
                               #{mod\ 1618}#)
                             (if (memv #{ftype\ 1645}# (quote (macro)))
                               (#{syntax-type\ 321}#
                                 (#{chi-macro\ 331}#
                                   #{fval\ 1646}#
                                   #{e\ 1613}#
                                   #{r\ 1614}#
                                   #{w\ 1615}#
                                   #{rib\ 1617}#
                                   #{mod\ 1618}#)
                                 #{r\ 1614}#
                                 '(())
                                 #{s\ 1616}#
                                 #{rib\ 1617}#
                                 #{mod\ 1618}#
                                 #{for-car?\ 1619}#)
                               (if (memv #{ftype\ 1645}# (quote (module-ref)))
                                 (call-with-values
                                   (lambda () (#{fval\ 1646}# #{e\ 1613}#))
                                   (lambda (#{sym\ 1662}# #{mod\ 1663}#)
                                     (#{syntax-type\ 321}#
                                       #{sym\ 1662}#
                                       #{r\ 1614}#
                                       #{w\ 1615}#
                                       #{s\ 1616}#
                                       #{rib\ 1617}#
                                       #{mod\ 1663}#
                                       #{for-car?\ 1619}#)))
                                 (if (memv #{ftype\ 1645}# (quote (core)))
                                   (values
                                     'core-form
                                     #{fval\ 1646}#
                                     #{e\ 1613}#
                                     #{w\ 1615}#
                                     #{s\ 1616}#
                                     #{mod\ 1618}#)
                                   (if (memv #{ftype\ 1645}#
                                             '(local-syntax))
                                     (values
                                       'local-syntax-form
                                       #{fval\ 1646}#
                                       #{e\ 1613}#
                                       #{w\ 1615}#
                                       #{s\ 1616}#
                                       #{mod\ 1618}#)
                                     (if (memv #{ftype\ 1645}# (quote (begin)))
                                       (values
                                         'begin-form
                                         #f
                                         #{e\ 1613}#
                                         #{w\ 1615}#
                                         #{s\ 1616}#
                                         #{mod\ 1618}#)
                                       (if (memv #{ftype\ 1645}#
                                                 '(eval-when))
                                         (values
                                           'eval-when-form
                                           #f
                                           #{e\ 1613}#
                                           #{w\ 1615}#
                                           #{s\ 1616}#
                                           #{mod\ 1618}#)
                                         (if (memv #{ftype\ 1645}#
                                                   '(define))
                                           ((lambda (#{tmp\ 1671}#)
                                              ((lambda (#{tmp\ 1672}#)
                                                 (if (if #{tmp\ 1672}#
                                                       (apply (lambda (#{_\ 1676}#
                                                                       #{name\ 1677}#
                                                                       #{val\ 1678}#)
                                                                (#{id?\ 240}#
                                                                  #{name\ 1677}#))
                                                              #{tmp\ 1672}#)
                                                       #f)
                                                   (apply (lambda (#{_\ 1682}#
                                                                   #{name\ 1683}#
                                                                   #{val\ 1684}#)
                                                            (values
                                                              'define-form
                                                              #{name\ 1683}#
                                                              #{val\ 1684}#
                                                              #{w\ 1615}#
                                                              #{s\ 1616}#
                                                              #{mod\ 1618}#))
                                                          #{tmp\ 1672}#)
                                                   ((lambda (#{tmp\ 1685}#)
                                                      (if (if #{tmp\ 1685}#
                                                            (apply (lambda (#{_\ 1691}#
                                                                            #{name\ 1692}#
                                                                            #{args\ 1693}#
                                                                            #{e1\ 1694}#
                                                                            #{e2\ 1695}#)
                                                                     (if (#{id?\ 240}#
                                                                           #{name\ 1692}#)
                                                                       (#{valid-bound-ids?\ 303}#
                                                                         (#{lambda-var-list\ 355}#
                                                                           #{args\ 1693}#))
                                                                       #f))
                                                                   #{tmp\ 1685}#)
                                                            #f)
                                                        (apply (lambda (#{_\ 1703}#
                                                                        #{name\ 1704}#
                                                                        #{args\ 1705}#
                                                                        #{e1\ 1706}#
                                                                        #{e2\ 1707}#)
                                                                 (values
                                                                   'define-form
                                                                   (#{wrap\ 309}#
                                                                     #{name\ 1704}#
                                                                     #{w\ 1615}#
                                                                     #{mod\ 1618}#)
                                                                   (#{decorate-source\ 158}#
                                                                     (cons '#(syntax-object
                                                                              lambda
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(_
                                                                                   name
                                                                                   args
                                                                                   e1
                                                                                   e2)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1698"
                                                                                   "i1699"
                                                                                   "i1700"
                                                                                   "i1701"
                                                                                   "i1702"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(ftype
                                                                                   fval
                                                                                   fe
                                                                                   fw
                                                                                   fs
                                                                                   fmod)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1651"
                                                                                   "i1652"
                                                                                   "i1653"
                                                                                   "i1654"
                                                                                   "i1655"
                                                                                   "i1656"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(first)
                                                                                 #((top))
                                                                                 #("i1643"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(e
                                                                                   r
                                                                                   w
                                                                                   s
                                                                                   rib
                                                                                   mod
                                                                                   for-car?)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i1620"
                                                                                   "i1621"
                                                                                   "i1622"
                                                                                   "i1623"
                                                                                   "i1624"
                                                                                   "i1625"
                                                                                   "i1626"))
                                                                               #(ribcage
                                                                                 (lambda-var-list
                                                                                   gen-var
                                                                                   strip
                                                                                   chi-lambda-case
                                                                                   lambda*-formals
                                                                                   chi-simple-lambda
                                                                                   lambda-formals
                                                                                   ellipsis?
                                                                                   chi-void
                                                                                   eval-local-transformer
                                                                                   chi-local-syntax
                                                                                   chi-body
                                                                                   chi-macro
                                                                                   chi-application
                                                                                   chi-expr
                                                                                   chi
                                                                                   chi-top
                                                                                   syntax-type
                                                                                   chi-when-list
                                                                                   chi-install-global
                                                                                   chi-top-sequence
                                                                                   chi-sequence
                                                                                   source-wrap
                                                                                   wrap
                                                                                   bound-id-member?
                                                                                   distinct-bound-ids?
                                                                                   valid-bound-ids?
                                                                                   bound-id=?
                                                                                   free-id=?
                                                                                   id-var-name
                                                                                   same-marks?
                                                                                   join-marks
                                                                                   join-wraps
                                                                                   smart-append
                                                                                   make-binding-wrap
                                                                                   extend-ribcage!
                                                                                   make-empty-ribcage
                                                                                   new-mark
                                                                                   anti-mark
                                                                                   the-anti-mark
                                                                                   top-marked?
                                                                                   top-wrap
                                                                                   empty-wrap
                                                                                   set-ribcage-labels!
                                                                                   set-ribcage-marks!
                                                                                   set-ribcage-symnames!
                                                                                   ribcage-labels
                                                                                   ribcage-marks
                                                                                   ribcage-symnames
                                                                                   ribcage?
                                                                                   make-ribcage
                                                                                   gen-labels
                                                                                   gen-label
                                                                                   make-rename
                                                                                   rename-marks
                                                                                   rename-new
                                                                                   rename-old
                                                                                   subst-rename?
                                                                                   wrap-subst
                                                                                   wrap-marks
                                                                                   make-wrap
                                                                                   id-sym-name&marks
                                                                                   id-sym-name
                                                                                   id?
                                                                                   nonsymbol-id?
                                                                                   global-extend
                                                                                   lookup
                                                                                   macros-only-env
                                                                                   extend-var-env
                                                                                   extend-env
                                                                                   null-env
                                                                                   binding-value
                                                                                   binding-type
                                                                                   make-binding
                                                                                   arg-check
                                                                                   source-annotation
                                                                                   no-source
                                                                                   set-syntax-object-module!
                                                                                   set-syntax-object-wrap!
                                                                                   set-syntax-object-expression!
                                                                                   syntax-object-module
                                                                                   syntax-object-wrap
                                                                                   syntax-object-expression
                                                                                   syntax-object?
                                                                                   make-syntax-object
                                                                                   build-lexical-var
                                                                                   build-letrec
                                                                                   build-named-let
                                                                                   build-let
                                                                                   build-sequence
                                                                                   build-data
                                                                                   build-primref
                                                                                   build-lambda-case
                                                                                   build-case-lambda
                                                                                   build-simple-lambda
                                                                                   build-global-definition
                                                                                   maybe-name-value!
                                                                                   build-global-assignment
                                                                                   build-global-reference
                                                                                   analyze-variable
                                                                                   build-lexical-assignment
                                                                                   build-lexical-reference
                                                                                   build-dynlet
                                                                                   build-conditional
                                                                                   build-application
                                                                                   build-void
                                                                                   decorate-source
                                                                                   get-global-definition-hook
                                                                                   put-global-definition-hook
                                                                                   gensym-hook
                                                                                   local-eval-hook
                                                                                   top-level-eval-hook
                                                                                   fx<
                                                                                   fx=
                                                                                   fx-
                                                                                   fx+
                                                                                   *mode*
                                                                                   noexpand)
                                                                                 ((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                 ("i354"
                                                                                  "i352"
                                                                                  "i350"
                                                                                  "i348"
                                                                                  "i346"
                                                                                  "i344"
                                                                                  "i342"
                                                                                  "i340"
                                                                                  "i338"
                                                                                  "i336"
                                                                                  "i334"
                                                                                  "i332"
                                                                                  "i330"
                                                                                  "i328"
                                                                                  "i326"
                                                                                  "i324"
                                                                                  "i322"
                                                                                  "i320"
                                                                                  "i318"
                                                                                  "i316"
                                                                                  "i314"
                                                                                  "i312"
                                                                                  "i310"
                                                                                  "i308"
                                                                                  "i306"
                                                                                  "i304"
                                                                                  "i302"
                                                                                  "i300"
                                                                                  "i298"
                                                                                  "i296"
                                                                                  "i294"
                                                                                  "i292"
                                                                                  "i290"
                                                                                  "i288"
                                                                                  "i286"
                                                                                  "i284"
                                                                                  "i283"
                                                                                  "i282"
                                                                                  "i280"
                                                                                  "i279"
                                                                                  "i278"
                                                                                  "i277"
                                                                                  "i276"
                                                                                  "i274"
                                                                                  "i272"
                                                                                  "i270"
                                                                                  "i268"
                                                                                  "i266"
                                                                                  "i264"
                                                                                  "i262"
                                                                                  "i260"
                                                                                  "i257"
                                                                                  "i255"
                                                                                  "i254"
                                                                                  "i253"
                                                                                  "i252"
                                                                                  "i251"
                                                                                  "i250"
                                                                                  "i248"
                                                                                  "i246"
                                                                                  "i244"
                                                                                  "i242"
                                                                                  "i241"
                                                                                  "i239"
                                                                                  "i237"
                                                                                  "i235"
                                                                                  "i233"
                                                                                  "i231"
                                                                                  "i229"
                                                                                  "i227"
                                                                                  "i226"
                                                                                  "i224"
                                                                                  "i222"
                                                                                  "i221"
                                                                                  "i220"
                                                                                  "i218"
                                                                                  "i217"
                                                                                  "i215"
                                                                                  "i213"
                                                                                  "i211"
                                                                                  "i209"
                                                                                  "i207"
                                                                                  "i205"
                                                                                  "i203"
                                                                                  "i201"
                                                                                  "i199"
                                                                                  "i197"
                                                                                  "i195"
                                                                                  "i193"
                                                                                  "i191"
                                                                                  "i189"
                                                                                  "i187"
                                                                                  "i185"
                                                                                  "i183"
                                                                                  "i181"
                                                                                  "i179"
                                                                                  "i177"
                                                                                  "i175"
                                                                                  "i173"
                                                                                  "i171"
                                                                                  "i169"
                                                                                  "i167"
                                                                                  "i165"
                                                                                  "i163"
                                                                                  "i161"
                                                                                  "i159"
                                                                                  "i157"
                                                                                  "i155"
                                                                                  "i153"
                                                                                  "i152"
                                                                                  "i150"
                                                                                  "i148"
                                                                                  "i146"
                                                                                  "i144"
                                                                                  "i142"
                                                                                  "i140"
                                                                                  "i138"
                                                                                  "i136"))
                                                                               #(ribcage
                                                                                 (define-structure
                                                                                   and-map*)
                                                                                 ((top)
                                                                                  (top))
                                                                                 ("i39"
                                                                                  "i37")))
                                                                              (hygiene
                                                                                guile))
                                                                           (#{wrap\ 309}#
                                                                             (cons #{args\ 1705}#
                                                                                   (cons #{e1\ 1706}#
                                                                                         #{e2\ 1707}#))
                                                                             #{w\ 1615}#
                                                                             #{mod\ 1618}#))
                                                                     #{s\ 1616}#)
                                                                   '(())
                                                                   #{s\ 1616}#
                                                                   #{mod\ 1618}#))
                                                               #{tmp\ 1685}#)
                                                        ((lambda (#{tmp\ 1710}#)
                                                           (if (if #{tmp\ 1710}#
                                                                 (apply (lambda (#{_\ 1713}#
                                                                                 #{name\ 1714}#)
                                                                          (#{id?\ 240}#
                                                                            #{name\ 1714}#))
                                                                        #{tmp\ 1710}#)
                                                                 #f)
                                                             (apply (lambda (#{_\ 1717}#
                                                                             #{name\ 1718}#)
                                                                      (values
                                                                        'define-form
                                                                        (#{wrap\ 309}#
                                                                          #{name\ 1718}#
                                                                          #{w\ 1615}#
                                                                          #{mod\ 1618}#)
                                                                        '(#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1715"
                                                                                 "i1716"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1651"
                                                                                 "i1652"
                                                                                 "i1653"
                                                                                 "i1654"
                                                                                 "i1655"
                                                                                 "i1656"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1643"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1620"
                                                                                 "i1621"
                                                                                 "i1622"
                                                                                 "i1623"
                                                                                 "i1624"
                                                                                 "i1625"
                                                                                 "i1626"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i354"
                                                                                "i352"
                                                                                "i350"
                                                                                "i348"
                                                                                "i346"
                                                                                "i344"
                                                                                "i342"
                                                                                "i340"
                                                                                "i338"
                                                                                "i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i288"
                                                                                "i286"
                                                                                "i284"
                                                                                "i283"
                                                                                "i282"
                                                                                "i280"
                                                                                "i279"
                                                                                "i278"
                                                                                "i277"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i264"
                                                                                "i262"
                                                                                "i260"
                                                                                "i257"
                                                                                "i255"
                                                                                "i254"
                                                                                "i253"
                                                                                "i252"
                                                                                "i251"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i241"
                                                                                "i239"
                                                                                "i237"
                                                                                "i235"
                                                                                "i233"
                                                                                "i231"
                                                                                "i229"
                                                                                "i227"
                                                                                "i226"
                                                                                "i224"
                                                                                "i222"
                                                                                "i221"
                                                                                "i220"
                                                                                "i218"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i157"
                                                                                "i155"
                                                                                "i153"
                                                                                "i152"
                                                                                "i150"
                                                                                "i148"
                                                                                "i146"
                                                                                "i144"
                                                                                "i142"
                                                                                "i140"
                                                                                "i138"
                                                                                "i136"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i39"
                                                                                "i37")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1715"
                                                                                 "i1716"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1651"
                                                                                 "i1652"
                                                                                 "i1653"
                                                                                 "i1654"
                                                                                 "i1655"
                                                                                 "i1656"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1643"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1620"
                                                                                 "i1621"
                                                                                 "i1622"
                                                                                 "i1623"
                                                                                 "i1624"
                                                                                 "i1625"
                                                                                 "i1626"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i354"
                                                                                "i352"
                                                                                "i350"
                                                                                "i348"
                                                                                "i346"
                                                                                "i344"
                                                                                "i342"
                                                                                "i340"
                                                                                "i338"
                                                                                "i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i288"
                                                                                "i286"
                                                                                "i284"
                                                                                "i283"
                                                                                "i282"
                                                                                "i280"
                                                                                "i279"
                                                                                "i278"
                                                                                "i277"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i264"
                                                                                "i262"
                                                                                "i260"
                                                                                "i257"
                                                                                "i255"
                                                                                "i254"
                                                                                "i253"
                                                                                "i252"
                                                                                "i251"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i241"
                                                                                "i239"
                                                                                "i237"
                                                                                "i235"
                                                                                "i233"
                                                                                "i231"
                                                                                "i229"
                                                                                "i227"
                                                                                "i226"
                                                                                "i224"
                                                                                "i222"
                                                                                "i221"
                                                                                "i220"
                                                                                "i218"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i157"
                                                                                "i155"
                                                                                "i153"
                                                                                "i152"
                                                                                "i150"
                                                                                "i148"
                                                                                "i146"
                                                                                "i144"
                                                                                "i142"
                                                                                "i140"
                                                                                "i138"
                                                                                "i136"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i39"
                                                                                "i37")))
                                                                            (hygiene
                                                                              guile))
                                                                          #(syntax-object
                                                                            #f
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(_
                                                                                 name)
                                                                               #((top)
                                                                                 (top))
                                                                               #("i1715"
                                                                                 "i1716"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(ftype
                                                                                 fval
                                                                                 fe
                                                                                 fw
                                                                                 fs
                                                                                 fmod)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1651"
                                                                                 "i1652"
                                                                                 "i1653"
                                                                                 "i1654"
                                                                                 "i1655"
                                                                                 "i1656"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(first)
                                                                               #((top))
                                                                               #("i1643"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(e
                                                                                 r
                                                                                 w
                                                                                 s
                                                                                 rib
                                                                                 mod
                                                                                 for-car?)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i1620"
                                                                                 "i1621"
                                                                                 "i1622"
                                                                                 "i1623"
                                                                                 "i1624"
                                                                                 "i1625"
                                                                                 "i1626"))
                                                                             #(ribcage
                                                                               (lambda-var-list
                                                                                 gen-var
                                                                                 strip
                                                                                 chi-lambda-case
                                                                                 lambda*-formals
                                                                                 chi-simple-lambda
                                                                                 lambda-formals
                                                                                 ellipsis?
                                                                                 chi-void
                                                                                 eval-local-transformer
                                                                                 chi-local-syntax
                                                                                 chi-body
                                                                                 chi-macro
                                                                                 chi-application
                                                                                 chi-expr
                                                                                 chi
                                                                                 chi-top
                                                                                 syntax-type
                                                                                 chi-when-list
                                                                                 chi-install-global
                                                                                 chi-top-sequence
                                                                                 chi-sequence
                                                                                 source-wrap
                                                                                 wrap
                                                                                 bound-id-member?
                                                                                 distinct-bound-ids?
                                                                                 valid-bound-ids?
                                                                                 bound-id=?
                                                                                 free-id=?
                                                                                 id-var-name
                                                                                 same-marks?
                                                                                 join-marks
                                                                                 join-wraps
                                                                                 smart-append
                                                                                 make-binding-wrap
                                                                                 extend-ribcage!
                                                                                 make-empty-ribcage
                                                                                 new-mark
                                                                                 anti-mark
                                                                                 the-anti-mark
                                                                                 top-marked?
                                                                                 top-wrap
                                                                                 empty-wrap
                                                                                 set-ribcage-labels!
                                                                                 set-ribcage-marks!
                                                                                 set-ribcage-symnames!
                                                                                 ribcage-labels
                                                                                 ribcage-marks
                                                                                 ribcage-symnames
                                                                                 ribcage?
                                                                                 make-ribcage
                                                                                 gen-labels
                                                                                 gen-label
                                                                                 make-rename
                                                                                 rename-marks
                                                                                 rename-new
                                                                                 rename-old
                                                                                 subst-rename?
                                                                                 wrap-subst
                                                                                 wrap-marks
                                                                                 make-wrap
                                                                                 id-sym-name&marks
                                                                                 id-sym-name
                                                                                 id?
                                                                                 nonsymbol-id?
                                                                                 global-extend
                                                                                 lookup
                                                                                 macros-only-env
                                                                                 extend-var-env
                                                                                 extend-env
                                                                                 null-env
                                                                                 binding-value
                                                                                 binding-type
                                                                                 make-binding
                                                                                 arg-check
                                                                                 source-annotation
                                                                                 no-source
                                                                                 set-syntax-object-module!
                                                                                 set-syntax-object-wrap!
                                                                                 set-syntax-object-expression!
                                                                                 syntax-object-module
                                                                                 syntax-object-wrap
                                                                                 syntax-object-expression
                                                                                 syntax-object?
                                                                                 make-syntax-object
                                                                                 build-lexical-var
                                                                                 build-letrec
                                                                                 build-named-let
                                                                                 build-let
                                                                                 build-sequence
                                                                                 build-data
                                                                                 build-primref
                                                                                 build-lambda-case
                                                                                 build-case-lambda
                                                                                 build-simple-lambda
                                                                                 build-global-definition
                                                                                 maybe-name-value!
                                                                                 build-global-assignment
                                                                                 build-global-reference
                                                                                 analyze-variable
                                                                                 build-lexical-assignment
                                                                                 build-lexical-reference
                                                                                 build-dynlet
                                                                                 build-conditional
                                                                                 build-application
                                                                                 build-void
                                                                                 decorate-source
                                                                                 get-global-definition-hook
                                                                                 put-global-definition-hook
                                                                                 gensym-hook
                                                                                 local-eval-hook
                                                                                 top-level-eval-hook
                                                                                 fx<
                                                                                 fx=
                                                                                 fx-
                                                                                 fx+
                                                                                 *mode*
                                                                                 noexpand)
                                                                               ((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                               ("i354"
                                                                                "i352"
                                                                                "i350"
                                                                                "i348"
                                                                                "i346"
                                                                                "i344"
                                                                                "i342"
                                                                                "i340"
                                                                                "i338"
                                                                                "i336"
                                                                                "i334"
                                                                                "i332"
                                                                                "i330"
                                                                                "i328"
                                                                                "i326"
                                                                                "i324"
                                                                                "i322"
                                                                                "i320"
                                                                                "i318"
                                                                                "i316"
                                                                                "i314"
                                                                                "i312"
                                                                                "i310"
                                                                                "i308"
                                                                                "i306"
                                                                                "i304"
                                                                                "i302"
                                                                                "i300"
                                                                                "i298"
                                                                                "i296"
                                                                                "i294"
                                                                                "i292"
                                                                                "i290"
                                                                                "i288"
                                                                                "i286"
                                                                                "i284"
                                                                                "i283"
                                                                                "i282"
                                                                                "i280"
                                                                                "i279"
                                                                                "i278"
                                                                                "i277"
                                                                                "i276"
                                                                                "i274"
                                                                                "i272"
                                                                                "i270"
                                                                                "i268"
                                                                                "i266"
                                                                                "i264"
                                                                                "i262"
                                                                                "i260"
                                                                                "i257"
                                                                                "i255"
                                                                                "i254"
                                                                                "i253"
                                                                                "i252"
                                                                                "i251"
                                                                                "i250"
                                                                                "i248"
                                                                                "i246"
                                                                                "i244"
                                                                                "i242"
                                                                                "i241"
                                                                                "i239"
                                                                                "i237"
                                                                                "i235"
                                                                                "i233"
                                                                                "i231"
                                                                                "i229"
                                                                                "i227"
                                                                                "i226"
                                                                                "i224"
                                                                                "i222"
                                                                                "i221"
                                                                                "i220"
                                                                                "i218"
                                                                                "i217"
                                                                                "i215"
                                                                                "i213"
                                                                                "i211"
                                                                                "i209"
                                                                                "i207"
                                                                                "i205"
                                                                                "i203"
                                                                                "i201"
                                                                                "i199"
                                                                                "i197"
                                                                                "i195"
                                                                                "i193"
                                                                                "i191"
                                                                                "i189"
                                                                                "i187"
                                                                                "i185"
                                                                                "i183"
                                                                                "i181"
                                                                                "i179"
                                                                                "i177"
                                                                                "i175"
                                                                                "i173"
                                                                                "i171"
                                                                                "i169"
                                                                                "i167"
                                                                                "i165"
                                                                                "i163"
                                                                                "i161"
                                                                                "i159"
                                                                                "i157"
                                                                                "i155"
                                                                                "i153"
                                                                                "i152"
                                                                                "i150"
                                                                                "i148"
                                                                                "i146"
                                                                                "i144"
                                                                                "i142"
                                                                                "i140"
                                                                                "i138"
                                                                                "i136"))
                                                                             #(ribcage
                                                                               (define-structure
                                                                                 and-map*)
                                                                               ((top)
                                                                                (top))
                                                                               ("i39"
                                                                                "i37")))
                                                                            (hygiene
                                                                              guile)))
                                                                        '(())
                                                                        #{s\ 1616}#
                                                                        #{mod\ 1618}#))
                                                                    #{tmp\ 1710}#)
                                                             (syntax-violation
                                                               #f
                                                               "source expression failed to match any pattern"
                                                               #{tmp\ 1671}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 1671}#
                                                           '(any any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 1671}#
                                                      '(any (any . any)
                                                            any
                                                            .
                                                            each-any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 1671}#
                                                 '(any any any))))
                                            #{e\ 1613}#)
                                           (if (memv #{ftype\ 1645}#
                                                     '(define-syntax))
                                             ((lambda (#{tmp\ 1721}#)
                                                ((lambda (#{tmp\ 1722}#)
                                                   (if (if #{tmp\ 1722}#
                                                         (apply (lambda (#{_\ 1726}#
                                                                         #{name\ 1727}#
                                                                         #{val\ 1728}#)
                                                                  (#{id?\ 240}#
                                                                    #{name\ 1727}#))
                                                                #{tmp\ 1722}#)
                                                         #f)
                                                     (apply (lambda (#{_\ 1732}#
                                                                     #{name\ 1733}#
                                                                     #{val\ 1734}#)
                                                              (values
                                                                'define-syntax-form
                                                                #{name\ 1733}#
                                                                #{val\ 1734}#
                                                                #{w\ 1615}#
                                                                #{s\ 1616}#
                                                                #{mod\ 1618}#))
                                                            #{tmp\ 1722}#)
                                                     (syntax-violation
                                                       #f
                                                       "source expression failed to match any pattern"
                                                       #{tmp\ 1721}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 1721}#
                                                   '(any any any))))
                                              #{e\ 1613}#)
                                             (values
                                               'call
                                               #f
                                               #{e\ 1613}#
                                               #{w\ 1615}#
                                               #{s\ 1616}#
                                               #{mod\ 1618}#))))))))))))))
                   (if (#{syntax-object?\ 204}# #{e\ 1613}#)
                     (#{syntax-type\ 321}#
                       (#{syntax-object-expression\ 206}# #{e\ 1613}#)
                       #{r\ 1614}#
                       (#{join-wraps\ 291}#
                         #{w\ 1615}#
                         (#{syntax-object-wrap\ 208}# #{e\ 1613}#))
                       #{s\ 1616}#
                       #{rib\ 1617}#
                       (let ((#{t\ 1740}#
                               (#{syntax-object-module\ 210}# #{e\ 1613}#)))
                         (if #{t\ 1740}# #{t\ 1740}# #{mod\ 1618}#))
                       #{for-car?\ 1619}#)
                     (if (self-evaluating? #{e\ 1613}#)
                       (values
                         'constant
                         #f
                         #{e\ 1613}#
                         #{w\ 1615}#
                         #{s\ 1616}#
                         #{mod\ 1618}#)
                       (values
                         'other
                         #f
                         #{e\ 1613}#
                         #{w\ 1615}#
                         #{s\ 1616}#
                         #{mod\ 1618}#)))))))
           (#{chi-when-list\ 319}#
             (lambda (#{e\ 1745}# #{when-list\ 1746}# #{w\ 1747}#)
               (letrec ((#{f\ 1754}#
                          (lambda (#{when-list\ 1755}# #{situations\ 1756}#)
                            (if (null? #{when-list\ 1755}#)
                              #{situations\ 1756}#
                              (#{f\ 1754}#
                                (cdr #{when-list\ 1755}#)
                                (cons (let ((#{x\ 1758}#
                                              (car #{when-list\ 1755}#)))
                                        (if (#{free-id=?\ 299}#
                                              #{x\ 1758}#
                                              '#(syntax-object
                                                 compile
                                                 ((top)
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(x)
                                                    #((top))
                                                    #("i1757"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(f when-list situations)
                                                    #((top) (top) (top))
                                                    #("i1751" "i1752" "i1753"))
                                                  #(ribcage () () ())
                                                  #(ribcage
                                                    #(e when-list w)
                                                    #((top) (top) (top))
                                                    #("i1748" "i1749" "i1750"))
                                                  #(ribcage
                                                    (lambda-var-list
                                                      gen-var
                                                      strip
                                                      chi-lambda-case
                                                      lambda*-formals
                                                      chi-simple-lambda
                                                      lambda-formals
                                                      ellipsis?
                                                      chi-void
                                                      eval-local-transformer
                                                      chi-local-syntax
                                                      chi-body
                                                      chi-macro
                                                      chi-application
                                                      chi-expr
                                                      chi
                                                      chi-top
                                                      syntax-type
                                                      chi-when-list
                                                      chi-install-global
                                                      chi-top-sequence
                                                      chi-sequence
                                                      source-wrap
                                                      wrap
                                                      bound-id-member?
                                                      distinct-bound-ids?
                                                      valid-bound-ids?
                                                      bound-id=?
                                                      free-id=?
                                                      id-var-name
                                                      same-marks?
                                                      join-marks
                                                      join-wraps
                                                      smart-append
                                                      make-binding-wrap
                                                      extend-ribcage!
                                                      make-empty-ribcage
                                                      new-mark
                                                      anti-mark
                                                      the-anti-mark
                                                      top-marked?
                                                      top-wrap
                                                      empty-wrap
                                                      set-ribcage-labels!
                                                      set-ribcage-marks!
                                                      set-ribcage-symnames!
                                                      ribcage-labels
                                                      ribcage-marks
                                                      ribcage-symnames
                                                      ribcage?
                                                      make-ribcage
                                                      gen-labels
                                                      gen-label
                                                      make-rename
                                                      rename-marks
                                                      rename-new
                                                      rename-old
                                                      subst-rename?
                                                      wrap-subst
                                                      wrap-marks
                                                      make-wrap
                                                      id-sym-name&marks
                                                      id-sym-name
                                                      id?
                                                      nonsymbol-id?
                                                      global-extend
                                                      lookup
                                                      macros-only-env
                                                      extend-var-env
                                                      extend-env
                                                      null-env
                                                      binding-value
                                                      binding-type
                                                      make-binding
                                                      arg-check
                                                      source-annotation
                                                      no-source
                                                      set-syntax-object-module!
                                                      set-syntax-object-wrap!
                                                      set-syntax-object-expression!
                                                      syntax-object-module
                                                      syntax-object-wrap
                                                      syntax-object-expression
                                                      syntax-object?
                                                      make-syntax-object
                                                      build-lexical-var
                                                      build-letrec
                                                      build-named-let
                                                      build-let
                                                      build-sequence
                                                      build-data
                                                      build-primref
                                                      build-lambda-case
                                                      build-case-lambda
                                                      build-simple-lambda
                                                      build-global-definition
                                                      maybe-name-value!
                                                      build-global-assignment
                                                      build-global-reference
                                                      analyze-variable
                                                      build-lexical-assignment
                                                      build-lexical-reference
                                                      build-dynlet
                                                      build-conditional
                                                      build-application
                                                      build-void
                                                      decorate-source
                                                      get-global-definition-hook
                                                      put-global-definition-hook
                                                      gensym-hook
                                                      local-eval-hook
                                                      top-level-eval-hook
                                                      fx<
                                                      fx=
                                                      fx-
                                                      fx+
                                                      *mode*
                                                      noexpand)
                                                    ((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                    ("i354"
                                                     "i352"
                                                     "i350"
                                                     "i348"
                                                     "i346"
                                                     "i344"
                                                     "i342"
                                                     "i340"
                                                     "i338"
                                                     "i336"
                                                     "i334"
                                                     "i332"
                                                     "i330"
                                                     "i328"
                                                     "i326"
                                                     "i324"
                                                     "i322"
                                                     "i320"
                                                     "i318"
                                                     "i316"
                                                     "i314"
                                                     "i312"
                                                     "i310"
                                                     "i308"
                                                     "i306"
                                                     "i304"
                                                     "i302"
                                                     "i300"
                                                     "i298"
                                                     "i296"
                                                     "i294"
                                                     "i292"
                                                     "i290"
                                                     "i288"
                                                     "i286"
                                                     "i284"
                                                     "i283"
                                                     "i282"
                                                     "i280"
                                                     "i279"
                                                     "i278"
                                                     "i277"
                                                     "i276"
                                                     "i274"
                                                     "i272"
                                                     "i270"
                                                     "i268"
                                                     "i266"
                                                     "i264"
                                                     "i262"
                                                     "i260"
                                                     "i257"
                                                     "i255"
                                                     "i254"
                                                     "i253"
                                                     "i252"
                                                     "i251"
                                                     "i250"
                                                     "i248"
                                                     "i246"
                                                     "i244"
                                                     "i242"
                                                     "i241"
                                                     "i239"
                                                     "i237"
                                                     "i235"
                                                     "i233"
                                                     "i231"
                                                     "i229"
                                                     "i227"
                                                     "i226"
                                                     "i224"
                                                     "i222"
                                                     "i221"
                                                     "i220"
                                                     "i218"
                                                     "i217"
                                                     "i215"
                                                     "i213"
                                                     "i211"
                                                     "i209"
                                                     "i207"
                                                     "i205"
                                                     "i203"
                                                     "i201"
                                                     "i199"
                                                     "i197"
                                                     "i195"
                                                     "i193"
                                                     "i191"
                                                     "i189"
                                                     "i187"
                                                     "i185"
                                                     "i183"
                                                     "i181"
                                                     "i179"
                                                     "i177"
                                                     "i175"
                                                     "i173"
                                                     "i171"
                                                     "i169"
                                                     "i167"
                                                     "i165"
                                                     "i163"
                                                     "i161"
                                                     "i159"
                                                     "i157"
                                                     "i155"
                                                     "i153"
                                                     "i152"
                                                     "i150"
                                                     "i148"
                                                     "i146"
                                                     "i144"
                                                     "i142"
                                                     "i140"
                                                     "i138"
                                                     "i136"))
                                                  #(ribcage
                                                    (define-structure and-map*)
                                                    ((top) (top))
                                                    ("i39" "i37")))
                                                 (hygiene guile)))
                                          'compile
                                          (if (#{free-id=?\ 299}#
                                                #{x\ 1758}#
                                                '#(syntax-object
                                                   load
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i1757"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(f when-list situations)
                                                      #((top) (top) (top))
                                                      #("i1751"
                                                        "i1752"
                                                        "i1753"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e when-list w)
                                                      #((top) (top) (top))
                                                      #("i1748"
                                                        "i1749"
                                                        "i1750"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i354"
                                                       "i352"
                                                       "i350"
                                                       "i348"
                                                       "i346"
                                                       "i344"
                                                       "i342"
                                                       "i340"
                                                       "i338"
                                                       "i336"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i328"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i288"
                                                       "i286"
                                                       "i284"
                                                       "i283"
                                                       "i282"
                                                       "i280"
                                                       "i279"
                                                       "i278"
                                                       "i277"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i264"
                                                       "i262"
                                                       "i260"
                                                       "i257"
                                                       "i255"
                                                       "i254"
                                                       "i253"
                                                       "i252"
                                                       "i251"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i242"
                                                       "i241"
                                                       "i239"
                                                       "i237"
                                                       "i235"
                                                       "i233"
                                                       "i231"
                                                       "i229"
                                                       "i227"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i221"
                                                       "i220"
                                                       "i218"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"
                                                       "i205"
                                                       "i203"
                                                       "i201"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"
                                                       "i169"
                                                       "i167"
                                                       "i165"
                                                       "i163"
                                                       "i161"
                                                       "i159"
                                                       "i157"
                                                       "i155"
                                                       "i153"
                                                       "i152"
                                                       "i150"
                                                       "i148"
                                                       "i146"
                                                       "i144"
                                                       "i142"
                                                       "i140"
                                                       "i138"
                                                       "i136"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i39" "i37")))
                                                   (hygiene guile)))
                                            'load
                                            (if (#{free-id=?\ 299}#
                                                  #{x\ 1758}#
                                                  '#(syntax-object
                                                     eval
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i1757"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f
                                                          when-list
                                                          situations)
                                                        #((top) (top) (top))
                                                        #("i1751"
                                                          "i1752"
                                                          "i1753"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(e when-list w)
                                                        #((top) (top) (top))
                                                        #("i1748"
                                                          "i1749"
                                                          "i1750"))
                                                      #(ribcage
                                                        (lambda-var-list
                                                          gen-var
                                                          strip
                                                          chi-lambda-case
                                                          lambda*-formals
                                                          chi-simple-lambda
                                                          lambda-formals
                                                          ellipsis?
                                                          chi-void
                                                          eval-local-transformer
                                                          chi-local-syntax
                                                          chi-body
                                                          chi-macro
                                                          chi-application
                                                          chi-expr
                                                          chi
                                                          chi-top
                                                          syntax-type
                                                          chi-when-list
                                                          chi-install-global
                                                          chi-top-sequence
                                                          chi-sequence
                                                          source-wrap
                                                          wrap
                                                          bound-id-member?
                                                          distinct-bound-ids?
                                                          valid-bound-ids?
                                                          bound-id=?
                                                          free-id=?
                                                          id-var-name
                                                          same-marks?
                                                          join-marks
                                                          join-wraps
                                                          smart-append
                                                          make-binding-wrap
                                                          extend-ribcage!
                                                          make-empty-ribcage
                                                          new-mark
                                                          anti-mark
                                                          the-anti-mark
                                                          top-marked?
                                                          top-wrap
                                                          empty-wrap
                                                          set-ribcage-labels!
                                                          set-ribcage-marks!
                                                          set-ribcage-symnames!
                                                          ribcage-labels
                                                          ribcage-marks
                                                          ribcage-symnames
                                                          ribcage?
                                                          make-ribcage
                                                          gen-labels
                                                          gen-label
                                                          make-rename
                                                          rename-marks
                                                          rename-new
                                                          rename-old
                                                          subst-rename?
                                                          wrap-subst
                                                          wrap-marks
                                                          make-wrap
                                                          id-sym-name&marks
                                                          id-sym-name
                                                          id?
                                                          nonsymbol-id?
                                                          global-extend
                                                          lookup
                                                          macros-only-env
                                                          extend-var-env
                                                          extend-env
                                                          null-env
                                                          binding-value
                                                          binding-type
                                                          make-binding
                                                          arg-check
                                                          source-annotation
                                                          no-source
                                                          set-syntax-object-module!
                                                          set-syntax-object-wrap!
                                                          set-syntax-object-expression!
                                                          syntax-object-module
                                                          syntax-object-wrap
                                                          syntax-object-expression
                                                          syntax-object?
                                                          make-syntax-object
                                                          build-lexical-var
                                                          build-letrec
                                                          build-named-let
                                                          build-let
                                                          build-sequence
                                                          build-data
                                                          build-primref
                                                          build-lambda-case
                                                          build-case-lambda
                                                          build-simple-lambda
                                                          build-global-definition
                                                          maybe-name-value!
                                                          build-global-assignment
                                                          build-global-reference
                                                          analyze-variable
                                                          build-lexical-assignment
                                                          build-lexical-reference
                                                          build-dynlet
                                                          build-conditional
                                                          build-application
                                                          build-void
                                                          decorate-source
                                                          get-global-definition-hook
                                                          put-global-definition-hook
                                                          gensym-hook
                                                          local-eval-hook
                                                          top-level-eval-hook
                                                          fx<
                                                          fx=
                                                          fx-
                                                          fx+
                                                          *mode*
                                                          noexpand)
                                                        ((top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                        ("i354"
                                                         "i352"
                                                         "i350"
                                                         "i348"
                                                         "i346"
                                                         "i344"
                                                         "i342"
                                                         "i340"
                                                         "i338"
                                                         "i336"
                                                         "i334"
                                                         "i332"
                                                         "i330"
                                                         "i328"
                                                         "i326"
                                                         "i324"
                                                         "i322"
                                                         "i320"
                                                         "i318"
                                                         "i316"
                                                         "i314"
                                                         "i312"
                                                         "i310"
                                                         "i308"
                                                         "i306"
                                                         "i304"
                                                         "i302"
                                                         "i300"
                                                         "i298"
                                                         "i296"
                                                         "i294"
                                                         "i292"
                                                         "i290"
                                                         "i288"
                                                         "i286"
                                                         "i284"
                                                         "i283"
                                                         "i282"
                                                         "i280"
                                                         "i279"
                                                         "i278"
                                                         "i277"
                                                         "i276"
                                                         "i274"
                                                         "i272"
                                                         "i270"
                                                         "i268"
                                                         "i266"
                                                         "i264"
                                                         "i262"
                                                         "i260"
                                                         "i257"
                                                         "i255"
                                                         "i254"
                                                         "i253"
                                                         "i252"
                                                         "i251"
                                                         "i250"
                                                         "i248"
                                                         "i246"
                                                         "i244"
                                                         "i242"
                                                         "i241"
                                                         "i239"
                                                         "i237"
                                                         "i235"
                                                         "i233"
                                                         "i231"
                                                         "i229"
                                                         "i227"
                                                         "i226"
                                                         "i224"
                                                         "i222"
                                                         "i221"
                                                         "i220"
                                                         "i218"
                                                         "i217"
                                                         "i215"
                                                         "i213"
                                                         "i211"
                                                         "i209"
                                                         "i207"
                                                         "i205"
                                                         "i203"
                                                         "i201"
                                                         "i199"
                                                         "i197"
                                                         "i195"
                                                         "i193"
                                                         "i191"
                                                         "i189"
                                                         "i187"
                                                         "i185"
                                                         "i183"
                                                         "i181"
                                                         "i179"
                                                         "i177"
                                                         "i175"
                                                         "i173"
                                                         "i171"
                                                         "i169"
                                                         "i167"
                                                         "i165"
                                                         "i163"
                                                         "i161"
                                                         "i159"
                                                         "i157"
                                                         "i155"
                                                         "i153"
                                                         "i152"
                                                         "i150"
                                                         "i148"
                                                         "i146"
                                                         "i144"
                                                         "i142"
                                                         "i140"
                                                         "i138"
                                                         "i136"))
                                                      #(ribcage
                                                        (define-structure
                                                          and-map*)
                                                        ((top) (top))
                                                        ("i39" "i37")))
                                                     (hygiene guile)))
                                              'eval
                                              (syntax-violation
                                                'eval-when
                                                "invalid situation"
                                                #{e\ 1745}#
                                                (#{wrap\ 309}#
                                                  #{x\ 1758}#
                                                  #{w\ 1747}#
                                                  #f))))))
                                      #{situations\ 1756}#))))))
                 (#{f\ 1754}# #{when-list\ 1746}# (quote ())))))
           (#{chi-install-global\ 317}#
             (lambda (#{name\ 1766}# #{e\ 1767}#)
               (#{build-global-definition\ 180}#
                 #f
                 #{name\ 1766}#
                 (#{build-application\ 162}#
                   #f
                   (#{build-primref\ 188}#
                     #f
                     'make-syntax-transformer)
                   (list (#{build-data\ 190}# #f #{name\ 1766}#)
                         (#{build-data\ 190}# #f (quote macro))
                         (#{build-application\ 162}#
                           #f
                           (#{build-primref\ 188}# #f (quote cons))
                           (list #{e\ 1767}#
                                 (#{build-application\ 162}#
                                   #f
                                   (#{build-primref\ 188}#
                                     #f
                                     'module-name)
                                   (list (#{build-application\ 162}#
                                           #f
                                           (#{build-primref\ 188}#
                                             #f
                                             'current-module)
                                           '()))))))))))
           (#{chi-top-sequence\ 315}#
             (lambda (#{body\ 1781}#
                      #{r\ 1782}#
                      #{w\ 1783}#
                      #{s\ 1784}#
                      #{m\ 1785}#
                      #{esew\ 1786}#
                      #{mod\ 1787}#)
               (#{build-sequence\ 192}#
                 #{s\ 1784}#
                 (letrec ((#{dobody\ 1802}#
                            (lambda (#{body\ 1803}#
                                     #{r\ 1804}#
                                     #{w\ 1805}#
                                     #{m\ 1806}#
                                     #{esew\ 1807}#
                                     #{mod\ 1808}#)
                              (if (null? #{body\ 1803}#)
                                '()
                                (let ((#{first\ 1810}#
                                        (#{chi-top\ 323}#
                                          (car #{body\ 1803}#)
                                          #{r\ 1804}#
                                          #{w\ 1805}#
                                          #{m\ 1806}#
                                          #{esew\ 1807}#
                                          #{mod\ 1808}#)))
                                  (cons #{first\ 1810}#
                                        (#{dobody\ 1802}#
                                          (cdr #{body\ 1803}#)
                                          #{r\ 1804}#
                                          #{w\ 1805}#
                                          #{m\ 1806}#
                                          #{esew\ 1807}#
                                          #{mod\ 1808}#)))))))
                   (#{dobody\ 1802}#
                     #{body\ 1781}#
                     #{r\ 1782}#
                     #{w\ 1783}#
                     #{m\ 1785}#
                     #{esew\ 1786}#
                     #{mod\ 1787}#)))))
           (#{chi-sequence\ 313}#
             (lambda (#{body\ 1811}#
                      #{r\ 1812}#
                      #{w\ 1813}#
                      #{s\ 1814}#
                      #{mod\ 1815}#)
               (#{build-sequence\ 192}#
                 #{s\ 1814}#
                 (letrec ((#{dobody\ 1826}#
                            (lambda (#{body\ 1827}#
                                     #{r\ 1828}#
                                     #{w\ 1829}#
                                     #{mod\ 1830}#)
                              (if (null? #{body\ 1827}#)
                                '()
                                (let ((#{first\ 1832}#
                                        (#{chi\ 325}#
                                          (car #{body\ 1827}#)
                                          #{r\ 1828}#
                                          #{w\ 1829}#
                                          #{mod\ 1830}#)))
                                  (cons #{first\ 1832}#
                                        (#{dobody\ 1826}#
                                          (cdr #{body\ 1827}#)
                                          #{r\ 1828}#
                                          #{w\ 1829}#
                                          #{mod\ 1830}#)))))))
                   (#{dobody\ 1826}#
                     #{body\ 1811}#
                     #{r\ 1812}#
                     #{w\ 1813}#
                     #{mod\ 1815}#)))))
           (#{source-wrap\ 311}#
             (lambda (#{x\ 1833}#
                      #{w\ 1834}#
                      #{s\ 1835}#
                      #{defmod\ 1836}#)
               (#{wrap\ 309}#
                 (#{decorate-source\ 158}#
                   #{x\ 1833}#
                   #{s\ 1835}#)
                 #{w\ 1834}#
                 #{defmod\ 1836}#)))
           (#{wrap\ 309}#
             (lambda (#{x\ 1841}# #{w\ 1842}# #{defmod\ 1843}#)
               (if (if (null? (#{wrap-marks\ 247}# #{w\ 1842}#))
                     (null? (#{wrap-subst\ 249}# #{w\ 1842}#))
                     #f)
                 #{x\ 1841}#
                 (if (#{syntax-object?\ 204}# #{x\ 1841}#)
                   (#{make-syntax-object\ 202}#
                     (#{syntax-object-expression\ 206}# #{x\ 1841}#)
                     (#{join-wraps\ 291}#
                       #{w\ 1842}#
                       (#{syntax-object-wrap\ 208}# #{x\ 1841}#))
                     (#{syntax-object-module\ 210}# #{x\ 1841}#))
                   (if (null? #{x\ 1841}#)
                     #{x\ 1841}#
                     (#{make-syntax-object\ 202}#
                       #{x\ 1841}#
                       #{w\ 1842}#
                       #{defmod\ 1843}#))))))
           (#{bound-id-member?\ 307}#
             (lambda (#{x\ 1856}# #{list\ 1857}#)
               (if (not (null? #{list\ 1857}#))
                 (let ((#{t\ 1864}#
                         (#{bound-id=?\ 301}#
                           #{x\ 1856}#
                           (car #{list\ 1857}#))))
                   (if #{t\ 1864}#
                     #{t\ 1864}#
                     (#{bound-id-member?\ 307}#
                       #{x\ 1856}#
                       (cdr #{list\ 1857}#))))
                 #f)))
           (#{distinct-bound-ids?\ 305}#
             (lambda (#{ids\ 1866}#)
               (letrec ((#{distinct?\ 1870}#
                          (lambda (#{ids\ 1871}#)
                            (let ((#{t\ 1874}# (null? #{ids\ 1871}#)))
                              (if #{t\ 1874}#
                                #{t\ 1874}#
                                (if (not (#{bound-id-member?\ 307}#
                                           (car #{ids\ 1871}#)
                                           (cdr #{ids\ 1871}#)))
                                  (#{distinct?\ 1870}# (cdr #{ids\ 1871}#))
                                  #f))))))
                 (#{distinct?\ 1870}# #{ids\ 1866}#))))
           (#{valid-bound-ids?\ 303}#
             (lambda (#{ids\ 1878}#)
               (if (letrec ((#{all-ids?\ 1883}#
                              (lambda (#{ids\ 1884}#)
                                (let ((#{t\ 1887}# (null? #{ids\ 1884}#)))
                                  (if #{t\ 1887}#
                                    #{t\ 1887}#
                                    (if (#{id?\ 240}# (car #{ids\ 1884}#))
                                      (#{all-ids?\ 1883}# (cdr #{ids\ 1884}#))
                                      #f))))))
                     (#{all-ids?\ 1883}# #{ids\ 1878}#))
                 (#{distinct-bound-ids?\ 305}# #{ids\ 1878}#)
                 #f)))
           (#{bound-id=?\ 301}#
             (lambda (#{i\ 1892}# #{j\ 1893}#)
               (if (if (#{syntax-object?\ 204}# #{i\ 1892}#)
                     (#{syntax-object?\ 204}# #{j\ 1893}#)
                     #f)
                 (if (eq? (#{syntax-object-expression\ 206}# #{i\ 1892}#)
                          (#{syntax-object-expression\ 206}# #{j\ 1893}#))
                   (#{same-marks?\ 295}#
                     (#{wrap-marks\ 247}#
                       (#{syntax-object-wrap\ 208}# #{i\ 1892}#))
                     (#{wrap-marks\ 247}#
                       (#{syntax-object-wrap\ 208}# #{j\ 1893}#)))
                   #f)
                 (eq? #{i\ 1892}# #{j\ 1893}#))))
           (#{free-id=?\ 299}#
             (lambda (#{i\ 1900}# #{j\ 1901}#)
               (if (eq? (let ((#{x\ 1907}# #{i\ 1900}#))
                          (if (#{syntax-object?\ 204}# #{x\ 1907}#)
                            (#{syntax-object-expression\ 206}# #{x\ 1907}#)
                            #{x\ 1907}#))
                        (let ((#{x\ 1910}# #{j\ 1901}#))
                          (if (#{syntax-object?\ 204}# #{x\ 1910}#)
                            (#{syntax-object-expression\ 206}# #{x\ 1910}#)
                            #{x\ 1910}#)))
                 (eq? (#{id-var-name\ 297}# #{i\ 1900}# (quote (())))
                      (#{id-var-name\ 297}# #{j\ 1901}# (quote (()))))
                 #f)))
           (#{id-var-name\ 297}#
             (lambda (#{id\ 1914}# #{w\ 1915}#)
               (letrec ((#{search-vector-rib\ 1924}#
                          (lambda (#{sym\ 1936}#
                                   #{subst\ 1937}#
                                   #{marks\ 1938}#
                                   #{symnames\ 1939}#
                                   #{ribcage\ 1940}#)
                            (let ((#{n\ 1947}#
                                    (vector-length #{symnames\ 1939}#)))
                              (letrec ((#{f\ 1950}#
                                         (lambda (#{i\ 1951}#)
                                           (if (#{fx=\ 145}#
                                                 #{i\ 1951}#
                                                 #{n\ 1947}#)
                                             (#{search\ 1920}#
                                               #{sym\ 1936}#
                                               (cdr #{subst\ 1937}#)
                                               #{marks\ 1938}#)
                                             (if (if (eq? (vector-ref
                                                            #{symnames\ 1939}#
                                                            #{i\ 1951}#)
                                                          #{sym\ 1936}#)
                                                   (#{same-marks?\ 295}#
                                                     #{marks\ 1938}#
                                                     (vector-ref
                                                       (#{ribcage-marks\ 267}#
                                                         #{ribcage\ 1940}#)
                                                       #{i\ 1951}#))
                                                   #f)
                                               (values
                                                 (vector-ref
                                                   (#{ribcage-labels\ 269}#
                                                     #{ribcage\ 1940}#)
                                                   #{i\ 1951}#)
                                                 #{marks\ 1938}#)
                                               (#{f\ 1950}#
                                                 (#{fx+\ 141}#
                                                   #{i\ 1951}#
                                                   1)))))))
                                (#{f\ 1950}# 0)))))
                        (#{search-list-rib\ 1922}#
                          (lambda (#{sym\ 1959}#
                                   #{subst\ 1960}#
                                   #{marks\ 1961}#
                                   #{symnames\ 1962}#
                                   #{ribcage\ 1963}#)
                            (letrec ((#{f\ 1972}#
                                       (lambda (#{symnames\ 1973}# #{i\ 1974}#)
                                         (if (null? #{symnames\ 1973}#)
                                           (#{search\ 1920}#
                                             #{sym\ 1959}#
                                             (cdr #{subst\ 1960}#)
                                             #{marks\ 1961}#)
                                           (if (if (eq? (car #{symnames\ 1973}#)
                                                        #{sym\ 1959}#)
                                                 (#{same-marks?\ 295}#
                                                   #{marks\ 1961}#
                                                   (list-ref
                                                     (#{ribcage-marks\ 267}#
                                                       #{ribcage\ 1963}#)
                                                     #{i\ 1974}#))
                                                 #f)
                                             (values
                                               (list-ref
                                                 (#{ribcage-labels\ 269}#
                                                   #{ribcage\ 1963}#)
                                                 #{i\ 1974}#)
                                               #{marks\ 1961}#)
                                             (#{f\ 1972}#
                                               (cdr #{symnames\ 1973}#)
                                               (#{fx+\ 141}#
                                                 #{i\ 1974}#
                                                 1)))))))
                              (#{f\ 1972}# #{symnames\ 1962}# 0))))
                        (#{search\ 1920}#
                          (lambda (#{sym\ 1982}#
                                   #{subst\ 1983}#
                                   #{marks\ 1984}#)
                            (if (null? #{subst\ 1983}#)
                              (values #f #{marks\ 1984}#)
                              (let ((#{fst\ 1989}# (car #{subst\ 1983}#)))
                                (if (eq? #{fst\ 1989}# (quote shift))
                                  (#{search\ 1920}#
                                    #{sym\ 1982}#
                                    (cdr #{subst\ 1983}#)
                                    (cdr #{marks\ 1984}#))
                                  (let ((#{symnames\ 1991}#
                                          (#{ribcage-symnames\ 265}#
                                            #{fst\ 1989}#)))
                                    (if (vector? #{symnames\ 1991}#)
                                      (#{search-vector-rib\ 1924}#
                                        #{sym\ 1982}#
                                        #{subst\ 1983}#
                                        #{marks\ 1984}#
                                        #{symnames\ 1991}#
                                        #{fst\ 1989}#)
                                      (#{search-list-rib\ 1922}#
                                        #{sym\ 1982}#
                                        #{subst\ 1983}#
                                        #{marks\ 1984}#
                                        #{symnames\ 1991}#
                                        #{fst\ 1989}#)))))))))
                 (if (symbol? #{id\ 1914}#)
                   (let ((#{t\ 1994}#
                           (call-with-values
                             (lambda ()
                               (#{search\ 1920}#
                                 #{id\ 1914}#
                                 (#{wrap-subst\ 249}# #{w\ 1915}#)
                                 (#{wrap-marks\ 247}# #{w\ 1915}#)))
                             (lambda (#{x\ 1996}# . #{ignore\ 1997}#)
                               #{x\ 1996}#))))
                     (if #{t\ 1994}# #{t\ 1994}# #{id\ 1914}#))
                   (if (#{syntax-object?\ 204}# #{id\ 1914}#)
                     (let ((#{id\ 2005}#
                             (#{syntax-object-expression\ 206}# #{id\ 1914}#))
                           (#{w1\ 2006}#
                             (#{syntax-object-wrap\ 208}# #{id\ 1914}#)))
                       (let ((#{marks\ 2008}#
                               (#{join-marks\ 293}#
                                 (#{wrap-marks\ 247}# #{w\ 1915}#)
                                 (#{wrap-marks\ 247}# #{w1\ 2006}#))))
                         (call-with-values
                           (lambda ()
                             (#{search\ 1920}#
                               #{id\ 2005}#
                               (#{wrap-subst\ 249}# #{w\ 1915}#)
                               #{marks\ 2008}#))
                           (lambda (#{new-id\ 2009}# #{marks\ 2010}#)
                             (let ((#{t\ 2015}# #{new-id\ 2009}#))
                               (if #{t\ 2015}#
                                 #{t\ 2015}#
                                 (let ((#{t\ 2018}#
                                         (call-with-values
                                           (lambda ()
                                             (#{search\ 1920}#
                                               #{id\ 2005}#
                                               (#{wrap-subst\ 249}#
                                                 #{w1\ 2006}#)
                                               #{marks\ 2010}#))
                                           (lambda (#{x\ 2020}#
                                                    .
                                                    #{ignore\ 2021}#)
                                             #{x\ 2020}#))))
                                   (if #{t\ 2018}#
                                     #{t\ 2018}#
                                     #{id\ 2005}#))))))))
                     (syntax-violation
                       'id-var-name
                       "invalid id"
                       #{id\ 1914}#))))))
           (#{same-marks?\ 295}#
             (lambda (#{x\ 2026}# #{y\ 2027}#)
               (let ((#{t\ 2032}# (eq? #{x\ 2026}# #{y\ 2027}#)))
                 (if #{t\ 2032}#
                   #{t\ 2032}#
                   (if (not (null? #{x\ 2026}#))
                     (if (not (null? #{y\ 2027}#))
                       (if (eq? (car #{x\ 2026}#) (car #{y\ 2027}#))
                         (#{same-marks?\ 295}#
                           (cdr #{x\ 2026}#)
                           (cdr #{y\ 2027}#))
                         #f)
                       #f)
                     #f)))))
           (#{join-marks\ 293}#
             (lambda (#{m1\ 2038}# #{m2\ 2039}#)
               (#{smart-append\ 289}# #{m1\ 2038}# #{m2\ 2039}#)))
           (#{join-wraps\ 291}#
             (lambda (#{w1\ 2042}# #{w2\ 2043}#)
               (let ((#{m1\ 2048}# (#{wrap-marks\ 247}# #{w1\ 2042}#))
                     (#{s1\ 2049}# (#{wrap-subst\ 249}# #{w1\ 2042}#)))
                 (if (null? #{m1\ 2048}#)
                   (if (null? #{s1\ 2049}#)
                     #{w2\ 2043}#
                     (#{make-wrap\ 245}#
                       (#{wrap-marks\ 247}# #{w2\ 2043}#)
                       (#{smart-append\ 289}#
                         #{s1\ 2049}#
                         (#{wrap-subst\ 249}# #{w2\ 2043}#))))
                   (#{make-wrap\ 245}#
                     (#{smart-append\ 289}#
                       #{m1\ 2048}#
                       (#{wrap-marks\ 247}# #{w2\ 2043}#))
                     (#{smart-append\ 289}#
                       #{s1\ 2049}#
                       (#{wrap-subst\ 249}# #{w2\ 2043}#)))))))
           (#{smart-append\ 289}#
             (lambda (#{m1\ 2050}# #{m2\ 2051}#)
               (if (null? #{m2\ 2051}#)
                 #{m1\ 2050}#
                 (append #{m1\ 2050}# #{m2\ 2051}#))))
           (#{make-binding-wrap\ 287}#
             (lambda (#{ids\ 2054}# #{labels\ 2055}# #{w\ 2056}#)
               (if (null? #{ids\ 2054}#)
                 #{w\ 2056}#
                 (#{make-wrap\ 245}#
                   (#{wrap-marks\ 247}# #{w\ 2056}#)
                   (cons (let ((#{labelvec\ 2061}#
                                 (list->vector #{labels\ 2055}#)))
                           (let ((#{n\ 2063}#
                                   (vector-length #{labelvec\ 2061}#)))
                             (let ((#{symnamevec\ 2066}#
                                     (make-vector #{n\ 2063}#))
                                   (#{marksvec\ 2067}#
                                     (make-vector #{n\ 2063}#)))
                               (begin
                                 (letrec ((#{f\ 2071}#
                                            (lambda (#{ids\ 2072}# #{i\ 2073}#)
                                              (if (not (null? #{ids\ 2072}#))
                                                (call-with-values
                                                  (lambda ()
                                                    (#{id-sym-name&marks\ 243}#
                                                      (car #{ids\ 2072}#)
                                                      #{w\ 2056}#))
                                                  (lambda (#{symname\ 2074}#
                                                           #{marks\ 2075}#)
                                                    (begin
                                                      (vector-set!
                                                        #{symnamevec\ 2066}#
                                                        #{i\ 2073}#
                                                        #{symname\ 2074}#)
                                                      (vector-set!
                                                        #{marksvec\ 2067}#
                                                        #{i\ 2073}#
                                                        #{marks\ 2075}#)
                                                      (#{f\ 2071}#
                                                        (cdr #{ids\ 2072}#)
                                                        (#{fx+\ 141}#
                                                          #{i\ 2073}#
                                                          1)))))))))
                                   (#{f\ 2071}# #{ids\ 2054}# 0))
                                 (#{make-ribcage\ 261}#
                                   #{symnamevec\ 2066}#
                                   #{marksvec\ 2067}#
                                   #{labelvec\ 2061}#)))))
                         (#{wrap-subst\ 249}# #{w\ 2056}#))))))
           (#{extend-ribcage!\ 285}#
             (lambda (#{ribcage\ 2078}# #{id\ 2079}# #{label\ 2080}#)
               (begin
                 (#{set-ribcage-symnames!\ 271}#
                   #{ribcage\ 2078}#
                   (cons (#{syntax-object-expression\ 206}# #{id\ 2079}#)
                         (#{ribcage-symnames\ 265}# #{ribcage\ 2078}#)))
                 (#{set-ribcage-marks!\ 273}#
                   #{ribcage\ 2078}#
                   (cons (#{wrap-marks\ 247}#
                           (#{syntax-object-wrap\ 208}# #{id\ 2079}#))
                         (#{ribcage-marks\ 267}# #{ribcage\ 2078}#)))
                 (#{set-ribcage-labels!\ 275}#
                   #{ribcage\ 2078}#
                   (cons #{label\ 2080}#
                         (#{ribcage-labels\ 269}# #{ribcage\ 2078}#))))))
           (#{anti-mark\ 281}#
             (lambda (#{w\ 2084}#)
               (#{make-wrap\ 245}#
                 (cons #f (#{wrap-marks\ 247}# #{w\ 2084}#))
                 (cons 'shift
                       (#{wrap-subst\ 249}# #{w\ 2084}#)))))
           (#{set-ribcage-labels!\ 275}#
             (lambda (#{x\ 2087}# #{update\ 2088}#)
               (vector-set! #{x\ 2087}# 3 #{update\ 2088}#)))
           (#{set-ribcage-marks!\ 273}#
             (lambda (#{x\ 2091}# #{update\ 2092}#)
               (vector-set! #{x\ 2091}# 2 #{update\ 2092}#)))
           (#{set-ribcage-symnames!\ 271}#
             (lambda (#{x\ 2095}# #{update\ 2096}#)
               (vector-set! #{x\ 2095}# 1 #{update\ 2096}#)))
           (#{ribcage-labels\ 269}#
             (lambda (#{x\ 2099}#) (vector-ref #{x\ 2099}# 3)))
           (#{ribcage-marks\ 267}#
             (lambda (#{x\ 2101}#) (vector-ref #{x\ 2101}# 2)))
           (#{ribcage-symnames\ 265}#
             (lambda (#{x\ 2103}#) (vector-ref #{x\ 2103}# 1)))
           (#{ribcage?\ 263}#
             (lambda (#{x\ 2105}#)
               (if (vector? #{x\ 2105}#)
                 (if (= (vector-length #{x\ 2105}#) 4)
                   (eq? (vector-ref #{x\ 2105}# 0) (quote ribcage))
                   #f)
                 #f)))
           (#{make-ribcage\ 261}#
             (lambda (#{symnames\ 2110}#
                      #{marks\ 2111}#
                      #{labels\ 2112}#)
               (vector
                 'ribcage
                 #{symnames\ 2110}#
                 #{marks\ 2111}#
                 #{labels\ 2112}#)))
           (#{gen-labels\ 258}#
             (lambda (#{ls\ 2116}#)
               (if (null? #{ls\ 2116}#)
                 '()
                 (cons (#{gen-label\ 256}#)
                       (#{gen-labels\ 258}# (cdr #{ls\ 2116}#))))))
           (#{gen-label\ 256}#
             (lambda () (symbol->string (gensym "i"))))
           (#{wrap-subst\ 249}# cdr)
           (#{wrap-marks\ 247}# car)
           (#{make-wrap\ 245}# cons)
           (#{id-sym-name&marks\ 243}#
             (lambda (#{x\ 2118}# #{w\ 2119}#)
               (if (#{syntax-object?\ 204}# #{x\ 2118}#)
                 (values
                   (#{syntax-object-expression\ 206}# #{x\ 2118}#)
                   (#{join-marks\ 293}#
                     (#{wrap-marks\ 247}# #{w\ 2119}#)
                     (#{wrap-marks\ 247}#
                       (#{syntax-object-wrap\ 208}# #{x\ 2118}#))))
                 (values
                   #{x\ 2118}#
                   (#{wrap-marks\ 247}# #{w\ 2119}#)))))
           (#{id?\ 240}#
             (lambda (#{x\ 2122}#)
               (if (symbol? #{x\ 2122}#)
                 #t
                 (if (#{syntax-object?\ 204}# #{x\ 2122}#)
                   (symbol?
                     (#{syntax-object-expression\ 206}# #{x\ 2122}#))
                   #f))))
           (#{nonsymbol-id?\ 238}#
             (lambda (#{x\ 2129}#)
               (if (#{syntax-object?\ 204}# #{x\ 2129}#)
                 (symbol?
                   (#{syntax-object-expression\ 206}# #{x\ 2129}#))
                 #f)))
           (#{global-extend\ 236}#
             (lambda (#{type\ 2133}# #{sym\ 2134}# #{val\ 2135}#)
               (#{put-global-definition-hook\ 154}#
                 #{sym\ 2134}#
                 #{type\ 2133}#
                 #{val\ 2135}#)))
           (#{lookup\ 234}#
             (lambda (#{x\ 2139}# #{r\ 2140}# #{mod\ 2141}#)
               (let ((#{t\ 2147}# (assq #{x\ 2139}# #{r\ 2140}#)))
                 (if #{t\ 2147}#
                   (cdr #{t\ 2147}#)
                   (if (symbol? #{x\ 2139}#)
                     (let ((#{t\ 2153}#
                             (#{get-global-definition-hook\ 156}#
                               #{x\ 2139}#
                               #{mod\ 2141}#)))
                       (if #{t\ 2153}# #{t\ 2153}# (quote (global))))
                     '(displaced-lexical))))))
           (#{macros-only-env\ 232}#
             (lambda (#{r\ 2158}#)
               (if (null? #{r\ 2158}#)
                 '()
                 (let ((#{a\ 2161}# (car #{r\ 2158}#)))
                   (if (eq? (cadr #{a\ 2161}#) (quote macro))
                     (cons #{a\ 2161}#
                           (#{macros-only-env\ 232}# (cdr #{r\ 2158}#)))
                     (#{macros-only-env\ 232}# (cdr #{r\ 2158}#)))))))
           (#{extend-var-env\ 230}#
             (lambda (#{labels\ 2162}# #{vars\ 2163}# #{r\ 2164}#)
               (if (null? #{labels\ 2162}#)
                 #{r\ 2164}#
                 (#{extend-var-env\ 230}#
                   (cdr #{labels\ 2162}#)
                   (cdr #{vars\ 2163}#)
                   (cons (cons (car #{labels\ 2162}#)
                               (cons (quote lexical) (car #{vars\ 2163}#)))
                         #{r\ 2164}#)))))
           (#{extend-env\ 228}#
             (lambda (#{labels\ 2169}# #{bindings\ 2170}# #{r\ 2171}#)
               (if (null? #{labels\ 2169}#)
                 #{r\ 2171}#
                 (#{extend-env\ 228}#
                   (cdr #{labels\ 2169}#)
                   (cdr #{bindings\ 2170}#)
                   (cons (cons (car #{labels\ 2169}#)
                               (car #{bindings\ 2170}#))
                         #{r\ 2171}#)))))
           (#{binding-value\ 225}# cdr)
           (#{binding-type\ 223}# car)
           (#{source-annotation\ 219}#
             (lambda (#{x\ 2175}#)
               (if (#{syntax-object?\ 204}# #{x\ 2175}#)
                 (#{source-annotation\ 219}#
                   (#{syntax-object-expression\ 206}# #{x\ 2175}#))
                 (if (pair? #{x\ 2175}#)
                   (let ((#{props\ 2182}# (source-properties #{x\ 2175}#)))
                     (if (pair? #{props\ 2182}#) #{props\ 2182}# #f))
                   #f))))
           (#{set-syntax-object-module!\ 216}#
             (lambda (#{x\ 2184}# #{update\ 2185}#)
               (vector-set! #{x\ 2184}# 3 #{update\ 2185}#)))
           (#{set-syntax-object-wrap!\ 214}#
             (lambda (#{x\ 2188}# #{update\ 2189}#)
               (vector-set! #{x\ 2188}# 2 #{update\ 2189}#)))
           (#{set-syntax-object-expression!\ 212}#
             (lambda (#{x\ 2192}# #{update\ 2193}#)
               (vector-set! #{x\ 2192}# 1 #{update\ 2193}#)))
           (#{syntax-object-module\ 210}#
             (lambda (#{x\ 2196}#) (vector-ref #{x\ 2196}# 3)))
           (#{syntax-object-wrap\ 208}#
             (lambda (#{x\ 2198}#) (vector-ref #{x\ 2198}# 2)))
           (#{syntax-object-expression\ 206}#
             (lambda (#{x\ 2200}#) (vector-ref #{x\ 2200}# 1)))
           (#{syntax-object?\ 204}#
             (lambda (#{x\ 2202}#)
               (if (vector? #{x\ 2202}#)
                 (if (= (vector-length #{x\ 2202}#) 4)
                   (eq? (vector-ref #{x\ 2202}# 0)
                        'syntax-object)
                   #f)
                 #f)))
           (#{make-syntax-object\ 202}#
             (lambda (#{expression\ 2207}#
                      #{wrap\ 2208}#
                      #{module\ 2209}#)
               (vector
                 'syntax-object
                 #{expression\ 2207}#
                 #{wrap\ 2208}#
                 #{module\ 2209}#)))
           (#{build-letrec\ 198}#
             (lambda (#{src\ 2213}#
                      #{ids\ 2214}#
                      #{vars\ 2215}#
                      #{val-exps\ 2216}#
                      #{body-exp\ 2217}#)
               (if (null? #{vars\ 2215}#)
                 #{body-exp\ 2217}#
                 (let ((#{atom-key\ 2225}# (fluid-ref #{*mode*\ 139}#)))
                   (if (memv #{atom-key\ 2225}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 178}#
                         #{ids\ 2214}#
                         #{val-exps\ 2216}#)
                       ((@ (language tree-il) make-letrec)
                        #{src\ 2213}#
                        #{ids\ 2214}#
                        #{vars\ 2215}#
                        #{val-exps\ 2216}#
                        #{body-exp\ 2217}#))
                     (#{decorate-source\ 158}#
                       (list 'letrec
                             (map list #{vars\ 2215}# #{val-exps\ 2216}#)
                             #{body-exp\ 2217}#)
                       #{src\ 2213}#))))))
           (#{build-named-let\ 196}#
             (lambda (#{src\ 2229}#
                      #{ids\ 2230}#
                      #{vars\ 2231}#
                      #{val-exps\ 2232}#
                      #{body-exp\ 2233}#)
               (let ((#{f\ 2243}# (car #{vars\ 2231}#))
                     (#{f-name\ 2244}# (car #{ids\ 2230}#))
                     (#{vars\ 2245}# (cdr #{vars\ 2231}#))
                     (#{ids\ 2246}# (cdr #{ids\ 2230}#)))
                 (let ((#{atom-key\ 2249}# (fluid-ref #{*mode*\ 139}#)))
                   (if (memv #{atom-key\ 2249}# (quote (c)))
                     (let ((#{proc\ 2252}#
                             (#{build-simple-lambda\ 182}#
                               #{src\ 2229}#
                               #{ids\ 2246}#
                               #f
                               #{vars\ 2245}#
                               #f
                               #{body-exp\ 2233}#)))
                       (begin
                         (#{maybe-name-value!\ 178}#
                           #{f-name\ 2244}#
                           #{proc\ 2252}#)
                         (for-each
                           #{maybe-name-value!\ 178}#
                           #{ids\ 2246}#
                           #{val-exps\ 2232}#)
                         ((@ (language tree-il) make-letrec)
                          #{src\ 2229}#
                          (list #{f-name\ 2244}#)
                          (list #{f\ 2243}#)
                          (list #{proc\ 2252}#)
                          (#{build-application\ 162}#
                            #{src\ 2229}#
                            (#{build-lexical-reference\ 168}#
                              'fun
                              #{src\ 2229}#
                              #{f-name\ 2244}#
                              #{f\ 2243}#)
                            #{val-exps\ 2232}#))))
                     (#{decorate-source\ 158}#
                       (list 'letrec
                             (list (list #{f\ 2243}#
                                         (list 'lambda
                                               #{vars\ 2245}#
                                               #{body-exp\ 2233}#)))
                             (cons #{f\ 2243}# #{val-exps\ 2232}#))
                       #{src\ 2229}#))))))
           (#{build-let\ 194}#
             (lambda (#{src\ 2255}#
                      #{ids\ 2256}#
                      #{vars\ 2257}#
                      #{val-exps\ 2258}#
                      #{body-exp\ 2259}#)
               (if (null? #{vars\ 2257}#)
                 #{body-exp\ 2259}#
                 (let ((#{atom-key\ 2267}# (fluid-ref #{*mode*\ 139}#)))
                   (if (memv #{atom-key\ 2267}# (quote (c)))
                     (begin
                       (for-each
                         #{maybe-name-value!\ 178}#
                         #{ids\ 2256}#
                         #{val-exps\ 2258}#)
                       ((@ (language tree-il) make-let)
                        #{src\ 2255}#
                        #{ids\ 2256}#
                        #{vars\ 2257}#
                        #{val-exps\ 2258}#
                        #{body-exp\ 2259}#))
                     (#{decorate-source\ 158}#
                       (list 'let
                             (map list #{vars\ 2257}# #{val-exps\ 2258}#)
                             #{body-exp\ 2259}#)
                       #{src\ 2255}#))))))
           (#{build-sequence\ 192}#
             (lambda (#{src\ 2271}# #{exps\ 2272}#)
               (if (null? (cdr #{exps\ 2272}#))
                 (car #{exps\ 2272}#)
                 (let ((#{atom-key\ 2277}# (fluid-ref #{*mode*\ 139}#)))
                   (if (memv #{atom-key\ 2277}# (quote (c)))
                     ((@ (language tree-il) make-sequence)
                      #{src\ 2271}#
                      #{exps\ 2272}#)
                     (#{decorate-source\ 158}#
                       (cons (quote begin) #{exps\ 2272}#)
                       #{src\ 2271}#))))))
           (#{build-data\ 190}#
             (lambda (#{src\ 2281}# #{exp\ 2282}#)
               (let ((#{atom-key\ 2287}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2287}# (quote (c)))
                   ((@ (language tree-il) make-const)
                    #{src\ 2281}#
                    #{exp\ 2282}#)
                   (#{decorate-source\ 158}#
                     (if (if (self-evaluating? #{exp\ 2282}#)
                           (not (vector? #{exp\ 2282}#))
                           #f)
                       #{exp\ 2282}#
                       (list (quote quote) #{exp\ 2282}#))
                     #{src\ 2281}#)))))
           (#{build-primref\ 188}#
             (lambda (#{src\ 2292}# #{name\ 2293}#)
               (if (equal?
                     (module-name (current-module))
                     '(guile))
                 (let ((#{atom-key\ 2298}# (fluid-ref #{*mode*\ 139}#)))
                   (if (memv #{atom-key\ 2298}# (quote (c)))
                     ((@ (language tree-il) make-toplevel-ref)
                      #{src\ 2292}#
                      #{name\ 2293}#)
                     (#{decorate-source\ 158}#
                       #{name\ 2293}#
                       #{src\ 2292}#)))
                 (let ((#{atom-key\ 2303}# (fluid-ref #{*mode*\ 139}#)))
                   (if (memv #{atom-key\ 2303}# (quote (c)))
                     ((@ (language tree-il) make-module-ref)
                      #{src\ 2292}#
                      '(guile)
                      #{name\ 2293}#
                      #f)
                     (#{decorate-source\ 158}#
                       (list (quote @@) (quote (guile)) #{name\ 2293}#)
                       #{src\ 2292}#))))))
           (#{build-lambda-case\ 186}#
             (lambda (#{src\ 2307}#
                      #{req\ 2308}#
                      #{opt\ 2309}#
                      #{rest\ 2310}#
                      #{kw\ 2311}#
                      #{inits\ 2312}#
                      #{vars\ 2313}#
                      #{body\ 2314}#
                      #{else-case\ 2315}#)
               (let ((#{atom-key\ 2327}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2327}# (quote (c)))
                   ((@ (language tree-il) make-lambda-case)
                    #{src\ 2307}#
                    #{req\ 2308}#
                    #{opt\ 2309}#
                    #{rest\ 2310}#
                    #{kw\ 2311}#
                    #{inits\ 2312}#
                    #{vars\ 2313}#
                    #{body\ 2314}#
                    #{else-case\ 2315}#)
                   (let ((#{nreq\ 2332}# (length #{req\ 2308}#)))
                     (let ((#{nopt\ 2334}#
                             (if #{opt\ 2309}# (length #{opt\ 2309}#) 0)))
                       (let ((#{rest-idx\ 2336}#
                               (if #{rest\ 2310}#
                                 (+ #{nreq\ 2332}# #{nopt\ 2334}#)
                                 #f)))
                         (let ((#{allow-other-keys?\ 2340}#
                                 (if #{kw\ 2311}# (car #{kw\ 2311}#) #f)))
                           (let ((#{kw-indices\ 2342}#
                                   (map (lambda (#{x\ 2343}#)
                                          (cons (car #{x\ 2343}#)
                                                (list-index
                                                  #{vars\ 2313}#
                                                  (caddr #{x\ 2343}#))))
                                        (if #{kw\ 2311}#
                                          (cdr #{kw\ 2311}#)
                                          '()))))
                             (let ((#{nargs\ 2346}#
                                     (apply max
                                            (+ #{nreq\ 2332}#
                                               #{nopt\ 2334}#
                                               (if #{rest\ 2310}# 1 0))
                                            (map 1+
                                                 (map cdr
                                                      #{kw-indices\ 2342}#)))))
                               (begin
                                 (let ((#{t\ 2349}#
                                         (= #{nargs\ 2346}#
                                            (length #{vars\ 2313}#)
                                            (+ #{nreq\ 2332}#
                                               (length #{inits\ 2312}#)
                                               (if #{rest\ 2310}# 1 0)))))
                                   (if #{t\ 2349}#
                                     #{t\ 2349}#
                                     (error "something went wrong"
                                            #{req\ 2308}#
                                            #{opt\ 2309}#
                                            #{rest\ 2310}#
                                            #{kw\ 2311}#
                                            #{inits\ 2312}#
                                            #{vars\ 2313}#
                                            #{nreq\ 2332}#
                                            #{nopt\ 2334}#
                                            #{kw-indices\ 2342}#
                                            #{nargs\ 2346}#)))
                                 (#{decorate-source\ 158}#
                                   (cons (list (cons '(@@ (ice-9 optargs)
                                                          parse-lambda-case)
                                                     (cons (list 'quote
                                                                 (list #{nreq\ 2332}#
                                                                       #{nopt\ 2334}#
                                                                       #{rest-idx\ 2336}#
                                                                       #{nargs\ 2346}#
                                                                       #{allow-other-keys?\ 2340}#
                                                                       #{kw-indices\ 2342}#))
                                                           (cons (cons 'list
                                                                       (map (lambda (#{i\ 2352}#)
                                                                              (list 'lambda
                                                                                    #{vars\ 2313}#
                                                                                    #{i\ 2352}#))
                                                                            #{inits\ 2312}#))
                                                                 '(%%args))))
                                               '=>
                                               (list 'lambda
                                                     '(%%args)
                                                     (cons 'apply
                                                           (cons (list 'lambda
                                                                       #{vars\ 2313}#
                                                                       #{body\ 2314}#)
                                                                 '(%%args)))))
                                         (let ((#{t\ 2357}#
                                                 #{else-case\ 2315}#))
                                           (if #{t\ 2357}#
                                             #{t\ 2357}#
                                             '((%%args
                                                 (scm-error
                                                   'wrong-number-of-args
                                                   #f
                                                   "Wrong number of arguments"
                                                   '()
                                                   %%args))))))
                                   #{src\ 2307}#))))))))))))
           (#{build-case-lambda\ 184}#
             (lambda (#{src\ 2360}#
                      #{docstring\ 2361}#
                      #{body\ 2362}#)
               (let ((#{atom-key\ 2368}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2368}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 2360}#
                    (if #{docstring\ 2361}#
                      (list (cons (quote documentation) #{docstring\ 2361}#))
                      '())
                    #{body\ 2362}#)
                   (#{decorate-source\ 158}#
                     (cons 'lambda
                           (cons '%%args
                                 (append
                                   (if #{docstring\ 2361}#
                                     (list #{docstring\ 2361}#)
                                     '())
                                   (list (cons (quote cond) #{body\ 2362}#)))))
                     #{src\ 2360}#)))))
           (#{build-simple-lambda\ 182}#
             (lambda (#{src\ 2373}#
                      #{req\ 2374}#
                      #{rest\ 2375}#
                      #{vars\ 2376}#
                      #{docstring\ 2377}#
                      #{exp\ 2378}#)
               (let ((#{atom-key\ 2387}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2387}# (quote (c)))
                   ((@ (language tree-il) make-lambda)
                    #{src\ 2373}#
                    (if #{docstring\ 2377}#
                      (list (cons (quote documentation) #{docstring\ 2377}#))
                      '())
                    ((@ (language tree-il) make-lambda-case)
                     #{src\ 2373}#
                     #{req\ 2374}#
                     #f
                     #{rest\ 2375}#
                     #f
                     '()
                     #{vars\ 2376}#
                     #{exp\ 2378}#
                     #f))
                   (#{decorate-source\ 158}#
                     (cons 'lambda
                           (cons (if #{rest\ 2375}#
                                   (apply cons* #{vars\ 2376}#)
                                   #{vars\ 2376}#)
                                 (append
                                   (if #{docstring\ 2377}#
                                     (list #{docstring\ 2377}#)
                                     '())
                                   (list #{exp\ 2378}#))))
                     #{src\ 2373}#)))))
           (#{build-global-definition\ 180}#
             (lambda (#{source\ 2392}# #{var\ 2393}# #{exp\ 2394}#)
               (let ((#{atom-key\ 2400}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2400}# (quote (c)))
                   (begin
                     (#{maybe-name-value!\ 178}#
                       #{var\ 2393}#
                       #{exp\ 2394}#)
                     ((@ (language tree-il) make-toplevel-define)
                      #{source\ 2392}#
                      #{var\ 2393}#
                      #{exp\ 2394}#))
                   (#{decorate-source\ 158}#
                     (list (quote define) #{var\ 2393}# #{exp\ 2394}#)
                     #{source\ 2392}#)))))
           (#{maybe-name-value!\ 178}#
             (lambda (#{name\ 2404}# #{val\ 2405}#)
               (if ((@ (language tree-il) lambda?) #{val\ 2405}#)
                 (let ((#{meta\ 2411}#
                         ((@ (language tree-il) lambda-meta)
                          #{val\ 2405}#)))
                   (if (not (assq (quote name) #{meta\ 2411}#))
                     ((setter (@ (language tree-il) lambda-meta))
                      #{val\ 2405}#
                      (acons 'name
                             #{name\ 2404}#
                             #{meta\ 2411}#)))))))
           (#{build-global-assignment\ 176}#
             (lambda (#{source\ 2412}#
                      #{var\ 2413}#
                      #{exp\ 2414}#
                      #{mod\ 2415}#)
               (#{analyze-variable\ 172}#
                 #{mod\ 2415}#
                 #{var\ 2413}#
                 (lambda (#{mod\ 2420}# #{var\ 2421}# #{public?\ 2422}#)
                   (let ((#{atom-key\ 2428}# (fluid-ref #{*mode*\ 139}#)))
                     (if (memv #{atom-key\ 2428}# (quote (c)))
                       ((@ (language tree-il) make-module-set)
                        #{source\ 2412}#
                        #{mod\ 2420}#
                        #{var\ 2421}#
                        #{public?\ 2422}#
                        #{exp\ 2414}#)
                       (#{decorate-source\ 158}#
                         (list 'set!
                               (list (if #{public?\ 2422}#
                                       '@
                                       '@@)
                                     #{mod\ 2420}#
                                     #{var\ 2421}#)
                               #{exp\ 2414}#)
                         #{source\ 2412}#))))
                 (lambda (#{var\ 2432}#)
                   (let ((#{atom-key\ 2436}# (fluid-ref #{*mode*\ 139}#)))
                     (if (memv #{atom-key\ 2436}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-set)
                        #{source\ 2412}#
                        #{var\ 2432}#
                        #{exp\ 2414}#)
                       (#{decorate-source\ 158}#
                         (list (quote set!) #{var\ 2432}# #{exp\ 2414}#)
                         #{source\ 2412}#)))))))
           (#{build-global-reference\ 174}#
             (lambda (#{source\ 2440}# #{var\ 2441}# #{mod\ 2442}#)
               (#{analyze-variable\ 172}#
                 #{mod\ 2442}#
                 #{var\ 2441}#
                 (lambda (#{mod\ 2446}# #{var\ 2447}# #{public?\ 2448}#)
                   (let ((#{atom-key\ 2454}# (fluid-ref #{*mode*\ 139}#)))
                     (if (memv #{atom-key\ 2454}# (quote (c)))
                       ((@ (language tree-il) make-module-ref)
                        #{source\ 2440}#
                        #{mod\ 2446}#
                        #{var\ 2447}#
                        #{public?\ 2448}#)
                       (#{decorate-source\ 158}#
                         (list (if #{public?\ 2448}# (quote @) (quote @@))
                               #{mod\ 2446}#
                               #{var\ 2447}#)
                         #{source\ 2440}#))))
                 (lambda (#{var\ 2457}#)
                   (let ((#{atom-key\ 2461}# (fluid-ref #{*mode*\ 139}#)))
                     (if (memv #{atom-key\ 2461}# (quote (c)))
                       ((@ (language tree-il) make-toplevel-ref)
                        #{source\ 2440}#
                        #{var\ 2457}#)
                       (#{decorate-source\ 158}#
                         #{var\ 2457}#
                         #{source\ 2440}#)))))))
           (#{analyze-variable\ 172}#
             (lambda (#{mod\ 2464}#
                      #{var\ 2465}#
                      #{modref-cont\ 2466}#
                      #{bare-cont\ 2467}#)
               (if (not #{mod\ 2464}#)
                 (#{bare-cont\ 2467}# #{var\ 2465}#)
                 (let ((#{kind\ 2474}# (car #{mod\ 2464}#))
                       (#{mod\ 2475}# (cdr #{mod\ 2464}#)))
                   (if (memv #{kind\ 2474}# (quote (public)))
                     (#{modref-cont\ 2466}#
                       #{mod\ 2475}#
                       #{var\ 2465}#
                       #t)
                     (if (memv #{kind\ 2474}# (quote (private)))
                       (if (not (equal?
                                  #{mod\ 2475}#
                                  (module-name (current-module))))
                         (#{modref-cont\ 2466}#
                           #{mod\ 2475}#
                           #{var\ 2465}#
                           #f)
                         (#{bare-cont\ 2467}# #{var\ 2465}#))
                       (if (memv #{kind\ 2474}# (quote (bare)))
                         (#{bare-cont\ 2467}# #{var\ 2465}#)
                         (if (memv #{kind\ 2474}# (quote (hygiene)))
                           (if (if (not (equal?
                                          #{mod\ 2475}#
                                          (module-name (current-module))))
                                 (module-variable
                                   (resolve-module #{mod\ 2475}#)
                                   #{var\ 2465}#)
                                 #f)
                             (#{modref-cont\ 2466}#
                               #{mod\ 2475}#
                               #{var\ 2465}#
                               #f)
                             (#{bare-cont\ 2467}# #{var\ 2465}#))
                           (syntax-violation
                             #f
                             "bad module kind"
                             #{var\ 2465}#
                             #{mod\ 2475}#)))))))))
           (#{build-lexical-assignment\ 170}#
             (lambda (#{source\ 2483}#
                      #{name\ 2484}#
                      #{var\ 2485}#
                      #{exp\ 2486}#)
               (let ((#{atom-key\ 2493}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2493}# (quote (c)))
                   ((@ (language tree-il) make-lexical-set)
                    #{source\ 2483}#
                    #{name\ 2484}#
                    #{var\ 2485}#
                    #{exp\ 2486}#)
                   (#{decorate-source\ 158}#
                     (list (quote set!) #{var\ 2485}# #{exp\ 2486}#)
                     #{source\ 2483}#)))))
           (#{build-lexical-reference\ 168}#
             (lambda (#{type\ 2497}#
                      #{source\ 2498}#
                      #{name\ 2499}#
                      #{var\ 2500}#)
               (let ((#{atom-key\ 2507}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2507}# (quote (c)))
                   ((@ (language tree-il) make-lexical-ref)
                    #{source\ 2498}#
                    #{name\ 2499}#
                    #{var\ 2500}#)
                   (#{decorate-source\ 158}#
                     #{var\ 2500}#
                     #{source\ 2498}#)))))
           (#{build-dynlet\ 166}#
             (lambda (#{source\ 2510}#
                      #{fluids\ 2511}#
                      #{vals\ 2512}#
                      #{body\ 2513}#)
               (let ((#{atom-key\ 2520}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2520}# (quote (c)))
                   ((@ (language tree-il) make-dynlet)
                    #{source\ 2510}#
                    #{fluids\ 2511}#
                    #{vals\ 2512}#
                    #{body\ 2513}#)
                   (#{decorate-source\ 158}#
                     (list 'with-fluids
                           (map list #{fluids\ 2511}# #{vals\ 2512}#)
                           #{body\ 2513}#)
                     #{source\ 2510}#)))))
           (#{build-conditional\ 164}#
             (lambda (#{source\ 2524}#
                      #{test-exp\ 2525}#
                      #{then-exp\ 2526}#
                      #{else-exp\ 2527}#)
               (let ((#{atom-key\ 2534}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2534}# (quote (c)))
                   ((@ (language tree-il) make-conditional)
                    #{source\ 2524}#
                    #{test-exp\ 2525}#
                    #{then-exp\ 2526}#
                    #{else-exp\ 2527}#)
                   (#{decorate-source\ 158}#
                     (if (equal? #{else-exp\ 2527}# (quote (if #f #f)))
                       (list 'if
                             #{test-exp\ 2525}#
                             #{then-exp\ 2526}#)
                       (list 'if
                             #{test-exp\ 2525}#
                             #{then-exp\ 2526}#
                             #{else-exp\ 2527}#))
                     #{source\ 2524}#)))))
           (#{build-application\ 162}#
             (lambda (#{source\ 2539}#
                      #{fun-exp\ 2540}#
                      #{arg-exps\ 2541}#)
               (let ((#{atom-key\ 2547}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2547}# (quote (c)))
                   ((@ (language tree-il) make-application)
                    #{source\ 2539}#
                    #{fun-exp\ 2540}#
                    #{arg-exps\ 2541}#)
                   (#{decorate-source\ 158}#
                     (cons #{fun-exp\ 2540}# #{arg-exps\ 2541}#)
                     #{source\ 2539}#)))))
           (#{build-void\ 160}#
             (lambda (#{source\ 2551}#)
               (let ((#{atom-key\ 2555}# (fluid-ref #{*mode*\ 139}#)))
                 (if (memv #{atom-key\ 2555}# (quote (c)))
                   ((@ (language tree-il) make-void)
                    #{source\ 2551}#)
                   (#{decorate-source\ 158}#
                     '(if #f #f)
                     #{source\ 2551}#)))))
           (#{decorate-source\ 158}#
             (lambda (#{e\ 2558}# #{s\ 2559}#)
               (begin
                 (if (if (pair? #{e\ 2558}#) #{s\ 2559}# #f)
                   (set-source-properties! #{e\ 2558}# #{s\ 2559}#))
                 #{e\ 2558}#)))
           (#{get-global-definition-hook\ 156}#
             (lambda (#{symbol\ 2564}# #{module\ 2565}#)
               (begin
                 (if (if (not #{module\ 2565}#) (current-module) #f)
                   (warn "module system is booted, we should have a module"
                         #{symbol\ 2564}#))
                 (let ((#{v\ 2571}#
                         (module-variable
                           (if #{module\ 2565}#
                             (resolve-module (cdr #{module\ 2565}#))
                             (current-module))
                           #{symbol\ 2564}#)))
                   (if #{v\ 2571}#
                     (if (variable-bound? #{v\ 2571}#)
                       (let ((#{val\ 2576}# (variable-ref #{v\ 2571}#)))
                         (if (macro? #{val\ 2576}#)
                           (if (macro-type #{val\ 2576}#)
                             (cons (macro-type #{val\ 2576}#)
                                   (macro-binding #{val\ 2576}#))
                             #f)
                           #f))
                       #f)
                     #f)))))
           (#{put-global-definition-hook\ 154}#
             (lambda (#{symbol\ 2580}# #{type\ 2581}# #{val\ 2582}#)
               (module-define!
                 (current-module)
                 #{symbol\ 2580}#
                 (make-syntax-transformer
                   #{symbol\ 2580}#
                   #{type\ 2581}#
                   #{val\ 2582}#))))
           (#{local-eval-hook\ 151}#
             (lambda (#{x\ 2586}# #{mod\ 2587}#)
               (primitive-eval
                 (list #{noexpand\ 137}#
                       (let ((#{atom-key\ 2593}# (fluid-ref #{*mode*\ 139}#)))
                         (if (memv #{atom-key\ 2593}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 2586}#)
                           #{x\ 2586}#))))))
           (#{top-level-eval-hook\ 149}#
             (lambda (#{x\ 2596}# #{mod\ 2597}#)
               (primitive-eval
                 (list #{noexpand\ 137}#
                       (let ((#{atom-key\ 2603}# (fluid-ref #{*mode*\ 139}#)))
                         (if (memv #{atom-key\ 2603}# (quote (c)))
                           ((@ (language tree-il) tree-il->scheme)
                            #{x\ 2596}#)
                           #{x\ 2596}#))))))
           (#{fx<\ 147}# <)
           (#{fx=\ 145}# =)
           (#{fx-\ 143}# -)
           (#{fx+\ 141}# +)
           (#{*mode*\ 139}# (make-fluid))
           (#{noexpand\ 137}# "noexpand"))
    (begin
      (#{global-extend\ 236}#
        'local-syntax
        'letrec-syntax
        #t)
      (#{global-extend\ 236}#
        'local-syntax
        'let-syntax
        #f)
      (#{global-extend\ 236}#
        'core
        'fluid-let-syntax
        (lambda (#{e\ 2606}#
                 #{r\ 2607}#
                 #{w\ 2608}#
                 #{s\ 2609}#
                 #{mod\ 2610}#)
          ((lambda (#{tmp\ 2616}#)
             ((lambda (#{tmp\ 2617}#)
                (if (if #{tmp\ 2617}#
                      (apply (lambda (#{_\ 2623}#
                                      #{var\ 2624}#
                                      #{val\ 2625}#
                                      #{e1\ 2626}#
                                      #{e2\ 2627}#)
                               (#{valid-bound-ids?\ 303}# #{var\ 2624}#))
                             #{tmp\ 2617}#)
                      #f)
                  (apply (lambda (#{_\ 2634}#
                                  #{var\ 2635}#
                                  #{val\ 2636}#
                                  #{e1\ 2637}#
                                  #{e2\ 2638}#)
                           (let ((#{names\ 2640}#
                                   (map (lambda (#{x\ 2641}#)
                                          (#{id-var-name\ 297}#
                                            #{x\ 2641}#
                                            #{w\ 2608}#))
                                        #{var\ 2635}#)))
                             (begin
                               (for-each
                                 (lambda (#{id\ 2644}# #{n\ 2645}#)
                                   (let ((#{atom-key\ 2650}#
                                           (#{binding-type\ 223}#
                                             (#{lookup\ 234}#
                                               #{n\ 2645}#
                                               #{r\ 2607}#
                                               #{mod\ 2610}#))))
                                     (if (memv #{atom-key\ 2650}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'fluid-let-syntax
                                         "identifier out of context"
                                         #{e\ 2606}#
                                         (#{source-wrap\ 311}#
                                           #{id\ 2644}#
                                           #{w\ 2608}#
                                           #{s\ 2609}#
                                           #{mod\ 2610}#)))))
                                 #{var\ 2635}#
                                 #{names\ 2640}#)
                               (#{chi-body\ 333}#
                                 (cons #{e1\ 2637}# #{e2\ 2638}#)
                                 (#{source-wrap\ 311}#
                                   #{e\ 2606}#
                                   #{w\ 2608}#
                                   #{s\ 2609}#
                                   #{mod\ 2610}#)
                                 (#{extend-env\ 228}#
                                   #{names\ 2640}#
                                   (let ((#{trans-r\ 2655}#
                                           (#{macros-only-env\ 232}#
                                             #{r\ 2607}#)))
                                     (map (lambda (#{x\ 2656}#)
                                            (cons 'macro
                                                  (#{eval-local-transformer\ 337}#
                                                    (#{chi\ 325}#
                                                      #{x\ 2656}#
                                                      #{trans-r\ 2655}#
                                                      #{w\ 2608}#
                                                      #{mod\ 2610}#)
                                                    #{mod\ 2610}#)))
                                          #{val\ 2636}#))
                                   #{r\ 2607}#)
                                 #{w\ 2608}#
                                 #{mod\ 2610}#))))
                         #{tmp\ 2617}#)
                  ((lambda (#{_\ 2661}#)
                     (syntax-violation
                       'fluid-let-syntax
                       "bad syntax"
                       (#{source-wrap\ 311}#
                         #{e\ 2606}#
                         #{w\ 2608}#
                         #{s\ 2609}#
                         #{mod\ 2610}#)))
                   #{tmp\ 2616}#)))
              ($sc-dispatch
                #{tmp\ 2616}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 2606}#)))
      (#{global-extend\ 236}#
        'core
        'quote
        (lambda (#{e\ 2662}#
                 #{r\ 2663}#
                 #{w\ 2664}#
                 #{s\ 2665}#
                 #{mod\ 2666}#)
          ((lambda (#{tmp\ 2672}#)
             ((lambda (#{tmp\ 2673}#)
                (if #{tmp\ 2673}#
                  (apply (lambda (#{_\ 2676}# #{e\ 2677}#)
                           (#{build-data\ 190}#
                             #{s\ 2665}#
                             (#{strip\ 351}# #{e\ 2677}# #{w\ 2664}#)))
                         #{tmp\ 2673}#)
                  ((lambda (#{_\ 2679}#)
                     (syntax-violation
                       'quote
                       "bad syntax"
                       (#{source-wrap\ 311}#
                         #{e\ 2662}#
                         #{w\ 2664}#
                         #{s\ 2665}#
                         #{mod\ 2666}#)))
                   #{tmp\ 2672}#)))
              ($sc-dispatch #{tmp\ 2672}# (quote (any any)))))
           #{e\ 2662}#)))
      (#{global-extend\ 236}#
        'core
        'syntax
        (letrec ((#{regen\ 2695}#
                   (lambda (#{x\ 2696}#)
                     (let ((#{atom-key\ 2700}# (car #{x\ 2696}#)))
                       (if (memv #{atom-key\ 2700}# (quote (ref)))
                         (#{build-lexical-reference\ 168}#
                           'value
                           #f
                           (cadr #{x\ 2696}#)
                           (cadr #{x\ 2696}#))
                         (if (memv #{atom-key\ 2700}# (quote (primitive)))
                           (#{build-primref\ 188}# #f (cadr #{x\ 2696}#))
                           (if (memv #{atom-key\ 2700}# (quote (quote)))
                             (#{build-data\ 190}# #f (cadr #{x\ 2696}#))
                             (if (memv #{atom-key\ 2700}# (quote (lambda)))
                               (if (list? (cadr #{x\ 2696}#))
                                 (#{build-simple-lambda\ 182}#
                                   #f
                                   (cadr #{x\ 2696}#)
                                   #f
                                   (cadr #{x\ 2696}#)
                                   #f
                                   (#{regen\ 2695}# (caddr #{x\ 2696}#)))
                                 (error "how did we get here" #{x\ 2696}#))
                               (#{build-application\ 162}#
                                 #f
                                 (#{build-primref\ 188}# #f (car #{x\ 2696}#))
                                 (map #{regen\ 2695}#
                                      (cdr #{x\ 2696}#))))))))))
                 (#{gen-vector\ 2693}#
                   (lambda (#{x\ 2712}#)
                     (if (eq? (car #{x\ 2712}#) (quote list))
                       (cons (quote vector) (cdr #{x\ 2712}#))
                       (if (eq? (car #{x\ 2712}#) (quote quote))
                         (list 'quote
                               (list->vector (cadr #{x\ 2712}#)))
                         (list (quote list->vector) #{x\ 2712}#)))))
                 (#{gen-append\ 2691}#
                   (lambda (#{x\ 2722}# #{y\ 2723}#)
                     (if (equal? #{y\ 2723}# (quote (quote ())))
                       #{x\ 2722}#
                       (list (quote append) #{x\ 2722}# #{y\ 2723}#))))
                 (#{gen-cons\ 2689}#
                   (lambda (#{x\ 2727}# #{y\ 2728}#)
                     (let ((#{atom-key\ 2733}# (car #{y\ 2728}#)))
                       (if (memv #{atom-key\ 2733}# (quote (quote)))
                         (if (eq? (car #{x\ 2727}#) (quote quote))
                           (list 'quote
                                 (cons (cadr #{x\ 2727}#) (cadr #{y\ 2728}#)))
                           (if (eq? (cadr #{y\ 2728}#) (quote ()))
                             (list (quote list) #{x\ 2727}#)
                             (list (quote cons) #{x\ 2727}# #{y\ 2728}#)))
                         (if (memv #{atom-key\ 2733}# (quote (list)))
                           (cons 'list
                                 (cons #{x\ 2727}# (cdr #{y\ 2728}#)))
                           (list (quote cons) #{x\ 2727}# #{y\ 2728}#))))))
                 (#{gen-map\ 2687}#
                   (lambda (#{e\ 2742}# #{map-env\ 2743}#)
                     (let ((#{formals\ 2748}# (map cdr #{map-env\ 2743}#))
                           (#{actuals\ 2749}#
                             (map (lambda (#{x\ 2750}#)
                                    (list (quote ref) (car #{x\ 2750}#)))
                                  #{map-env\ 2743}#)))
                       (if (eq? (car #{e\ 2742}#) (quote ref))
                         (car #{actuals\ 2749}#)
                         (if (and-map
                               (lambda (#{x\ 2757}#)
                                 (if (eq? (car #{x\ 2757}#) (quote ref))
                                   (memq (cadr #{x\ 2757}#) #{formals\ 2748}#)
                                   #f))
                               (cdr #{e\ 2742}#))
                           (cons 'map
                                 (cons (list 'primitive
                                             (car #{e\ 2742}#))
                                       (map (let ((#{r\ 2763}#
                                                    (map cons
                                                         #{formals\ 2748}#
                                                         #{actuals\ 2749}#)))
                                              (lambda (#{x\ 2764}#)
                                                (cdr (assq (cadr #{x\ 2764}#)
                                                           #{r\ 2763}#))))
                                            (cdr #{e\ 2742}#))))
                           (cons 'map
                                 (cons (list 'lambda
                                             #{formals\ 2748}#
                                             #{e\ 2742}#)
                                       #{actuals\ 2749}#)))))))
                 (#{gen-mappend\ 2685}#
                   (lambda (#{e\ 2768}# #{map-env\ 2769}#)
                     (list 'apply
                           '(primitive append)
                           (#{gen-map\ 2687}# #{e\ 2768}# #{map-env\ 2769}#))))
                 (#{gen-ref\ 2683}#
                   (lambda (#{src\ 2773}#
                            #{var\ 2774}#
                            #{level\ 2775}#
                            #{maps\ 2776}#)
                     (if (#{fx=\ 145}# #{level\ 2775}# 0)
                       (values #{var\ 2774}# #{maps\ 2776}#)
                       (if (null? #{maps\ 2776}#)
                         (syntax-violation
                           'syntax
                           "missing ellipsis"
                           #{src\ 2773}#)
                         (call-with-values
                           (lambda ()
                             (#{gen-ref\ 2683}#
                               #{src\ 2773}#
                               #{var\ 2774}#
                               (#{fx-\ 143}# #{level\ 2775}# 1)
                               (cdr #{maps\ 2776}#)))
                           (lambda (#{outer-var\ 2781}# #{outer-maps\ 2782}#)
                             (let ((#{b\ 2786}#
                                     (assq #{outer-var\ 2781}#
                                           (car #{maps\ 2776}#))))
                               (if #{b\ 2786}#
                                 (values (cdr #{b\ 2786}#) #{maps\ 2776}#)
                                 (let ((#{inner-var\ 2788}#
                                         (#{gen-var\ 353}# (quote tmp))))
                                   (values
                                     #{inner-var\ 2788}#
                                     (cons (cons (cons #{outer-var\ 2781}#
                                                       #{inner-var\ 2788}#)
                                                 (car #{maps\ 2776}#))
                                           #{outer-maps\ 2782}#)))))))))))
                 (#{gen-syntax\ 2681}#
                   (lambda (#{src\ 2789}#
                            #{e\ 2790}#
                            #{r\ 2791}#
                            #{maps\ 2792}#
                            #{ellipsis?\ 2793}#
                            #{mod\ 2794}#)
                     (if (#{id?\ 240}# #{e\ 2790}#)
                       (let ((#{label\ 2802}#
                               (#{id-var-name\ 297}#
                                 #{e\ 2790}#
                                 '(()))))
                         (let ((#{b\ 2805}#
                                 (#{lookup\ 234}#
                                   #{label\ 2802}#
                                   #{r\ 2791}#
                                   #{mod\ 2794}#)))
                           (if (eq? (#{binding-type\ 223}# #{b\ 2805}#)
                                    'syntax)
                             (call-with-values
                               (lambda ()
                                 (let ((#{var.lev\ 2807}#
                                         (#{binding-value\ 225}# #{b\ 2805}#)))
                                   (#{gen-ref\ 2683}#
                                     #{src\ 2789}#
                                     (car #{var.lev\ 2807}#)
                                     (cdr #{var.lev\ 2807}#)
                                     #{maps\ 2792}#)))
                               (lambda (#{var\ 2808}# #{maps\ 2809}#)
                                 (values
                                   (list (quote ref) #{var\ 2808}#)
                                   #{maps\ 2809}#)))
                             (if (#{ellipsis?\ 2793}# #{e\ 2790}#)
                               (syntax-violation
                                 'syntax
                                 "misplaced ellipsis"
                                 #{src\ 2789}#)
                               (values
                                 (list (quote quote) #{e\ 2790}#)
                                 #{maps\ 2792}#)))))
                       ((lambda (#{tmp\ 2814}#)
                          ((lambda (#{tmp\ 2815}#)
                             (if (if #{tmp\ 2815}#
                                   (apply (lambda (#{dots\ 2818}# #{e\ 2819}#)
                                            (#{ellipsis?\ 2793}#
                                              #{dots\ 2818}#))
                                          #{tmp\ 2815}#)
                                   #f)
                               (apply (lambda (#{dots\ 2822}# #{e\ 2823}#)
                                        (#{gen-syntax\ 2681}#
                                          #{src\ 2789}#
                                          #{e\ 2823}#
                                          #{r\ 2791}#
                                          #{maps\ 2792}#
                                          (lambda (#{x\ 2824}#) #f)
                                          #{mod\ 2794}#))
                                      #{tmp\ 2815}#)
                               ((lambda (#{tmp\ 2826}#)
                                  (if (if #{tmp\ 2826}#
                                        (apply (lambda (#{x\ 2830}#
                                                        #{dots\ 2831}#
                                                        #{y\ 2832}#)
                                                 (#{ellipsis?\ 2793}#
                                                   #{dots\ 2831}#))
                                               #{tmp\ 2826}#)
                                        #f)
                                    (apply (lambda (#{x\ 2836}#
                                                    #{dots\ 2837}#
                                                    #{y\ 2838}#)
                                             (letrec ((#{f\ 2842}#
                                                        (lambda (#{y\ 2843}#
                                                                 #{k\ 2844}#)
                                                          ((lambda (#{tmp\ 2851}#)
                                                             ((lambda (#{tmp\ 2852}#)
                                                                (if (if #{tmp\ 2852}#
                                                                      (apply (lambda (#{dots\ 2855}#
                                                                                      #{y\ 2856}#)
                                                                               (#{ellipsis?\ 2793}#
                                                                                 #{dots\ 2855}#))
                                                                             #{tmp\ 2852}#)
                                                                      #f)
                                                                  (apply (lambda (#{dots\ 2859}#
                                                                                  #{y\ 2860}#)
                                                                           (#{f\ 2842}#
                                                                             #{y\ 2860}#
                                                                             (lambda (#{maps\ 2861}#)
                                                                               (call-with-values
                                                                                 (lambda ()
                                                                                   (#{k\ 2844}#
                                                                                     (cons '()
                                                                                           #{maps\ 2861}#)))
                                                                                 (lambda (#{x\ 2863}#
                                                                                          #{maps\ 2864}#)
                                                                                   (if (null? (car #{maps\ 2864}#))
                                                                                     (syntax-violation
                                                                                       'syntax
                                                                                       "extra ellipsis"
                                                                                       #{src\ 2789}#)
                                                                                     (values
                                                                                       (#{gen-mappend\ 2685}#
                                                                                         #{x\ 2863}#
                                                                                         (car #{maps\ 2864}#))
                                                                                       (cdr #{maps\ 2864}#))))))))
                                                                         #{tmp\ 2852}#)
                                                                  ((lambda (#{_\ 2868}#)
                                                                     (call-with-values
                                                                       (lambda ()
                                                                         (#{gen-syntax\ 2681}#
                                                                           #{src\ 2789}#
                                                                           #{y\ 2843}#
                                                                           #{r\ 2791}#
                                                                           #{maps\ 2792}#
                                                                           #{ellipsis?\ 2793}#
                                                                           #{mod\ 2794}#))
                                                                       (lambda (#{y\ 2869}#
                                                                                #{maps\ 2870}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{k\ 2844}#
                                                                               #{maps\ 2870}#))
                                                                           (lambda (#{x\ 2873}#
                                                                                    #{maps\ 2874}#)
                                                                             (values
                                                                               (#{gen-append\ 2691}#
                                                                                 #{x\ 2873}#
                                                                                 #{y\ 2869}#)
                                                                               #{maps\ 2874}#))))))
                                                                   #{tmp\ 2851}#)))
                                                              ($sc-dispatch
                                                                #{tmp\ 2851}#
                                                                '(any . any))))
                                                           #{y\ 2843}#))))
                                               (#{f\ 2842}#
                                                 #{y\ 2838}#
                                                 (lambda (#{maps\ 2845}#)
                                                   (call-with-values
                                                     (lambda ()
                                                       (#{gen-syntax\ 2681}#
                                                         #{src\ 2789}#
                                                         #{x\ 2836}#
                                                         #{r\ 2791}#
                                                         (cons '()
                                                               #{maps\ 2845}#)
                                                         #{ellipsis?\ 2793}#
                                                         #{mod\ 2794}#))
                                                     (lambda (#{x\ 2847}#
                                                              #{maps\ 2848}#)
                                                       (if (null? (car #{maps\ 2848}#))
                                                         (syntax-violation
                                                           'syntax
                                                           "extra ellipsis"
                                                           #{src\ 2789}#)
                                                         (values
                                                           (#{gen-map\ 2687}#
                                                             #{x\ 2847}#
                                                             (car #{maps\ 2848}#))
                                                           (cdr #{maps\ 2848}#)))))))))
                                           #{tmp\ 2826}#)
                                    ((lambda (#{tmp\ 2877}#)
                                       (if #{tmp\ 2877}#
                                         (apply (lambda (#{x\ 2880}#
                                                         #{y\ 2881}#)
                                                  (call-with-values
                                                    (lambda ()
                                                      (#{gen-syntax\ 2681}#
                                                        #{src\ 2789}#
                                                        #{x\ 2880}#
                                                        #{r\ 2791}#
                                                        #{maps\ 2792}#
                                                        #{ellipsis?\ 2793}#
                                                        #{mod\ 2794}#))
                                                    (lambda (#{x\ 2882}#
                                                             #{maps\ 2883}#)
                                                      (call-with-values
                                                        (lambda ()
                                                          (#{gen-syntax\ 2681}#
                                                            #{src\ 2789}#
                                                            #{y\ 2881}#
                                                            #{r\ 2791}#
                                                            #{maps\ 2883}#
                                                            #{ellipsis?\ 2793}#
                                                            #{mod\ 2794}#))
                                                        (lambda (#{y\ 2886}#
                                                                 #{maps\ 2887}#)
                                                          (values
                                                            (#{gen-cons\ 2689}#
                                                              #{x\ 2882}#
                                                              #{y\ 2886}#)
                                                            #{maps\ 2887}#))))))
                                                #{tmp\ 2877}#)
                                         ((lambda (#{tmp\ 2890}#)
                                            (if #{tmp\ 2890}#
                                              (apply (lambda (#{e1\ 2893}#
                                                              #{e2\ 2894}#)
                                                       (call-with-values
                                                         (lambda ()
                                                           (#{gen-syntax\ 2681}#
                                                             #{src\ 2789}#
                                                             (cons #{e1\ 2893}#
                                                                   #{e2\ 2894}#)
                                                             #{r\ 2791}#
                                                             #{maps\ 2792}#
                                                             #{ellipsis?\ 2793}#
                                                             #{mod\ 2794}#))
                                                         (lambda (#{e\ 2896}#
                                                                  #{maps\ 2897}#)
                                                           (values
                                                             (#{gen-vector\ 2693}#
                                                               #{e\ 2896}#)
                                                             #{maps\ 2897}#))))
                                                     #{tmp\ 2890}#)
                                              ((lambda (#{_\ 2901}#)
                                                 (values
                                                   (list 'quote
                                                         #{e\ 2790}#)
                                                   #{maps\ 2792}#))
                                               #{tmp\ 2814}#)))
                                          ($sc-dispatch
                                            #{tmp\ 2814}#
                                            '#(vector (any . each-any))))))
                                     ($sc-dispatch
                                       #{tmp\ 2814}#
                                       '(any . any)))))
                                ($sc-dispatch
                                  #{tmp\ 2814}#
                                  '(any any . any)))))
                           ($sc-dispatch #{tmp\ 2814}# (quote (any any)))))
                        #{e\ 2790}#)))))
          (lambda (#{e\ 2903}#
                   #{r\ 2904}#
                   #{w\ 2905}#
                   #{s\ 2906}#
                   #{mod\ 2907}#)
            (let ((#{e\ 2914}#
                    (#{source-wrap\ 311}#
                      #{e\ 2903}#
                      #{w\ 2905}#
                      #{s\ 2906}#
                      #{mod\ 2907}#)))
              ((lambda (#{tmp\ 2915}#)
                 ((lambda (#{tmp\ 2916}#)
                    (if #{tmp\ 2916}#
                      (apply (lambda (#{_\ 2919}# #{x\ 2920}#)
                               (call-with-values
                                 (lambda ()
                                   (#{gen-syntax\ 2681}#
                                     #{e\ 2914}#
                                     #{x\ 2920}#
                                     #{r\ 2904}#
                                     '()
                                     #{ellipsis?\ 341}#
                                     #{mod\ 2907}#))
                                 (lambda (#{e\ 2921}# #{maps\ 2922}#)
                                   (#{regen\ 2695}# #{e\ 2921}#))))
                             #{tmp\ 2916}#)
                      ((lambda (#{_\ 2926}#)
                         (syntax-violation
                           'syntax
                           "bad `syntax' form"
                           #{e\ 2914}#))
                       #{tmp\ 2915}#)))
                  ($sc-dispatch #{tmp\ 2915}# (quote (any any)))))
               #{e\ 2914}#)))))
      (#{global-extend\ 236}#
        'core
        'lambda
        (lambda (#{e\ 2927}#
                 #{r\ 2928}#
                 #{w\ 2929}#
                 #{s\ 2930}#
                 #{mod\ 2931}#)
          ((lambda (#{tmp\ 2937}#)
             ((lambda (#{tmp\ 2938}#)
                (if (if #{tmp\ 2938}#
                      (apply (lambda (#{_\ 2944}#
                                      #{args\ 2945}#
                                      #{docstring\ 2946}#
                                      #{e1\ 2947}#
                                      #{e2\ 2948}#)
                               (string? (syntax->datum #{docstring\ 2946}#)))
                             #{tmp\ 2938}#)
                      #f)
                  (apply (lambda (#{_\ 2954}#
                                  #{args\ 2955}#
                                  #{docstring\ 2956}#
                                  #{e1\ 2957}#
                                  #{e2\ 2958}#)
                           (call-with-values
                             (lambda ()
                               (#{lambda-formals\ 343}# #{args\ 2955}#))
                             (lambda (#{req\ 2959}#
                                      #{opt\ 2960}#
                                      #{rest\ 2961}#
                                      #{kw\ 2962}#)
                               (#{chi-simple-lambda\ 345}#
                                 #{e\ 2927}#
                                 #{r\ 2928}#
                                 #{w\ 2929}#
                                 #{s\ 2930}#
                                 #{mod\ 2931}#
                                 #{req\ 2959}#
                                 #{rest\ 2961}#
                                 (syntax->datum #{docstring\ 2956}#)
                                 (cons #{e1\ 2957}# #{e2\ 2958}#)))))
                         #{tmp\ 2938}#)
                  ((lambda (#{tmp\ 2968}#)
                     (if #{tmp\ 2968}#
                       (apply (lambda (#{_\ 2973}#
                                       #{args\ 2974}#
                                       #{e1\ 2975}#
                                       #{e2\ 2976}#)
                                (call-with-values
                                  (lambda ()
                                    (#{lambda-formals\ 343}# #{args\ 2974}#))
                                  (lambda (#{req\ 2977}#
                                           #{opt\ 2978}#
                                           #{rest\ 2979}#
                                           #{kw\ 2980}#)
                                    (#{chi-simple-lambda\ 345}#
                                      #{e\ 2927}#
                                      #{r\ 2928}#
                                      #{w\ 2929}#
                                      #{s\ 2930}#
                                      #{mod\ 2931}#
                                      #{req\ 2977}#
                                      #{rest\ 2979}#
                                      #f
                                      (cons #{e1\ 2975}# #{e2\ 2976}#)))))
                              #{tmp\ 2968}#)
                       ((lambda (#{_\ 2987}#)
                          (syntax-violation
                            'lambda
                            "bad lambda"
                            #{e\ 2927}#))
                        #{tmp\ 2937}#)))
                   ($sc-dispatch
                     #{tmp\ 2937}#
                     '(any any any . each-any)))))
              ($sc-dispatch
                #{tmp\ 2937}#
                '(any any any any . each-any))))
           #{e\ 2927}#)))
      (#{global-extend\ 236}#
        'core
        'lambda*
        (lambda (#{e\ 2988}#
                 #{r\ 2989}#
                 #{w\ 2990}#
                 #{s\ 2991}#
                 #{mod\ 2992}#)
          ((lambda (#{tmp\ 2998}#)
             ((lambda (#{tmp\ 2999}#)
                (if #{tmp\ 2999}#
                  (apply (lambda (#{_\ 3004}#
                                  #{args\ 3005}#
                                  #{e1\ 3006}#
                                  #{e2\ 3007}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 349}#
                                 #{e\ 2988}#
                                 #{r\ 2989}#
                                 #{w\ 2990}#
                                 #{s\ 2991}#
                                 #{mod\ 2992}#
                                 #{lambda*-formals\ 347}#
                                 (list (cons #{args\ 3005}#
                                             (cons #{e1\ 3006}#
                                                   #{e2\ 3007}#)))))
                             (lambda (#{docstring\ 3009}# #{lcase\ 3010}#)
                               (#{build-case-lambda\ 184}#
                                 #{s\ 2991}#
                                 #{docstring\ 3009}#
                                 #{lcase\ 3010}#))))
                         #{tmp\ 2999}#)
                  ((lambda (#{_\ 3014}#)
                     (syntax-violation
                       'lambda
                       "bad lambda*"
                       #{e\ 2988}#))
                   #{tmp\ 2998}#)))
              ($sc-dispatch
                #{tmp\ 2998}#
                '(any any any . each-any))))
           #{e\ 2988}#)))
      (#{global-extend\ 236}#
        'core
        'case-lambda
        (lambda (#{e\ 3015}#
                 #{r\ 3016}#
                 #{w\ 3017}#
                 #{s\ 3018}#
                 #{mod\ 3019}#)
          ((lambda (#{tmp\ 3025}#)
             ((lambda (#{tmp\ 3026}#)
                (if #{tmp\ 3026}#
                  (apply (lambda (#{_\ 3034}#
                                  #{args\ 3035}#
                                  #{e1\ 3036}#
                                  #{e2\ 3037}#
                                  #{args*\ 3038}#
                                  #{e1*\ 3039}#
                                  #{e2*\ 3040}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 349}#
                                 #{e\ 3015}#
                                 #{r\ 3016}#
                                 #{w\ 3017}#
                                 #{s\ 3018}#
                                 #{mod\ 3019}#
                                 #{lambda-formals\ 343}#
                                 (cons (cons #{args\ 3035}#
                                             (cons #{e1\ 3036}# #{e2\ 3037}#))
                                       (map (lambda (#{tmp\ 3044}#
                                                     #{tmp\ 3043}#
                                                     #{tmp\ 3042}#)
                                              (cons #{tmp\ 3042}#
                                                    (cons #{tmp\ 3043}#
                                                          #{tmp\ 3044}#)))
                                            #{e2*\ 3040}#
                                            #{e1*\ 3039}#
                                            #{args*\ 3038}#))))
                             (lambda (#{docstring\ 3046}# #{lcase\ 3047}#)
                               (#{build-case-lambda\ 184}#
                                 #{s\ 3018}#
                                 #{docstring\ 3046}#
                                 #{lcase\ 3047}#))))
                         #{tmp\ 3026}#)
                  ((lambda (#{_\ 3051}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda"
                       #{e\ 3015}#))
                   #{tmp\ 3025}#)))
              ($sc-dispatch
                #{tmp\ 3025}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3015}#)))
      (#{global-extend\ 236}#
        'core
        'case-lambda*
        (lambda (#{e\ 3052}#
                 #{r\ 3053}#
                 #{w\ 3054}#
                 #{s\ 3055}#
                 #{mod\ 3056}#)
          ((lambda (#{tmp\ 3062}#)
             ((lambda (#{tmp\ 3063}#)
                (if #{tmp\ 3063}#
                  (apply (lambda (#{_\ 3071}#
                                  #{args\ 3072}#
                                  #{e1\ 3073}#
                                  #{e2\ 3074}#
                                  #{args*\ 3075}#
                                  #{e1*\ 3076}#
                                  #{e2*\ 3077}#)
                           (call-with-values
                             (lambda ()
                               (#{chi-lambda-case\ 349}#
                                 #{e\ 3052}#
                                 #{r\ 3053}#
                                 #{w\ 3054}#
                                 #{s\ 3055}#
                                 #{mod\ 3056}#
                                 #{lambda*-formals\ 347}#
                                 (cons (cons #{args\ 3072}#
                                             (cons #{e1\ 3073}# #{e2\ 3074}#))
                                       (map (lambda (#{tmp\ 3081}#
                                                     #{tmp\ 3080}#
                                                     #{tmp\ 3079}#)
                                              (cons #{tmp\ 3079}#
                                                    (cons #{tmp\ 3080}#
                                                          #{tmp\ 3081}#)))
                                            #{e2*\ 3077}#
                                            #{e1*\ 3076}#
                                            #{args*\ 3075}#))))
                             (lambda (#{docstring\ 3083}# #{lcase\ 3084}#)
                               (#{build-case-lambda\ 184}#
                                 #{s\ 3055}#
                                 #{docstring\ 3083}#
                                 #{lcase\ 3084}#))))
                         #{tmp\ 3063}#)
                  ((lambda (#{_\ 3088}#)
                     (syntax-violation
                       'case-lambda
                       "bad case-lambda*"
                       #{e\ 3052}#))
                   #{tmp\ 3062}#)))
              ($sc-dispatch
                #{tmp\ 3062}#
                '(any (any any . each-any)
                      .
                      #(each (any any . each-any))))))
           #{e\ 3052}#)))
      (#{global-extend\ 236}#
        'core
        'let
        (letrec ((#{chi-let\ 3090}#
                   (lambda (#{e\ 3091}#
                            #{r\ 3092}#
                            #{w\ 3093}#
                            #{s\ 3094}#
                            #{mod\ 3095}#
                            #{constructor\ 3096}#
                            #{ids\ 3097}#
                            #{vals\ 3098}#
                            #{exps\ 3099}#)
                     (if (not (#{valid-bound-ids?\ 303}# #{ids\ 3097}#))
                       (syntax-violation
                         'let
                         "duplicate bound variable"
                         #{e\ 3091}#)
                       (let ((#{labels\ 3111}#
                               (#{gen-labels\ 258}# #{ids\ 3097}#))
                             (#{new-vars\ 3112}#
                               (map #{gen-var\ 353}# #{ids\ 3097}#)))
                         (let ((#{nw\ 3115}#
                                 (#{make-binding-wrap\ 287}#
                                   #{ids\ 3097}#
                                   #{labels\ 3111}#
                                   #{w\ 3093}#))
                               (#{nr\ 3116}#
                                 (#{extend-var-env\ 230}#
                                   #{labels\ 3111}#
                                   #{new-vars\ 3112}#
                                   #{r\ 3092}#)))
                           (#{constructor\ 3096}#
                             #{s\ 3094}#
                             (map syntax->datum #{ids\ 3097}#)
                             #{new-vars\ 3112}#
                             (map (lambda (#{x\ 3117}#)
                                    (#{chi\ 325}#
                                      #{x\ 3117}#
                                      #{r\ 3092}#
                                      #{w\ 3093}#
                                      #{mod\ 3095}#))
                                  #{vals\ 3098}#)
                             (#{chi-body\ 333}#
                               #{exps\ 3099}#
                               (#{source-wrap\ 311}#
                                 #{e\ 3091}#
                                 #{nw\ 3115}#
                                 #{s\ 3094}#
                                 #{mod\ 3095}#)
                               #{nr\ 3116}#
                               #{nw\ 3115}#
                               #{mod\ 3095}#))))))))
          (lambda (#{e\ 3119}#
                   #{r\ 3120}#
                   #{w\ 3121}#
                   #{s\ 3122}#
                   #{mod\ 3123}#)
            ((lambda (#{tmp\ 3129}#)
               ((lambda (#{tmp\ 3130}#)
                  (if (if #{tmp\ 3130}#
                        (apply (lambda (#{_\ 3136}#
                                        #{id\ 3137}#
                                        #{val\ 3138}#
                                        #{e1\ 3139}#
                                        #{e2\ 3140}#)
                                 (and-map #{id?\ 240}# #{id\ 3137}#))
                               #{tmp\ 3130}#)
                        #f)
                    (apply (lambda (#{_\ 3147}#
                                    #{id\ 3148}#
                                    #{val\ 3149}#
                                    #{e1\ 3150}#
                                    #{e2\ 3151}#)
                             (#{chi-let\ 3090}#
                               #{e\ 3119}#
                               #{r\ 3120}#
                               #{w\ 3121}#
                               #{s\ 3122}#
                               #{mod\ 3123}#
                               #{build-let\ 194}#
                               #{id\ 3148}#
                               #{val\ 3149}#
                               (cons #{e1\ 3150}# #{e2\ 3151}#)))
                           #{tmp\ 3130}#)
                    ((lambda (#{tmp\ 3155}#)
                       (if (if #{tmp\ 3155}#
                             (apply (lambda (#{_\ 3162}#
                                             #{f\ 3163}#
                                             #{id\ 3164}#
                                             #{val\ 3165}#
                                             #{e1\ 3166}#
                                             #{e2\ 3167}#)
                                      (if (#{id?\ 240}# #{f\ 3163}#)
                                        (and-map #{id?\ 240}# #{id\ 3164}#)
                                        #f))
                                    #{tmp\ 3155}#)
                             #f)
                         (apply (lambda (#{_\ 3177}#
                                         #{f\ 3178}#
                                         #{id\ 3179}#
                                         #{val\ 3180}#
                                         #{e1\ 3181}#
                                         #{e2\ 3182}#)
                                  (#{chi-let\ 3090}#
                                    #{e\ 3119}#
                                    #{r\ 3120}#
                                    #{w\ 3121}#
                                    #{s\ 3122}#
                                    #{mod\ 3123}#
                                    #{build-named-let\ 196}#
                                    (cons #{f\ 3178}# #{id\ 3179}#)
                                    #{val\ 3180}#
                                    (cons #{e1\ 3181}# #{e2\ 3182}#)))
                                #{tmp\ 3155}#)
                         ((lambda (#{_\ 3187}#)
                            (syntax-violation
                              'let
                              "bad let"
                              (#{source-wrap\ 311}#
                                #{e\ 3119}#
                                #{w\ 3121}#
                                #{s\ 3122}#
                                #{mod\ 3123}#)))
                          #{tmp\ 3129}#)))
                     ($sc-dispatch
                       #{tmp\ 3129}#
                       '(any any #(each (any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3129}#
                  '(any #(each (any any)) any . each-any))))
             #{e\ 3119}#))))
      (#{global-extend\ 236}#
        'core
        'letrec
        (lambda (#{e\ 3188}#
                 #{r\ 3189}#
                 #{w\ 3190}#
                 #{s\ 3191}#
                 #{mod\ 3192}#)
          ((lambda (#{tmp\ 3198}#)
             ((lambda (#{tmp\ 3199}#)
                (if (if #{tmp\ 3199}#
                      (apply (lambda (#{_\ 3205}#
                                      #{id\ 3206}#
                                      #{val\ 3207}#
                                      #{e1\ 3208}#
                                      #{e2\ 3209}#)
                               (and-map #{id?\ 240}# #{id\ 3206}#))
                             #{tmp\ 3199}#)
                      #f)
                  (apply (lambda (#{_\ 3216}#
                                  #{id\ 3217}#
                                  #{val\ 3218}#
                                  #{e1\ 3219}#
                                  #{e2\ 3220}#)
                           (let ((#{ids\ 3222}# #{id\ 3217}#))
                             (if (not (#{valid-bound-ids?\ 303}#
                                        #{ids\ 3222}#))
                               (syntax-violation
                                 'letrec
                                 "duplicate bound variable"
                                 #{e\ 3188}#)
                               (let ((#{labels\ 3226}#
                                       (#{gen-labels\ 258}# #{ids\ 3222}#))
                                     (#{new-vars\ 3227}#
                                       (map #{gen-var\ 353}# #{ids\ 3222}#)))
                                 (let ((#{w\ 3230}#
                                         (#{make-binding-wrap\ 287}#
                                           #{ids\ 3222}#
                                           #{labels\ 3226}#
                                           #{w\ 3190}#))
                                       (#{r\ 3231}#
                                         (#{extend-var-env\ 230}#
                                           #{labels\ 3226}#
                                           #{new-vars\ 3227}#
                                           #{r\ 3189}#)))
                                   (#{build-letrec\ 198}#
                                     #{s\ 3191}#
                                     (map syntax->datum #{ids\ 3222}#)
                                     #{new-vars\ 3227}#
                                     (map (lambda (#{x\ 3232}#)
                                            (#{chi\ 325}#
                                              #{x\ 3232}#
                                              #{r\ 3231}#
                                              #{w\ 3230}#
                                              #{mod\ 3192}#))
                                          #{val\ 3218}#)
                                     (#{chi-body\ 333}#
                                       (cons #{e1\ 3219}# #{e2\ 3220}#)
                                       (#{source-wrap\ 311}#
                                         #{e\ 3188}#
                                         #{w\ 3230}#
                                         #{s\ 3191}#
                                         #{mod\ 3192}#)
                                       #{r\ 3231}#
                                       #{w\ 3230}#
                                       #{mod\ 3192}#)))))))
                         #{tmp\ 3199}#)
                  ((lambda (#{_\ 3237}#)
                     (syntax-violation
                       'letrec
                       "bad letrec"
                       (#{source-wrap\ 311}#
                         #{e\ 3188}#
                         #{w\ 3190}#
                         #{s\ 3191}#
                         #{mod\ 3192}#)))
                   #{tmp\ 3198}#)))
              ($sc-dispatch
                #{tmp\ 3198}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3188}#)))
      (#{global-extend\ 236}#
        'core
        'set!
        (lambda (#{e\ 3238}#
                 #{r\ 3239}#
                 #{w\ 3240}#
                 #{s\ 3241}#
                 #{mod\ 3242}#)
          ((lambda (#{tmp\ 3248}#)
             ((lambda (#{tmp\ 3249}#)
                (if (if #{tmp\ 3249}#
                      (apply (lambda (#{_\ 3253}# #{id\ 3254}# #{val\ 3255}#)
                               (#{id?\ 240}# #{id\ 3254}#))
                             #{tmp\ 3249}#)
                      #f)
                  (apply (lambda (#{_\ 3259}# #{id\ 3260}# #{val\ 3261}#)
                           (let ((#{val\ 3264}#
                                   (#{chi\ 325}#
                                     #{val\ 3261}#
                                     #{r\ 3239}#
                                     #{w\ 3240}#
                                     #{mod\ 3242}#))
                                 (#{n\ 3265}#
                                   (#{id-var-name\ 297}#
                                     #{id\ 3260}#
                                     #{w\ 3240}#)))
                             (let ((#{b\ 3267}#
                                     (#{lookup\ 234}#
                                       #{n\ 3265}#
                                       #{r\ 3239}#
                                       #{mod\ 3242}#)))
                               (let ((#{atom-key\ 3270}#
                                       (#{binding-type\ 223}# #{b\ 3267}#)))
                                 (if (memv #{atom-key\ 3270}#
                                           '(lexical))
                                   (#{build-lexical-assignment\ 170}#
                                     #{s\ 3241}#
                                     (syntax->datum #{id\ 3260}#)
                                     (#{binding-value\ 225}# #{b\ 3267}#)
                                     #{val\ 3264}#)
                                   (if (memv #{atom-key\ 3270}#
                                             '(global))
                                     (#{build-global-assignment\ 176}#
                                       #{s\ 3241}#
                                       #{n\ 3265}#
                                       #{val\ 3264}#
                                       #{mod\ 3242}#)
                                     (if (memv #{atom-key\ 3270}#
                                               '(displaced-lexical))
                                       (syntax-violation
                                         'set!
                                         "identifier out of context"
                                         (#{wrap\ 309}#
                                           #{id\ 3260}#
                                           #{w\ 3240}#
                                           #{mod\ 3242}#))
                                       (syntax-violation
                                         'set!
                                         "bad set!"
                                         (#{source-wrap\ 311}#
                                           #{e\ 3238}#
                                           #{w\ 3240}#
                                           #{s\ 3241}#
                                           #{mod\ 3242}#)))))))))
                         #{tmp\ 3249}#)
                  ((lambda (#{tmp\ 3275}#)
                     (if #{tmp\ 3275}#
                       (apply (lambda (#{_\ 3280}#
                                       #{head\ 3281}#
                                       #{tail\ 3282}#
                                       #{val\ 3283}#)
                                (call-with-values
                                  (lambda ()
                                    (#{syntax-type\ 321}#
                                      #{head\ 3281}#
                                      #{r\ 3239}#
                                      '(())
                                      #f
                                      #f
                                      #{mod\ 3242}#
                                      #t))
                                  (lambda (#{type\ 3286}#
                                           #{value\ 3287}#
                                           #{ee\ 3288}#
                                           #{ww\ 3289}#
                                           #{ss\ 3290}#
                                           #{modmod\ 3291}#)
                                    (if (memv #{type\ 3286}#
                                              '(module-ref))
                                      (let ((#{val\ 3300}#
                                              (#{chi\ 325}#
                                                #{val\ 3283}#
                                                #{r\ 3239}#
                                                #{w\ 3240}#
                                                #{mod\ 3242}#)))
                                        (call-with-values
                                          (lambda ()
                                            (#{value\ 3287}#
                                              (cons #{head\ 3281}#
                                                    #{tail\ 3282}#)))
                                          (lambda (#{id\ 3302}# #{mod\ 3303}#)
                                            (#{build-global-assignment\ 176}#
                                              #{s\ 3241}#
                                              #{id\ 3302}#
                                              #{val\ 3300}#
                                              #{mod\ 3303}#))))
                                      (#{build-application\ 162}#
                                        #{s\ 3241}#
                                        (#{chi\ 325}#
                                          (list '#(syntax-object
                                                   setter
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(type
                                                        value
                                                        ee
                                                        ww
                                                        ss
                                                        modmod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3292"
                                                        "i3293"
                                                        "i3294"
                                                        "i3295"
                                                        "i3296"
                                                        "i3297"))
                                                    #(ribcage
                                                      #(_ head tail val)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3276"
                                                        "i3277"
                                                        "i3278"
                                                        "i3279"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(e r w s mod)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i3243"
                                                        "i3244"
                                                        "i3245"
                                                        "i3246"
                                                        "i3247"))
                                                    #(ribcage
                                                      (lambda-var-list
                                                        gen-var
                                                        strip
                                                        chi-lambda-case
                                                        lambda*-formals
                                                        chi-simple-lambda
                                                        lambda-formals
                                                        ellipsis?
                                                        chi-void
                                                        eval-local-transformer
                                                        chi-local-syntax
                                                        chi-body
                                                        chi-macro
                                                        chi-application
                                                        chi-expr
                                                        chi
                                                        chi-top
                                                        syntax-type
                                                        chi-when-list
                                                        chi-install-global
                                                        chi-top-sequence
                                                        chi-sequence
                                                        source-wrap
                                                        wrap
                                                        bound-id-member?
                                                        distinct-bound-ids?
                                                        valid-bound-ids?
                                                        bound-id=?
                                                        free-id=?
                                                        id-var-name
                                                        same-marks?
                                                        join-marks
                                                        join-wraps
                                                        smart-append
                                                        make-binding-wrap
                                                        extend-ribcage!
                                                        make-empty-ribcage
                                                        new-mark
                                                        anti-mark
                                                        the-anti-mark
                                                        top-marked?
                                                        top-wrap
                                                        empty-wrap
                                                        set-ribcage-labels!
                                                        set-ribcage-marks!
                                                        set-ribcage-symnames!
                                                        ribcage-labels
                                                        ribcage-marks
                                                        ribcage-symnames
                                                        ribcage?
                                                        make-ribcage
                                                        gen-labels
                                                        gen-label
                                                        make-rename
                                                        rename-marks
                                                        rename-new
                                                        rename-old
                                                        subst-rename?
                                                        wrap-subst
                                                        wrap-marks
                                                        make-wrap
                                                        id-sym-name&marks
                                                        id-sym-name
                                                        id?
                                                        nonsymbol-id?
                                                        global-extend
                                                        lookup
                                                        macros-only-env
                                                        extend-var-env
                                                        extend-env
                                                        null-env
                                                        binding-value
                                                        binding-type
                                                        make-binding
                                                        arg-check
                                                        source-annotation
                                                        no-source
                                                        set-syntax-object-module!
                                                        set-syntax-object-wrap!
                                                        set-syntax-object-expression!
                                                        syntax-object-module
                                                        syntax-object-wrap
                                                        syntax-object-expression
                                                        syntax-object?
                                                        make-syntax-object
                                                        build-lexical-var
                                                        build-letrec
                                                        build-named-let
                                                        build-let
                                                        build-sequence
                                                        build-data
                                                        build-primref
                                                        build-lambda-case
                                                        build-case-lambda
                                                        build-simple-lambda
                                                        build-global-definition
                                                        maybe-name-value!
                                                        build-global-assignment
                                                        build-global-reference
                                                        analyze-variable
                                                        build-lexical-assignment
                                                        build-lexical-reference
                                                        build-dynlet
                                                        build-conditional
                                                        build-application
                                                        build-void
                                                        decorate-source
                                                        get-global-definition-hook
                                                        put-global-definition-hook
                                                        gensym-hook
                                                        local-eval-hook
                                                        top-level-eval-hook
                                                        fx<
                                                        fx=
                                                        fx-
                                                        fx+
                                                        *mode*
                                                        noexpand)
                                                      ((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                      ("i354"
                                                       "i352"
                                                       "i350"
                                                       "i348"
                                                       "i346"
                                                       "i344"
                                                       "i342"
                                                       "i340"
                                                       "i338"
                                                       "i336"
                                                       "i334"
                                                       "i332"
                                                       "i330"
                                                       "i328"
                                                       "i326"
                                                       "i324"
                                                       "i322"
                                                       "i320"
                                                       "i318"
                                                       "i316"
                                                       "i314"
                                                       "i312"
                                                       "i310"
                                                       "i308"
                                                       "i306"
                                                       "i304"
                                                       "i302"
                                                       "i300"
                                                       "i298"
                                                       "i296"
                                                       "i294"
                                                       "i292"
                                                       "i290"
                                                       "i288"
                                                       "i286"
                                                       "i284"
                                                       "i283"
                                                       "i282"
                                                       "i280"
                                                       "i279"
                                                       "i278"
                                                       "i277"
                                                       "i276"
                                                       "i274"
                                                       "i272"
                                                       "i270"
                                                       "i268"
                                                       "i266"
                                                       "i264"
                                                       "i262"
                                                       "i260"
                                                       "i257"
                                                       "i255"
                                                       "i254"
                                                       "i253"
                                                       "i252"
                                                       "i251"
                                                       "i250"
                                                       "i248"
                                                       "i246"
                                                       "i244"
                                                       "i242"
                                                       "i241"
                                                       "i239"
                                                       "i237"
                                                       "i235"
                                                       "i233"
                                                       "i231"
                                                       "i229"
                                                       "i227"
                                                       "i226"
                                                       "i224"
                                                       "i222"
                                                       "i221"
                                                       "i220"
                                                       "i218"
                                                       "i217"
                                                       "i215"
                                                       "i213"
                                                       "i211"
                                                       "i209"
                                                       "i207"
                                                       "i205"
                                                       "i203"
                                                       "i201"
                                                       "i199"
                                                       "i197"
                                                       "i195"
                                                       "i193"
                                                       "i191"
                                                       "i189"
                                                       "i187"
                                                       "i185"
                                                       "i183"
                                                       "i181"
                                                       "i179"
                                                       "i177"
                                                       "i175"
                                                       "i173"
                                                       "i171"
                                                       "i169"
                                                       "i167"
                                                       "i165"
                                                       "i163"
                                                       "i161"
                                                       "i159"
                                                       "i157"
                                                       "i155"
                                                       "i153"
                                                       "i152"
                                                       "i150"
                                                       "i148"
                                                       "i146"
                                                       "i144"
                                                       "i142"
                                                       "i140"
                                                       "i138"
                                                       "i136"))
                                                    #(ribcage
                                                      (define-structure
                                                        and-map*)
                                                      ((top) (top))
                                                      ("i39" "i37")))
                                                   (hygiene guile))
                                                #{head\ 3281}#)
                                          #{r\ 3239}#
                                          #{w\ 3240}#
                                          #{mod\ 3242}#)
                                        (map (lambda (#{e\ 3307}#)
                                               (#{chi\ 325}#
                                                 #{e\ 3307}#
                                                 #{r\ 3239}#
                                                 #{w\ 3240}#
                                                 #{mod\ 3242}#))
                                             (append
                                               #{tail\ 3282}#
                                               (list #{val\ 3283}#))))))))
                              #{tmp\ 3275}#)
                       ((lambda (#{_\ 3311}#)
                          (syntax-violation
                            'set!
                            "bad set!"
                            (#{source-wrap\ 311}#
                              #{e\ 3238}#
                              #{w\ 3240}#
                              #{s\ 3241}#
                              #{mod\ 3242}#)))
                        #{tmp\ 3248}#)))
                   ($sc-dispatch
                     #{tmp\ 3248}#
                     '(any (any . each-any) any)))))
              ($sc-dispatch
                #{tmp\ 3248}#
                '(any any any))))
           #{e\ 3238}#)))
      (#{global-extend\ 236}#
        'module-ref
        '@
        (lambda (#{e\ 3312}#)
          ((lambda (#{tmp\ 3314}#)
             ((lambda (#{tmp\ 3315}#)
                (if (if #{tmp\ 3315}#
                      (apply (lambda (#{_\ 3319}# #{mod\ 3320}# #{id\ 3321}#)
                               (if (and-map #{id?\ 240}# #{mod\ 3320}#)
                                 (#{id?\ 240}# #{id\ 3321}#)
                                 #f))
                             #{tmp\ 3315}#)
                      #f)
                  (apply (lambda (#{_\ 3328}# #{mod\ 3329}# #{id\ 3330}#)
                           (values
                             (syntax->datum #{id\ 3330}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        public
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3325" "i3326" "i3327"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i3313"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i354"
                                            "i352"
                                            "i350"
                                            "i348"
                                            "i346"
                                            "i344"
                                            "i342"
                                            "i340"
                                            "i338"
                                            "i336"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i328"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i288"
                                            "i286"
                                            "i284"
                                            "i283"
                                            "i282"
                                            "i280"
                                            "i279"
                                            "i278"
                                            "i277"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i264"
                                            "i262"
                                            "i260"
                                            "i257"
                                            "i255"
                                            "i254"
                                            "i253"
                                            "i252"
                                            "i251"
                                            "i250"
                                            "i248"
                                            "i246"
                                            "i244"
                                            "i242"
                                            "i241"
                                            "i239"
                                            "i237"
                                            "i235"
                                            "i233"
                                            "i231"
                                            "i229"
                                            "i227"
                                            "i226"
                                            "i224"
                                            "i222"
                                            "i221"
                                            "i220"
                                            "i218"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i207"
                                            "i205"
                                            "i203"
                                            "i201"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"
                                            "i169"
                                            "i167"
                                            "i165"
                                            "i163"
                                            "i161"
                                            "i159"
                                            "i157"
                                            "i155"
                                            "i153"
                                            "i152"
                                            "i150"
                                            "i148"
                                            "i146"
                                            "i144"
                                            "i142"
                                            "i140"
                                            "i138"
                                            "i136"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i39" "i37")))
                                        (hygiene guile))
                                     #{mod\ 3329}#))))
                         #{tmp\ 3315}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3314}#)))
              ($sc-dispatch
                #{tmp\ 3314}#
                '(any each-any any))))
           #{e\ 3312}#)))
      (#{global-extend\ 236}#
        'module-ref
        '@@
        (lambda (#{e\ 3332}#)
          ((lambda (#{tmp\ 3334}#)
             ((lambda (#{tmp\ 3335}#)
                (if (if #{tmp\ 3335}#
                      (apply (lambda (#{_\ 3339}# #{mod\ 3340}# #{id\ 3341}#)
                               (if (and-map #{id?\ 240}# #{mod\ 3340}#)
                                 (#{id?\ 240}# #{id\ 3341}#)
                                 #f))
                             #{tmp\ 3335}#)
                      #f)
                  (apply (lambda (#{_\ 3348}# #{mod\ 3349}# #{id\ 3350}#)
                           (values
                             (syntax->datum #{id\ 3350}#)
                             (syntax->datum
                               (cons '#(syntax-object
                                        private
                                        ((top)
                                         #(ribcage
                                           #(_ mod id)
                                           #((top) (top) (top))
                                           #("i3345" "i3346" "i3347"))
                                         #(ribcage () () ())
                                         #(ribcage #(e) #((top)) #("i3333"))
                                         #(ribcage
                                           (lambda-var-list
                                             gen-var
                                             strip
                                             chi-lambda-case
                                             lambda*-formals
                                             chi-simple-lambda
                                             lambda-formals
                                             ellipsis?
                                             chi-void
                                             eval-local-transformer
                                             chi-local-syntax
                                             chi-body
                                             chi-macro
                                             chi-application
                                             chi-expr
                                             chi
                                             chi-top
                                             syntax-type
                                             chi-when-list
                                             chi-install-global
                                             chi-top-sequence
                                             chi-sequence
                                             source-wrap
                                             wrap
                                             bound-id-member?
                                             distinct-bound-ids?
                                             valid-bound-ids?
                                             bound-id=?
                                             free-id=?
                                             id-var-name
                                             same-marks?
                                             join-marks
                                             join-wraps
                                             smart-append
                                             make-binding-wrap
                                             extend-ribcage!
                                             make-empty-ribcage
                                             new-mark
                                             anti-mark
                                             the-anti-mark
                                             top-marked?
                                             top-wrap
                                             empty-wrap
                                             set-ribcage-labels!
                                             set-ribcage-marks!
                                             set-ribcage-symnames!
                                             ribcage-labels
                                             ribcage-marks
                                             ribcage-symnames
                                             ribcage?
                                             make-ribcage
                                             gen-labels
                                             gen-label
                                             make-rename
                                             rename-marks
                                             rename-new
                                             rename-old
                                             subst-rename?
                                             wrap-subst
                                             wrap-marks
                                             make-wrap
                                             id-sym-name&marks
                                             id-sym-name
                                             id?
                                             nonsymbol-id?
                                             global-extend
                                             lookup
                                             macros-only-env
                                             extend-var-env
                                             extend-env
                                             null-env
                                             binding-value
                                             binding-type
                                             make-binding
                                             arg-check
                                             source-annotation
                                             no-source
                                             set-syntax-object-module!
                                             set-syntax-object-wrap!
                                             set-syntax-object-expression!
                                             syntax-object-module
                                             syntax-object-wrap
                                             syntax-object-expression
                                             syntax-object?
                                             make-syntax-object
                                             build-lexical-var
                                             build-letrec
                                             build-named-let
                                             build-let
                                             build-sequence
                                             build-data
                                             build-primref
                                             build-lambda-case
                                             build-case-lambda
                                             build-simple-lambda
                                             build-global-definition
                                             maybe-name-value!
                                             build-global-assignment
                                             build-global-reference
                                             analyze-variable
                                             build-lexical-assignment
                                             build-lexical-reference
                                             build-dynlet
                                             build-conditional
                                             build-application
                                             build-void
                                             decorate-source
                                             get-global-definition-hook
                                             put-global-definition-hook
                                             gensym-hook
                                             local-eval-hook
                                             top-level-eval-hook
                                             fx<
                                             fx=
                                             fx-
                                             fx+
                                             *mode*
                                             noexpand)
                                           ((top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top)
                                            (top))
                                           ("i354"
                                            "i352"
                                            "i350"
                                            "i348"
                                            "i346"
                                            "i344"
                                            "i342"
                                            "i340"
                                            "i338"
                                            "i336"
                                            "i334"
                                            "i332"
                                            "i330"
                                            "i328"
                                            "i326"
                                            "i324"
                                            "i322"
                                            "i320"
                                            "i318"
                                            "i316"
                                            "i314"
                                            "i312"
                                            "i310"
                                            "i308"
                                            "i306"
                                            "i304"
                                            "i302"
                                            "i300"
                                            "i298"
                                            "i296"
                                            "i294"
                                            "i292"
                                            "i290"
                                            "i288"
                                            "i286"
                                            "i284"
                                            "i283"
                                            "i282"
                                            "i280"
                                            "i279"
                                            "i278"
                                            "i277"
                                            "i276"
                                            "i274"
                                            "i272"
                                            "i270"
                                            "i268"
                                            "i266"
                                            "i264"
                                            "i262"
                                            "i260"
                                            "i257"
                                            "i255"
                                            "i254"
                                            "i253"
                                            "i252"
                                            "i251"
                                            "i250"
                                            "i248"
                                            "i246"
                                            "i244"
                                            "i242"
                                            "i241"
                                            "i239"
                                            "i237"
                                            "i235"
                                            "i233"
                                            "i231"
                                            "i229"
                                            "i227"
                                            "i226"
                                            "i224"
                                            "i222"
                                            "i221"
                                            "i220"
                                            "i218"
                                            "i217"
                                            "i215"
                                            "i213"
                                            "i211"
                                            "i209"
                                            "i207"
                                            "i205"
                                            "i203"
                                            "i201"
                                            "i199"
                                            "i197"
                                            "i195"
                                            "i193"
                                            "i191"
                                            "i189"
                                            "i187"
                                            "i185"
                                            "i183"
                                            "i181"
                                            "i179"
                                            "i177"
                                            "i175"
                                            "i173"
                                            "i171"
                                            "i169"
                                            "i167"
                                            "i165"
                                            "i163"
                                            "i161"
                                            "i159"
                                            "i157"
                                            "i155"
                                            "i153"
                                            "i152"
                                            "i150"
                                            "i148"
                                            "i146"
                                            "i144"
                                            "i142"
                                            "i140"
                                            "i138"
                                            "i136"))
                                         #(ribcage
                                           (define-structure and-map*)
                                           ((top) (top))
                                           ("i39" "i37")))
                                        (hygiene guile))
                                     #{mod\ 3349}#))))
                         #{tmp\ 3335}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3334}#)))
              ($sc-dispatch
                #{tmp\ 3334}#
                '(any each-any any))))
           #{e\ 3332}#)))
      (#{global-extend\ 236}#
        'core
        'if
        (lambda (#{e\ 3352}#
                 #{r\ 3353}#
                 #{w\ 3354}#
                 #{s\ 3355}#
                 #{mod\ 3356}#)
          ((lambda (#{tmp\ 3362}#)
             ((lambda (#{tmp\ 3363}#)
                (if #{tmp\ 3363}#
                  (apply (lambda (#{_\ 3367}# #{test\ 3368}# #{then\ 3369}#)
                           (#{build-conditional\ 164}#
                             #{s\ 3355}#
                             (#{chi\ 325}#
                               #{test\ 3368}#
                               #{r\ 3353}#
                               #{w\ 3354}#
                               #{mod\ 3356}#)
                             (#{chi\ 325}#
                               #{then\ 3369}#
                               #{r\ 3353}#
                               #{w\ 3354}#
                               #{mod\ 3356}#)
                             (#{build-void\ 160}# #f)))
                         #{tmp\ 3363}#)
                  ((lambda (#{tmp\ 3371}#)
                     (if #{tmp\ 3371}#
                       (apply (lambda (#{_\ 3376}#
                                       #{test\ 3377}#
                                       #{then\ 3378}#
                                       #{else\ 3379}#)
                                (#{build-conditional\ 164}#
                                  #{s\ 3355}#
                                  (#{chi\ 325}#
                                    #{test\ 3377}#
                                    #{r\ 3353}#
                                    #{w\ 3354}#
                                    #{mod\ 3356}#)
                                  (#{chi\ 325}#
                                    #{then\ 3378}#
                                    #{r\ 3353}#
                                    #{w\ 3354}#
                                    #{mod\ 3356}#)
                                  (#{chi\ 325}#
                                    #{else\ 3379}#
                                    #{r\ 3353}#
                                    #{w\ 3354}#
                                    #{mod\ 3356}#)))
                              #{tmp\ 3371}#)
                       (syntax-violation
                         #f
                         "source expression failed to match any pattern"
                         #{tmp\ 3362}#)))
                   ($sc-dispatch
                     #{tmp\ 3362}#
                     '(any any any any)))))
              ($sc-dispatch
                #{tmp\ 3362}#
                '(any any any))))
           #{e\ 3352}#)))
      (#{global-extend\ 236}#
        'core
        'with-fluids
        (lambda (#{e\ 3380}#
                 #{r\ 3381}#
                 #{w\ 3382}#
                 #{s\ 3383}#
                 #{mod\ 3384}#)
          ((lambda (#{tmp\ 3390}#)
             ((lambda (#{tmp\ 3391}#)
                (if #{tmp\ 3391}#
                  (apply (lambda (#{_\ 3397}#
                                  #{fluid\ 3398}#
                                  #{val\ 3399}#
                                  #{b\ 3400}#
                                  #{b*\ 3401}#)
                           (#{build-dynlet\ 166}#
                             #{s\ 3383}#
                             (map (lambda (#{x\ 3402}#)
                                    (#{chi\ 325}#
                                      #{x\ 3402}#
                                      #{r\ 3381}#
                                      #{w\ 3382}#
                                      #{mod\ 3384}#))
                                  #{fluid\ 3398}#)
                             (map (lambda (#{x\ 3405}#)
                                    (#{chi\ 325}#
                                      #{x\ 3405}#
                                      #{r\ 3381}#
                                      #{w\ 3382}#
                                      #{mod\ 3384}#))
                                  #{val\ 3399}#)
                             (#{chi-body\ 333}#
                              (cons #{b\ 3400}# #{b*\ 3401}#)
                              (#{source-wrap\ 311}#
                               #{e\ 3380}#
                               #{w\ 3382}#
                               #{s\ 3383}#
                               #{mod\ 3384}#)
                              #{r\ 3381}#
                              #{w\ 3382}#
                              #{mod\ 3384}#)))
                         #{tmp\ 3391}#)
                  (syntax-violation
                    #f
                    "source expression failed to match any pattern"
                    #{tmp\ 3390}#)))
              ($sc-dispatch
                #{tmp\ 3390}#
                '(any #(each (any any)) any . each-any))))
           #{e\ 3380}#)))
      (#{global-extend\ 236}#
        'begin
        'begin
        '())
      (#{global-extend\ 236}#
        'define
        'define
        '())
      (#{global-extend\ 236}#
        'define-syntax
        'define-syntax
        '())
      (#{global-extend\ 236}#
        'eval-when
        'eval-when
        '())
      (#{global-extend\ 236}#
        'core
        'syntax-case
        (letrec ((#{gen-syntax-case\ 3416}#
                   (lambda (#{x\ 3417}#
                            #{keys\ 3418}#
                            #{clauses\ 3419}#
                            #{r\ 3420}#
                            #{mod\ 3421}#)
                     (if (null? #{clauses\ 3419}#)
                       (#{build-application\ 162}#
                         #f
                         (#{build-primref\ 188}#
                           #f
                           'syntax-violation)
                         (list (#{build-data\ 190}# #f #f)
                               (#{build-data\ 190}#
                                 #f
                                 "source expression failed to match any pattern")
                               #{x\ 3417}#))
                       ((lambda (#{tmp\ 3431}#)
                          ((lambda (#{tmp\ 3432}#)
                             (if #{tmp\ 3432}#
                               (apply (lambda (#{pat\ 3435}# #{exp\ 3436}#)
                                        (if (if (#{id?\ 240}# #{pat\ 3435}#)
                                              (and-map
                                                (lambda (#{x\ 3439}#)
                                                  (not (#{free-id=?\ 299}#
                                                         #{pat\ 3435}#
                                                         #{x\ 3439}#)))
                                                (cons '#(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(pat exp)
                                                            #((top) (top))
                                                            #("i3433" "i3434"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x
                                                              keys
                                                              clauses
                                                              r
                                                              mod)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i3422"
                                                              "i3423"
                                                              "i3424"
                                                              "i3425"
                                                              "i3426"))
                                                          #(ribcage
                                                            (gen-syntax-case
                                                              gen-clause
                                                              build-dispatch-call
                                                              convert-pattern)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i3415"
                                                             "i3413"
                                                             "i3411"
                                                             "i3409"))
                                                          #(ribcage
                                                            (lambda-var-list
                                                              gen-var
                                                              strip
                                                              chi-lambda-case
                                                              lambda*-formals
                                                              chi-simple-lambda
                                                              lambda-formals
                                                              ellipsis?
                                                              chi-void
                                                              eval-local-transformer
                                                              chi-local-syntax
                                                              chi-body
                                                              chi-macro
                                                              chi-application
                                                              chi-expr
                                                              chi
                                                              chi-top
                                                              syntax-type
                                                              chi-when-list
                                                              chi-install-global
                                                              chi-top-sequence
                                                              chi-sequence
                                                              source-wrap
                                                              wrap
                                                              bound-id-member?
                                                              distinct-bound-ids?
                                                              valid-bound-ids?
                                                              bound-id=?
                                                              free-id=?
                                                              id-var-name
                                                              same-marks?
                                                              join-marks
                                                              join-wraps
                                                              smart-append
                                                              make-binding-wrap
                                                              extend-ribcage!
                                                              make-empty-ribcage
                                                              new-mark
                                                              anti-mark
                                                              the-anti-mark
                                                              top-marked?
                                                              top-wrap
                                                              empty-wrap
                                                              set-ribcage-labels!
                                                              set-ribcage-marks!
                                                              set-ribcage-symnames!
                                                              ribcage-labels
                                                              ribcage-marks
                                                              ribcage-symnames
                                                              ribcage?
                                                              make-ribcage
                                                              gen-labels
                                                              gen-label
                                                              make-rename
                                                              rename-marks
                                                              rename-new
                                                              rename-old
                                                              subst-rename?
                                                              wrap-subst
                                                              wrap-marks
                                                              make-wrap
                                                              id-sym-name&marks
                                                              id-sym-name
                                                              id?
                                                              nonsymbol-id?
                                                              global-extend
                                                              lookup
                                                              macros-only-env
                                                              extend-var-env
                                                              extend-env
                                                              null-env
                                                              binding-value
                                                              binding-type
                                                              make-binding
                                                              arg-check
                                                              source-annotation
                                                              no-source
                                                              set-syntax-object-module!
                                                              set-syntax-object-wrap!
                                                              set-syntax-object-expression!
                                                              syntax-object-module
                                                              syntax-object-wrap
                                                              syntax-object-expression
                                                              syntax-object?
                                                              make-syntax-object
                                                              build-lexical-var
                                                              build-letrec
                                                              build-named-let
                                                              build-let
                                                              build-sequence
                                                              build-data
                                                              build-primref
                                                              build-lambda-case
                                                              build-case-lambda
                                                              build-simple-lambda
                                                              build-global-definition
                                                              maybe-name-value!
                                                              build-global-assignment
                                                              build-global-reference
                                                              analyze-variable
                                                              build-lexical-assignment
                                                              build-lexical-reference
                                                              build-dynlet
                                                              build-conditional
                                                              build-application
                                                              build-void
                                                              decorate-source
                                                              get-global-definition-hook
                                                              put-global-definition-hook
                                                              gensym-hook
                                                              local-eval-hook
                                                              top-level-eval-hook
                                                              fx<
                                                              fx=
                                                              fx-
                                                              fx+
                                                              *mode*
                                                              noexpand)
                                                            ((top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                            ("i354"
                                                             "i352"
                                                             "i350"
                                                             "i348"
                                                             "i346"
                                                             "i344"
                                                             "i342"
                                                             "i340"
                                                             "i338"
                                                             "i336"
                                                             "i334"
                                                             "i332"
                                                             "i330"
                                                             "i328"
                                                             "i326"
                                                             "i324"
                                                             "i322"
                                                             "i320"
                                                             "i318"
                                                             "i316"
                                                             "i314"
                                                             "i312"
                                                             "i310"
                                                             "i308"
                                                             "i306"
                                                             "i304"
                                                             "i302"
                                                             "i300"
                                                             "i298"
                                                             "i296"
                                                             "i294"
                                                             "i292"
                                                             "i290"
                                                             "i288"
                                                             "i286"
                                                             "i284"
                                                             "i283"
                                                             "i282"
                                                             "i280"
                                                             "i279"
                                                             "i278"
                                                             "i277"
                                                             "i276"
                                                             "i274"
                                                             "i272"
                                                             "i270"
                                                             "i268"
                                                             "i266"
                                                             "i264"
                                                             "i262"
                                                             "i260"
                                                             "i257"
                                                             "i255"
                                                             "i254"
                                                             "i253"
                                                             "i252"
                                                             "i251"
                                                             "i250"
                                                             "i248"
                                                             "i246"
                                                             "i244"
                                                             "i242"
                                                             "i241"
                                                             "i239"
                                                             "i237"
                                                             "i235"
                                                             "i233"
                                                             "i231"
                                                             "i229"
                                                             "i227"
                                                             "i226"
                                                             "i224"
                                                             "i222"
                                                             "i221"
                                                             "i220"
                                                             "i218"
                                                             "i217"
                                                             "i215"
                                                             "i213"
                                                             "i211"
                                                             "i209"
                                                             "i207"
                                                             "i205"
                                                             "i203"
                                                             "i201"
                                                             "i199"
                                                             "i197"
                                                             "i195"
                                                             "i193"
                                                             "i191"
                                                             "i189"
                                                             "i187"
                                                             "i185"
                                                             "i183"
                                                             "i181"
                                                             "i179"
                                                             "i177"
                                                             "i175"
                                                             "i173"
                                                             "i171"
                                                             "i169"
                                                             "i167"
                                                             "i165"
                                                             "i163"
                                                             "i161"
                                                             "i159"
                                                             "i157"
                                                             "i155"
                                                             "i153"
                                                             "i152"
                                                             "i150"
                                                             "i148"
                                                             "i146"
                                                             "i144"
                                                             "i142"
                                                             "i140"
                                                             "i138"
                                                             "i136"))
                                                          #(ribcage
                                                            (define-structure
                                                              and-map*)
                                                            ((top) (top))
                                                            ("i39" "i37")))
                                                         (hygiene guile))
                                                      #{keys\ 3418}#))
                                              #f)
                                          (let ((#{labels\ 3443}#
                                                  (list (#{gen-label\ 256}#)))
                                                (#{var\ 3444}#
                                                  (#{gen-var\ 353}#
                                                    #{pat\ 3435}#)))
                                            (#{build-application\ 162}#
                                              #f
                                              (#{build-simple-lambda\ 182}#
                                                #f
                                                (list (syntax->datum
                                                        #{pat\ 3435}#))
                                                #f
                                                (list #{var\ 3444}#)
                                                #f
                                                (#{chi\ 325}#
                                                  #{exp\ 3436}#
                                                  (#{extend-env\ 228}#
                                                    #{labels\ 3443}#
                                                    (list (cons 'syntax
                                                                (cons #{var\ 3444}#
                                                                      0)))
                                                    #{r\ 3420}#)
                                                  (#{make-binding-wrap\ 287}#
                                                    (list #{pat\ 3435}#)
                                                    #{labels\ 3443}#
                                                    '(()))
                                                  #{mod\ 3421}#))
                                              (list #{x\ 3417}#)))
                                          (#{gen-clause\ 3414}#
                                            #{x\ 3417}#
                                            #{keys\ 3418}#
                                            (cdr #{clauses\ 3419}#)
                                            #{r\ 3420}#
                                            #{pat\ 3435}#
                                            #t
                                            #{exp\ 3436}#
                                            #{mod\ 3421}#)))
                                      #{tmp\ 3432}#)
                               ((lambda (#{tmp\ 3450}#)
                                  (if #{tmp\ 3450}#
                                    (apply (lambda (#{pat\ 3454}#
                                                    #{fender\ 3455}#
                                                    #{exp\ 3456}#)
                                             (#{gen-clause\ 3414}#
                                               #{x\ 3417}#
                                               #{keys\ 3418}#
                                               (cdr #{clauses\ 3419}#)
                                               #{r\ 3420}#
                                               #{pat\ 3454}#
                                               #{fender\ 3455}#
                                               #{exp\ 3456}#
                                               #{mod\ 3421}#))
                                           #{tmp\ 3450}#)
                                    ((lambda (#{_\ 3458}#)
                                       (syntax-violation
                                         'syntax-case
                                         "invalid clause"
                                         (car #{clauses\ 3419}#)))
                                     #{tmp\ 3431}#)))
                                ($sc-dispatch
                                  #{tmp\ 3431}#
                                  '(any any any)))))
                           ($sc-dispatch #{tmp\ 3431}# (quote (any any)))))
                        (car #{clauses\ 3419}#)))))
                 (#{gen-clause\ 3414}#
                   (lambda (#{x\ 3459}#
                            #{keys\ 3460}#
                            #{clauses\ 3461}#
                            #{r\ 3462}#
                            #{pat\ 3463}#
                            #{fender\ 3464}#
                            #{exp\ 3465}#
                            #{mod\ 3466}#)
                     (call-with-values
                       (lambda ()
                         (#{convert-pattern\ 3410}#
                           #{pat\ 3463}#
                           #{keys\ 3460}#))
                       (lambda (#{p\ 3475}# #{pvars\ 3476}#)
                         (if (not (#{distinct-bound-ids?\ 305}#
                                    (map car #{pvars\ 3476}#)))
                           (syntax-violation
                             'syntax-case
                             "duplicate pattern variable"
                             #{pat\ 3463}#)
                           (if (not (and-map
                                      (lambda (#{x\ 3483}#)
                                        (not (#{ellipsis?\ 341}#
                                               (car #{x\ 3483}#))))
                                      #{pvars\ 3476}#))
                             (syntax-violation
                               'syntax-case
                               "misplaced ellipsis"
                               #{pat\ 3463}#)
                             (let ((#{y\ 3487}#
                                     (#{gen-var\ 353}# (quote tmp))))
                               (#{build-application\ 162}#
                                 #f
                                 (#{build-simple-lambda\ 182}#
                                   #f
                                   (list (quote tmp))
                                   #f
                                   (list #{y\ 3487}#)
                                   #f
                                   (let ((#{y\ 3491}#
                                           (#{build-lexical-reference\ 168}#
                                             'value
                                             #f
                                             'tmp
                                             #{y\ 3487}#)))
                                     (#{build-conditional\ 164}#
                                       #f
                                       ((lambda (#{tmp\ 3494}#)
                                          ((lambda (#{tmp\ 3495}#)
                                             (if #{tmp\ 3495}#
                                               (apply (lambda () #{y\ 3491}#)
                                                      #{tmp\ 3495}#)
                                               ((lambda (#{_\ 3497}#)
                                                  (#{build-conditional\ 164}#
                                                    #f
                                                    #{y\ 3491}#
                                                    (#{build-dispatch-call\ 3412}#
                                                      #{pvars\ 3476}#
                                                      #{fender\ 3464}#
                                                      #{y\ 3491}#
                                                      #{r\ 3462}#
                                                      #{mod\ 3466}#)
                                                    (#{build-data\ 190}#
                                                      #f
                                                      #f)))
                                                #{tmp\ 3494}#)))
                                           ($sc-dispatch
                                             #{tmp\ 3494}#
                                             '#(atom #t))))
                                        #{fender\ 3464}#)
                                       (#{build-dispatch-call\ 3412}#
                                         #{pvars\ 3476}#
                                         #{exp\ 3465}#
                                         #{y\ 3491}#
                                         #{r\ 3462}#
                                         #{mod\ 3466}#)
                                       (#{gen-syntax-case\ 3416}#
                                         #{x\ 3459}#
                                         #{keys\ 3460}#
                                         #{clauses\ 3461}#
                                         #{r\ 3462}#
                                         #{mod\ 3466}#))))
                                 (list (if (eq? #{p\ 3475}# (quote any))
                                         (#{build-application\ 162}#
                                           #f
                                           (#{build-primref\ 188}#
                                             #f
                                             'list)
                                           (list #{x\ 3459}#))
                                         (#{build-application\ 162}#
                                           #f
                                           (#{build-primref\ 188}#
                                             #f
                                             '$sc-dispatch)
                                           (list #{x\ 3459}#
                                                 (#{build-data\ 190}#
                                                   #f
                                                   #{p\ 3475}#)))))))))))))
                 (#{build-dispatch-call\ 3412}#
                   (lambda (#{pvars\ 3505}#
                            #{exp\ 3506}#
                            #{y\ 3507}#
                            #{r\ 3508}#
                            #{mod\ 3509}#)
                     (let ((#{ids\ 3517}# (map car #{pvars\ 3505}#))
                           (#{levels\ 3518}# (map cdr #{pvars\ 3505}#)))
                       (let ((#{labels\ 3521}#
                               (#{gen-labels\ 258}# #{ids\ 3517}#))
                             (#{new-vars\ 3522}#
                               (map #{gen-var\ 353}# #{ids\ 3517}#)))
                         (#{build-application\ 162}#
                           #f
                           (#{build-primref\ 188}# #f (quote apply))
                           (list (#{build-simple-lambda\ 182}#
                                   #f
                                   (map syntax->datum #{ids\ 3517}#)
                                   #f
                                   #{new-vars\ 3522}#
                                   #f
                                   (#{chi\ 325}#
                                     #{exp\ 3506}#
                                     (#{extend-env\ 228}#
                                       #{labels\ 3521}#
                                       (map (lambda (#{var\ 3526}#
                                                     #{level\ 3527}#)
                                              (cons 'syntax
                                                    (cons #{var\ 3526}#
                                                          #{level\ 3527}#)))
                                            #{new-vars\ 3522}#
                                            (map cdr #{pvars\ 3505}#))
                                       #{r\ 3508}#)
                                     (#{make-binding-wrap\ 287}#
                                       #{ids\ 3517}#
                                       #{labels\ 3521}#
                                       '(()))
                                     #{mod\ 3509}#))
                                 #{y\ 3507}#))))))
                 (#{convert-pattern\ 3410}#
                   (lambda (#{pattern\ 3533}# #{keys\ 3534}#)
                     (letrec ((#{cvt\ 3540}#
                                (lambda (#{p\ 3541}# #{n\ 3542}# #{ids\ 3543}#)
                                  (if (#{id?\ 240}# #{p\ 3541}#)
                                    (if (#{bound-id-member?\ 307}#
                                          #{p\ 3541}#
                                          #{keys\ 3534}#)
                                      (values
                                        (vector (quote free-id) #{p\ 3541}#)
                                        #{ids\ 3543}#)
                                      (values
                                        'any
                                        (cons (cons #{p\ 3541}# #{n\ 3542}#)
                                              #{ids\ 3543}#)))
                                    ((lambda (#{tmp\ 3547}#)
                                       ((lambda (#{tmp\ 3548}#)
                                          (if (if #{tmp\ 3548}#
                                                (apply (lambda (#{x\ 3551}#
                                                                #{dots\ 3552}#)
                                                         (#{ellipsis?\ 341}#
                                                           #{dots\ 3552}#))
                                                       #{tmp\ 3548}#)
                                                #f)
                                            (apply (lambda (#{x\ 3555}#
                                                            #{dots\ 3556}#)
                                                     (call-with-values
                                                       (lambda ()
                                                         (#{cvt\ 3540}#
                                                           #{x\ 3555}#
                                                           (#{fx+\ 141}#
                                                             #{n\ 3542}#
                                                             1)
                                                           #{ids\ 3543}#))
                                                       (lambda (#{p\ 3557}#
                                                                #{ids\ 3558}#)
                                                         (values
                                                           (if (eq? #{p\ 3557}#
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               #{p\ 3557}#))
                                                           #{ids\ 3558}#))))
                                                   #{tmp\ 3548}#)
                                            ((lambda (#{tmp\ 3561}#)
                                               (if (if #{tmp\ 3561}#
                                                     (apply (lambda (#{x\ 3565}#
                                                                     #{dots\ 3566}#
                                                                     #{ys\ 3567}#)
                                                              (#{ellipsis?\ 341}#
                                                                #{dots\ 3566}#))
                                                            #{tmp\ 3561}#)
                                                     #f)
                                                 (apply (lambda (#{x\ 3571}#
                                                                 #{dots\ 3572}#
                                                                 #{ys\ 3573}#)
                                                          (call-with-values
                                                            (lambda ()
                                                              (#{cvt*\ 3538}#
                                                                #{ys\ 3573}#
                                                                #{n\ 3542}#
                                                                #{ids\ 3543}#))
                                                            (lambda (#{ys\ 3575}#
                                                                     #{ids\ 3576}#)
                                                              (call-with-values
                                                                (lambda ()
                                                                  (#{cvt\ 3540}#
                                                                    #{x\ 3571}#
                                                                    (+ #{n\ 3542}#
                                                                       1)
                                                                    #{ids\ 3576}#))
                                                                (lambda (#{x\ 3579}#
                                                                         #{ids\ 3580}#)
                                                                  (values
                                                                    (list->vector
                                                                      (cons 'each+
                                                                            (cons #{x\ 3579}#
                                                                                  (cons (reverse
                                                                                          #{ys\ 3575}#)
                                                                                        '(())))))
                                                                    #{ids\ 3580}#))))))
                                                        #{tmp\ 3561}#)
                                                 ((lambda (#{tmp\ 3584}#)
                                                    (if #{tmp\ 3584}#
                                                      (apply (lambda (#{x\ 3587}#
                                                                      #{y\ 3588}#)
                                                               (call-with-values
                                                                 (lambda ()
                                                                   (#{cvt\ 3540}#
                                                                     #{y\ 3588}#
                                                                     #{n\ 3542}#
                                                                     #{ids\ 3543}#))
                                                                 (lambda (#{y\ 3589}#
                                                                          #{ids\ 3590}#)
                                                                   (call-with-values
                                                                     (lambda ()
                                                                       (#{cvt\ 3540}#
                                                                         #{x\ 3587}#
                                                                         #{n\ 3542}#
                                                                         #{ids\ 3590}#))
                                                                     (lambda (#{x\ 3593}#
                                                                              #{ids\ 3594}#)
                                                                       (values
                                                                         (cons #{x\ 3593}#
                                                                               #{y\ 3589}#)
                                                                         #{ids\ 3594}#))))))
                                                             #{tmp\ 3584}#)
                                                      ((lambda (#{tmp\ 3597}#)
                                                         (if #{tmp\ 3597}#
                                                           (apply (lambda ()
                                                                    (values
                                                                      '()
                                                                      #{ids\ 3543}#))
                                                                  #{tmp\ 3597}#)
                                                           ((lambda (#{tmp\ 3598}#)
                                                              (if #{tmp\ 3598}#
                                                                (apply (lambda (#{x\ 3600}#)
                                                                         (call-with-values
                                                                           (lambda ()
                                                                             (#{cvt\ 3540}#
                                                                               #{x\ 3600}#
                                                                               #{n\ 3542}#
                                                                               #{ids\ 3543}#))
                                                                           (lambda (#{p\ 3602}#
                                                                                    #{ids\ 3603}#)
                                                                             (values
                                                                               (vector
                                                                                 'vector
                                                                                 #{p\ 3602}#)
                                                                               #{ids\ 3603}#))))
                                                                       #{tmp\ 3598}#)
                                                                ((lambda (#{x\ 3607}#)
                                                                   (values
                                                                     (vector
                                                                       'atom
                                                                       (#{strip\ 351}#
                                                                         #{p\ 3541}#
                                                                         '(())))
                                                                     #{ids\ 3543}#))
                                                                 #{tmp\ 3547}#)))
                                                            ($sc-dispatch
                                                              #{tmp\ 3547}#
                                                              '#(vector
                                                                 each-any)))))
                                                       ($sc-dispatch
                                                         #{tmp\ 3547}#
                                                         '()))))
                                                  ($sc-dispatch
                                                    #{tmp\ 3547}#
                                                    '(any . any)))))
                                             ($sc-dispatch
                                               #{tmp\ 3547}#
                                               '(any any . each-any)))))
                                        ($sc-dispatch
                                          #{tmp\ 3547}#
                                          '(any any))))
                                     #{p\ 3541}#))))
                              (#{cvt*\ 3538}#
                                (lambda (#{p*\ 3609}#
                                         #{n\ 3610}#
                                         #{ids\ 3611}#)
                                  (if (null? #{p*\ 3609}#)
                                    (values (quote ()) #{ids\ 3611}#)
                                    (call-with-values
                                      (lambda ()
                                        (#{cvt*\ 3538}#
                                          (cdr #{p*\ 3609}#)
                                          #{n\ 3610}#
                                          #{ids\ 3611}#))
                                      (lambda (#{y\ 3615}# #{ids\ 3616}#)
                                        (call-with-values
                                          (lambda ()
                                            (#{cvt\ 3540}#
                                              (car #{p*\ 3609}#)
                                              #{n\ 3610}#
                                              #{ids\ 3616}#))
                                          (lambda (#{x\ 3619}# #{ids\ 3620}#)
                                            (values
                                              (cons #{x\ 3619}# #{y\ 3615}#)
                                              #{ids\ 3620}#)))))))))
                       (#{cvt\ 3540}# #{pattern\ 3533}# 0 (quote ()))))))
          (lambda (#{e\ 3623}#
                   #{r\ 3624}#
                   #{w\ 3625}#
                   #{s\ 3626}#
                   #{mod\ 3627}#)
            (let ((#{e\ 3634}#
                    (#{source-wrap\ 311}#
                      #{e\ 3623}#
                      #{w\ 3625}#
                      #{s\ 3626}#
                      #{mod\ 3627}#)))
              ((lambda (#{tmp\ 3635}#)
                 ((lambda (#{tmp\ 3636}#)
                    (if #{tmp\ 3636}#
                      (apply (lambda (#{_\ 3641}#
                                      #{val\ 3642}#
                                      #{key\ 3643}#
                                      #{m\ 3644}#)
                               (if (and-map
                                     (lambda (#{x\ 3645}#)
                                       (if (#{id?\ 240}# #{x\ 3645}#)
                                         (not (#{ellipsis?\ 341}# #{x\ 3645}#))
                                         #f))
                                     #{key\ 3643}#)
                                 (let ((#{x\ 3651}#
                                         (#{gen-var\ 353}# (quote tmp))))
                                   (#{build-application\ 162}#
                                     #{s\ 3626}#
                                     (#{build-simple-lambda\ 182}#
                                       #f
                                       (list (quote tmp))
                                       #f
                                       (list #{x\ 3651}#)
                                       #f
                                       (#{gen-syntax-case\ 3416}#
                                         (#{build-lexical-reference\ 168}#
                                           'value
                                           #f
                                           'tmp
                                           #{x\ 3651}#)
                                         #{key\ 3643}#
                                         #{m\ 3644}#
                                         #{r\ 3624}#
                                         #{mod\ 3627}#))
                                     (list (#{chi\ 325}#
                                             #{val\ 3642}#
                                             #{r\ 3624}#
                                             '(())
                                             #{mod\ 3627}#))))
                                 (syntax-violation
                                   'syntax-case
                                   "invalid literals list"
                                   #{e\ 3634}#)))
                             #{tmp\ 3636}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 3635}#)))
                  ($sc-dispatch
                    #{tmp\ 3635}#
                    '(any any each-any . each-any))))
               #{e\ 3634}#)))))
      (set! sc-expand
        (lambda (#{x\ 3657}# . #{rest\ 3658}#)
          (if (if (pair? #{x\ 3657}#)
                (equal? (car #{x\ 3657}#) #{noexpand\ 137}#)
                #f)
            (cadr #{x\ 3657}#)
            (let ((#{m\ 3665}#
                    (if (null? #{rest\ 3658}#)
                      'e
                      (car #{rest\ 3658}#)))
                  (#{esew\ 3666}#
                    (if (let ((#{t\ 3669}# (null? #{rest\ 3658}#)))
                          (if #{t\ 3669}#
                            #{t\ 3669}#
                            (null? (cdr #{rest\ 3658}#))))
                      '(eval)
                      (cadr #{rest\ 3658}#))))
              (with-fluid*
                #{*mode*\ 139}#
                #{m\ 3665}#
                (lambda ()
                  (#{chi-top\ 323}#
                    #{x\ 3657}#
                    '()
                    '((top))
                    #{m\ 3665}#
                    #{esew\ 3666}#
                    (cons 'hygiene
                          (module-name (current-module))))))))))
      (set! identifier?
        (lambda (#{x\ 3673}#)
          (#{nonsymbol-id?\ 238}# #{x\ 3673}#)))
      (set! datum->syntax
        (lambda (#{id\ 3675}# #{datum\ 3676}#)
          (#{make-syntax-object\ 202}#
            #{datum\ 3676}#
            (#{syntax-object-wrap\ 208}# #{id\ 3675}#)
            #f)))
      (set! syntax->datum
        (lambda (#{x\ 3679}#)
          (#{strip\ 351}# #{x\ 3679}# (quote (())))))
      (set! generate-temporaries
        (lambda (#{ls\ 3682}#)
          (begin
            (let ((#{x\ 3686}# #{ls\ 3682}#))
              (if (not (list? #{x\ 3686}#))
                (syntax-violation
                  'generate-temporaries
                  "invalid argument"
                  #{x\ 3686}#)))
            (map (lambda (#{x\ 3687}#)
                   (#{wrap\ 309}# (gensym) (quote ((top))) #f))
                 #{ls\ 3682}#))))
      (set! free-identifier=?
        (lambda (#{x\ 3691}# #{y\ 3692}#)
          (begin
            (let ((#{x\ 3697}# #{x\ 3691}#))
              (if (not (#{nonsymbol-id?\ 238}# #{x\ 3697}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3697}#)))
            (let ((#{x\ 3700}# #{y\ 3692}#))
              (if (not (#{nonsymbol-id?\ 238}# #{x\ 3700}#))
                (syntax-violation
                  'free-identifier=?
                  "invalid argument"
                  #{x\ 3700}#)))
            (#{free-id=?\ 299}# #{x\ 3691}# #{y\ 3692}#))))
      (set! bound-identifier=?
        (lambda (#{x\ 3701}# #{y\ 3702}#)
          (begin
            (let ((#{x\ 3707}# #{x\ 3701}#))
              (if (not (#{nonsymbol-id?\ 238}# #{x\ 3707}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3707}#)))
            (let ((#{x\ 3710}# #{y\ 3702}#))
              (if (not (#{nonsymbol-id?\ 238}# #{x\ 3710}#))
                (syntax-violation
                  'bound-identifier=?
                  "invalid argument"
                  #{x\ 3710}#)))
            (#{bound-id=?\ 301}# #{x\ 3701}# #{y\ 3702}#))))
      (set! syntax-violation
        (lambda (#{who\ 3711}#
                 #{message\ 3712}#
                 #{form\ 3713}#
                 .
                 #{subform\ 3714}#)
          (begin
            (let ((#{x\ 3721}# #{who\ 3711}#))
              (if (not ((lambda (#{x\ 3722}#)
                          (let ((#{t\ 3726}# (not #{x\ 3722}#)))
                            (if #{t\ 3726}#
                              #{t\ 3726}#
                              (let ((#{t\ 3729}# (string? #{x\ 3722}#)))
                                (if #{t\ 3729}#
                                  #{t\ 3729}#
                                  (symbol? #{x\ 3722}#))))))
                        #{x\ 3721}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3721}#)))
            (let ((#{x\ 3733}# #{message\ 3712}#))
              (if (not (string? #{x\ 3733}#))
                (syntax-violation
                  'syntax-violation
                  "invalid argument"
                  #{x\ 3733}#)))
            (scm-error
              'syntax-error
              'sc-expand
              (string-append
                (if #{who\ 3711}# "~a: " "")
                "~a "
                (if (null? #{subform\ 3714}#)
                  "in ~a"
                  "in subform `~s' of `~s'"))
              (let ((#{tail\ 3735}#
                      (cons #{message\ 3712}#
                            (map (lambda (#{x\ 3736}#)
                                   (#{strip\ 351}# #{x\ 3736}# (quote (()))))
                                 (append
                                   #{subform\ 3714}#
                                   (list #{form\ 3713}#))))))
                (if #{who\ 3711}#
                  (cons #{who\ 3711}# #{tail\ 3735}#)
                  #{tail\ 3735}#))
              #f))))
      (letrec ((#{match\ 3752}#
                 (lambda (#{e\ 3753}#
                          #{p\ 3754}#
                          #{w\ 3755}#
                          #{r\ 3756}#
                          #{mod\ 3757}#)
                   (if (not #{r\ 3756}#)
                     #f
                     (if (eq? #{p\ 3754}# (quote any))
                       (cons (#{wrap\ 309}#
                               #{e\ 3753}#
                               #{w\ 3755}#
                               #{mod\ 3757}#)
                             #{r\ 3756}#)
                       (if (#{syntax-object?\ 204}# #{e\ 3753}#)
                         (#{match*\ 3750}#
                           (#{syntax-object-expression\ 206}# #{e\ 3753}#)
                           #{p\ 3754}#
                           (#{join-wraps\ 291}#
                             #{w\ 3755}#
                             (#{syntax-object-wrap\ 208}# #{e\ 3753}#))
                           #{r\ 3756}#
                           (#{syntax-object-module\ 210}# #{e\ 3753}#))
                         (#{match*\ 3750}#
                           #{e\ 3753}#
                           #{p\ 3754}#
                           #{w\ 3755}#
                           #{r\ 3756}#
                           #{mod\ 3757}#))))))
               (#{match*\ 3750}#
                 (lambda (#{e\ 3770}#
                          #{p\ 3771}#
                          #{w\ 3772}#
                          #{r\ 3773}#
                          #{mod\ 3774}#)
                   (if (null? #{p\ 3771}#)
                     (if (null? #{e\ 3770}#) #{r\ 3773}# #f)
                     (if (pair? #{p\ 3771}#)
                       (if (pair? #{e\ 3770}#)
                         (#{match\ 3752}#
                           (car #{e\ 3770}#)
                           (car #{p\ 3771}#)
                           #{w\ 3772}#
                           (#{match\ 3752}#
                             (cdr #{e\ 3770}#)
                             (cdr #{p\ 3771}#)
                             #{w\ 3772}#
                             #{r\ 3773}#
                             #{mod\ 3774}#)
                           #{mod\ 3774}#)
                         #f)
                       (if (eq? #{p\ 3771}# (quote each-any))
                         (let ((#{l\ 3791}#
                                 (#{match-each-any\ 3744}#
                                   #{e\ 3770}#
                                   #{w\ 3772}#
                                   #{mod\ 3774}#)))
                           (if #{l\ 3791}#
                             (cons #{l\ 3791}# #{r\ 3773}#)
                             #f))
                         (let ((#{atom-key\ 3797}# (vector-ref #{p\ 3771}# 0)))
                           (if (memv #{atom-key\ 3797}# (quote (each)))
                             (if (null? #{e\ 3770}#)
                               (#{match-empty\ 3746}#
                                 (vector-ref #{p\ 3771}# 1)
                                 #{r\ 3773}#)
                               (let ((#{l\ 3800}#
                                       (#{match-each\ 3740}#
                                         #{e\ 3770}#
                                         (vector-ref #{p\ 3771}# 1)
                                         #{w\ 3772}#
                                         #{mod\ 3774}#)))
                                 (if #{l\ 3800}#
                                   (letrec ((#{collect\ 3805}#
                                              (lambda (#{l\ 3806}#)
                                                (if (null? (car #{l\ 3806}#))
                                                  #{r\ 3773}#
                                                  (cons (map car #{l\ 3806}#)
                                                        (#{collect\ 3805}#
                                                          (map cdr
                                                               #{l\ 3806}#)))))))
                                     (#{collect\ 3805}# #{l\ 3800}#))
                                   #f)))
                             (if (memv #{atom-key\ 3797}# (quote (each+)))
                               (call-with-values
                                 (lambda ()
                                   (#{match-each+\ 3742}#
                                     #{e\ 3770}#
                                     (vector-ref #{p\ 3771}# 1)
                                     (vector-ref #{p\ 3771}# 2)
                                     (vector-ref #{p\ 3771}# 3)
                                     #{w\ 3772}#
                                     #{r\ 3773}#
                                     #{mod\ 3774}#))
                                 (lambda (#{xr*\ 3808}#
                                          #{y-pat\ 3809}#
                                          #{r\ 3810}#)
                                   (if #{r\ 3810}#
                                     (if (null? #{y-pat\ 3809}#)
                                       (if (null? #{xr*\ 3808}#)
                                         (#{match-empty\ 3746}#
                                           (vector-ref #{p\ 3771}# 1)
                                           #{r\ 3810}#)
                                         (#{combine\ 3748}#
                                           #{xr*\ 3808}#
                                           #{r\ 3810}#))
                                       #f)
                                     #f)))
                               (if (memv #{atom-key\ 3797}# (quote (free-id)))
                                 (if (#{id?\ 240}# #{e\ 3770}#)
                                   (if (#{free-id=?\ 299}#
                                         (#{wrap\ 309}#
                                           #{e\ 3770}#
                                           #{w\ 3772}#
                                           #{mod\ 3774}#)
                                         (vector-ref #{p\ 3771}# 1))
                                     #{r\ 3773}#
                                     #f)
                                   #f)
                                 (if (memv #{atom-key\ 3797}# (quote (atom)))
                                   (if (equal?
                                         (vector-ref #{p\ 3771}# 1)
                                         (#{strip\ 351}#
                                           #{e\ 3770}#
                                           #{w\ 3772}#))
                                     #{r\ 3773}#
                                     #f)
                                   (if (memv #{atom-key\ 3797}#
                                             '(vector))
                                     (if (vector? #{e\ 3770}#)
                                       (#{match\ 3752}#
                                         (vector->list #{e\ 3770}#)
                                         (vector-ref #{p\ 3771}# 1)
                                         #{w\ 3772}#
                                         #{r\ 3773}#
                                         #{mod\ 3774}#)
                                       #f))))))))))))
               (#{combine\ 3748}#
                 (lambda (#{r*\ 3827}# #{r\ 3828}#)
                   (if (null? (car #{r*\ 3827}#))
                     #{r\ 3828}#
                     (cons (map car #{r*\ 3827}#)
                           (#{combine\ 3748}#
                             (map cdr #{r*\ 3827}#)
                             #{r\ 3828}#)))))
               (#{match-empty\ 3746}#
                 (lambda (#{p\ 3831}# #{r\ 3832}#)
                   (if (null? #{p\ 3831}#)
                     #{r\ 3832}#
                     (if (eq? #{p\ 3831}# (quote any))
                       (cons (quote ()) #{r\ 3832}#)
                       (if (pair? #{p\ 3831}#)
                         (#{match-empty\ 3746}#
                           (car #{p\ 3831}#)
                           (#{match-empty\ 3746}#
                             (cdr #{p\ 3831}#)
                             #{r\ 3832}#))
                         (if (eq? #{p\ 3831}# (quote each-any))
                           (cons (quote ()) #{r\ 3832}#)
                           (let ((#{atom-key\ 3846}#
                                   (vector-ref #{p\ 3831}# 0)))
                             (if (memv #{atom-key\ 3846}# (quote (each)))
                               (#{match-empty\ 3746}#
                                 (vector-ref #{p\ 3831}# 1)
                                 #{r\ 3832}#)
                               (if (memv #{atom-key\ 3846}# (quote (each+)))
                                 (#{match-empty\ 3746}#
                                   (vector-ref #{p\ 3831}# 1)
                                   (#{match-empty\ 3746}#
                                     (reverse (vector-ref #{p\ 3831}# 2))
                                     (#{match-empty\ 3746}#
                                       (vector-ref #{p\ 3831}# 3)
                                       #{r\ 3832}#)))
                                 (if (memv #{atom-key\ 3846}#
                                           '(free-id atom))
                                   #{r\ 3832}#
                                   (if (memv #{atom-key\ 3846}#
                                             '(vector))
                                     (#{match-empty\ 3746}#
                                       (vector-ref #{p\ 3831}# 1)
                                       #{r\ 3832}#))))))))))))
               (#{match-each-any\ 3744}#
                 (lambda (#{e\ 3851}# #{w\ 3852}# #{mod\ 3853}#)
                   (if (pair? #{e\ 3851}#)
                     (let ((#{l\ 3860}#
                             (#{match-each-any\ 3744}#
                               (cdr #{e\ 3851}#)
                               #{w\ 3852}#
                               #{mod\ 3853}#)))
                       (if #{l\ 3860}#
                         (cons (#{wrap\ 309}#
                                 (car #{e\ 3851}#)
                                 #{w\ 3852}#
                                 #{mod\ 3853}#)
                               #{l\ 3860}#)
                         #f))
                     (if (null? #{e\ 3851}#)
                       '()
                       (if (#{syntax-object?\ 204}# #{e\ 3851}#)
                         (#{match-each-any\ 3744}#
                           (#{syntax-object-expression\ 206}# #{e\ 3851}#)
                           (#{join-wraps\ 291}#
                             #{w\ 3852}#
                             (#{syntax-object-wrap\ 208}# #{e\ 3851}#))
                           #{mod\ 3853}#)
                         #f)))))
               (#{match-each+\ 3742}#
                 (lambda (#{e\ 3868}#
                          #{x-pat\ 3869}#
                          #{y-pat\ 3870}#
                          #{z-pat\ 3871}#
                          #{w\ 3872}#
                          #{r\ 3873}#
                          #{mod\ 3874}#)
                   (letrec ((#{f\ 3885}#
                              (lambda (#{e\ 3886}# #{w\ 3887}#)
                                (if (pair? #{e\ 3886}#)
                                  (call-with-values
                                    (lambda ()
                                      (#{f\ 3885}#
                                        (cdr #{e\ 3886}#)
                                        #{w\ 3887}#))
                                    (lambda (#{xr*\ 3890}#
                                             #{y-pat\ 3891}#
                                             #{r\ 3892}#)
                                      (if #{r\ 3892}#
                                        (if (null? #{y-pat\ 3891}#)
                                          (let ((#{xr\ 3897}#
                                                  (#{match\ 3752}#
                                                    (car #{e\ 3886}#)
                                                    #{x-pat\ 3869}#
                                                    #{w\ 3887}#
                                                    '()
                                                    #{mod\ 3874}#)))
                                            (if #{xr\ 3897}#
                                              (values
                                                (cons #{xr\ 3897}#
                                                      #{xr*\ 3890}#)
                                                #{y-pat\ 3891}#
                                                #{r\ 3892}#)
                                              (values #f #f #f)))
                                          (values
                                            '()
                                            (cdr #{y-pat\ 3891}#)
                                            (#{match\ 3752}#
                                              (car #{e\ 3886}#)
                                              (car #{y-pat\ 3891}#)
                                              #{w\ 3887}#
                                              #{r\ 3892}#
                                              #{mod\ 3874}#)))
                                        (values #f #f #f))))
                                  (if (#{syntax-object?\ 204}# #{e\ 3886}#)
                                    (#{f\ 3885}#
                                      (#{syntax-object-expression\ 206}#
                                        #{e\ 3886}#)
                                      (#{join-wraps\ 291}#
                                        #{w\ 3887}#
                                        #{e\ 3886}#))
                                    (values
                                      '()
                                      #{y-pat\ 3870}#
                                      (#{match\ 3752}#
                                        #{e\ 3886}#
                                        #{z-pat\ 3871}#
                                        #{w\ 3887}#
                                        #{r\ 3873}#
                                        #{mod\ 3874}#)))))))
                     (#{f\ 3885}# #{e\ 3868}# #{w\ 3872}#))))
               (#{match-each\ 3740}#
                 (lambda (#{e\ 3901}#
                          #{p\ 3902}#
                          #{w\ 3903}#
                          #{mod\ 3904}#)
                   (if (pair? #{e\ 3901}#)
                     (let ((#{first\ 3912}#
                             (#{match\ 3752}#
                               (car #{e\ 3901}#)
                               #{p\ 3902}#
                               #{w\ 3903}#
                               '()
                               #{mod\ 3904}#)))
                       (if #{first\ 3912}#
                         (let ((#{rest\ 3916}#
                                 (#{match-each\ 3740}#
                                   (cdr #{e\ 3901}#)
                                   #{p\ 3902}#
                                   #{w\ 3903}#
                                   #{mod\ 3904}#)))
                           (if #{rest\ 3916}#
                             (cons #{first\ 3912}# #{rest\ 3916}#)
                             #f))
                         #f))
                     (if (null? #{e\ 3901}#)
                       '()
                       (if (#{syntax-object?\ 204}# #{e\ 3901}#)
                         (#{match-each\ 3740}#
                           (#{syntax-object-expression\ 206}# #{e\ 3901}#)
                           #{p\ 3902}#
                           (#{join-wraps\ 291}#
                             #{w\ 3903}#
                             (#{syntax-object-wrap\ 208}# #{e\ 3901}#))
                           (#{syntax-object-module\ 210}# #{e\ 3901}#))
                         #f))))))
        (set! $sc-dispatch
          (lambda (#{e\ 3924}# #{p\ 3925}#)
            (if (eq? #{p\ 3925}# (quote any))
              (list #{e\ 3924}#)
              (if (#{syntax-object?\ 204}# #{e\ 3924}#)
                (#{match*\ 3750}#
                  (#{syntax-object-expression\ 206}# #{e\ 3924}#)
                  #{p\ 3925}#
                  (#{syntax-object-wrap\ 208}# #{e\ 3924}#)
                  '()
                  (#{syntax-object-module\ 210}# #{e\ 3924}#))
                (#{match*\ 3750}#
                  #{e\ 3924}#
                  #{p\ 3925}#
                  '(())
                  '()
                  #f)))))))))

(define with-syntax
  (make-syntax-transformer
    'with-syntax
    'macro
    (cons (lambda (#{x\ 3934}#)
            ((lambda (#{tmp\ 3936}#)
               ((lambda (#{tmp\ 3937}#)
                  (if #{tmp\ 3937}#
                    (apply (lambda (#{_\ 3941}# #{e1\ 3942}# #{e2\ 3943}#)
                             (cons '#(syntax-object
                                      begin
                                      ((top)
                                       #(ribcage
                                         #(_ e1 e2)
                                         #((top) (top) (top))
                                         #("i3938" "i3939" "i3940"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i3935")))
                                      (hygiene guile))
                                   (cons #{e1\ 3942}# #{e2\ 3943}#)))
                           #{tmp\ 3937}#)
                    ((lambda (#{tmp\ 3945}#)
                       (if #{tmp\ 3945}#
                         (apply (lambda (#{_\ 3951}#
                                         #{out\ 3952}#
                                         #{in\ 3953}#
                                         #{e1\ 3954}#
                                         #{e2\ 3955}#)
                                  (list '#(syntax-object
                                           syntax-case
                                           ((top)
                                            #(ribcage
                                              #(_ out in e1 e2)
                                              #((top) (top) (top) (top) (top))
                                              #("i3946"
                                                "i3947"
                                                "i3948"
                                                "i3949"
                                                "i3950"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i3935")))
                                           (hygiene guile))
                                        #{in\ 3953}#
                                        '()
                                        (list #{out\ 3952}#
                                              (cons '#(syntax-object
                                                       begin
                                                       ((top)
                                                        #(ribcage
                                                          #(_ out in e1 e2)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i3946"
                                                            "i3947"
                                                            "i3948"
                                                            "i3949"
                                                            "i3950"))
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i3935")))
                                                       (hygiene guile))
                                                    (cons #{e1\ 3954}#
                                                          #{e2\ 3955}#)))))
                                #{tmp\ 3945}#)
                         ((lambda (#{tmp\ 3957}#)
                            (if #{tmp\ 3957}#
                              (apply (lambda (#{_\ 3963}#
                                              #{out\ 3964}#
                                              #{in\ 3965}#
                                              #{e1\ 3966}#
                                              #{e2\ 3967}#)
                                       (list '#(syntax-object
                                                syntax-case
                                                ((top)
                                                 #(ribcage
                                                   #(_ out in e1 e2)
                                                   #((top)
                                                     (top)
                                                     (top)
                                                     (top)
                                                     (top))
                                                   #("i3958"
                                                     "i3959"
                                                     "i3960"
                                                     "i3961"
                                                     "i3962"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(x)
                                                   #((top))
                                                   #("i3935")))
                                                (hygiene guile))
                                             (cons '#(syntax-object
                                                      list
                                                      ((top)
                                                       #(ribcage
                                                         #(_ out in e1 e2)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i3958"
                                                           "i3959"
                                                           "i3960"
                                                           "i3961"
                                                           "i3962"))
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i3935")))
                                                      (hygiene guile))
                                                   #{in\ 3965}#)
                                             '()
                                             (list #{out\ 3964}#
                                                   (cons '#(syntax-object
                                                            begin
                                                            ((top)
                                                             #(ribcage
                                                               #(_
                                                                 out
                                                                 in
                                                                 e1
                                                                 e2)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i3958"
                                                                 "i3959"
                                                                 "i3960"
                                                                 "i3961"
                                                                 "i3962"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i3935")))
                                                            (hygiene guile))
                                                         (cons #{e1\ 3966}#
                                                               #{e2\ 3967}#)))))
                                     #{tmp\ 3957}#)
                              (syntax-violation
                                #f
                                "source expression failed to match any pattern"
                                #{tmp\ 3936}#)))
                          ($sc-dispatch
                            #{tmp\ 3936}#
                            '(any #(each (any any)) any . each-any)))))
                     ($sc-dispatch
                       #{tmp\ 3936}#
                       '(any ((any any)) any . each-any)))))
                ($sc-dispatch
                  #{tmp\ 3936}#
                  '(any () any . each-any))))
             #{x\ 3934}#))
          (module-name (current-module)))))

(define syntax-rules
  (make-syntax-transformer
    'syntax-rules
    'macro
    (cons (lambda (#{x\ 3971}#)
            ((lambda (#{tmp\ 3973}#)
               ((lambda (#{tmp\ 3974}#)
                  (if #{tmp\ 3974}#
                    (apply (lambda (#{_\ 3980}#
                                    #{k\ 3981}#
                                    #{keyword\ 3982}#
                                    #{pattern\ 3983}#
                                    #{template\ 3984}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ k keyword pattern template)
                                         #((top) (top) (top) (top) (top))
                                         #("i3975"
                                           "i3976"
                                           "i3977"
                                           "i3978"
                                           "i3979"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i3972")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ k keyword pattern template)
                                          #((top) (top) (top) (top) (top))
                                          #("i3975"
                                            "i3976"
                                            "i3977"
                                            "i3978"
                                            "i3979"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i3972")))
                                       (hygiene guile)))
                                   (cons '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ k keyword pattern template)
                                               #((top) (top) (top) (top) (top))
                                               #("i3975"
                                                 "i3976"
                                                 "i3977"
                                                 "i3978"
                                                 "i3979"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i3972")))
                                            (hygiene guile))
                                         (cons '#(syntax-object
                                                  x
                                                  ((top)
                                                   #(ribcage
                                                     #(_
                                                       k
                                                       keyword
                                                       pattern
                                                       template)
                                                     #((top)
                                                       (top)
                                                       (top)
                                                       (top)
                                                       (top))
                                                     #("i3975"
                                                       "i3976"
                                                       "i3977"
                                                       "i3978"
                                                       "i3979"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i3972")))
                                                  (hygiene guile))
                                               (cons #{k\ 3981}#
                                                     (map (lambda (#{tmp\ 3987}#
                                                                   #{tmp\ 3986}#)
                                                            (list (cons '#(syntax-object
                                                                           dummy
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i3975"
                                                                                "i3976"
                                                                                "i3977"
                                                                                "i3978"
                                                                                "i3979"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i3972")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 3986}#)
                                                                  (list '#(syntax-object
                                                                           syntax
                                                                           ((top)
                                                                            #(ribcage
                                                                              #(_
                                                                                k
                                                                                keyword
                                                                                pattern
                                                                                template)
                                                                              #((top)
                                                                                (top)
                                                                                (top)
                                                                                (top)
                                                                                (top))
                                                                              #("i3975"
                                                                                "i3976"
                                                                                "i3977"
                                                                                "i3978"
                                                                                "i3979"))
                                                                            #(ribcage
                                                                              ()
                                                                              ()
                                                                              ())
                                                                            #(ribcage
                                                                              #(x)
                                                                              #((top))
                                                                              #("i3972")))
                                                                           (hygiene
                                                                             guile))
                                                                        #{tmp\ 3987}#)))
                                                          #{template\ 3984}#
                                                          #{pattern\ 3983}#))))))
                           #{tmp\ 3974}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 3973}#)))
                ($sc-dispatch
                  #{tmp\ 3973}#
                  '(any each-any . #(each ((any . any) any))))))
             #{x\ 3971}#))
          (module-name (current-module)))))

(define let*
  (make-syntax-transformer
    'let*
    'macro
    (cons (lambda (#{x\ 3988}#)
            ((lambda (#{tmp\ 3990}#)
               ((lambda (#{tmp\ 3991}#)
                  (if (if #{tmp\ 3991}#
                        (apply (lambda (#{let*\ 3997}#
                                        #{x\ 3998}#
                                        #{v\ 3999}#
                                        #{e1\ 4000}#
                                        #{e2\ 4001}#)
                                 (and-map identifier? #{x\ 3998}#))
                               #{tmp\ 3991}#)
                        #f)
                    (apply (lambda (#{let*\ 4008}#
                                    #{x\ 4009}#
                                    #{v\ 4010}#
                                    #{e1\ 4011}#
                                    #{e2\ 4012}#)
                             (letrec ((#{f\ 4015}#
                                        (lambda (#{bindings\ 4016}#)
                                          (if (null? #{bindings\ 4016}#)
                                            (cons '#(syntax-object
                                                     let
                                                     ((top)
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(f bindings)
                                                        #((top) (top))
                                                        #("i4013" "i4014"))
                                                      #(ribcage
                                                        #(let* x v e1 e2)
                                                        #((top)
                                                          (top)
                                                          (top)
                                                          (top)
                                                          (top))
                                                        #("i4003"
                                                          "i4004"
                                                          "i4005"
                                                          "i4006"
                                                          "i4007"))
                                                      #(ribcage () () ())
                                                      #(ribcage
                                                        #(x)
                                                        #((top))
                                                        #("i3989")))
                                                     (hygiene guile))
                                                  (cons '()
                                                        (cons #{e1\ 4011}#
                                                              #{e2\ 4012}#)))
                                            ((lambda (#{tmp\ 4021}#)
                                               ((lambda (#{tmp\ 4022}#)
                                                  (if #{tmp\ 4022}#
                                                    (apply (lambda (#{body\ 4025}#
                                                                    #{binding\ 4026}#)
                                                             (list '#(syntax-object
                                                                      let
                                                                      ((top)
                                                                       #(ribcage
                                                                         #(body
                                                                           binding)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4023"
                                                                           "i4024"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(f
                                                                           bindings)
                                                                         #((top)
                                                                           (top))
                                                                         #("i4013"
                                                                           "i4014"))
                                                                       #(ribcage
                                                                         #(let*
                                                                           x
                                                                           v
                                                                           e1
                                                                           e2)
                                                                         #((top)
                                                                           (top)
                                                                           (top)
                                                                           (top)
                                                                           (top))
                                                                         #("i4003"
                                                                           "i4004"
                                                                           "i4005"
                                                                           "i4006"
                                                                           "i4007"))
                                                                       #(ribcage
                                                                         ()
                                                                         ()
                                                                         ())
                                                                       #(ribcage
                                                                         #(x)
                                                                         #((top))
                                                                         #("i3989")))
                                                                      (hygiene
                                                                        guile))
                                                                   (list #{binding\ 4026}#)
                                                                   #{body\ 4025}#))
                                                           #{tmp\ 4022}#)
                                                    (syntax-violation
                                                      #f
                                                      "source expression failed to match any pattern"
                                                      #{tmp\ 4021}#)))
                                                ($sc-dispatch
                                                  #{tmp\ 4021}#
                                                  '(any any))))
                                             (list (#{f\ 4015}#
                                                     (cdr #{bindings\ 4016}#))
                                                   (car #{bindings\ 4016}#)))))))
                               (#{f\ 4015}#
                                 (map list #{x\ 4009}# #{v\ 4010}#))))
                           #{tmp\ 3991}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 3990}#)))
                ($sc-dispatch
                  #{tmp\ 3990}#
                  '(any #(each (any any)) any . each-any))))
             #{x\ 3988}#))
          (module-name (current-module)))))

(define do
  (make-syntax-transformer
    'do
    'macro
    (cons (lambda (#{orig-x\ 4027}#)
            ((lambda (#{tmp\ 4029}#)
               ((lambda (#{tmp\ 4030}#)
                  (if #{tmp\ 4030}#
                    (apply (lambda (#{_\ 4038}#
                                    #{var\ 4039}#
                                    #{init\ 4040}#
                                    #{step\ 4041}#
                                    #{e0\ 4042}#
                                    #{e1\ 4043}#
                                    #{c\ 4044}#)
                             ((lambda (#{tmp\ 4046}#)
                                ((lambda (#{tmp\ 4047}#)
                                   (if #{tmp\ 4047}#
                                     (apply (lambda (#{step\ 4049}#)
                                              ((lambda (#{tmp\ 4050}#)
                                                 ((lambda (#{tmp\ 4051}#)
                                                    (if #{tmp\ 4051}#
                                                      (apply (lambda ()
                                                               (list '#(syntax-object
                                                                        let
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4048"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4031"
                                                                             "i4032"
                                                                             "i4033"
                                                                             "i4034"
                                                                             "i4035"
                                                                             "i4036"
                                                                             "i4037"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4028")))
                                                                        (hygiene
                                                                          guile))
                                                                     '#(syntax-object
                                                                        doloop
                                                                        ((top)
                                                                         #(ribcage
                                                                           #(step)
                                                                           #((top))
                                                                           #("i4048"))
                                                                         #(ribcage
                                                                           #(_
                                                                             var
                                                                             init
                                                                             step
                                                                             e0
                                                                             e1
                                                                             c)
                                                                           #((top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top)
                                                                             (top))
                                                                           #("i4031"
                                                                             "i4032"
                                                                             "i4033"
                                                                             "i4034"
                                                                             "i4035"
                                                                             "i4036"
                                                                             "i4037"))
                                                                         #(ribcage
                                                                           ()
                                                                           ()
                                                                           ())
                                                                         #(ribcage
                                                                           #(orig-x)
                                                                           #((top))
                                                                           #("i4028")))
                                                                        (hygiene
                                                                          guile))
                                                                     (map list
                                                                          #{var\ 4039}#
                                                                          #{init\ 4040}#)
                                                                     (list '#(syntax-object
                                                                              if
                                                                              ((top)
                                                                               #(ribcage
                                                                                 #(step)
                                                                                 #((top))
                                                                                 #("i4048"))
                                                                               #(ribcage
                                                                                 #(_
                                                                                   var
                                                                                   init
                                                                                   step
                                                                                   e0
                                                                                   e1
                                                                                   c)
                                                                                 #((top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top)
                                                                                   (top))
                                                                                 #("i4031"
                                                                                   "i4032"
                                                                                   "i4033"
                                                                                   "i4034"
                                                                                   "i4035"
                                                                                   "i4036"
                                                                                   "i4037"))
                                                                               #(ribcage
                                                                                 ()
                                                                                 ()
                                                                                 ())
                                                                               #(ribcage
                                                                                 #(orig-x)
                                                                                 #((top))
                                                                                 #("i4028")))
                                                                              (hygiene
                                                                                guile))
                                                                           (list '#(syntax-object
                                                                                    not
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4048"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4031"
                                                                                         "i4032"
                                                                                         "i4033"
                                                                                         "i4034"
                                                                                         "i4035"
                                                                                         "i4036"
                                                                                         "i4037"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4028")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 #{e0\ 4042}#)
                                                                           (cons '#(syntax-object
                                                                                    begin
                                                                                    ((top)
                                                                                     #(ribcage
                                                                                       #(step)
                                                                                       #((top))
                                                                                       #("i4048"))
                                                                                     #(ribcage
                                                                                       #(_
                                                                                         var
                                                                                         init
                                                                                         step
                                                                                         e0
                                                                                         e1
                                                                                         c)
                                                                                       #((top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top)
                                                                                         (top))
                                                                                       #("i4031"
                                                                                         "i4032"
                                                                                         "i4033"
                                                                                         "i4034"
                                                                                         "i4035"
                                                                                         "i4036"
                                                                                         "i4037"))
                                                                                     #(ribcage
                                                                                       ()
                                                                                       ()
                                                                                       ())
                                                                                     #(ribcage
                                                                                       #(orig-x)
                                                                                       #((top))
                                                                                       #("i4028")))
                                                                                    (hygiene
                                                                                      guile))
                                                                                 (append
                                                                                   #{c\ 4044}#
                                                                                   (list (cons '#(syntax-object
                                                                                                  doloop
                                                                                                  ((top)
                                                                                                   #(ribcage
                                                                                                     #(step)
                                                                                                     #((top))
                                                                                                     #("i4048"))
                                                                                                   #(ribcage
                                                                                                     #(_
                                                                                                       var
                                                                                                       init
                                                                                                       step
                                                                                                       e0
                                                                                                       e1
                                                                                                       c)
                                                                                                     #((top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top)
                                                                                                       (top))
                                                                                                     #("i4031"
                                                                                                       "i4032"
                                                                                                       "i4033"
                                                                                                       "i4034"
                                                                                                       "i4035"
                                                                                                       "i4036"
                                                                                                       "i4037"))
                                                                                                   #(ribcage
                                                                                                     ()
                                                                                                     ()
                                                                                                     ())
                                                                                                   #(ribcage
                                                                                                     #(orig-x)
                                                                                                     #((top))
                                                                                                     #("i4028")))
                                                                                                  (hygiene
                                                                                                    guile))
                                                                                               #{step\ 4049}#)))))))
                                                             #{tmp\ 4051}#)
                                                      ((lambda (#{tmp\ 4056}#)
                                                         (if #{tmp\ 4056}#
                                                           (apply (lambda (#{e1\ 4059}#
                                                                           #{e2\ 4060}#)
                                                                    (list '#(syntax-object
                                                                             let
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4057"
                                                                                  "i4058"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4048"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4031"
                                                                                  "i4032"
                                                                                  "i4033"
                                                                                  "i4034"
                                                                                  "i4035"
                                                                                  "i4036"
                                                                                  "i4037"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4028")))
                                                                             (hygiene
                                                                               guile))
                                                                          '#(syntax-object
                                                                             doloop
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top))
                                                                                #("i4057"
                                                                                  "i4058"))
                                                                              #(ribcage
                                                                                #(step)
                                                                                #((top))
                                                                                #("i4048"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  var
                                                                                  init
                                                                                  step
                                                                                  e0
                                                                                  e1
                                                                                  c)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4031"
                                                                                  "i4032"
                                                                                  "i4033"
                                                                                  "i4034"
                                                                                  "i4035"
                                                                                  "i4036"
                                                                                  "i4037"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(orig-x)
                                                                                #((top))
                                                                                #("i4028")))
                                                                             (hygiene
                                                                               guile))
                                                                          (map list
                                                                               #{var\ 4039}#
                                                                               #{init\ 4040}#)
                                                                          (list '#(syntax-object
                                                                                   if
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4057"
                                                                                        "i4058"))
                                                                                    #(ribcage
                                                                                      #(step)
                                                                                      #((top))
                                                                                      #("i4048"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        var
                                                                                        init
                                                                                        step
                                                                                        e0
                                                                                        e1
                                                                                        c)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4031"
                                                                                        "i4032"
                                                                                        "i4033"
                                                                                        "i4034"
                                                                                        "i4035"
                                                                                        "i4036"
                                                                                        "i4037"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(orig-x)
                                                                                      #((top))
                                                                                      #("i4028")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                #{e0\ 4042}#
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4057"
                                                                                              "i4058"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4048"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4031"
                                                                                              "i4032"
                                                                                              "i4033"
                                                                                              "i4034"
                                                                                              "i4035"
                                                                                              "i4036"
                                                                                              "i4037"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4028")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (cons #{e1\ 4059}#
                                                                                            #{e2\ 4060}#))
                                                                                (cons '#(syntax-object
                                                                                         begin
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top))
                                                                                            #("i4057"
                                                                                              "i4058"))
                                                                                          #(ribcage
                                                                                            #(step)
                                                                                            #((top))
                                                                                            #("i4048"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              var
                                                                                              init
                                                                                              step
                                                                                              e0
                                                                                              e1
                                                                                              c)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4031"
                                                                                              "i4032"
                                                                                              "i4033"
                                                                                              "i4034"
                                                                                              "i4035"
                                                                                              "i4036"
                                                                                              "i4037"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(orig-x)
                                                                                            #((top))
                                                                                            #("i4028")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      (append
                                                                                        #{c\ 4044}#
                                                                                        (list (cons '#(syntax-object
                                                                                                       doloop
                                                                                                       ((top)
                                                                                                        #(ribcage
                                                                                                          #(e1
                                                                                                            e2)
                                                                                                          #((top)
                                                                                                            (top))
                                                                                                          #("i4057"
                                                                                                            "i4058"))
                                                                                                        #(ribcage
                                                                                                          #(step)
                                                                                                          #((top))
                                                                                                          #("i4048"))
                                                                                                        #(ribcage
                                                                                                          #(_
                                                                                                            var
                                                                                                            init
                                                                                                            step
                                                                                                            e0
                                                                                                            e1
                                                                                                            c)
                                                                                                          #((top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top)
                                                                                                            (top))
                                                                                                          #("i4031"
                                                                                                            "i4032"
                                                                                                            "i4033"
                                                                                                            "i4034"
                                                                                                            "i4035"
                                                                                                            "i4036"
                                                                                                            "i4037"))
                                                                                                        #(ribcage
                                                                                                          ()
                                                                                                          ()
                                                                                                          ())
                                                                                                        #(ribcage
                                                                                                          #(orig-x)
                                                                                                          #((top))
                                                                                                          #("i4028")))
                                                                                                       (hygiene
                                                                                                         guile))
                                                                                                    #{step\ 4049}#)))))))
                                                                  #{tmp\ 4056}#)
                                                           (syntax-violation
                                                             #f
                                                             "source expression failed to match any pattern"
                                                             #{tmp\ 4050}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4050}#
                                                         '(any . each-any)))))
                                                  ($sc-dispatch
                                                    #{tmp\ 4050}#
                                                    '())))
                                               #{e1\ 4043}#))
                                            #{tmp\ 4047}#)
                                     (syntax-violation
                                       #f
                                       "source expression failed to match any pattern"
                                       #{tmp\ 4046}#)))
                                 ($sc-dispatch
                                   #{tmp\ 4046}#
                                   'each-any)))
                              (map (lambda (#{v\ 4067}# #{s\ 4068}#)
                                     ((lambda (#{tmp\ 4071}#)
                                        ((lambda (#{tmp\ 4072}#)
                                           (if #{tmp\ 4072}#
                                             (apply (lambda () #{v\ 4067}#)
                                                    #{tmp\ 4072}#)
                                             ((lambda (#{tmp\ 4073}#)
                                                (if #{tmp\ 4073}#
                                                  (apply (lambda (#{e\ 4075}#)
                                                           #{e\ 4075}#)
                                                         #{tmp\ 4073}#)
                                                  ((lambda (#{_\ 4077}#)
                                                     (syntax-violation
                                                       'do
                                                       "bad step expression"
                                                       #{orig-x\ 4027}#
                                                       #{s\ 4068}#))
                                                   #{tmp\ 4071}#)))
                                              ($sc-dispatch
                                                #{tmp\ 4071}#
                                                '(any)))))
                                         ($sc-dispatch
                                           #{tmp\ 4071}#
                                           '())))
                                      #{s\ 4068}#))
                                   #{var\ 4039}#
                                   #{step\ 4041}#)))
                           #{tmp\ 4030}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4029}#)))
                ($sc-dispatch
                  #{tmp\ 4029}#
                  '(any #(each (any any . any))
                        (any . each-any)
                        .
                        each-any))))
             #{orig-x\ 4027}#))
          (module-name (current-module)))))

(define quasiquote
  (make-syntax-transformer
    'quasiquote
    'macro
    (cons (letrec ((#{quasicons\ 4084}#
                     (lambda (#{x\ 4088}# #{y\ 4089}#)
                       ((lambda (#{tmp\ 4093}#)
                          ((lambda (#{tmp\ 4094}#)
                             (if #{tmp\ 4094}#
                               (apply (lambda (#{x\ 4097}# #{y\ 4098}#)
                                        ((lambda (#{tmp\ 4099}#)
                                           ((lambda (#{tmp\ 4100}#)
                                              (if #{tmp\ 4100}#
                                                (apply (lambda (#{dy\ 4102}#)
                                                         ((lambda (#{tmp\ 4103}#)
                                                            ((lambda (#{tmp\ 4104}#)
                                                               (if #{tmp\ 4104}#
                                                                 (apply (lambda (#{dx\ 4106}#)
                                                                          (list '#(syntax-object
                                                                                   quote
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(dx)
                                                                                      #((top))
                                                                                      #("i4105"))
                                                                                    #(ribcage
                                                                                      #(dy)
                                                                                      #((top))
                                                                                      #("i4101"))
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4095"
                                                                                        "i4096"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x
                                                                                        y)
                                                                                      #((top)
                                                                                        (top))
                                                                                      #("i4090"
                                                                                        "i4091"))
                                                                                    #(ribcage
                                                                                      #(quasicons
                                                                                        quasiappend
                                                                                        quasivector
                                                                                        quasi)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4080"
                                                                                        "i4081"
                                                                                        "i4082"
                                                                                        "i4083")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{dx\ 4106}#
                                                                                      #{dy\ 4102}#)))
                                                                        #{tmp\ 4104}#)
                                                                 ((lambda (#{_\ 4108}#)
                                                                    (if (null? #{dy\ 4102}#)
                                                                      (list '#(syntax-object
                                                                               list
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4107"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4101"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4095"
                                                                                    "i4096"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4090"
                                                                                    "i4091"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4080"
                                                                                    "i4081"
                                                                                    "i4082"
                                                                                    "i4083")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4097}#)
                                                                      (list '#(syntax-object
                                                                               cons
                                                                               ((top)
                                                                                #(ribcage
                                                                                  #(_)
                                                                                  #((top))
                                                                                  #("i4107"))
                                                                                #(ribcage
                                                                                  #(dy)
                                                                                  #((top))
                                                                                  #("i4101"))
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4095"
                                                                                    "i4096"))
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  ()
                                                                                  ()
                                                                                  ())
                                                                                #(ribcage
                                                                                  #(x
                                                                                    y)
                                                                                  #((top)
                                                                                    (top))
                                                                                  #("i4090"
                                                                                    "i4091"))
                                                                                #(ribcage
                                                                                  #(quasicons
                                                                                    quasiappend
                                                                                    quasivector
                                                                                    quasi)
                                                                                  #((top)
                                                                                    (top)
                                                                                    (top)
                                                                                    (top))
                                                                                  #("i4080"
                                                                                    "i4081"
                                                                                    "i4082"
                                                                                    "i4083")))
                                                                               (hygiene
                                                                                 guile))
                                                                            #{x\ 4097}#
                                                                            #{y\ 4098}#)))
                                                                  #{tmp\ 4103}#)))
                                                             ($sc-dispatch
                                                               #{tmp\ 4103}#
                                                               '(#(free-id
                                                                   #(syntax-object
                                                                     quote
                                                                     ((top)
                                                                      #(ribcage
                                                                        #(dy)
                                                                        #((top))
                                                                        #("i4101"))
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4095"
                                                                          "i4096"))
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        ()
                                                                        ()
                                                                        ())
                                                                      #(ribcage
                                                                        #(x y)
                                                                        #((top)
                                                                          (top))
                                                                        #("i4090"
                                                                          "i4091"))
                                                                      #(ribcage
                                                                        #(quasicons
                                                                          quasiappend
                                                                          quasivector
                                                                          quasi)
                                                                        #((top)
                                                                          (top)
                                                                          (top)
                                                                          (top))
                                                                        #("i4080"
                                                                          "i4081"
                                                                          "i4082"
                                                                          "i4083")))
                                                                     (hygiene
                                                                       guile)))
                                                                 any))))
                                                          #{x\ 4097}#))
                                                       #{tmp\ 4100}#)
                                                ((lambda (#{tmp\ 4109}#)
                                                   (if #{tmp\ 4109}#
                                                     (apply (lambda (#{stuff\ 4111}#)
                                                              (cons '#(syntax-object
                                                                       list
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(stuff)
                                                                          #((top))
                                                                          #("i4110"))
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4095"
                                                                            "i4096"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x
                                                                            y)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4090"
                                                                            "i4091"))
                                                                        #(ribcage
                                                                          #(quasicons
                                                                            quasiappend
                                                                            quasivector
                                                                            quasi)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4080"
                                                                            "i4081"
                                                                            "i4082"
                                                                            "i4083")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{x\ 4097}#
                                                                          #{stuff\ 4111}#)))
                                                            #{tmp\ 4109}#)
                                                     ((lambda (#{else\ 4113}#)
                                                        (list '#(syntax-object
                                                                 cons
                                                                 ((top)
                                                                  #(ribcage
                                                                    #(else)
                                                                    #((top))
                                                                    #("i4112"))
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4095"
                                                                      "i4096"))
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    ()
                                                                    ()
                                                                    ())
                                                                  #(ribcage
                                                                    #(x y)
                                                                    #((top)
                                                                      (top))
                                                                    #("i4090"
                                                                      "i4091"))
                                                                  #(ribcage
                                                                    #(quasicons
                                                                      quasiappend
                                                                      quasivector
                                                                      quasi)
                                                                    #((top)
                                                                      (top)
                                                                      (top)
                                                                      (top))
                                                                    #("i4080"
                                                                      "i4081"
                                                                      "i4082"
                                                                      "i4083")))
                                                                 (hygiene
                                                                   guile))
                                                              #{x\ 4097}#
                                                              #{y\ 4098}#))
                                                      #{tmp\ 4099}#)))
                                                 ($sc-dispatch
                                                   #{tmp\ 4099}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         list
                                                         ((top)
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4095" "i4096"))
                                                          #(ribcage () () ())
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x y)
                                                            #((top) (top))
                                                            #("i4090" "i4091"))
                                                          #(ribcage
                                                            #(quasicons
                                                              quasiappend
                                                              quasivector
                                                              quasi)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4080"
                                                              "i4081"
                                                              "i4082"
                                                              "i4083")))
                                                         (hygiene guile)))
                                                     .
                                                     any)))))
                                            ($sc-dispatch
                                              #{tmp\ 4099}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4095" "i4096"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4090" "i4091"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4080"
                                                         "i4081"
                                                         "i4082"
                                                         "i4083")))
                                                    (hygiene guile)))
                                                any))))
                                         #{y\ 4098}#))
                                      #{tmp\ 4094}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4093}#)))
                           ($sc-dispatch #{tmp\ 4093}# (quote (any any)))))
                        (list #{x\ 4088}# #{y\ 4089}#))))
                   (#{quasiappend\ 4085}#
                     (lambda (#{x\ 4114}# #{y\ 4115}#)
                       ((lambda (#{tmp\ 4119}#)
                          ((lambda (#{tmp\ 4120}#)
                             (if #{tmp\ 4120}#
                               (apply (lambda (#{x\ 4123}# #{y\ 4124}#)
                                        ((lambda (#{tmp\ 4125}#)
                                           ((lambda (#{tmp\ 4126}#)
                                              (if #{tmp\ 4126}#
                                                (apply (lambda () #{x\ 4123}#)
                                                       #{tmp\ 4126}#)
                                                ((lambda (#{_\ 4128}#)
                                                   (list '#(syntax-object
                                                            append
                                                            ((top)
                                                             #(ribcage
                                                               #(_)
                                                               #((top))
                                                               #("i4127"))
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4121"
                                                                 "i4122"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x y)
                                                               #((top) (top))
                                                               #("i4116"
                                                                 "i4117"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4080"
                                                                 "i4081"
                                                                 "i4082"
                                                                 "i4083")))
                                                            (hygiene guile))
                                                         #{x\ 4123}#
                                                         #{y\ 4124}#))
                                                 #{tmp\ 4125}#)))
                                            ($sc-dispatch
                                              #{tmp\ 4125}#
                                              '(#(free-id
                                                  #(syntax-object
                                                    quote
                                                    ((top)
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4121" "i4122"))
                                                     #(ribcage () () ())
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x y)
                                                       #((top) (top))
                                                       #("i4116" "i4117"))
                                                     #(ribcage
                                                       #(quasicons
                                                         quasiappend
                                                         quasivector
                                                         quasi)
                                                       #((top)
                                                         (top)
                                                         (top)
                                                         (top))
                                                       #("i4080"
                                                         "i4081"
                                                         "i4082"
                                                         "i4083")))
                                                    (hygiene guile)))
                                                ()))))
                                         #{y\ 4124}#))
                                      #{tmp\ 4120}#)
                               (syntax-violation
                                 #f
                                 "source expression failed to match any pattern"
                                 #{tmp\ 4119}#)))
                           ($sc-dispatch #{tmp\ 4119}# (quote (any any)))))
                        (list #{x\ 4114}# #{y\ 4115}#))))
                   (#{quasivector\ 4086}#
                     (lambda (#{x\ 4129}#)
                       ((lambda (#{tmp\ 4132}#)
                          ((lambda (#{x\ 4134}#)
                             ((lambda (#{tmp\ 4135}#)
                                ((lambda (#{tmp\ 4136}#)
                                   (if #{tmp\ 4136}#
                                     (apply (lambda (#{x\ 4138}#)
                                              (list '#(syntax-object
                                                       quote
                                                       ((top)
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4137"))
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4133"))
                                                        #(ribcage () () ())
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(x)
                                                          #((top))
                                                          #("i4130"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4080"
                                                            "i4081"
                                                            "i4082"
                                                            "i4083")))
                                                       (hygiene guile))
                                                    (list->vector
                                                      #{x\ 4138}#)))
                                            #{tmp\ 4136}#)
                                     ((lambda (#{tmp\ 4140}#)
                                        (if #{tmp\ 4140}#
                                          (apply (lambda (#{x\ 4142}#)
                                                   (cons '#(syntax-object
                                                            vector
                                                            ((top)
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4141"))
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4133"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(x)
                                                               #((top))
                                                               #("i4130"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4080"
                                                                 "i4081"
                                                                 "i4082"
                                                                 "i4083")))
                                                            (hygiene guile))
                                                         #{x\ 4142}#))
                                                 #{tmp\ 4140}#)
                                          ((lambda (#{_\ 4145}#)
                                             (list '#(syntax-object
                                                      list->vector
                                                      ((top)
                                                       #(ribcage
                                                         #(_)
                                                         #((top))
                                                         #("i4144"))
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4133"))
                                                       #(ribcage () () ())
                                                       #(ribcage () () ())
                                                       #(ribcage
                                                         #(x)
                                                         #((top))
                                                         #("i4130"))
                                                       #(ribcage
                                                         #(quasicons
                                                           quasiappend
                                                           quasivector
                                                           quasi)
                                                         #((top)
                                                           (top)
                                                           (top)
                                                           (top))
                                                         #("i4080"
                                                           "i4081"
                                                           "i4082"
                                                           "i4083")))
                                                      (hygiene guile))
                                                   #{x\ 4134}#))
                                           #{tmp\ 4135}#)))
                                      ($sc-dispatch
                                        #{tmp\ 4135}#
                                        '(#(free-id
                                            #(syntax-object
                                              list
                                              ((top)
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4133"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4130"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4080"
                                                   "i4081"
                                                   "i4082"
                                                   "i4083")))
                                              (hygiene guile)))
                                          .
                                          each-any)))))
                                 ($sc-dispatch
                                   #{tmp\ 4135}#
                                   '(#(free-id
                                       #(syntax-object
                                         quote
                                         ((top)
                                          #(ribcage #(x) #((top)) #("i4133"))
                                          #(ribcage () () ())
                                          #(ribcage () () ())
                                          #(ribcage #(x) #((top)) #("i4130"))
                                          #(ribcage
                                            #(quasicons
                                              quasiappend
                                              quasivector
                                              quasi)
                                            #((top) (top) (top) (top))
                                            #("i4080"
                                              "i4081"
                                              "i4082"
                                              "i4083")))
                                         (hygiene guile)))
                                     each-any))))
                              #{x\ 4134}#))
                           #{tmp\ 4132}#))
                        #{x\ 4129}#)))
                   (#{quasi\ 4087}#
                     (lambda (#{p\ 4146}# #{lev\ 4147}#)
                       ((lambda (#{tmp\ 4150}#)
                          ((lambda (#{tmp\ 4151}#)
                             (if #{tmp\ 4151}#
                               (apply (lambda (#{p\ 4153}#)
                                        (if (= #{lev\ 4147}# 0)
                                          #{p\ 4153}#
                                          (#{quasicons\ 4084}#
                                            '(#(syntax-object
                                                quote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4152"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4148" "i4149"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4080"
                                                     "i4081"
                                                     "i4082"
                                                     "i4083")))
                                                (hygiene guile))
                                              #(syntax-object
                                                unquote
                                                ((top)
                                                 #(ribcage
                                                   #(p)
                                                   #((top))
                                                   #("i4152"))
                                                 #(ribcage () () ())
                                                 #(ribcage
                                                   #(p lev)
                                                   #((top) (top))
                                                   #("i4148" "i4149"))
                                                 #(ribcage
                                                   #(quasicons
                                                     quasiappend
                                                     quasivector
                                                     quasi)
                                                   #((top) (top) (top) (top))
                                                   #("i4080"
                                                     "i4081"
                                                     "i4082"
                                                     "i4083")))
                                                (hygiene guile)))
                                            (#{quasi\ 4087}#
                                              (list #{p\ 4153}#)
                                              (- #{lev\ 4147}# 1)))))
                                      #{tmp\ 4151}#)
                               ((lambda (#{tmp\ 4154}#)
                                  (if (if #{tmp\ 4154}#
                                        (apply (lambda (#{args\ 4156}#)
                                                 (= #{lev\ 4147}# 0))
                                               #{tmp\ 4154}#)
                                        #f)
                                    (apply (lambda (#{args\ 4158}#)
                                             (syntax-violation
                                               'unquote
                                               "unquote takes exactly one argument"
                                               #{p\ 4146}#
                                               (cons '#(syntax-object
                                                        unquote
                                                        ((top)
                                                         #(ribcage
                                                           #(args)
                                                           #((top))
                                                           #("i4157"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(p lev)
                                                           #((top) (top))
                                                           #("i4148" "i4149"))
                                                         #(ribcage
                                                           #(quasicons
                                                             quasiappend
                                                             quasivector
                                                             quasi)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4080"
                                                             "i4081"
                                                             "i4082"
                                                             "i4083")))
                                                        (hygiene guile))
                                                     #{args\ 4158}#)))
                                           #{tmp\ 4154}#)
                                    ((lambda (#{tmp\ 4159}#)
                                       (if #{tmp\ 4159}#
                                         (apply (lambda (#{p\ 4162}#
                                                         #{q\ 4163}#)
                                                  (if (= #{lev\ 4147}# 0)
                                                    (#{quasiappend\ 4085}#
                                                      #{p\ 4162}#
                                                      (#{quasi\ 4087}#
                                                        #{q\ 4163}#
                                                        #{lev\ 4147}#))
                                                    (#{quasicons\ 4084}#
                                                      (#{quasicons\ 4084}#
                                                        '(#(syntax-object
                                                            quote
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4160"
                                                                 "i4161"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4148"
                                                                 "i4149"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4080"
                                                                 "i4081"
                                                                 "i4082"
                                                                 "i4083")))
                                                            (hygiene guile))
                                                          #(syntax-object
                                                            unquote-splicing
                                                            ((top)
                                                             #(ribcage
                                                               #(p q)
                                                               #((top) (top))
                                                               #("i4160"
                                                                 "i4161"))
                                                             #(ribcage
                                                               ()
                                                               ()
                                                               ())
                                                             #(ribcage
                                                               #(p lev)
                                                               #((top) (top))
                                                               #("i4148"
                                                                 "i4149"))
                                                             #(ribcage
                                                               #(quasicons
                                                                 quasiappend
                                                                 quasivector
                                                                 quasi)
                                                               #((top)
                                                                 (top)
                                                                 (top)
                                                                 (top))
                                                               #("i4080"
                                                                 "i4081"
                                                                 "i4082"
                                                                 "i4083")))
                                                            (hygiene guile)))
                                                        (#{quasi\ 4087}#
                                                          (list #{p\ 4162}#)
                                                          (- #{lev\ 4147}# 1)))
                                                      (#{quasi\ 4087}#
                                                        #{q\ 4163}#
                                                        #{lev\ 4147}#))))
                                                #{tmp\ 4159}#)
                                         ((lambda (#{tmp\ 4164}#)
                                            (if (if #{tmp\ 4164}#
                                                  (apply (lambda (#{args\ 4167}#
                                                                  #{q\ 4168}#)
                                                           (= #{lev\ 4147}# 0))
                                                         #{tmp\ 4164}#)
                                                  #f)
                                              (apply (lambda (#{args\ 4171}#
                                                              #{q\ 4172}#)
                                                       (syntax-violation
                                                         'unquote-splicing
                                                         "unquote-splicing takes exactly one argument"
                                                         #{p\ 4146}#
                                                         (cons '#(syntax-object
                                                                  unquote-splicing
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(args q)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4169"
                                                                       "i4170"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4148"
                                                                       "i4149"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4080"
                                                                       "i4081"
                                                                       "i4082"
                                                                       "i4083")))
                                                                  (hygiene
                                                                    guile))
                                                               #{args\ 4171}#)))
                                                     #{tmp\ 4164}#)
                                              ((lambda (#{tmp\ 4173}#)
                                                 (if #{tmp\ 4173}#
                                                   (apply (lambda (#{p\ 4175}#)
                                                            (#{quasicons\ 4084}#
                                                              '(#(syntax-object
                                                                  quote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4174"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4148"
                                                                       "i4149"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4080"
                                                                       "i4081"
                                                                       "i4082"
                                                                       "i4083")))
                                                                  (hygiene
                                                                    guile))
                                                                #(syntax-object
                                                                  quasiquote
                                                                  ((top)
                                                                   #(ribcage
                                                                     #(p)
                                                                     #((top))
                                                                     #("i4174"))
                                                                   #(ribcage
                                                                     ()
                                                                     ()
                                                                     ())
                                                                   #(ribcage
                                                                     #(p lev)
                                                                     #((top)
                                                                       (top))
                                                                     #("i4148"
                                                                       "i4149"))
                                                                   #(ribcage
                                                                     #(quasicons
                                                                       quasiappend
                                                                       quasivector
                                                                       quasi)
                                                                     #((top)
                                                                       (top)
                                                                       (top)
                                                                       (top))
                                                                     #("i4080"
                                                                       "i4081"
                                                                       "i4082"
                                                                       "i4083")))
                                                                  (hygiene
                                                                    guile)))
                                                              (#{quasi\ 4087}#
                                                                (list #{p\ 4175}#)
                                                                (+ #{lev\ 4147}#
                                                                   1))))
                                                          #{tmp\ 4173}#)
                                                   ((lambda (#{tmp\ 4176}#)
                                                      (if #{tmp\ 4176}#
                                                        (apply (lambda (#{p\ 4179}#
                                                                        #{q\ 4180}#)
                                                                 (#{quasicons\ 4084}#
                                                                   (#{quasi\ 4087}#
                                                                     #{p\ 4179}#
                                                                     #{lev\ 4147}#)
                                                                   (#{quasi\ 4087}#
                                                                     #{q\ 4180}#
                                                                     #{lev\ 4147}#)))
                                                               #{tmp\ 4176}#)
                                                        ((lambda (#{tmp\ 4181}#)
                                                           (if #{tmp\ 4181}#
                                                             (apply (lambda (#{x\ 4183}#)
                                                                      (#{quasivector\ 4086}#
                                                                        (#{quasi\ 4087}#
                                                                          #{x\ 4183}#
                                                                          #{lev\ 4147}#)))
                                                                    #{tmp\ 4181}#)
                                                             ((lambda (#{p\ 4186}#)
                                                                (list '#(syntax-object
                                                                         quote
                                                                         ((top)
                                                                          #(ribcage
                                                                            #(p)
                                                                            #((top))
                                                                            #("i4185"))
                                                                          #(ribcage
                                                                            ()
                                                                            ()
                                                                            ())
                                                                          #(ribcage
                                                                            #(p
                                                                              lev)
                                                                            #((top)
                                                                              (top))
                                                                            #("i4148"
                                                                              "i4149"))
                                                                          #(ribcage
                                                                            #(quasicons
                                                                              quasiappend
                                                                              quasivector
                                                                              quasi)
                                                                            #((top)
                                                                              (top)
                                                                              (top)
                                                                              (top))
                                                                            #("i4080"
                                                                              "i4081"
                                                                              "i4082"
                                                                              "i4083")))
                                                                         (hygiene
                                                                           guile))
                                                                      #{p\ 4186}#))
                                                              #{tmp\ 4150}#)))
                                                         ($sc-dispatch
                                                           #{tmp\ 4150}#
                                                           '#(vector
                                                              each-any)))))
                                                    ($sc-dispatch
                                                      #{tmp\ 4150}#
                                                      '(any . any)))))
                                               ($sc-dispatch
                                                 #{tmp\ 4150}#
                                                 '(#(free-id
                                                     #(syntax-object
                                                       quasiquote
                                                       ((top)
                                                        #(ribcage () () ())
                                                        #(ribcage
                                                          #(p lev)
                                                          #((top) (top))
                                                          #("i4148" "i4149"))
                                                        #(ribcage
                                                          #(quasicons
                                                            quasiappend
                                                            quasivector
                                                            quasi)
                                                          #((top)
                                                            (top)
                                                            (top)
                                                            (top))
                                                          #("i4080"
                                                            "i4081"
                                                            "i4082"
                                                            "i4083")))
                                                       (hygiene guile)))
                                                   any)))))
                                          ($sc-dispatch
                                            #{tmp\ 4150}#
                                            '((#(free-id
                                                 #(syntax-object
                                                   unquote-splicing
                                                   ((top)
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(p lev)
                                                      #((top) (top))
                                                      #("i4148" "i4149"))
                                                    #(ribcage
                                                      #(quasicons
                                                        quasiappend
                                                        quasivector
                                                        quasi)
                                                      #((top)
                                                        (top)
                                                        (top)
                                                        (top))
                                                      #("i4080"
                                                        "i4081"
                                                        "i4082"
                                                        "i4083")))
                                                   (hygiene guile)))
                                               .
                                               any)
                                              .
                                              any)))))
                                     ($sc-dispatch
                                       #{tmp\ 4150}#
                                       '((#(free-id
                                            #(syntax-object
                                              unquote-splicing
                                              ((top)
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(p lev)
                                                 #((top) (top))
                                                 #("i4148" "i4149"))
                                               #(ribcage
                                                 #(quasicons
                                                   quasiappend
                                                   quasivector
                                                   quasi)
                                                 #((top) (top) (top) (top))
                                                 #("i4080"
                                                   "i4081"
                                                   "i4082"
                                                   "i4083")))
                                              (hygiene guile)))
                                          any)
                                         .
                                         any)))))
                                ($sc-dispatch
                                  #{tmp\ 4150}#
                                  '(#(free-id
                                      #(syntax-object
                                        unquote
                                        ((top)
                                         #(ribcage () () ())
                                         #(ribcage
                                           #(p lev)
                                           #((top) (top))
                                           #("i4148" "i4149"))
                                         #(ribcage
                                           #(quasicons
                                             quasiappend
                                             quasivector
                                             quasi)
                                           #((top) (top) (top) (top))
                                           #("i4080" "i4081" "i4082" "i4083")))
                                        (hygiene guile)))
                                    .
                                    any)))))
                           ($sc-dispatch
                             #{tmp\ 4150}#
                             '(#(free-id
                                 #(syntax-object
                                   unquote
                                   ((top)
                                    #(ribcage () () ())
                                    #(ribcage
                                      #(p lev)
                                      #((top) (top))
                                      #("i4148" "i4149"))
                                    #(ribcage
                                      #(quasicons
                                        quasiappend
                                        quasivector
                                        quasi)
                                      #((top) (top) (top) (top))
                                      #("i4080" "i4081" "i4082" "i4083")))
                                   (hygiene guile)))
                               any))))
                        #{p\ 4146}#))))
            (lambda (#{x\ 4187}#)
              ((lambda (#{tmp\ 4189}#)
                 ((lambda (#{tmp\ 4190}#)
                    (if #{tmp\ 4190}#
                      (apply (lambda (#{_\ 4193}# #{e\ 4194}#)
                               (#{quasi\ 4087}# #{e\ 4194}# 0))
                             #{tmp\ 4190}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4189}#)))
                  ($sc-dispatch #{tmp\ 4189}# (quote (any any)))))
               #{x\ 4187}#)))
          (module-name (current-module)))))

(define include
  (make-syntax-transformer
    'include
    'macro
    (cons (lambda (#{x\ 4195}#)
            (letrec ((#{read-file\ 4198}#
                       (lambda (#{fn\ 4199}# #{k\ 4200}#)
                         (let ((#{p\ 4204}# (open-input-file #{fn\ 4199}#)))
                           (letrec ((#{f\ 4207}#
                                      (lambda (#{x\ 4208}#)
                                        (if (eof-object? #{x\ 4208}#)
                                          (begin
                                            (close-input-port #{p\ 4204}#)
                                            '())
                                          (cons (datum->syntax
                                                  #{k\ 4200}#
                                                  #{x\ 4208}#)
                                                (#{f\ 4207}#
                                                  (read #{p\ 4204}#)))))))
                             (#{f\ 4207}# (read #{p\ 4204}#)))))))
              ((lambda (#{tmp\ 4209}#)
                 ((lambda (#{tmp\ 4210}#)
                    (if #{tmp\ 4210}#
                      (apply (lambda (#{k\ 4213}# #{filename\ 4214}#)
                               (let ((#{fn\ 4216}#
                                       (syntax->datum #{filename\ 4214}#)))
                                 ((lambda (#{tmp\ 4218}#)
                                    ((lambda (#{tmp\ 4219}#)
                                       (if #{tmp\ 4219}#
                                         (apply (lambda (#{exp\ 4221}#)
                                                  (cons '#(syntax-object
                                                           begin
                                                           ((top)
                                                            #(ribcage
                                                              #(exp)
                                                              #((top))
                                                              #("i4220"))
                                                            #(ribcage () () ())
                                                            #(ribcage () () ())
                                                            #(ribcage
                                                              #(fn)
                                                              #((top))
                                                              #("i4215"))
                                                            #(ribcage
                                                              #(k filename)
                                                              #((top) (top))
                                                              #("i4211"
                                                                "i4212"))
                                                            #(ribcage
                                                              (read-file)
                                                              ((top))
                                                              ("i4197"))
                                                            #(ribcage
                                                              #(x)
                                                              #((top))
                                                              #("i4196")))
                                                           (hygiene guile))
                                                        #{exp\ 4221}#))
                                                #{tmp\ 4219}#)
                                         (syntax-violation
                                           #f
                                           "source expression failed to match any pattern"
                                           #{tmp\ 4218}#)))
                                     ($sc-dispatch
                                       #{tmp\ 4218}#
                                       'each-any)))
                                  (#{read-file\ 4198}#
                                    #{fn\ 4216}#
                                    #{k\ 4213}#))))
                             #{tmp\ 4210}#)
                      (syntax-violation
                        #f
                        "source expression failed to match any pattern"
                        #{tmp\ 4209}#)))
                  ($sc-dispatch #{tmp\ 4209}# (quote (any any)))))
               #{x\ 4195}#)))
          (module-name (current-module)))))

(define include-from-path
  (make-syntax-transformer
    'include-from-path
    'macro
    (cons (lambda (#{x\ 4223}#)
            ((lambda (#{tmp\ 4225}#)
               ((lambda (#{tmp\ 4226}#)
                  (if #{tmp\ 4226}#
                    (apply (lambda (#{k\ 4229}# #{filename\ 4230}#)
                             (let ((#{fn\ 4232}#
                                     (syntax->datum #{filename\ 4230}#)))
                               ((lambda (#{tmp\ 4234}#)
                                  ((lambda (#{fn\ 4236}#)
                                     (list '#(syntax-object
                                              include
                                              ((top)
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4235"))
                                               #(ribcage () () ())
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(fn)
                                                 #((top))
                                                 #("i4231"))
                                               #(ribcage
                                                 #(k filename)
                                                 #((top) (top))
                                                 #("i4227" "i4228"))
                                               #(ribcage () () ())
                                               #(ribcage
                                                 #(x)
                                                 #((top))
                                                 #("i4224")))
                                              (hygiene guile))
                                           #{fn\ 4236}#))
                                   #{tmp\ 4234}#))
                                (let ((#{t\ 4239}#
                                        (%search-load-path #{fn\ 4232}#)))
                                  (if #{t\ 4239}#
                                    #{t\ 4239}#
                                    (syntax-violation
                                      'include-from-path
                                      "file not found in path"
                                      #{x\ 4223}#
                                      #{filename\ 4230}#))))))
                           #{tmp\ 4226}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4225}#)))
                ($sc-dispatch #{tmp\ 4225}# (quote (any any)))))
             #{x\ 4223}#))
          (module-name (current-module)))))

(define unquote
  (make-syntax-transformer
    'unquote
    'macro
    (cons (lambda (#{x\ 4241}#)
            ((lambda (#{tmp\ 4243}#)
               ((lambda (#{tmp\ 4244}#)
                  (if #{tmp\ 4244}#
                    (apply (lambda (#{_\ 4247}# #{e\ 4248}#)
                             (syntax-violation
                               'unquote
                               "expression not valid outside of quasiquote"
                               #{x\ 4241}#))
                           #{tmp\ 4244}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4243}#)))
                ($sc-dispatch #{tmp\ 4243}# (quote (any any)))))
             #{x\ 4241}#))
          (module-name (current-module)))))

(define unquote-splicing
  (make-syntax-transformer
    'unquote-splicing
    'macro
    (cons (lambda (#{x\ 4249}#)
            ((lambda (#{tmp\ 4251}#)
               ((lambda (#{tmp\ 4252}#)
                  (if #{tmp\ 4252}#
                    (apply (lambda (#{_\ 4255}# #{e\ 4256}#)
                             (syntax-violation
                               'unquote-splicing
                               "expression not valid outside of quasiquote"
                               #{x\ 4249}#))
                           #{tmp\ 4252}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4251}#)))
                ($sc-dispatch #{tmp\ 4251}# (quote (any any)))))
             #{x\ 4249}#))
          (module-name (current-module)))))

(define case
  (make-syntax-transformer
    'case
    'macro
    (cons (lambda (#{x\ 4257}#)
            ((lambda (#{tmp\ 4259}#)
               ((lambda (#{tmp\ 4260}#)
                  (if #{tmp\ 4260}#
                    (apply (lambda (#{_\ 4265}#
                                    #{e\ 4266}#
                                    #{m1\ 4267}#
                                    #{m2\ 4268}#)
                             ((lambda (#{tmp\ 4270}#)
                                ((lambda (#{body\ 4272}#)
                                   (list '#(syntax-object
                                            let
                                            ((top)
                                             #(ribcage
                                               #(body)
                                               #((top))
                                               #("i4271"))
                                             #(ribcage
                                               #(_ e m1 m2)
                                               #((top) (top) (top) (top))
                                               #("i4261"
                                                 "i4262"
                                                 "i4263"
                                                 "i4264"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4258")))
                                            (hygiene guile))
                                         (list (list '#(syntax-object
                                                        t
                                                        ((top)
                                                         #(ribcage
                                                           #(body)
                                                           #((top))
                                                           #("i4271"))
                                                         #(ribcage
                                                           #(_ e m1 m2)
                                                           #((top)
                                                             (top)
                                                             (top)
                                                             (top))
                                                           #("i4261"
                                                             "i4262"
                                                             "i4263"
                                                             "i4264"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4258")))
                                                        (hygiene guile))
                                                     #{e\ 4266}#))
                                         #{body\ 4272}#))
                                 #{tmp\ 4270}#))
                              (letrec ((#{f\ 4276}#
                                         (lambda (#{clause\ 4277}#
                                                  #{clauses\ 4278}#)
                                           (if (null? #{clauses\ 4278}#)
                                             ((lambda (#{tmp\ 4280}#)
                                                ((lambda (#{tmp\ 4281}#)
                                                   (if #{tmp\ 4281}#
                                                     (apply (lambda (#{e1\ 4284}#
                                                                     #{e2\ 4285}#)
                                                              (cons '#(syntax-object
                                                                       begin
                                                                       ((top)
                                                                        #(ribcage
                                                                          #(e1
                                                                            e2)
                                                                          #((top)
                                                                            (top))
                                                                          #("i4282"
                                                                            "i4283"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(f
                                                                            clause
                                                                            clauses)
                                                                          #((top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4273"
                                                                            "i4274"
                                                                            "i4275"))
                                                                        #(ribcage
                                                                          #(_
                                                                            e
                                                                            m1
                                                                            m2)
                                                                          #((top)
                                                                            (top)
                                                                            (top)
                                                                            (top))
                                                                          #("i4261"
                                                                            "i4262"
                                                                            "i4263"
                                                                            "i4264"))
                                                                        #(ribcage
                                                                          ()
                                                                          ()
                                                                          ())
                                                                        #(ribcage
                                                                          #(x)
                                                                          #((top))
                                                                          #("i4258")))
                                                                       (hygiene
                                                                         guile))
                                                                    (cons #{e1\ 4284}#
                                                                          #{e2\ 4285}#)))
                                                            #{tmp\ 4281}#)
                                                     ((lambda (#{tmp\ 4287}#)
                                                        (if #{tmp\ 4287}#
                                                          (apply (lambda (#{k\ 4291}#
                                                                          #{e1\ 4292}#
                                                                          #{e2\ 4293}#)
                                                                   (list '#(syntax-object
                                                                            if
                                                                            ((top)
                                                                             #(ribcage
                                                                               #(k
                                                                                 e1
                                                                                 e2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4288"
                                                                                 "i4289"
                                                                                 "i4290"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(f
                                                                                 clause
                                                                                 clauses)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4273"
                                                                                 "i4274"
                                                                                 "i4275"))
                                                                             #(ribcage
                                                                               #(_
                                                                                 e
                                                                                 m1
                                                                                 m2)
                                                                               #((top)
                                                                                 (top)
                                                                                 (top)
                                                                                 (top))
                                                                               #("i4261"
                                                                                 "i4262"
                                                                                 "i4263"
                                                                                 "i4264"))
                                                                             #(ribcage
                                                                               ()
                                                                               ()
                                                                               ())
                                                                             #(ribcage
                                                                               #(x)
                                                                               #((top))
                                                                               #("i4258")))
                                                                            (hygiene
                                                                              guile))
                                                                         (list '#(syntax-object
                                                                                  memv
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4288"
                                                                                       "i4289"
                                                                                       "i4290"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4273"
                                                                                       "i4274"
                                                                                       "i4275"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4261"
                                                                                       "i4262"
                                                                                       "i4263"
                                                                                       "i4264"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4258")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               '#(syntax-object
                                                                                  t
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4288"
                                                                                       "i4289"
                                                                                       "i4290"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4273"
                                                                                       "i4274"
                                                                                       "i4275"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4261"
                                                                                       "i4262"
                                                                                       "i4263"
                                                                                       "i4264"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4258")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (list '#(syntax-object
                                                                                        quote
                                                                                        ((top)
                                                                                         #(ribcage
                                                                                           #(k
                                                                                             e1
                                                                                             e2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4288"
                                                                                             "i4289"
                                                                                             "i4290"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(f
                                                                                             clause
                                                                                             clauses)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4273"
                                                                                             "i4274"
                                                                                             "i4275"))
                                                                                         #(ribcage
                                                                                           #(_
                                                                                             e
                                                                                             m1
                                                                                             m2)
                                                                                           #((top)
                                                                                             (top)
                                                                                             (top)
                                                                                             (top))
                                                                                           #("i4261"
                                                                                             "i4262"
                                                                                             "i4263"
                                                                                             "i4264"))
                                                                                         #(ribcage
                                                                                           ()
                                                                                           ()
                                                                                           ())
                                                                                         #(ribcage
                                                                                           #(x)
                                                                                           #((top))
                                                                                           #("i4258")))
                                                                                        (hygiene
                                                                                          guile))
                                                                                     #{k\ 4291}#))
                                                                         (cons '#(syntax-object
                                                                                  begin
                                                                                  ((top)
                                                                                   #(ribcage
                                                                                     #(k
                                                                                       e1
                                                                                       e2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4288"
                                                                                       "i4289"
                                                                                       "i4290"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(f
                                                                                       clause
                                                                                       clauses)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4273"
                                                                                       "i4274"
                                                                                       "i4275"))
                                                                                   #(ribcage
                                                                                     #(_
                                                                                       e
                                                                                       m1
                                                                                       m2)
                                                                                     #((top)
                                                                                       (top)
                                                                                       (top)
                                                                                       (top))
                                                                                     #("i4261"
                                                                                       "i4262"
                                                                                       "i4263"
                                                                                       "i4264"))
                                                                                   #(ribcage
                                                                                     ()
                                                                                     ()
                                                                                     ())
                                                                                   #(ribcage
                                                                                     #(x)
                                                                                     #((top))
                                                                                     #("i4258")))
                                                                                  (hygiene
                                                                                    guile))
                                                                               (cons #{e1\ 4292}#
                                                                                     #{e2\ 4293}#))))
                                                                 #{tmp\ 4287}#)
                                                          ((lambda (#{_\ 4297}#)
                                                             (syntax-violation
                                                               'case
                                                               "bad clause"
                                                               #{x\ 4257}#
                                                               #{clause\ 4277}#))
                                                           #{tmp\ 4280}#)))
                                                      ($sc-dispatch
                                                        #{tmp\ 4280}#
                                                        '(each-any
                                                           any
                                                           .
                                                           each-any)))))
                                                 ($sc-dispatch
                                                   #{tmp\ 4280}#
                                                   '(#(free-id
                                                       #(syntax-object
                                                         else
                                                         ((top)
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(f clause clauses)
                                                            #((top)
                                                              (top)
                                                              (top))
                                                            #("i4273"
                                                              "i4274"
                                                              "i4275"))
                                                          #(ribcage
                                                            #(_ e m1 m2)
                                                            #((top)
                                                              (top)
                                                              (top)
                                                              (top))
                                                            #("i4261"
                                                              "i4262"
                                                              "i4263"
                                                              "i4264"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4258")))
                                                         (hygiene guile)))
                                                     any
                                                     .
                                                     each-any))))
                                              #{clause\ 4277}#)
                                             ((lambda (#{tmp\ 4299}#)
                                                ((lambda (#{rest\ 4301}#)
                                                   ((lambda (#{tmp\ 4302}#)
                                                      ((lambda (#{tmp\ 4303}#)
                                                         (if #{tmp\ 4303}#
                                                           (apply (lambda (#{k\ 4307}#
                                                                           #{e1\ 4308}#
                                                                           #{e2\ 4309}#)
                                                                    (list '#(syntax-object
                                                                             if
                                                                             ((top)
                                                                              #(ribcage
                                                                                #(k
                                                                                  e1
                                                                                  e2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4304"
                                                                                  "i4305"
                                                                                  "i4306"))
                                                                              #(ribcage
                                                                                #(rest)
                                                                                #((top))
                                                                                #("i4300"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(f
                                                                                  clause
                                                                                  clauses)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4273"
                                                                                  "i4274"
                                                                                  "i4275"))
                                                                              #(ribcage
                                                                                #(_
                                                                                  e
                                                                                  m1
                                                                                  m2)
                                                                                #((top)
                                                                                  (top)
                                                                                  (top)
                                                                                  (top))
                                                                                #("i4261"
                                                                                  "i4262"
                                                                                  "i4263"
                                                                                  "i4264"))
                                                                              #(ribcage
                                                                                ()
                                                                                ()
                                                                                ())
                                                                              #(ribcage
                                                                                #(x)
                                                                                #((top))
                                                                                #("i4258")))
                                                                             (hygiene
                                                                               guile))
                                                                          (list '#(syntax-object
                                                                                   memv
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4304"
                                                                                        "i4305"
                                                                                        "i4306"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4300"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4273"
                                                                                        "i4274"
                                                                                        "i4275"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4261"
                                                                                        "i4262"
                                                                                        "i4263"
                                                                                        "i4264"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4258")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                '#(syntax-object
                                                                                   t
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4304"
                                                                                        "i4305"
                                                                                        "i4306"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4300"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4273"
                                                                                        "i4274"
                                                                                        "i4275"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4261"
                                                                                        "i4262"
                                                                                        "i4263"
                                                                                        "i4264"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4258")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (list '#(syntax-object
                                                                                         quote
                                                                                         ((top)
                                                                                          #(ribcage
                                                                                            #(k
                                                                                              e1
                                                                                              e2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4304"
                                                                                              "i4305"
                                                                                              "i4306"))
                                                                                          #(ribcage
                                                                                            #(rest)
                                                                                            #((top))
                                                                                            #("i4300"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(f
                                                                                              clause
                                                                                              clauses)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4273"
                                                                                              "i4274"
                                                                                              "i4275"))
                                                                                          #(ribcage
                                                                                            #(_
                                                                                              e
                                                                                              m1
                                                                                              m2)
                                                                                            #((top)
                                                                                              (top)
                                                                                              (top)
                                                                                              (top))
                                                                                            #("i4261"
                                                                                              "i4262"
                                                                                              "i4263"
                                                                                              "i4264"))
                                                                                          #(ribcage
                                                                                            ()
                                                                                            ()
                                                                                            ())
                                                                                          #(ribcage
                                                                                            #(x)
                                                                                            #((top))
                                                                                            #("i4258")))
                                                                                         (hygiene
                                                                                           guile))
                                                                                      #{k\ 4307}#))
                                                                          (cons '#(syntax-object
                                                                                   begin
                                                                                   ((top)
                                                                                    #(ribcage
                                                                                      #(k
                                                                                        e1
                                                                                        e2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4304"
                                                                                        "i4305"
                                                                                        "i4306"))
                                                                                    #(ribcage
                                                                                      #(rest)
                                                                                      #((top))
                                                                                      #("i4300"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(f
                                                                                        clause
                                                                                        clauses)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4273"
                                                                                        "i4274"
                                                                                        "i4275"))
                                                                                    #(ribcage
                                                                                      #(_
                                                                                        e
                                                                                        m1
                                                                                        m2)
                                                                                      #((top)
                                                                                        (top)
                                                                                        (top)
                                                                                        (top))
                                                                                      #("i4261"
                                                                                        "i4262"
                                                                                        "i4263"
                                                                                        "i4264"))
                                                                                    #(ribcage
                                                                                      ()
                                                                                      ()
                                                                                      ())
                                                                                    #(ribcage
                                                                                      #(x)
                                                                                      #((top))
                                                                                      #("i4258")))
                                                                                   (hygiene
                                                                                     guile))
                                                                                (cons #{e1\ 4308}#
                                                                                      #{e2\ 4309}#))
                                                                          #{rest\ 4301}#))
                                                                  #{tmp\ 4303}#)
                                                           ((lambda (#{_\ 4313}#)
                                                              (syntax-violation
                                                                'case
                                                                "bad clause"
                                                                #{x\ 4257}#
                                                                #{clause\ 4277}#))
                                                            #{tmp\ 4302}#)))
                                                       ($sc-dispatch
                                                         #{tmp\ 4302}#
                                                         '(each-any
                                                            any
                                                            .
                                                            each-any))))
                                                    #{clause\ 4277}#))
                                                 #{tmp\ 4299}#))
                                              (#{f\ 4276}#
                                                (car #{clauses\ 4278}#)
                                                (cdr #{clauses\ 4278}#)))))))
                                (#{f\ 4276}# #{m1\ 4267}# #{m2\ 4268}#))))
                           #{tmp\ 4260}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4259}#)))
                ($sc-dispatch
                  #{tmp\ 4259}#
                  '(any any any . each-any))))
             #{x\ 4257}#))
          (module-name (current-module)))))

(define identifier-syntax
  (make-syntax-transformer
    'identifier-syntax
    'macro
    (cons (lambda (#{x\ 4314}#)
            ((lambda (#{tmp\ 4316}#)
               ((lambda (#{tmp\ 4317}#)
                  (if #{tmp\ 4317}#
                    (apply (lambda (#{_\ 4320}# #{e\ 4321}#)
                             (list '#(syntax-object
                                      lambda
                                      ((top)
                                       #(ribcage
                                         #(_ e)
                                         #((top) (top))
                                         #("i4318" "i4319"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4315")))
                                      (hygiene guile))
                                   '(#(syntax-object
                                       x
                                       ((top)
                                        #(ribcage
                                          #(_ e)
                                          #((top) (top))
                                          #("i4318" "i4319"))
                                        #(ribcage () () ())
                                        #(ribcage #(x) #((top)) #("i4315")))
                                       (hygiene guile)))
                                   (list '#(syntax-object
                                            syntax-case
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4318" "i4319"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4315")))
                                            (hygiene guile))
                                         '#(syntax-object
                                            x
                                            ((top)
                                             #(ribcage
                                               #(_ e)
                                               #((top) (top))
                                               #("i4318" "i4319"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4315")))
                                            (hygiene guile))
                                         '()
                                         (list '#(syntax-object
                                                  id
                                                  ((top)
                                                   #(ribcage
                                                     #(_ e)
                                                     #((top) (top))
                                                     #("i4318" "i4319"))
                                                   #(ribcage () () ())
                                                   #(ribcage
                                                     #(x)
                                                     #((top))
                                                     #("i4315")))
                                                  (hygiene guile))
                                               '(#(syntax-object
                                                   identifier?
                                                   ((top)
                                                    #(ribcage
                                                      #(_ e)
                                                      #((top) (top))
                                                      #("i4318" "i4319"))
                                                    #(ribcage () () ())
                                                    #(ribcage
                                                      #(x)
                                                      #((top))
                                                      #("i4315")))
                                                   (hygiene guile))
                                                 (#(syntax-object
                                                    syntax
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4318" "i4319"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4315")))
                                                    (hygiene guile))
                                                  #(syntax-object
                                                    id
                                                    ((top)
                                                     #(ribcage
                                                       #(_ e)
                                                       #((top) (top))
                                                       #("i4318" "i4319"))
                                                     #(ribcage () () ())
                                                     #(ribcage
                                                       #(x)
                                                       #((top))
                                                       #("i4315")))
                                                    (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4318" "i4319"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4315")))
                                                        (hygiene guile))
                                                     #{e\ 4321}#))
                                         (list (cons #{_\ 4320}#
                                                     '(#(syntax-object
                                                         x
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4318" "i4319"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4315")))
                                                         (hygiene guile))
                                                       #(syntax-object
                                                         ...
                                                         ((top)
                                                          #(ribcage
                                                            #(_ e)
                                                            #((top) (top))
                                                            #("i4318" "i4319"))
                                                          #(ribcage () () ())
                                                          #(ribcage
                                                            #(x)
                                                            #((top))
                                                            #("i4315")))
                                                         (hygiene guile))))
                                               (list '#(syntax-object
                                                        syntax
                                                        ((top)
                                                         #(ribcage
                                                           #(_ e)
                                                           #((top) (top))
                                                           #("i4318" "i4319"))
                                                         #(ribcage () () ())
                                                         #(ribcage
                                                           #(x)
                                                           #((top))
                                                           #("i4315")))
                                                        (hygiene guile))
                                                     (cons #{e\ 4321}#
                                                           '(#(syntax-object
                                                               x
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4318"
                                                                    "i4319"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4315")))
                                                               (hygiene guile))
                                                             #(syntax-object
                                                               ...
                                                               ((top)
                                                                #(ribcage
                                                                  #(_ e)
                                                                  #((top)
                                                                    (top))
                                                                  #("i4318"
                                                                    "i4319"))
                                                                #(ribcage
                                                                  ()
                                                                  ()
                                                                  ())
                                                                #(ribcage
                                                                  #(x)
                                                                  #((top))
                                                                  #("i4315")))
                                                               (hygiene
                                                                 guile)))))))))
                           #{tmp\ 4317}#)
                    (syntax-violation
                      #f
                      "source expression failed to match any pattern"
                      #{tmp\ 4316}#)))
                ($sc-dispatch #{tmp\ 4316}# (quote (any any)))))
             #{x\ 4314}#))
          (module-name (current-module)))))

(define define*
  (make-syntax-transformer
    'define*
    'macro
    (cons (lambda (#{x\ 4322}#)
            ((lambda (#{tmp\ 4324}#)
               ((lambda (#{tmp\ 4325}#)
                  (if #{tmp\ 4325}#
                    (apply (lambda (#{_\ 4331}#
                                    #{id\ 4332}#
                                    #{args\ 4333}#
                                    #{b0\ 4334}#
                                    #{b1\ 4335}#)
                             (list '#(syntax-object
                                      define
                                      ((top)
                                       #(ribcage
                                         #(_ id args b0 b1)
                                         #((top) (top) (top) (top) (top))
                                         #("i4326"
                                           "i4327"
                                           "i4328"
                                           "i4329"
                                           "i4330"))
                                       #(ribcage () () ())
                                       #(ribcage #(x) #((top)) #("i4323")))
                                      (hygiene guile))
                                   #{id\ 4332}#
                                   (cons '#(syntax-object
                                            lambda*
                                            ((top)
                                             #(ribcage
                                               #(_ id args b0 b1)
                                               #((top) (top) (top) (top) (top))
                                               #("i4326"
                                                 "i4327"
                                                 "i4328"
                                                 "i4329"
                                                 "i4330"))
                                             #(ribcage () () ())
                                             #(ribcage
                                               #(x)
                                               #((top))
                                               #("i4323")))
                                            (hygiene guile))
                                         (cons #{args\ 4333}#
                                               (cons #{b0\ 4334}#
                                                     #{b1\ 4335}#)))))
                           #{tmp\ 4325}#)
                    ((lambda (#{tmp\ 4337}#)
                       (if (if #{tmp\ 4337}#
                             (apply (lambda (#{_\ 4341}#
                                             #{id\ 4342}#
                                             #{val\ 4343}#)
                                      (identifier?
                                        '#(syntax-object
                                           x
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4338" "i4339" "i4340"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4323")))
                                           (hygiene guile))))
                                    #{tmp\ 4337}#)
                             #f)
                         (apply (lambda (#{_\ 4347}#
                                         #{id\ 4348}#
                                         #{val\ 4349}#)
                                  (list '#(syntax-object
                                           define
                                           ((top)
                                            #(ribcage
                                              #(_ id val)
                                              #((top) (top) (top))
                                              #("i4344" "i4345" "i4346"))
                                            #(ribcage () () ())
                                            #(ribcage
                                              #(x)
                                              #((top))
                                              #("i4323")))
                                           (hygiene guile))
                                        #{id\ 4348}#
                                        #{val\ 4349}#))
                                #{tmp\ 4337}#)
                         (syntax-violation
                           #f
                           "source expression failed to match any pattern"
                           #{tmp\ 4324}#)))
                     ($sc-dispatch
                       #{tmp\ 4324}#
                       '(any any any)))))
                ($sc-dispatch
                  #{tmp\ 4324}#
                  '(any (any . any) any . each-any))))
             #{x\ 4322}#))
          (module-name (current-module)))))

